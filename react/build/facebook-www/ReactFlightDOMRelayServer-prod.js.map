{"version":3,"file":"ReactFlightDOMRelayServer-prod.js","sources":["../../packages/shared/formatProdErrorMessage.js","../../packages/shared/hasOwnProperty.js","../../packages/shared/isArray.js","../../packages/react-server-dom-relay/src/ReactFlightDOMRelayServerHostConfig.js","../../packages/shared/ReactSymbols.js","../../packages/shared/ReactSharedInternals.js","../../packages/react-server/src/ReactFlightServer.js","../../packages/react-server-dom-relay/src/ReactFlightDOMRelayServer.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n */\n\n// Do not require this module directly! Use normal `invariant` calls with\n// template literal strings. The messages will be replaced with error codes\n// during build.\n\nfunction formatProdErrorMessage(code) {\n  let url = 'https://reactjs.org/docs/error-decoder.html?invariant=' + code;\n  for (let i = 1; i < arguments.length; i++) {\n    url += '&args[]=' + encodeURIComponent(arguments[i]);\n  }\n  return (\n    `Minified React error #${code}; visit ${url} for the full message or ` +\n    'use the non-minified dev environment for full errors and additional ' +\n    'helpful warnings.'\n  );\n}\n\nexport default formatProdErrorMessage;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {RowEncoding, JSONValue} from './ReactFlightDOMRelayProtocol';\n\nimport type {Request, ReactModel} from 'react-server/src/ReactFlightServer';\n\nimport JSResourceReference from 'JSResourceReference';\n\nimport hasOwnProperty from 'shared/hasOwnProperty';\nimport isArray from 'shared/isArray';\n\nexport type ModuleReference<T> = JSResourceReference<T>;\n\nimport type {\n  Destination,\n  BundlerConfig,\n  ModuleMetaData,\n} from 'ReactFlightDOMRelayServerIntegration';\n\nimport {resolveModelToJSON} from 'react-server/src/ReactFlightServer';\n\nimport {\n  emitRow,\n  resolveModuleMetaData as resolveModuleMetaDataImpl,\n  close,\n} from 'ReactFlightDOMRelayServerIntegration';\n\nexport type {\n  Destination,\n  BundlerConfig,\n  ModuleMetaData,\n} from 'ReactFlightDOMRelayServerIntegration';\n\nexport function isModuleReference(reference: Object): boolean {\n  return reference instanceof JSResourceReference;\n}\n\nexport type ModuleKey = ModuleReference<any>;\n\nexport function getModuleKey(reference: ModuleReference<any>): ModuleKey {\n  // We use the reference object itself as the key because we assume the\n  // object will be cached by the bundler runtime.\n  return reference;\n}\n\nexport function resolveModuleMetaData<T>(\n  config: BundlerConfig,\n  resource: ModuleReference<T>,\n): ModuleMetaData {\n  return resolveModuleMetaDataImpl(config, resource);\n}\n\nexport type Chunk = RowEncoding;\n\nexport function processErrorChunk(\n  request: Request,\n  id: number,\n  message: string,\n  stack: string,\n): Chunk {\n  return [\n    'E',\n    id,\n    {\n      message,\n      stack,\n    },\n  ];\n}\n\nfunction convertModelToJSON(\n  request: Request,\n  parent: {+[key: string]: ReactModel} | $ReadOnlyArray<ReactModel>,\n  key: string,\n  model: ReactModel,\n): JSONValue {\n  const json = resolveModelToJSON(request, parent, key, model);\n  if (typeof json === 'object' && json !== null) {\n    if (isArray(json)) {\n      const jsonArray: Array<JSONValue> = [];\n      for (let i = 0; i < json.length; i++) {\n        jsonArray[i] = convertModelToJSON(request, json, '' + i, json[i]);\n      }\n      return jsonArray;\n    } else {\n      const jsonObj: {[key: string]: JSONValue} = {};\n      for (const nextKey in json) {\n        if (hasOwnProperty.call(json, nextKey)) {\n          jsonObj[nextKey] = convertModelToJSON(\n            request,\n            json,\n            nextKey,\n            json[nextKey],\n          );\n        }\n      }\n      return jsonObj;\n    }\n  }\n  return json;\n}\n\nexport function processModelChunk(\n  request: Request,\n  id: number,\n  model: ReactModel,\n): Chunk {\n  const json = convertModelToJSON(request, {}, '', model);\n  return ['J', id, json];\n}\n\nexport function processModuleChunk(\n  request: Request,\n  id: number,\n  moduleMetaData: ModuleMetaData,\n): Chunk {\n  // The moduleMetaData is already a JSON serializable value.\n  return ['M', id, moduleMetaData];\n}\n\nexport function processSymbolChunk(\n  request: Request,\n  id: number,\n  name: string,\n): Chunk {\n  return ['S', id, name];\n}\n\nexport function scheduleWork(callback: () => void) {\n  callback();\n}\n\nexport function flushBuffered(destination: Destination) {}\n\nexport function beginWriting(destination: Destination) {}\n\nexport function writeChunk(destination: Destination, chunk: Chunk): boolean {\n  emitRow(destination, chunk);\n  return true;\n}\n\nexport function completeWriting(destination: Destination) {}\n\nexport {close};\n\nexport function closeWithError(destination: Destination, error: mixed): void {\n  close(destination);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\nexport let REACT_CACHE_TYPE = 0xeae4;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n  REACT_CACHE_TYPE = symbolFor('react.cache');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Dispatcher as DispatcherType} from 'react-reconciler/src/ReactInternalTypes';\nimport type {\n  Destination,\n  Chunk,\n  BundlerConfig,\n  ModuleMetaData,\n  ModuleReference,\n  ModuleKey,\n} from './ReactFlightServerConfig';\n\nimport {\n  scheduleWork,\n  beginWriting,\n  writeChunk,\n  completeWriting,\n  flushBuffered,\n  close,\n  closeWithError,\n  processModelChunk,\n  processModuleChunk,\n  processSymbolChunk,\n  processErrorChunk,\n  resolveModuleMetaData,\n  getModuleKey,\n  isModuleReference,\n} from './ReactFlightServerConfig';\n\nimport {\n  REACT_ELEMENT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_MEMO_TYPE,\n} from 'shared/ReactSymbols';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\n\ntype ReactJSONValue =\n  | string\n  | boolean\n  | number\n  | null\n  | $ReadOnlyArray<ReactJSONValue>\n  | ReactModelObject;\n\nexport type ReactModel =\n  | React$Element<any>\n  | string\n  | boolean\n  | number\n  | null\n  | Iterable<ReactModel>\n  | ReactModelObject;\n\ntype ReactModelObject = {+[key: string]: ReactModel};\n\ntype Segment = {\n  id: number,\n  model: ReactModel,\n  ping: () => void,\n};\n\nexport type Request = {\n  destination: Destination,\n  bundlerConfig: BundlerConfig,\n  cache: Map<Function, mixed>,\n  nextChunkId: number,\n  pendingChunks: number,\n  pingedSegments: Array<Segment>,\n  completedModuleChunks: Array<Chunk>,\n  completedJSONChunks: Array<Chunk>,\n  completedErrorChunks: Array<Chunk>,\n  writtenSymbols: Map<Symbol, number>,\n  writtenModules: Map<ModuleKey, number>,\n  onError: (error: mixed) => void,\n  flowing: boolean,\n  toJSON: (key: string, value: ReactModel) => ReactJSONValue,\n};\n\nconst ReactCurrentDispatcher = ReactSharedInternals.ReactCurrentDispatcher;\n\nfunction defaultErrorHandler(error: mixed) {\n  console['error'](error); // Don't transform to our wrapper\n}\n\nexport function createRequest(\n  model: ReactModel,\n  destination: Destination,\n  bundlerConfig: BundlerConfig,\n  onError: void | ((error: mixed) => void),\n): Request {\n  const pingedSegments = [];\n  const request = {\n    destination,\n    bundlerConfig,\n    cache: new Map(),\n    nextChunkId: 0,\n    pendingChunks: 0,\n    pingedSegments: pingedSegments,\n    completedModuleChunks: [],\n    completedJSONChunks: [],\n    completedErrorChunks: [],\n    writtenSymbols: new Map(),\n    writtenModules: new Map(),\n    onError: onError === undefined ? defaultErrorHandler : onError,\n    flowing: false,\n    toJSON: function(key: string, value: ReactModel): ReactJSONValue {\n      return resolveModelToJSON(request, this, key, value);\n    },\n  };\n  request.pendingChunks++;\n  const rootSegment = createSegment(request, model);\n  pingedSegments.push(rootSegment);\n  return request;\n}\n\nfunction attemptResolveElement(\n  type: any,\n  key: null | React$Key,\n  ref: mixed,\n  props: any,\n): ReactModel {\n  if (ref !== null && ref !== undefined) {\n    // When the ref moves to the regular props object this will implicitly\n    // throw for functions. We could probably relax it to a DEV warning for other\n    // cases.\n    invariant(\n      false,\n      'Refs cannot be used in server components, nor passed to client components.',\n    );\n  }\n  if (typeof type === 'function') {\n    // This is a server-side component.\n    return type(props);\n  } else if (typeof type === 'string') {\n    // This is a host element. E.g. HTML.\n    return [REACT_ELEMENT_TYPE, type, key, props];\n  } else if (typeof type === 'symbol') {\n    if (type === REACT_FRAGMENT_TYPE) {\n      // For key-less fragments, we add a small optimization to avoid serializing\n      // it as a wrapper.\n      // TODO: If a key is specified, we should propagate its key to any children.\n      // Same as if a server component has a key.\n      return props.children;\n    }\n    // This might be a built-in React component. We'll let the client decide.\n    // Any built-in works as long as its props are serializable.\n    return [REACT_ELEMENT_TYPE, type, key, props];\n  } else if (type != null && typeof type === 'object') {\n    if (isModuleReference(type)) {\n      // This is a reference to a client component.\n      return [REACT_ELEMENT_TYPE, type, key, props];\n    }\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE: {\n        const render = type.render;\n        return render(props, undefined);\n      }\n      case REACT_MEMO_TYPE: {\n        return attemptResolveElement(type.type, key, ref, props);\n      }\n    }\n  }\n  invariant(\n    false,\n    'Unsupported server component type: %s',\n    describeValueForErrorMessage(type),\n  );\n}\n\nfunction pingSegment(request: Request, segment: Segment): void {\n  const pingedSegments = request.pingedSegments;\n  pingedSegments.push(segment);\n  if (pingedSegments.length === 1) {\n    scheduleWork(() => performWork(request));\n  }\n}\n\nfunction createSegment(request: Request, model: ReactModel): Segment {\n  const id = request.nextChunkId++;\n  const segment = {\n    id,\n    model,\n    ping: () => pingSegment(request, segment),\n  };\n  return segment;\n}\n\nfunction serializeByValueID(id: number): string {\n  return '$' + id.toString(16);\n}\n\nfunction serializeByRefID(id: number): string {\n  return '@' + id.toString(16);\n}\n\nfunction escapeStringValue(value: string): string {\n  if (value[0] === '$' || value[0] === '@') {\n    // We need to escape $ or @ prefixed strings since we use those to encode\n    // references to IDs and as special symbol values.\n    return '$' + value;\n  } else {\n    return value;\n  }\n}\n\nfunction isObjectPrototype(object): boolean {\n  if (!object) {\n    return false;\n  }\n  // $FlowFixMe\n  const ObjectPrototype = Object.prototype;\n  if (object === ObjectPrototype) {\n    return true;\n  }\n  // It might be an object from a different Realm which is\n  // still just a plain simple object.\n  if (Object.getPrototypeOf(object)) {\n    return false;\n  }\n  const names = Object.getOwnPropertyNames(object);\n  for (let i = 0; i < names.length; i++) {\n    if (!(names[i] in ObjectPrototype)) {\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction isSimpleObject(object): boolean {\n  if (!isObjectPrototype(Object.getPrototypeOf(object))) {\n    return false;\n  }\n  const names = Object.getOwnPropertyNames(object);\n  for (let i = 0; i < names.length; i++) {\n    const descriptor = Object.getOwnPropertyDescriptor(object, names[i]);\n    if (!descriptor) {\n      return false;\n    }\n    if (!descriptor.enumerable) {\n      if (\n        (names[i] === 'key' || names[i] === 'ref') &&\n        typeof descriptor.get === 'function'\n      ) {\n        // React adds key and ref getters to props objects to issue warnings.\n        // Those getters will not be transferred to the client, but that's ok,\n        // so we'll special case them.\n        continue;\n      }\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction objectName(object): string {\n  const name = Object.prototype.toString.call(object);\n  return name.replace(/^\\[object (.*)\\]$/, function(m, p0) {\n    return p0;\n  });\n}\n\nfunction describeKeyForErrorMessage(key: string): string {\n  const encodedKey = JSON.stringify(key);\n  return '\"' + key + '\"' === encodedKey ? key : encodedKey;\n}\n\nfunction describeValueForErrorMessage(value: ReactModel): string {\n  switch (typeof value) {\n    case 'string': {\n      return JSON.stringify(\n        value.length <= 10 ? value : value.substr(0, 10) + '...',\n      );\n    }\n    case 'object': {\n      if (isArray(value)) {\n        return '[...]';\n      }\n      const name = objectName(value);\n      if (name === 'Object') {\n        return '{...}';\n      }\n      return name;\n    }\n    case 'function':\n      return 'function';\n    default:\n      // eslint-disable-next-line\n      return String(value);\n  }\n}\n\nfunction describeObjectForErrorMessage(\n  objectOrArray:\n    | {+[key: string | number]: ReactModel}\n    | $ReadOnlyArray<ReactModel>,\n  expandedName?: string,\n): string {\n  if (isArray(objectOrArray)) {\n    let str = '[';\n    // $FlowFixMe: Should be refined by now.\n    const array: $ReadOnlyArray<ReactModel> = objectOrArray;\n    for (let i = 0; i < array.length; i++) {\n      if (i > 0) {\n        str += ', ';\n      }\n      if (i > 6) {\n        str += '...';\n        break;\n      }\n      const value = array[i];\n      if (\n        '' + i === expandedName &&\n        typeof value === 'object' &&\n        value !== null\n      ) {\n        str += describeObjectForErrorMessage(value);\n      } else {\n        str += describeValueForErrorMessage(value);\n      }\n    }\n    str += ']';\n    return str;\n  } else {\n    let str = '{';\n    // $FlowFixMe: Should be refined by now.\n    const object: {+[key: string | number]: ReactModel} = objectOrArray;\n    const names = Object.keys(object);\n    for (let i = 0; i < names.length; i++) {\n      if (i > 0) {\n        str += ', ';\n      }\n      if (i > 6) {\n        str += '...';\n        break;\n      }\n      const name = names[i];\n      str += describeKeyForErrorMessage(name) + ': ';\n      const value = object[name];\n      if (\n        name === expandedName &&\n        typeof value === 'object' &&\n        value !== null\n      ) {\n        str += describeObjectForErrorMessage(value);\n      } else {\n        str += describeValueForErrorMessage(value);\n      }\n    }\n    str += '}';\n    return str;\n  }\n}\n\nexport function resolveModelToJSON(\n  request: Request,\n  parent: {+[key: string | number]: ReactModel} | $ReadOnlyArray<ReactModel>,\n  key: string,\n  value: ReactModel,\n): ReactJSONValue {\n  if (__DEV__) {\n    // $FlowFixMe\n    const originalValue = parent[key];\n    if (typeof originalValue === 'object' && originalValue !== value) {\n      console.error(\n        'Only plain objects can be passed to client components from server components. ' +\n          'Objects with toJSON methods are not supported. Convert it manually ' +\n          'to a simple value before passing it to props. ' +\n          'Remove %s from these props: %s',\n        describeKeyForErrorMessage(key),\n        describeObjectForErrorMessage(parent),\n      );\n    }\n  }\n\n  // Special Symbols\n  switch (value) {\n    case REACT_ELEMENT_TYPE:\n      return '$';\n    case REACT_LAZY_TYPE:\n      invariant(\n        false,\n        'React Lazy Components are not yet supported on the server.',\n      );\n  }\n\n  // Resolve server components.\n  while (\n    typeof value === 'object' &&\n    value !== null &&\n    value.$$typeof === REACT_ELEMENT_TYPE\n  ) {\n    // TODO: Concatenate keys of parents onto children.\n    const element: React$Element<any> = (value: any);\n    try {\n      // Attempt to render the server component.\n      value = attemptResolveElement(\n        element.type,\n        element.key,\n        element.ref,\n        element.props,\n      );\n    } catch (x) {\n      if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n        // Something suspended, we'll need to create a new segment and resolve it later.\n        request.pendingChunks++;\n        const newSegment = createSegment(request, value);\n        const ping = newSegment.ping;\n        x.then(ping, ping);\n        return serializeByRefID(newSegment.id);\n      } else {\n        reportError(request, x);\n        // Something errored. We'll still send everything we have up until this point.\n        // We'll replace this element with a lazy reference that throws on the client\n        // once it gets rendered.\n        request.pendingChunks++;\n        const errorId = request.nextChunkId++;\n        emitErrorChunk(request, errorId, x);\n        return serializeByRefID(errorId);\n      }\n    }\n  }\n\n  if (value === null) {\n    return null;\n  }\n\n  if (typeof value === 'object') {\n    if (isModuleReference(value)) {\n      const moduleReference: ModuleReference<any> = (value: any);\n      const moduleKey: ModuleKey = getModuleKey(moduleReference);\n      const writtenModules = request.writtenModules;\n      const existingId = writtenModules.get(moduleKey);\n      if (existingId !== undefined) {\n        if (parent[0] === REACT_ELEMENT_TYPE && key === '1') {\n          // If we're encoding the \"type\" of an element, we can refer\n          // to that by a lazy reference instead of directly since React\n          // knows how to deal with lazy values. This lets us suspend\n          // on this component rather than its parent until the code has\n          // loaded.\n          return serializeByRefID(existingId);\n        }\n        return serializeByValueID(existingId);\n      }\n      try {\n        const moduleMetaData: ModuleMetaData = resolveModuleMetaData(\n          request.bundlerConfig,\n          moduleReference,\n        );\n        request.pendingChunks++;\n        const moduleId = request.nextChunkId++;\n        emitModuleChunk(request, moduleId, moduleMetaData);\n        writtenModules.set(moduleKey, moduleId);\n        if (parent[0] === REACT_ELEMENT_TYPE && key === '1') {\n          // If we're encoding the \"type\" of an element, we can refer\n          // to that by a lazy reference instead of directly since React\n          // knows how to deal with lazy values. This lets us suspend\n          // on this component rather than its parent until the code has\n          // loaded.\n          return serializeByRefID(moduleId);\n        }\n        return serializeByValueID(moduleId);\n      } catch (x) {\n        request.pendingChunks++;\n        const errorId = request.nextChunkId++;\n        emitErrorChunk(request, errorId, x);\n        return serializeByValueID(errorId);\n      }\n    }\n\n    if (__DEV__) {\n      if (value !== null && !isArray(value)) {\n        // Verify that this is a simple plain object.\n        if (objectName(value) !== 'Object') {\n          console.error(\n            'Only plain objects can be passed to client components from server components. ' +\n              'Built-ins like %s are not supported. ' +\n              'Remove %s from these props: %s',\n            objectName(value),\n            describeKeyForErrorMessage(key),\n            describeObjectForErrorMessage(parent),\n          );\n        } else if (!isSimpleObject(value)) {\n          console.error(\n            'Only plain objects can be passed to client components from server components. ' +\n              'Classes or other objects with methods are not supported. ' +\n              'Remove %s from these props: %s',\n            describeKeyForErrorMessage(key),\n            describeObjectForErrorMessage(parent, key),\n          );\n        } else if (Object.getOwnPropertySymbols) {\n          const symbols = Object.getOwnPropertySymbols(value);\n          if (symbols.length > 0) {\n            console.error(\n              'Only plain objects can be passed to client components from server components. ' +\n                'Objects with symbol properties like %s are not supported. ' +\n                'Remove %s from these props: %s',\n              symbols[0].description,\n              describeKeyForErrorMessage(key),\n              describeObjectForErrorMessage(parent, key),\n            );\n          }\n        }\n      }\n    }\n    return value;\n  }\n\n  if (typeof value === 'string') {\n    return escapeStringValue(value);\n  }\n\n  if (\n    typeof value === 'boolean' ||\n    typeof value === 'number' ||\n    typeof value === 'undefined'\n  ) {\n    return value;\n  }\n\n  if (typeof value === 'function') {\n    if (/^on[A-Z]/.test(key)) {\n      invariant(\n        false,\n        'Event handlers cannot be passed to client component props. ' +\n          'Remove %s from these props if possible: %s\\n' +\n          'If you need interactivity, consider converting part of this to a client component.',\n        describeKeyForErrorMessage(key),\n        describeObjectForErrorMessage(parent),\n      );\n    } else {\n      invariant(\n        false,\n        'Functions cannot be passed directly to client components ' +\n          \"because they're not serializable. \" +\n          'Remove %s (%s) from this object, or avoid the entire object: %s',\n        describeKeyForErrorMessage(key),\n        value.displayName || value.name || 'function',\n        describeObjectForErrorMessage(parent),\n      );\n    }\n  }\n\n  if (typeof value === 'symbol') {\n    const writtenSymbols = request.writtenSymbols;\n    const existingId = writtenSymbols.get(value);\n    if (existingId !== undefined) {\n      return serializeByValueID(existingId);\n    }\n    const name = value.description;\n    invariant(\n      Symbol.for(name) === value,\n      'Only global symbols received from Symbol.for(...) can be passed to client components. ' +\n        'The symbol Symbol.for(%s) cannot be found among global symbols. ' +\n        'Remove %s from this object, or avoid the entire object: %s',\n      value.description,\n      describeKeyForErrorMessage(key),\n      describeObjectForErrorMessage(parent),\n    );\n    request.pendingChunks++;\n    const symbolId = request.nextChunkId++;\n    emitSymbolChunk(request, symbolId, name);\n    writtenSymbols.set(value, symbolId);\n    return serializeByValueID(symbolId);\n  }\n\n  // $FlowFixMe: bigint isn't added to Flow yet.\n  if (typeof value === 'bigint') {\n    invariant(\n      false,\n      'BigInt (%s) is not yet supported in client component props. ' +\n        'Remove %s from this object or use a plain number instead: %s',\n      value,\n      describeKeyForErrorMessage(key),\n      describeObjectForErrorMessage(parent),\n    );\n  }\n\n  invariant(\n    false,\n    'Type %s is not supported in client component props. ' +\n      'Remove %s from this object, or avoid the entire object: %s',\n    typeof value,\n    describeKeyForErrorMessage(key),\n    describeObjectForErrorMessage(parent),\n  );\n}\n\nfunction reportError(request: Request, error: mixed): void {\n  const onError = request.onError;\n  onError(error);\n}\n\nfunction fatalError(request: Request, error: mixed): void {\n  // This is called outside error handling code such as if an error happens in React internals.\n  closeWithError(request.destination, error);\n}\n\nfunction emitErrorChunk(request: Request, id: number, error: mixed): void {\n  // TODO: We should not leak error messages to the client in prod.\n  // Give this an error code instead and log on the server.\n  // We can serialize the error in DEV as a convenience.\n  let message;\n  let stack = '';\n  try {\n    if (error instanceof Error) {\n      message = '' + error.message;\n      stack = '' + error.stack;\n    } else {\n      message = 'Error: ' + (error: any);\n    }\n  } catch (x) {\n    message = 'An error occurred but serializing the error message failed.';\n  }\n\n  const processedChunk = processErrorChunk(request, id, message, stack);\n  request.completedErrorChunks.push(processedChunk);\n}\n\nfunction emitModuleChunk(\n  request: Request,\n  id: number,\n  moduleMetaData: ModuleMetaData,\n): void {\n  const processedChunk = processModuleChunk(request, id, moduleMetaData);\n  request.completedModuleChunks.push(processedChunk);\n}\n\nfunction emitSymbolChunk(request: Request, id: number, name: string): void {\n  const processedChunk = processSymbolChunk(request, id, name);\n  request.completedModuleChunks.push(processedChunk);\n}\n\nfunction retrySegment(request: Request, segment: Segment): void {\n  try {\n    let value = segment.model;\n    while (\n      typeof value === 'object' &&\n      value !== null &&\n      value.$$typeof === REACT_ELEMENT_TYPE\n    ) {\n      // TODO: Concatenate keys of parents onto children.\n      const element: React$Element<any> = (value: any);\n      // Attempt to render the server component.\n      // Doing this here lets us reuse this same segment if the next component\n      // also suspends.\n      segment.model = value;\n      value = attemptResolveElement(\n        element.type,\n        element.key,\n        element.ref,\n        element.props,\n      );\n    }\n    const processedChunk = processModelChunk(request, segment.id, value);\n    request.completedJSONChunks.push(processedChunk);\n  } catch (x) {\n    if (typeof x === 'object' && x !== null && typeof x.then === 'function') {\n      // Something suspended again, let's pick it back up later.\n      const ping = segment.ping;\n      x.then(ping, ping);\n      return;\n    } else {\n      reportError(request, x);\n      // This errored, we need to serialize this error to the\n      emitErrorChunk(request, segment.id, x);\n    }\n  }\n}\n\nfunction performWork(request: Request): void {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  const prevCache = currentCache;\n  ReactCurrentDispatcher.current = Dispatcher;\n  currentCache = request.cache;\n\n  try {\n    const pingedSegments = request.pingedSegments;\n    request.pingedSegments = [];\n    for (let i = 0; i < pingedSegments.length; i++) {\n      const segment = pingedSegments[i];\n      retrySegment(request, segment);\n    }\n    if (request.flowing) {\n      flushCompletedChunks(request);\n    }\n  } catch (error) {\n    reportError(request, error);\n    fatalError(request, error);\n  } finally {\n    ReactCurrentDispatcher.current = prevDispatcher;\n    currentCache = prevCache;\n  }\n}\n\nlet reentrant = false;\nfunction flushCompletedChunks(request: Request): void {\n  if (reentrant) {\n    return;\n  }\n  reentrant = true;\n  const destination = request.destination;\n  beginWriting(destination);\n  try {\n    // We emit module chunks first in the stream so that\n    // they can be preloaded as early as possible.\n    const moduleChunks = request.completedModuleChunks;\n    let i = 0;\n    for (; i < moduleChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = moduleChunks[i];\n      if (!writeChunk(destination, chunk)) {\n        request.flowing = false;\n        i++;\n        break;\n      }\n    }\n    moduleChunks.splice(0, i);\n    // Next comes model data.\n    const jsonChunks = request.completedJSONChunks;\n    i = 0;\n    for (; i < jsonChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = jsonChunks[i];\n      if (!writeChunk(destination, chunk)) {\n        request.flowing = false;\n        i++;\n        break;\n      }\n    }\n    jsonChunks.splice(0, i);\n    // Finally, errors are sent. The idea is that it's ok to delay\n    // any error messages and prioritize display of other parts of\n    // the page.\n    const errorChunks = request.completedErrorChunks;\n    i = 0;\n    for (; i < errorChunks.length; i++) {\n      request.pendingChunks--;\n      const chunk = errorChunks[i];\n      if (!writeChunk(destination, chunk)) {\n        request.flowing = false;\n        i++;\n        break;\n      }\n    }\n    errorChunks.splice(0, i);\n  } finally {\n    reentrant = false;\n    completeWriting(destination);\n  }\n  flushBuffered(destination);\n  if (request.pendingChunks === 0) {\n    // We're done.\n    close(destination);\n  }\n}\n\nexport function startWork(request: Request): void {\n  request.flowing = true;\n  scheduleWork(() => performWork(request));\n}\n\nexport function startFlowing(request: Request): void {\n  request.flowing = true;\n  try {\n    flushCompletedChunks(request);\n  } catch (error) {\n    reportError(request, error);\n    fatalError(request, error);\n  }\n}\n\nfunction unsupportedHook(): void {\n  invariant(false, 'This Hook is not supported in Server Components.');\n}\n\nfunction unsupportedRefresh(): void {\n  invariant(\n    currentCache,\n    'Refreshing the cache is not supported in Server Components.',\n  );\n}\n\nlet currentCache: Map<Function, mixed> | null = null;\n\nconst Dispatcher: DispatcherType = {\n  useMemo<T>(nextCreate: () => T): T {\n    return nextCreate();\n  },\n  useCallback<T>(callback: T): T {\n    return callback;\n  },\n  useDebugValue(): void {},\n  useDeferredValue: (unsupportedHook: any),\n  useTransition: (unsupportedHook: any),\n  getCacheForType<T>(resourceType: () => T): T {\n    invariant(\n      currentCache,\n      'Reading the cache is only supported while rendering.',\n    );\n    let entry: T | void = (currentCache.get(resourceType): any);\n    if (entry === undefined) {\n      entry = resourceType();\n      // TODO: Warn if undefined?\n      currentCache.set(resourceType, entry);\n    }\n    return entry;\n  },\n  readContext: (unsupportedHook: any),\n  useContext: (unsupportedHook: any),\n  useReducer: (unsupportedHook: any),\n  useRef: (unsupportedHook: any),\n  useState: (unsupportedHook: any),\n  useLayoutEffect: (unsupportedHook: any),\n  useImperativeHandle: (unsupportedHook: any),\n  useEffect: (unsupportedHook: any),\n  useOpaqueIdentifier: (unsupportedHook: any),\n  useMutableSource: (unsupportedHook: any),\n  useSyncExternalStore: (unsupportedHook: any),\n  useCacheRefresh(): <T>(?() => T, ?T) => void {\n    return unsupportedRefresh;\n  },\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactModel} from 'react-server/src/ReactFlightServer';\nimport type {\n  BundlerConfig,\n  Destination,\n} from './ReactFlightDOMRelayServerHostConfig';\n\nimport {createRequest, startWork} from 'react-server/src/ReactFlightServer';\n\ntype Options = {\n  onError?: (error: mixed) => void,\n};\n\nfunction render(\n  model: ReactModel,\n  destination: Destination,\n  config: BundlerConfig,\n  options?: Options,\n): void {\n  const request = createRequest(\n    model,\n    destination,\n    config,\n    options ? options.onError : undefined,\n  );\n  startWork(request);\n}\n\nexport {render};\n"],"names":["formatProdErrorMessage","code","url","i","arguments","length","encodeURIComponent","hasOwnProperty","Object","prototype","isArrayImpl","Array","isArray","a","isModuleReference","reference","JSResourceReference","getModuleKey","resolveModuleMetaData","config","resource","resolveModuleMetaDataImpl","processErrorChunk","request","id","message","stack","convertModelToJSON","parent","key","model","json","resolveModelToJSON","jsonArray","jsonObj","nextKey","call","processModelChunk","processModuleChunk","moduleMetaData","processSymbolChunk","name","scheduleWork","callback","writeChunk","destination","chunk","emitRow","closeWithError","error","close","REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","REACT_FORWARD_REF_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","Symbol","for","symbolFor","REACT_PORTAL_TYPE","REACT_STRICT_MODE_TYPE","REACT_SUSPENSE_TYPE","REACT_SCOPE_TYPE","ReactSharedInternals","React","ReactCurrentDispatcher","defaultErrorHandler","console","createRequest","bundlerConfig","onError","pingedSegments","cache","Map","nextChunkId","pendingChunks","completedModuleChunks","completedJSONChunks","completedErrorChunks","writtenSymbols","writtenModules","undefined","flowing","toJSON","value","rootSegment","createSegment","push","attemptResolveElement","type","ref","props","children","$$typeof","render","describeValueForErrorMessage","pingSegment","segment","performWork","ping","serializeByValueID","toString","serializeByRefID","escapeStringValue","objectName","object","replace","m","p0","describeKeyForErrorMessage","encodedKey","JSON","stringify","substr","String","describeObjectForErrorMessage","objectOrArray","expandedName","str","array","names","keys","element","x","then","newSegment","reportError","errorId","emitErrorChunk","moduleReference","moduleKey","existingId","get","moduleId","emitModuleChunk","set","test","displayName","description","symbolId","emitSymbolChunk","fatalError","Error","processedChunk","retrySegment","prevDispatcher","current","prevCache","currentCache","Dispatcher","flushCompletedChunks","reentrant","beginWriting","moduleChunks","splice","jsonChunks","errorChunks","completeWriting","startWork","unsupportedHook","unsupportedRefresh","useMemo","nextCreate","useCallback","useDebugValue","useDeferredValue","useTransition","getCacheForType","resourceType","entry","readContext","useContext","useReducer","useRef","useState","useLayoutEffect","useImperativeHandle","useEffect","useOpaqueIdentifier","useMutableSource","useSyncExternalStore","useCacheRefresh","options"],"mappings":"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"}