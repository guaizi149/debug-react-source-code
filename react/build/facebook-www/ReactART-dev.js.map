{"version":3,"file":"ReactART-dev.js","sources":["../../packages/shared/ReactVersion.js","../../packages/react-reconciler/src/ReactRootTags.js","../../packages/shared/forks/consoleWithStackDev.www.js","../../packages/shared/ReactInstanceMap.js","../../packages/shared/ReactSharedInternals.js","../../packages/react-reconciler/src/ReactWorkTags.js","../../packages/shared/ReactSymbols.js","../../packages/shared/getComponentNameFromType.js","../../packages/react-reconciler/src/getComponentNameFromFiber.js","../../packages/shared/forks/ReactFeatureFlags.www.js","../../packages/react-reconciler/src/ReactFiberFlags.js","../../packages/react-reconciler/src/ReactFiberTreeReflection.js","../../packages/shared/isArray.js","../../packages/react-art/src/ReactARTInternals.js","../../packages/react-reconciler/src/Scheduler.js","../../packages/react-reconciler/src/ReactFiberDevToolsHook.old.js","../../packages/react-reconciler/src/ReactTypeOfMode.js","../../packages/react-reconciler/src/ReactFiberLane.old.js","../../packages/react-reconciler/src/ReactEventPriorities.old.js","../../packages/react-reconciler/src/ReactFiberHostConfigWithNoHydration.js","../../packages/react-reconciler/src/ReactFiberHostConfigWithNoScopes.js","../../packages/react-art/src/ReactARTHostConfig.js","../../packages/shared/ConsolePatchingDev.js","../../packages/shared/ReactComponentStackFrame.js","../../packages/shared/hasOwnProperty.js","../../packages/shared/checkPropTypes.js","../../packages/react-reconciler/src/ReactFiberStack.old.js","../../packages/react-reconciler/src/ReactFiberContext.old.js","../../packages/react-reconciler/src/ReactFiberSyncTaskQueue.old.js","../../packages/react-reconciler/src/DebugTracing.js","../../packages/react-devtools-scheduling-profiler/src/constants.js","../../packages/react-reconciler/src/SchedulingProfiler.js","../../packages/react-reconciler/src/ReactFiberTransition.js","../../packages/shared/objectIs.js","../../packages/shared/shallowEqual.js","../../packages/react-reconciler/src/ReactFiberComponentStack.js","../../packages/react-reconciler/src/ReactCurrentFiber.js","../../packages/react-reconciler/src/ReactStrictModeWarnings.old.js","../../packages/react-reconciler/src/ReactFiberLazyComponent.old.js","../../packages/react-reconciler/src/ReactFiberNewContext.old.js","../../packages/react-reconciler/src/ReactFiberInterleavedUpdates.old.js","../../packages/react-reconciler/src/ReactUpdateQueue.old.js","../../packages/react-reconciler/src/ReactFiberClassComponent.old.js","../../packages/react-reconciler/src/ReactChildFiber.old.js","../../packages/react-reconciler/src/ReactFiberHostContext.old.js","../../packages/react-reconciler/src/ReactFiberSuspenseContext.old.js","../../packages/react-reconciler/src/ReactFiberSuspenseComponent.old.js","../../packages/react-reconciler/src/ReactHookEffectTags.js","../../packages/react-reconciler/src/ReactFiberHydrationContext.old.js","../../packages/react-reconciler/src/ReactMutableSource.old.js","../../packages/react-reconciler/src/ReactFiberCacheComponent.old.js","../../packages/react-reconciler/src/ReactFiberHooks.old.js","../../packages/react-reconciler/src/ReactProfilerTimer.old.js","../../packages/react-reconciler/src/ReactCapturedValue.js","../../packages/react-reconciler/src/forks/ReactFiberErrorDialog.www.js","../../packages/react-reconciler/src/ReactFiberErrorLogger.js","../../packages/react-reconciler/src/ReactFiberThrow.old.js","../../packages/react-reconciler/src/ReactFiberScope.old.js","../../packages/react-reconciler/src/ReactFiberCompleteWork.old.js","../../packages/react-reconciler/src/ReactFiberBeginWork.old.js","../../packages/react-reconciler/src/ReactFiberUnwindWork.old.js","../../packages/shared/forks/invokeGuardedCallbackImpl.www.js","../../packages/shared/ReactErrorUtils.js","../../packages/react-reconciler/src/ReactFiberCommitWork.old.js","../../packages/react-reconciler/src/ReactTestSelectors.js","../../packages/react-reconciler/src/ReactFiberWorkLoop.old.js","../../packages/react-reconciler/src/ReactFiberHotReloading.old.js","../../packages/react-reconciler/src/ReactFiber.old.js","../../packages/react-reconciler/src/ReactFiberRoot.old.js","../../packages/react-reconciler/src/ReactFiberReconciler.old.js","../../packages/react-art/src/ReactART.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\n//\n// TODO: 17.0.3 has not been released to NPM;\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\n// When we next publish a release (either 17.0.3 or 17.1.0), update the matching TODO in backend/renderer.js\n// TODO: This module is used both by the release scripts and to expose a version\n// at runtime. We should instead inject the version number as part of the build\n// process, and use the ReactVersions.js module as the single source of truth.\nexport default '17.0.3';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type RootTag = 0 | 1;\n\nexport const LegacyRoot = 0;\nexport const ConcurrentRoot = 1;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// This refers to a WWW module.\nconst warningWWW = require('warning');\n\nlet suppressWarning = false;\nexport function setSuppressWarning(newSuppressWarning) {\n  if (__DEV__) {\n    suppressWarning = newSuppressWarning;\n  }\n}\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('warn', format, args);\n    }\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  if (__DEV__) {\n    const React = require('react');\n    const ReactSharedInternals =\n      React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n    // Defensive in case this is fired before React is initialized.\n    if (ReactSharedInternals != null) {\n      const ReactDebugCurrentFrame =\n        ReactSharedInternals.ReactDebugCurrentFrame;\n      const stack = ReactDebugCurrentFrame.getStackAddendum();\n      if (stack !== '') {\n        format += '%s';\n        args.push(stack);\n      }\n    }\n    // TODO: don't ignore level and pass it down somewhere too.\n    args.unshift(format);\n    args.unshift(false);\n    warningWWW.apply(null, args);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const ScopeComponent = 21;\nexport const OffscreenComponent = 22;\nexport const LegacyHiddenComponent = 23;\nexport const CacheComponent = 24;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\nexport let REACT_CACHE_TYPE = 0xeae4;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n  REACT_CACHE_TYPE = symbolFor('react.cache');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_CACHE_TYPE,\n} from 'shared/ReactSymbols';\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const displayName = (outerType: any).displayName;\n  if (displayName) {\n    return displayName;\n  }\n  const functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\n}\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\nexport default function getComponentNameFromType(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentNameFromType(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n    case REACT_CACHE_TYPE:\n      return 'Cache';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        return getContextName(context) + '.Consumer';\n      case REACT_PROVIDER_TYPE:\n        const provider: ReactProviderType<any> = (type: any);\n        return getContextName(provider._context) + '.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        const outerName = (type: any).displayName || null;\n        if (outerName !== null) {\n          return outerName;\n        }\n        return getComponentNameFromType(type.type) || 'Memo';\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {\n  FunctionComponent,\n  ClassComponent,\n  IndeterminateComponent,\n  HostRoot,\n  HostPortal,\n  HostComponent,\n  HostText,\n  Fragment,\n  Mode,\n  ContextConsumer,\n  ContextProvider,\n  ForwardRef,\n  Profiler,\n  SuspenseComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  DehydratedFragment,\n  SuspenseListComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_STRICT_MODE_TYPE} from 'shared/ReactSymbols';\n\n// Keep in sync with shared/getComponentNameFromType\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\n// Keep in sync with shared/getComponentNameFromType\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nexport default function getComponentNameFromFiber(fiber: Fiber): string | null {\n  const {tag, type} = fiber;\n  switch (tag) {\n    case CacheComponent:\n      return 'Cache';\n    case ContextConsumer:\n      const context: ReactContext<any> = (type: any);\n      return getContextName(context) + '.Consumer';\n    case ContextProvider:\n      const provider: ReactProviderType<any> = (type: any);\n      return getContextName(provider._context) + '.Provider';\n    case DehydratedFragment:\n      return 'DehydratedFragment';\n    case ForwardRef:\n      return getWrappedName(type, type.render, 'ForwardRef');\n    case Fragment:\n      return 'Fragment';\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n    case HostPortal:\n      return 'Portal';\n    case HostRoot:\n      return 'Root';\n    case HostText:\n      return 'Text';\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n    case LegacyHiddenComponent:\n      return 'LegacyHidden';\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return 'StrictMode';\n      }\n      return 'Mode';\n    case OffscreenComponent:\n      return 'Offscreen';\n    case Profiler:\n      return 'Profiler';\n    case ScopeComponent:\n      return 'Scope';\n    case SuspenseComponent:\n      return 'Suspense';\n    case SuspenseListComponent:\n      return 'SuspenseList';\n\n    // The display name for this tags come from the user-provided type:\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === 'function') {\n        return (type: any).displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      break;\n  }\n\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\nimport typeof * as ExportsType from './ReactFeatureFlags.www';\nimport typeof * as DynamicFeatureFlags from './ReactFeatureFlags.www-dynamic';\n\n// Re-export dynamic flags from the www version.\nconst dynamicFeatureFlags: DynamicFeatureFlags = require('ReactFeatureFlags');\n\nexport const {\n  disableInputAttributeSyncing,\n  enableTrustedTypesIntegration,\n  disableSchedulerTimeoutBasedOnReactExpirationTime,\n  warnAboutSpreadingKeyToJSX,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableFilterEmptyStringAttributesDOM,\n  enableLegacyFBSupport,\n  deferRenderPhaseUpdateToNextBatch,\n  enableDebugTracing,\n  skipUnmountedBoundaries,\n  createRootStrictEffectsByDefault,\n  enableUseRefAccessWarning,\n  disableNativeComponentFrames,\n  disableSchedulerTimeoutInWorkLoop,\n  enableLazyContextPropagation,\n  enableSyncDefaultUpdates,\n  warnOnSubscriptionInsideStartTransition,\n} = dynamicFeatureFlags;\n\n// On WWW, __EXPERIMENTAL__ is used for a new modern build.\n// It's not used anywhere in production yet.\n\nexport const enableStrictEffects =\n  __DEV__ && dynamicFeatureFlags.enableStrictEffects;\nexport const debugRenderPhaseSideEffectsForStrictMode = __DEV__;\nexport const enableProfilerTimer = __PROFILE__;\nexport const enableProfilerCommitHooks = __PROFILE__;\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\nexport const enableProfilerNestedUpdateScheduledHook =\n  __PROFILE__ && dynamicFeatureFlags.enableProfilerNestedUpdateScheduledHook;\nexport const enableUpdaterTracking = __PROFILE__;\n\nexport const enableSuspenseLayoutEffectSemantics = true;\n\n// Logs additional User Timing API marks for use with an experimental profiling tool.\nexport const enableSchedulingProfiler =\n  __PROFILE__ && dynamicFeatureFlags.enableSchedulingProfiler;\n\n// Note: we'll want to remove this when we to userland implementation.\n// For now, we'll turn it on for everyone because it's *already* on for everyone in practice.\n// At least this will let us stop shipping <Profiler> implementation to all users.\nexport const enableSchedulerDebugging = true;\nexport const warnAboutDeprecatedLifecycles = true;\nexport const disableLegacyContext = __EXPERIMENTAL__;\nexport const warnAboutStringRefs = false;\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\nexport const enableGetInspectorDataForInstanceInProduction = false;\nexport const enableSuspenseServerRenderer = true;\nexport const enableSelectiveHydration = true;\n\nexport const enableLazyElements = true;\nexport const enableCache = true;\n\nexport const disableJavaScriptURLs = true;\n\nexport const disableModulePatternComponents = true;\n\nexport const enableCreateEventHandleAPI = true;\n\nexport const enableScopeAPI = true;\n\nexport const enableSuspenseCallback = true;\n\nexport const enableComponentStackLocations = true;\n\nexport const disableTextareaChildren = __EXPERIMENTAL__;\n\nexport const warnUnstableRenderSubtreeIntoContainer = false;\n\n// Enable forked reconciler. Piggy-backing on the \"variant\" global so that we\n// don't have to add another test dimension. The build system will compile this\n// to the correct value.\nexport const enableNewReconciler = __VARIANT__;\n\nexport const enableRecursiveCommitTraversal = false;\n\nexport const allowConcurrentByDefault = true;\n\nexport const deletedTreeCleanUpLevel = 3;\n\nexport const enablePersistentOffscreenHostContainer = false;\n\nexport const consoleManagedByDevToolsDuringStrictMode = true;\n\n// Flow magic to verify the exports of this file match the original version.\n// eslint-disable-next-line no-unused-vars\ntype Check<_X, Y: _X, X: Y = _X> = null;\n// eslint-disable-next-line no-unused-expressions\n(null: Check<ExportsType, FeatureFlagsType>);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nexport type Flags = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoFlags = /*                      */ 0b00000000000000000000000;\nexport const PerformedWork = /*                */ 0b00000000000000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*                    */ 0b00000000000000000000010;\nexport const Update = /*                       */ 0b00000000000000000000100;\nexport const PlacementAndUpdate = /*           */ Placement | Update;\nexport const Deletion = /*                     */ 0b00000000000000000001000;\nexport const ChildDeletion = /*                */ 0b00000000000000000010000;\nexport const ContentReset = /*                 */ 0b00000000000000000100000;\nexport const Callback = /*                     */ 0b00000000000000001000000;\nexport const DidCapture = /*                   */ 0b00000000000000010000000;\nexport const Ref = /*                          */ 0b00000000000000100000000;\nexport const Snapshot = /*                     */ 0b00000000000001000000000;\nexport const Passive = /*                      */ 0b00000000000010000000000;\nexport const Hydrating = /*                    */ 0b00000000000100000000000;\nexport const HydratingAndUpdate = /*           */ Hydrating | Update;\nexport const Visibility = /*                   */ 0b00000000001000000000000;\n\nexport const LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot;\n\n// Union of all commit flags (flags with the lifetime of a particular commit)\nexport const HostEffectMask = /*               */ 0b00000000001111111111111;\n\n// These are not really side effects, but we still reuse this field.\nexport const Incomplete = /*                   */ 0b00000000010000000000000;\nexport const ShouldCapture = /*                */ 0b00000000100000000000000;\nexport const ForceUpdateForLegacySuspense = /* */ 0b00000001000000000000000;\nexport const DidPropagateContext = /*          */ 0b00000010000000000000000;\nexport const NeedsPropagation = /*             */ 0b00000100000000000000000;\n\n// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nexport const RefStatic = /*                    */ 0b00001000000000000000000;\nexport const LayoutStatic = /*                 */ 0b00010000000000000000000;\nexport const PassiveStatic = /*                */ 0b00100000000000000000000;\n\n// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nexport const MountLayoutDev = /*               */ 0b01000000000000000000000;\nexport const MountPassiveDev = /*              */ 0b10000000000000000000000;\n\n// Groups of flags that are used in the commit phase to skip over trees that\n// don't contain effects, by checking subtreeFlags.\n\nexport const BeforeMutationMask =\n  // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n  // flag logic (see #20043)\n  Update |\n  Snapshot |\n  (enableCreateEventHandleAPI\n    ? // createEventHandle needs to visit deleted and hidden trees to\n      // fire beforeblur\n      // TODO: Only need to visit Deletions during BeforeMutation phase if an\n      // element is focused.\n      ChildDeletion | Visibility\n    : 0);\n\nexport const MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\nexport const LayoutMask = Update | Callback | Ref | Visibility;\n\n// TODO: Split into PassiveMountMask and PassiveUnmountMask\nexport const PassiveMask = Passive | ChildDeletion;\n\n// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\nexport const StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport invariant from 'shared/invariant';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentNameFromFiber(ownerFiber) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  invariant(\n    getNearestMountedFiber(fiber) === fiber,\n    'Unable to find node on an unmounted component.',\n  );\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  const alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n    invariant(\n      nearestMounted !== null,\n      'Unable to find node on an unmounted component.',\n    );\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    const parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    const parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      invariant(false, 'Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n        invariant(\n          didFindChild,\n          'Child was not found in either parent set. This indicates a bug ' +\n            'in React related to the return pointer. Please file an issue.',\n        );\n      }\n    }\n\n    invariant(\n      a.alternate === b,\n      \"Return fibers should always be each others' alternates. \" +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  invariant(\n    a.tag === HostRoot,\n    'Unable to find node on an unmounted component.',\n  );\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    const match = findCurrentHostFiberImpl(child);\n    if (match !== null) {\n      return match;\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberWithNoPortalsImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberWithNoPortalsImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    if (child.tag !== HostPortal) {\n      const match = findCurrentHostFiberWithNoPortalsImpl(child);\n      if (match !== null) {\n        return match;\n      }\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function isFiberSuspenseAndTimedOut(fiber: Fiber): boolean {\n  const memoizedState = fiber.memoizedState;\n  return (\n    fiber.tag === SuspenseComponent &&\n    memoizedState !== null &&\n    memoizedState.dehydrated === null\n  );\n}\n\nexport function doesFiberContain(\n  parentFiber: Fiber,\n  childFiber: Fiber,\n): boolean {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n    node = node.return;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nexport const TYPES = {\n  CLIPPING_RECTANGLE: 'ClippingRectangle',\n  GROUP: 'Group',\n  SHAPE: 'Shape',\n  TEXT: 'Text',\n};\n\nexport const EVENT_TYPES = {\n  onClick: 'click',\n  onMouseMove: 'mousemove',\n  onMouseOver: 'mouseover',\n  onMouseOut: 'mouseout',\n  onMouseUp: 'mouseup',\n  onMouseDown: 'mousedown',\n};\n\nexport function childrenAsString(children) {\n  if (!children) {\n    return '';\n  } else if (typeof children === 'string') {\n    return children;\n  } else if (children.length) {\n    return children.join('');\n  } else {\n    return '';\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This module only exists as an ESM wrapper around the external CommonJS\n// Scheduler dependency. Notice that we're intentionally not using named imports\n// because Rollup would use dynamic dispatch for CommonJS interop named imports.\n// When we switch to ESM, we can delete this module.\nimport * as Scheduler from 'scheduler';\n\nexport const scheduleCallback = Scheduler.unstable_scheduleCallback;\nexport const cancelCallback = Scheduler.unstable_cancelCallback;\nexport const shouldYield = Scheduler.unstable_shouldYield;\nexport const requestPaint = Scheduler.unstable_requestPaint;\nexport const now = Scheduler.unstable_now;\nexport const getCurrentPriorityLevel =\n  Scheduler.unstable_getCurrentPriorityLevel;\nexport const ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nexport const UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nexport const NormalPriority = Scheduler.unstable_NormalPriority;\nexport const LowPriority = Scheduler.unstable_LowPriority;\nexport const IdlePriority = Scheduler.unstable_IdlePriority;\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\n// this doesn't actually exist on the scheduler, but it *does*\n// on scheduler/unstable_mock, which we'll need for internal testing\nexport const unstable_yieldValue = Scheduler.unstable_yieldValue;\nexport const unstable_setDisableYieldValue =\n  Scheduler.unstable_setDisableYieldValue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\n\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {EventPriority} from './ReactEventPriorities.old';\n\nimport {DidCapture} from './ReactFiberFlags';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n} from './ReactEventPriorities.old';\nimport {\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n} from './Scheduler';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectedHook = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://reactjs.org/link/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (__DEV__) {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === 'function'\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitRoot(root: FiberRoot, eventPriority: EventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n      if (enableProfilerTimer) {\n        let schedulerPriority;\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediateSchedulerPriority;\n            break;\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingSchedulerPriority;\n            break;\n          case DefaultEventPriority:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n          case IdleEventPriority:\n            schedulerPriority = IdleSchedulerPriority;\n            break;\n          default:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n        }\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          schedulerPriority,\n          didError,\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onPostCommitRoot(root: FiberRoot) {\n  if (\n    injectedHook &&\n    typeof injectedHook.onPostCommitFiberRoot === 'function'\n  ) {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\nexport const NoMode = /*                         */ 0b000000;\n// TODO: Remove ConcurrentMode by reading from the root tag instead\nexport const ConcurrentMode = /*                 */ 0b000001;\nexport const ProfileMode = /*                    */ 0b000010;\nexport const DebugTracingMode = /*               */ 0b000100;\nexport const StrictLegacyMode = /*               */ 0b001000;\nexport const StrictEffectsMode = /*              */ 0b010000;\nexport const ConcurrentUpdatesByDefaultMode = /* */ 0b100000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactInternalTypes';\n\n// TODO: Ideally these types would be opaque but that doesn't work well with\n// our reconciler fork infra, since these leak into non-reconciler packages.\n\nexport type Lanes = number;\nexport type Lane = number;\nexport type LaneMap<T> = Array<T>;\n\nimport {\n  enableCache,\n  enableSchedulingProfiler,\n  enableUpdaterTracking,\n  allowConcurrentByDefault,\n} from 'shared/ReactFeatureFlags';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {ConcurrentUpdatesByDefaultMode, NoMode} from './ReactTypeOfMode';\n\n// Lane values below should be kept in sync with getLabelForLane(), used by react-devtools-scheduling-profiler.\n// If those values are changed that package should be rebuilt and redeployed.\n\nexport const TotalLanes = 31;\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000;\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000;\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001;\n\nexport const InputContinuousHydrationLane: Lane = /*    */ 0b0000000000000000000000000000010;\nexport const InputContinuousLane: Lanes = /*            */ 0b0000000000000000000000000000100;\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000000001000;\nexport const DefaultLane: Lanes = /*                    */ 0b0000000000000000000000000010000;\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000000000000100000;\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111111111111000000;\nconst TransitionLane1: Lane = /*                        */ 0b0000000000000000000000001000000;\nconst TransitionLane2: Lane = /*                        */ 0b0000000000000000000000010000000;\nconst TransitionLane3: Lane = /*                        */ 0b0000000000000000000000100000000;\nconst TransitionLane4: Lane = /*                        */ 0b0000000000000000000001000000000;\nconst TransitionLane5: Lane = /*                        */ 0b0000000000000000000010000000000;\nconst TransitionLane6: Lane = /*                        */ 0b0000000000000000000100000000000;\nconst TransitionLane7: Lane = /*                        */ 0b0000000000000000001000000000000;\nconst TransitionLane8: Lane = /*                        */ 0b0000000000000000010000000000000;\nconst TransitionLane9: Lane = /*                        */ 0b0000000000000000100000000000000;\nconst TransitionLane10: Lane = /*                       */ 0b0000000000000001000000000000000;\nconst TransitionLane11: Lane = /*                       */ 0b0000000000000010000000000000000;\nconst TransitionLane12: Lane = /*                       */ 0b0000000000000100000000000000000;\nconst TransitionLane13: Lane = /*                       */ 0b0000000000001000000000000000000;\nconst TransitionLane14: Lane = /*                       */ 0b0000000000010000000000000000000;\nconst TransitionLane15: Lane = /*                       */ 0b0000000000100000000000000000000;\nconst TransitionLane16: Lane = /*                       */ 0b0000000001000000000000000000000;\n\nconst RetryLanes: Lanes = /*                            */ 0b0000111110000000000000000000000;\nconst RetryLane1: Lane = /*                             */ 0b0000000010000000000000000000000;\nconst RetryLane2: Lane = /*                             */ 0b0000000100000000000000000000000;\nconst RetryLane3: Lane = /*                             */ 0b0000001000000000000000000000000;\nconst RetryLane4: Lane = /*                             */ 0b0000010000000000000000000000000;\nconst RetryLane5: Lane = /*                             */ 0b0000100000000000000000000000000;\n\nexport const SomeRetryLane: Lane = RetryLane1;\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0001000000000000000000000000000;\n\nconst NonIdleLanes = /*                                 */ 0b0001111111111111111111111111111;\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0010000000000000000000000000000;\nexport const IdleLane: Lanes = /*                       */ 0b0100000000000000000000000000000;\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000;\n\n// This function is used for the experimental scheduling profiler (react-devtools-scheduling-profiler)\n// It should be kept in sync with the Lanes values above.\nexport function getLabelForLane(lane: Lane): string | void {\n  if (enableSchedulingProfiler) {\n    if (lane & SyncLane) {\n      return 'Sync';\n    }\n    if (lane & InputContinuousHydrationLane) {\n      return 'InputContinuousHydration';\n    }\n    if (lane & InputContinuousLane) {\n      return 'InputContinuous';\n    }\n    if (lane & DefaultHydrationLane) {\n      return 'DefaultHydration';\n    }\n    if (lane & DefaultLane) {\n      return 'Default';\n    }\n    if (lane & TransitionHydrationLane) {\n      return 'TransitionHydration';\n    }\n    if (lane & TransitionLanes) {\n      return 'Transition';\n    }\n    if (lane & RetryLanes) {\n      return 'Retry';\n    }\n    if (lane & SelectiveHydrationLane) {\n      return 'SelectiveHydration';\n    }\n    if (lane & IdleHydrationLane) {\n      return 'IdleHydration';\n    }\n    if (lane & IdleLane) {\n      return 'Idle';\n    }\n    if (lane & OffscreenLane) {\n      return 'Offscreen';\n    }\n  }\n}\n\nexport const NoTimestamp = -1;\n\nlet nextTransitionLane: Lane = TransitionLane1;\nlet nextRetryLane: Lane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes: Lanes | Lane): Lanes {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n    case InputContinuousLane:\n      return InputContinuousLane;\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n    case DefaultLane:\n      return DefaultLane;\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n    case IdleLane:\n      return IdleLane;\n    case OffscreenLane:\n      return OffscreenLane;\n    default:\n      if (__DEV__) {\n        console.error(\n          'Should have found matching lanes. This is a bug in React.',\n        );\n      }\n      // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n      return lanes;\n  }\n}\n\nexport function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  // Early bailout if there's no pending work left.\n  const pendingLanes = root.pendingLanes;\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n\n  // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n  const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n  if (nonIdlePendingLanes !== NoLanes) {\n    const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    const unblockedLanes = pendingLanes & ~suspendedLanes;\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  }\n\n  // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes &&\n    // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    const nextLane = getHighestPriorityLane(nextLanes);\n    const wipLane = getHighestPriorityLane(wipLanes);\n    if (\n      // Tests whether the next lane is equal or lower priority than the wip\n      // one. This works because the bits decrease in priority as you go left.\n      nextLane >= wipLane ||\n      // Default priority updates should not interrupt transition updates. The\n      // only difference between default updates and transition updates is that\n      // default updates do not support refresh transitions.\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Do nothing, use the lanes as they were assigned.\n  } else if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  }\n\n  // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n  const entangledLanes = root.entangledLanes;\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n\n      nextLanes |= entanglements[index];\n\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\n\nexport function getMostRecentEventTime(root: FiberRoot, lanes: Lanes): number {\n  const eventTimes = root.eventTimes;\n\n  let mostRecentEventTime = NoTimestamp;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const eventTime = eventTimes[index];\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane: Lane, currentTime: number) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n    default:\n      if (__DEV__) {\n        console.error(\n          'Should have found matching lanes. This is a bug in React.',\n        );\n      }\n      return NoTimestamp;\n  }\n}\n\nexport function markStarvedLanesAsExpired(\n  root: FiberRoot,\n  currentTime: number,\n): void {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n\n  const pendingLanes = root.pendingLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const expirationTimes = root.expirationTimes;\n\n  // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n  let lanes = pendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const expirationTime = expirationTimes[index];\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n}\n\n// This returns the highest priority pending lanes regardless of whether they\n// are suspended.\nexport function getHighestPriorityPendingLanes(root: FiberRoot) {\n  return getHighestPriorityLanes(root.pendingLanes);\n}\n\nexport function getLanesToRetrySynchronouslyOnError(root: FiberRoot): Lanes {\n  const everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n  return NoLanes;\n}\n\nexport function includesNonIdleWork(lanes: Lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nexport function includesOnlyRetries(lanes: Lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nexport function includesOnlyTransitions(lanes: Lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\n\nexport function shouldTimeSlice(root: FiberRoot, lanes: Lanes) {\n  if ((lanes & root.expiredLanes) !== NoLanes) {\n    // At least one of these lanes expired. To prevent additional starvation,\n    // finish rendering without yielding execution.\n    return false;\n  }\n\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Concurrent updates by default always use time slicing.\n    return true;\n  }\n\n  const SyncDefaultLanes =\n    InputContinuousHydrationLane |\n    InputContinuousLane |\n    DefaultHydrationLane |\n    DefaultLane;\n  return (lanes & SyncDefaultLanes) === NoLanes;\n}\n\nexport function isTransitionLane(lane: Lane) {\n  return (lane & TransitionLanes) !== 0;\n}\n\nexport function claimNextTransitionLane(): Lane {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  const lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  if ((nextTransitionLane & TransitionLanes) === 0) {\n    nextTransitionLane = TransitionLane1;\n  }\n  return lane;\n}\n\nexport function claimNextRetryLane(): Lane {\n  const lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  if ((nextRetryLane & RetryLanes) === 0) {\n    nextRetryLane = RetryLane1;\n  }\n  return lane;\n}\n\nexport function getHighestPriorityLane(lanes: Lanes): Lane {\n  return lanes & -lanes;\n}\n\nexport function pickArbitraryLane(lanes: Lanes): Lane {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes: Lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane: Lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nexport function includesSomeLane(a: Lanes | Lane, b: Lanes | Lane) {\n  return (a & b) !== NoLanes;\n}\n\nexport function isSubsetOfLanes(set: Lanes, subset: Lanes | Lane) {\n  return (set & subset) === subset;\n}\n\nexport function mergeLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a | b;\n}\n\nexport function removeLanes(set: Lanes, subset: Lanes | Lane): Lanes {\n  return set & ~subset;\n}\n\nexport function intersectLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a & b;\n}\n\n// Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\nexport function laneToLanes(lane: Lane): Lanes {\n  return lane;\n}\n\nexport function higherPriorityLane(a: Lane, b: Lane) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\n\nexport function createLaneMap<T>(initial: T): LaneMap<T> {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  const laneMap = [];\n  for (let i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n  return laneMap;\n}\n\nexport function markRootUpdated(\n  root: FiberRoot,\n  updateLane: Lane,\n  eventTime: number,\n) {\n  root.pendingLanes |= updateLane;\n\n  // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  const eventTimes = root.eventTimes;\n  const index = laneToIndex(updateLane);\n  // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n  eventTimes[index] = eventTime;\n}\n\nexport function markRootSuspended(root: FiberRoot, suspendedLanes: Lanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n\n  // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n  const expirationTimes = root.expirationTimes;\n  let lanes = suspendedLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootPinged(\n  root: FiberRoot,\n  pingedLanes: Lanes,\n  eventTime: number,\n) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\n\nexport function markRootMutableRead(root: FiberRoot, updateLane: Lane) {\n  root.mutableReadLanes |= updateLane & root.pendingLanes;\n}\n\nexport function markRootFinished(root: FiberRoot, remainingLanes: Lanes) {\n  const noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n\n  root.pendingLanes = remainingLanes;\n\n  // Let's try everything again\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n\n  root.entangledLanes &= remainingLanes;\n\n  if (enableCache) {\n    const pooledCacheLanes = (root.pooledCacheLanes &= remainingLanes);\n    if (pooledCacheLanes === NoLanes) {\n      // None of the remaining work relies on the cache pool. Clear it so\n      // subsequent requests get a new cache.\n      root.pooledCache = null;\n    }\n  }\n\n  const entanglements = root.entanglements;\n  const eventTimes = root.eventTimes;\n  const expirationTimes = root.expirationTimes;\n\n  // Clear the lanes that no longer have pending work\n  let lanes = noLongerPendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootEntangled(root: FiberRoot, entangledLanes: Lanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n\n  const rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  const entanglements = root.entanglements;\n  let lanes = rootEntangledLanes;\n  while (lanes) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    if (\n      // Is this one of the newly entangled lanes?\n      (lane & entangledLanes) |\n      // Is this lane transitively entangled with the newly entangled lanes?\n      (entanglements[index] & entangledLanes)\n    ) {\n      entanglements[index] |= entangledLanes;\n    }\n    lanes &= ~lane;\n  }\n}\n\nexport function getBumpedLaneForHydration(\n  root: FiberRoot,\n  renderLanes: Lanes,\n): Lane {\n  const renderLane = getHighestPriorityLane(renderLanes);\n\n  let lane;\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  }\n\n  // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\n\nexport function addFiberToLanesMap(\n  root: FiberRoot,\n  fiber: Fiber,\n  lanes: Lanes | Lane,\n) {\n  if (!enableUpdaterTracking) {\n    return;\n  }\n  if (!isDevToolsPresent) {\n    return;\n  }\n  const pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const updaters = pendingUpdatersLaneMap[index];\n    updaters.add(fiber);\n\n    lanes &= ~lane;\n  }\n}\n\nexport function movePendingFibersToMemoized(root: FiberRoot, lanes: Lanes) {\n  if (!enableUpdaterTracking) {\n    return;\n  }\n  if (!isDevToolsPresent) {\n    return;\n  }\n  const pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  const memoizedUpdaters = root.memoizedUpdaters;\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const updaters = pendingUpdatersLaneMap[index];\n    if (updaters.size > 0) {\n      updaters.forEach(fiber => {\n        const alternate = fiber.alternate;\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\n          memoizedUpdaters.add(fiber);\n        }\n      });\n      updaters.clear();\n    }\n\n    lanes &= ~lane;\n  }\n}\n\nconst clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n\n// Count leading zeros. Only used on lanes, so assume input is an integer.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nconst log = Math.log;\nconst LN2 = Math.LN2;\nfunction clz32Fallback(lanes: Lanes | Lane) {\n  if (lanes === 0) {\n    return 32;\n  }\n  return (31 - ((log(lanes) / LN2) | 0)) | 0;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane.old';\n\nimport {\n  NoLane,\n  SyncLane,\n  InputContinuousLane,\n  DefaultLane,\n  IdleLane,\n  getHighestPriorityLane,\n  includesNonIdleWork,\n} from './ReactFiberLane.old';\n\nexport opaque type EventPriority = Lane;\n\nexport const DiscreteEventPriority: EventPriority = SyncLane;\nexport const ContinuousEventPriority: EventPriority = InputContinuousLane;\nexport const DefaultEventPriority: EventPriority = DefaultLane;\nexport const IdleEventPriority: EventPriority = IdleLane;\n\nlet currentUpdatePriority: EventPriority = NoLane;\n\nexport function getCurrentUpdatePriority(): EventPriority {\n  return currentUpdatePriority;\n}\n\nexport function setCurrentUpdatePriority(newPriority: EventPriority) {\n  currentUpdatePriority = newPriority;\n}\n\nexport function runWithPriority<T>(priority: EventPriority, fn: () => T): T {\n  const previousPriority = currentUpdatePriority;\n  try {\n    currentUpdatePriority = priority;\n    return fn();\n  } finally {\n    currentUpdatePriority = previousPriority;\n  }\n}\n\nexport function higherEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): EventPriority {\n  return a !== 0 && a < b ? a : b;\n}\n\nexport function lowerEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): EventPriority {\n  return a === 0 || a > b ? a : b;\n}\n\nexport function isHigherEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): boolean {\n  return a !== 0 && a < b;\n}\n\nexport function lanesToEventPriority(lanes: Lanes): EventPriority {\n  const lane = getHighestPriorityLane(lanes);\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n  return IdleEventPriority;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\n\nfunction shim(...args: any) {\n  invariant(\n    false,\n    'The current renderer does not support hydration. ' +\n      'This error is likely caused by a bug in React. ' +\n      'Please file an issue.',\n  );\n}\n\n// Hydration (when unsupported)\nexport type SuspenseInstance = mixed;\nexport const supportsHydration = false;\nexport const canHydrateInstance = shim;\nexport const canHydrateTextInstance = shim;\nexport const canHydrateSuspenseInstance = shim;\nexport const isSuspenseInstancePending = shim;\nexport const isSuspenseInstanceFallback = shim;\nexport const registerSuspenseInstanceRetry = shim;\nexport const getNextHydratableSibling = shim;\nexport const getFirstHydratableChild = shim;\nexport const hydrateInstance = shim;\nexport const hydrateTextInstance = shim;\nexport const hydrateSuspenseInstance = shim;\nexport const getNextHydratableInstanceAfterSuspenseInstance = shim;\nexport const commitHydratedContainer = shim;\nexport const commitHydratedSuspenseInstance = shim;\nexport const clearSuspenseBoundary = shim;\nexport const clearSuspenseBoundaryFromContainer = shim;\nexport const shouldDeleteUnhydratedTailInstances = shim;\nexport const didNotMatchHydratedContainerTextInstance = shim;\nexport const didNotMatchHydratedTextInstance = shim;\nexport const didNotHydrateContainerInstance = shim;\nexport const didNotHydrateInstance = shim;\nexport const didNotFindHydratableContainerInstance = shim;\nexport const didNotFindHydratableContainerTextInstance = shim;\nexport const didNotFindHydratableContainerSuspenseInstance = shim;\nexport const didNotFindHydratableInstance = shim;\nexport const didNotFindHydratableTextInstance = shim;\nexport const didNotFindHydratableSuspenseInstance = shim;\nexport const errorHydratingContainer = shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n// Renderers that don't support React Scopes\n// can re-export everything from this module.\n\nfunction shim(...args: any) {\n  invariant(\n    false,\n    'The current renderer does not support React Scopes. ' +\n      'This error is likely caused by a bug in React. ' +\n      'Please file an issue.',\n  );\n}\n\n// React Scopes (when unsupported)\nexport const prepareScopeUpdate = shim;\nexport const getInstanceFromScope = shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport Transform from 'art/core/transform';\nimport Mode from 'art/modes/current';\nimport invariant from 'shared/invariant';\n\nimport {TYPES, EVENT_TYPES, childrenAsString} from './ReactARTInternals';\n\nimport {DefaultEventPriority} from 'react-reconciler/src/ReactEventPriorities';\n\nconst pooledTransform = new Transform();\n\nconst NO_CONTEXT = {};\nconst UPDATE_SIGNAL = {};\nif (__DEV__) {\n  Object.freeze(NO_CONTEXT);\n  Object.freeze(UPDATE_SIGNAL);\n}\n\n/** Helper Methods */\n\nfunction addEventListeners(instance, type, listener) {\n  // We need to explicitly unregister before unmount.\n  // For this reason we need to track subscriptions.\n  if (!instance._listeners) {\n    instance._listeners = {};\n    instance._subscriptions = {};\n  }\n\n  instance._listeners[type] = listener;\n\n  if (listener) {\n    if (!instance._subscriptions[type]) {\n      instance._subscriptions[type] = instance.subscribe(\n        type,\n        createEventHandler(instance),\n        instance,\n      );\n    }\n  } else {\n    if (instance._subscriptions[type]) {\n      instance._subscriptions[type]();\n      delete instance._subscriptions[type];\n    }\n  }\n}\n\nfunction createEventHandler(instance) {\n  return function handleEvent(event) {\n    const listener = instance._listeners[event.type];\n\n    if (!listener) {\n      // Noop\n    } else if (typeof listener === 'function') {\n      listener.call(instance, event);\n    } else if (listener.handleEvent) {\n      listener.handleEvent(event);\n    }\n  };\n}\n\nfunction destroyEventListeners(instance) {\n  if (instance._subscriptions) {\n    for (const type in instance._subscriptions) {\n      instance._subscriptions[type]();\n    }\n  }\n\n  instance._subscriptions = null;\n  instance._listeners = null;\n}\n\nfunction getScaleX(props) {\n  if (props.scaleX != null) {\n    return props.scaleX;\n  } else if (props.scale != null) {\n    return props.scale;\n  } else {\n    return 1;\n  }\n}\n\nfunction getScaleY(props) {\n  if (props.scaleY != null) {\n    return props.scaleY;\n  } else if (props.scale != null) {\n    return props.scale;\n  } else {\n    return 1;\n  }\n}\n\nfunction isSameFont(oldFont, newFont) {\n  if (oldFont === newFont) {\n    return true;\n  } else if (typeof newFont === 'string' || typeof oldFont === 'string') {\n    return false;\n  } else {\n    return (\n      newFont.fontSize === oldFont.fontSize &&\n      newFont.fontStyle === oldFont.fontStyle &&\n      newFont.fontVariant === oldFont.fontVariant &&\n      newFont.fontWeight === oldFont.fontWeight &&\n      newFont.fontFamily === oldFont.fontFamily\n    );\n  }\n}\n\n/** Render Methods */\n\nfunction applyClippingRectangleProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  instance.width = props.width;\n  instance.height = props.height;\n}\n\nfunction applyGroupProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  instance.width = props.width;\n  instance.height = props.height;\n}\n\nfunction applyNodeProps(instance, props, prevProps = {}) {\n  const scaleX = getScaleX(props);\n  const scaleY = getScaleY(props);\n\n  pooledTransform\n    .transformTo(1, 0, 0, 1, 0, 0)\n    .move(props.x || 0, props.y || 0)\n    .rotate(props.rotation || 0, props.originX, props.originY)\n    .scale(scaleX, scaleY, props.originX, props.originY);\n\n  if (props.transform != null) {\n    pooledTransform.transform(props.transform);\n  }\n\n  if (\n    instance.xx !== pooledTransform.xx ||\n    instance.yx !== pooledTransform.yx ||\n    instance.xy !== pooledTransform.xy ||\n    instance.yy !== pooledTransform.yy ||\n    instance.x !== pooledTransform.x ||\n    instance.y !== pooledTransform.y\n  ) {\n    instance.transformTo(pooledTransform);\n  }\n\n  if (props.cursor !== prevProps.cursor || props.title !== prevProps.title) {\n    instance.indicate(props.cursor, props.title);\n  }\n\n  if (instance.blend && props.opacity !== prevProps.opacity) {\n    instance.blend(props.opacity == null ? 1 : props.opacity);\n  }\n\n  if (props.visible !== prevProps.visible) {\n    if (props.visible == null || props.visible) {\n      instance.show();\n    } else {\n      instance.hide();\n    }\n  }\n\n  for (const type in EVENT_TYPES) {\n    addEventListeners(instance, EVENT_TYPES[type], props[type]);\n  }\n}\n\nfunction applyRenderableNodeProps(instance, props, prevProps = {}) {\n  applyNodeProps(instance, props, prevProps);\n\n  if (prevProps.fill !== props.fill) {\n    if (props.fill && props.fill.applyFill) {\n      props.fill.applyFill(instance);\n    } else {\n      instance.fill(props.fill);\n    }\n  }\n  if (\n    prevProps.stroke !== props.stroke ||\n    prevProps.strokeWidth !== props.strokeWidth ||\n    prevProps.strokeCap !== props.strokeCap ||\n    prevProps.strokeJoin !== props.strokeJoin ||\n    // TODO: Consider deep check of stokeDash; may benefit VML in IE.\n    prevProps.strokeDash !== props.strokeDash\n  ) {\n    instance.stroke(\n      props.stroke,\n      props.strokeWidth,\n      props.strokeCap,\n      props.strokeJoin,\n      props.strokeDash,\n    );\n  }\n}\n\nfunction applyShapeProps(instance, props, prevProps = {}) {\n  applyRenderableNodeProps(instance, props, prevProps);\n\n  const path = props.d || childrenAsString(props.children);\n\n  const prevDelta = instance._prevDelta;\n  const prevPath = instance._prevPath;\n\n  if (\n    path !== prevPath ||\n    path.delta !== prevDelta ||\n    prevProps.height !== props.height ||\n    prevProps.width !== props.width\n  ) {\n    instance.draw(path, props.width, props.height);\n\n    instance._prevDelta = path.delta;\n    instance._prevPath = path;\n  }\n}\n\nfunction applyTextProps(instance, props, prevProps = {}) {\n  applyRenderableNodeProps(instance, props, prevProps);\n\n  const string = props.children;\n\n  if (\n    instance._currentString !== string ||\n    !isSameFont(props.font, prevProps.font) ||\n    props.alignment !== prevProps.alignment ||\n    props.path !== prevProps.path\n  ) {\n    instance.draw(string, props.font, props.alignment, props.path);\n\n    instance._currentString = string;\n  }\n}\n\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoPersistence';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoHydration';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoScopes';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoTestSelectors';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoMicrotasks';\n\nexport function appendInitialChild(parentInstance, child) {\n  if (typeof child === 'string') {\n    // Noop for string children of Text (eg <Text>{'foo'}{'bar'}</Text>)\n    invariant(false, 'Text children should already be flattened.');\n    return;\n  }\n\n  child.inject(parentInstance);\n}\n\nexport function createInstance(type, props, internalInstanceHandle) {\n  let instance;\n\n  switch (type) {\n    case TYPES.CLIPPING_RECTANGLE:\n      instance = Mode.ClippingRectangle();\n      instance._applyProps = applyClippingRectangleProps;\n      break;\n    case TYPES.GROUP:\n      instance = Mode.Group();\n      instance._applyProps = applyGroupProps;\n      break;\n    case TYPES.SHAPE:\n      instance = Mode.Shape();\n      instance._applyProps = applyShapeProps;\n      break;\n    case TYPES.TEXT:\n      instance = Mode.Text(\n        props.children,\n        props.font,\n        props.alignment,\n        props.path,\n      );\n      instance._applyProps = applyTextProps;\n      break;\n  }\n\n  invariant(instance, 'ReactART does not support the type \"%s\"', type);\n\n  instance._applyProps(instance, props);\n\n  return instance;\n}\n\nexport function createTextInstance(\n  text,\n  rootContainerInstance,\n  internalInstanceHandle,\n) {\n  return text;\n}\n\nexport function finalizeInitialChildren(domElement, type, props) {\n  return false;\n}\n\nexport function getPublicInstance(instance) {\n  return instance;\n}\n\nexport function prepareForCommit() {\n  // Noop\n  return null;\n}\n\nexport function prepareUpdate(domElement, type, oldProps, newProps) {\n  return UPDATE_SIGNAL;\n}\n\nexport function resetAfterCommit() {\n  // Noop\n}\n\nexport function resetTextContent(domElement) {\n  // Noop\n}\n\nexport function getRootHostContext() {\n  return NO_CONTEXT;\n}\n\nexport function getChildHostContext() {\n  return NO_CONTEXT;\n}\n\nexport const scheduleTimeout = setTimeout;\nexport const cancelTimeout = clearTimeout;\nexport const noTimeout = -1;\n\nexport function shouldSetTextContent(type, props) {\n  return (\n    typeof props.children === 'string' || typeof props.children === 'number'\n  );\n}\n\nexport function getCurrentEventPriority() {\n  return DefaultEventPriority;\n}\n\n// The ART renderer is secondary to the React DOM renderer.\nexport const isPrimaryRenderer = false;\n\n// The ART renderer shouldn't trigger missing act() warnings\nexport const warnsIfNotActing = false;\n\nexport const supportsMutation = true;\n\nexport function appendChild(parentInstance, child) {\n  if (child.parentNode === parentInstance) {\n    child.eject();\n  }\n  child.inject(parentInstance);\n}\n\nexport function appendChildToContainer(parentInstance, child) {\n  if (child.parentNode === parentInstance) {\n    child.eject();\n  }\n  child.inject(parentInstance);\n}\n\nexport function insertBefore(parentInstance, child, beforeChild) {\n  invariant(\n    child !== beforeChild,\n    'ReactART: Can not insert node before itself',\n  );\n  child.injectBefore(beforeChild);\n}\n\nexport function insertInContainerBefore(parentInstance, child, beforeChild) {\n  invariant(\n    child !== beforeChild,\n    'ReactART: Can not insert node before itself',\n  );\n  child.injectBefore(beforeChild);\n}\n\nexport function removeChild(parentInstance, child) {\n  destroyEventListeners(child);\n  child.eject();\n}\n\nexport function removeChildFromContainer(parentInstance, child) {\n  destroyEventListeners(child);\n  child.eject();\n}\n\nexport function commitTextUpdate(textInstance, oldText, newText) {\n  // Noop\n}\n\nexport function commitMount(instance, type, newProps) {\n  // Noop\n}\n\nexport function commitUpdate(\n  instance,\n  updatePayload,\n  type,\n  oldProps,\n  newProps,\n) {\n  instance._applyProps(instance, newProps, oldProps);\n}\n\nexport function hideInstance(instance) {\n  instance.hide();\n}\n\nexport function hideTextInstance(textInstance) {\n  // Noop\n}\n\nexport function unhideInstance(instance, props) {\n  if (props.visible == null || props.visible) {\n    instance.show();\n  }\n}\n\nexport function unhideTextInstance(textInstance, text): void {\n  // Noop\n}\n\nexport function clearContainer(container) {\n  // TODO Implement this\n}\n\nexport function getInstanceFromNode(node) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function isOpaqueHydratingObject(value: mixed): boolean {\n  throw new Error('Not yet implemented');\n}\n\nexport function makeOpaqueHydratingObject(\n  attemptToReadValue: () => void,\n): OpaqueIDType {\n  throw new Error('Not yet implemented.');\n}\n\nexport function makeClientId(): OpaqueIDType {\n  throw new Error('Not yet implemented');\n}\n\nexport function makeClientIdInDEV(warnOnAccessInDEV: () => void): OpaqueIDType {\n  throw new Error('Not yet implemented');\n}\n\nexport function beforeActiveInstanceBlur(internalInstanceHandle: Object) {\n  // noop\n}\n\nexport function afterActiveInstanceBlur() {\n  // noop\n}\n\nexport function preparePortalMount(portalInstance: any): void {\n  // noop\n}\n\nexport function detachDeletedInstance(node: Instance): void {\n  // noop\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Helpers to patch console.logs to avoid logging during side-effect free\n// replaying on render function. This currently only patches the object\n// lazily which won't cover if the log function was extracted eagerly.\n// We could also eagerly patch the method.\n\nlet disabledDepth = 0;\nlet prevLog;\nlet prevInfo;\nlet prevWarn;\nlet prevError;\nlet prevGroup;\nlet prevGroupCollapsed;\nlet prevGroupEnd;\n\nfunction disabledLog() {}\ndisabledLog.__reactDisabledLog = true;\n\nexport function disableLogs(): void {\n  if (__DEV__) {\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      prevLog = console.log;\n      prevInfo = console.info;\n      prevWarn = console.warn;\n      prevError = console.error;\n      prevGroup = console.group;\n      prevGroupCollapsed = console.groupCollapsed;\n      prevGroupEnd = console.groupEnd;\n      // https://github.com/facebook/react/issues/19099\n      const props = {\n        configurable: true,\n        enumerable: true,\n        value: disabledLog,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        info: props,\n        log: props,\n        warn: props,\n        error: props,\n        group: props,\n        groupCollapsed: props,\n        groupEnd: props,\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    disabledDepth++;\n  }\n}\n\nexport function reenableLogs(): void {\n  if (__DEV__) {\n    disabledDepth--;\n    if (disabledDepth === 0) {\n      /* eslint-disable react-internal/no-production-logging */\n      const props = {\n        configurable: true,\n        enumerable: true,\n        writable: true,\n      };\n      // $FlowFixMe Flow thinks console is immutable.\n      Object.defineProperties(console, {\n        log: {...props, value: prevLog},\n        info: {...props, value: prevInfo},\n        warn: {...props, value: prevWarn},\n        error: {...props, value: prevError},\n        group: {...props, value: prevGroup},\n        groupCollapsed: {...props, value: prevGroupCollapsed},\n        groupEnd: {...props, value: prevGroupEnd},\n      });\n      /* eslint-enable react-internal/no-production-logging */\n    }\n    if (disabledDepth < 0) {\n      console.error(\n        'disabledDepth fell below zero. ' +\n          'This is a bug in React. Please file an issue.',\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  enableComponentStackLocations,\n  disableNativeComponentFrames,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (disableNativeComponentFrames || !fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                const frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {isFiberMounted} from './ReactFiberTreeReflection';\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport {ClassComponent, HostRoot} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport invariant from 'shared/invariant';\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nconst contextStackCursor: StackCursor<Object> = createCursor(\n  emptyContextObject,\n);\n// A cursor to a boolean indicating whether the context has changed.\nconst didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n    const instance = workInProgress.stateNode;\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentNameFromFiber(workInProgress) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged(): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type: Function): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    invariant(\n      contextStackCursor.current === emptyContextObject,\n      'Unexpected context found on stack. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes;\n\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n    for (const contextKey in childContext) {\n      invariant(\n        contextKey in childContextTypes,\n        '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n        getComponentNameFromFiber(fiber) || 'Unknown',\n        contextKey,\n      );\n    }\n    if (__DEV__) {\n      const name = getComponentNameFromFiber(fiber) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const instance = workInProgress.stateNode;\n    // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n    const memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject;\n\n    // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress,\n    );\n\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    invariant(\n      instance,\n      'Expected to have an instance by this point. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext,\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n      // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress);\n      // Now push the new context and mark that it has changed.\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    invariant(\n      isFiberMounted(fiber) && fiber.tag === ClassComponent,\n      'Expected subtree parent to be a mounted class component. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    let node = fiber;\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n        case ClassComponent: {\n          const Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n      }\n      node = node.return;\n    } while (node !== null);\n    invariant(\n      false,\n      'Found unexpected detached subtree parent. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {SchedulerCallback} from './Scheduler';\n\nimport {\n  DiscreteEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n} from './ReactEventPriorities.old';\nimport {ImmediatePriority, scheduleCallback} from './Scheduler';\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet includesLegacySyncCallbacks: boolean = false;\nlet isFlushingSyncQueue: boolean = false;\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\n\nexport function scheduleLegacySyncCallback(callback: SchedulerCallback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\n\nexport function flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\n\nexport function flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    const previousUpdatePriority = getCurrentUpdatePriority();\n    try {\n      const isSync = true;\n      const queue = syncQueue;\n      // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n      setCurrentUpdatePriority(DiscreteEventPriority);\n      for (; i < queue.length; i++) {\n        let callback = queue[i];\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      }\n      // Resume flushing in the next tick\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane.old';\nimport type {Wakeable} from 'shared/ReactTypes';\n\nimport {enableDebugTracing} from 'shared/ReactFeatureFlags';\n\nconst nativeConsole: Object = console;\nlet nativeConsoleLog: null | Function = null;\n\nconst pendingGroupArgs: Array<any> = [];\nlet printedGroupIndex: number = -1;\n\nfunction formatLanes(laneOrLanes: Lane | Lanes): string {\n  return '0b' + (laneOrLanes: any).toString(2).padStart(31, '0');\n}\n\nfunction group(...groupArgs): void {\n  pendingGroupArgs.push(groupArgs);\n\n  if (nativeConsoleLog === null) {\n    nativeConsoleLog = nativeConsole.log;\n    nativeConsole.log = log;\n  }\n}\n\nfunction groupEnd(): void {\n  pendingGroupArgs.pop();\n  while (printedGroupIndex >= pendingGroupArgs.length) {\n    nativeConsole.groupEnd();\n    printedGroupIndex--;\n  }\n\n  if (pendingGroupArgs.length === 0) {\n    nativeConsole.log = nativeConsoleLog;\n    nativeConsoleLog = null;\n  }\n}\n\nfunction log(...logArgs): void {\n  if (printedGroupIndex < pendingGroupArgs.length - 1) {\n    for (let i = printedGroupIndex + 1; i < pendingGroupArgs.length; i++) {\n      const groupArgs = pendingGroupArgs[i];\n      nativeConsole.group(...groupArgs);\n    }\n    printedGroupIndex = pendingGroupArgs.length - 1;\n  }\n  if (typeof nativeConsoleLog === 'function') {\n    nativeConsoleLog(...logArgs);\n  } else {\n    nativeConsole.log(...logArgs);\n  }\n}\n\nconst REACT_LOGO_STYLE =\n  'background-color: #20232a; color: #61dafb; padding: 0 2px;';\n\nexport function logCommitStarted(lanes: Lanes): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      group(\n        `%c⚛️%c commit%c (${formatLanes(lanes)})`,\n        REACT_LOGO_STYLE,\n        '',\n        'font-weight: normal;',\n      );\n    }\n  }\n}\n\nexport function logCommitStopped(): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      groupEnd();\n    }\n  }\n}\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n// $FlowFixMe: Flow cannot handle polymorphic WeakMaps\nconst wakeableIDs: WeakMap<Wakeable, number> = new PossiblyWeakMap();\nlet wakeableID: number = 0;\nfunction getWakeableID(wakeable: Wakeable): number {\n  if (!wakeableIDs.has(wakeable)) {\n    wakeableIDs.set(wakeable, wakeableID++);\n  }\n  return ((wakeableIDs.get(wakeable): any): number);\n}\n\nexport function logComponentSuspended(\n  componentName: string,\n  wakeable: Wakeable,\n): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      const id = getWakeableID(wakeable);\n      const display = (wakeable: any).displayName || wakeable;\n      log(\n        `%c⚛️%c ${componentName} suspended`,\n        REACT_LOGO_STYLE,\n        'color: #80366d; font-weight: bold;',\n        id,\n        display,\n      );\n      wakeable.then(\n        () => {\n          log(\n            `%c⚛️%c ${componentName} resolved`,\n            REACT_LOGO_STYLE,\n            'color: #80366d; font-weight: bold;',\n            id,\n            display,\n          );\n        },\n        () => {\n          log(\n            `%c⚛️%c ${componentName} rejected`,\n            REACT_LOGO_STYLE,\n            'color: #80366d; font-weight: bold;',\n            id,\n            display,\n          );\n        },\n      );\n    }\n  }\n}\n\nexport function logLayoutEffectsStarted(lanes: Lanes): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      group(\n        `%c⚛️%c layout effects%c (${formatLanes(lanes)})`,\n        REACT_LOGO_STYLE,\n        '',\n        'font-weight: normal;',\n      );\n    }\n  }\n}\n\nexport function logLayoutEffectsStopped(): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      groupEnd();\n    }\n  }\n}\n\nexport function logPassiveEffectsStarted(lanes: Lanes): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      group(\n        `%c⚛️%c passive effects%c (${formatLanes(lanes)})`,\n        REACT_LOGO_STYLE,\n        '',\n        'font-weight: normal;',\n      );\n    }\n  }\n}\n\nexport function logPassiveEffectsStopped(): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      groupEnd();\n    }\n  }\n}\n\nexport function logRenderStarted(lanes: Lanes): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      group(\n        `%c⚛️%c render%c (${formatLanes(lanes)})`,\n        REACT_LOGO_STYLE,\n        '',\n        'font-weight: normal;',\n      );\n    }\n  }\n}\n\nexport function logRenderStopped(): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      groupEnd();\n    }\n  }\n}\n\nexport function logForceUpdateScheduled(\n  componentName: string,\n  lane: Lane,\n): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      log(\n        `%c⚛️%c ${componentName} forced update %c(${formatLanes(lane)})`,\n        REACT_LOGO_STYLE,\n        'color: #db2e1f; font-weight: bold;',\n        '',\n      );\n    }\n  }\n}\n\nexport function logStateUpdateScheduled(\n  componentName: string,\n  lane: Lane,\n  payloadOrAction: any,\n): void {\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      log(\n        `%c⚛️%c ${componentName} updated state %c(${formatLanes(lane)})`,\n        REACT_LOGO_STYLE,\n        'color: #01a252; font-weight: bold;',\n        '',\n        payloadOrAction,\n      );\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport {\n  COMFORTABLE_LINE_HEIGHT,\n  COMPACT_LINE_HEIGHT,\n} from 'react-devtools-shared/src/constants.js';\n\nexport const REACT_TOTAL_NUM_LANES = 31;\n\n// Increment this number any time a backwards breaking change is made to the profiler metadata.\nexport const SCHEDULING_PROFILER_VERSION = 1;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane.old';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Wakeable} from 'shared/ReactTypes';\n\nimport {\n  enableNewReconciler,\n  enableSchedulingProfiler,\n} from 'shared/ReactFeatureFlags';\nimport ReactVersion from 'shared/ReactVersion';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {SCHEDULING_PROFILER_VERSION} from 'react-devtools-scheduling-profiler/src/constants';\n\nimport {\n  getLabelForLane as getLabelForLane_old,\n  TotalLanes as TotalLanes_old,\n} from 'react-reconciler/src/ReactFiberLane.old';\nimport {\n  getLabelForLane as getLabelForLane_new,\n  TotalLanes as TotalLanes_new,\n} from 'react-reconciler/src/ReactFiberLane.new';\n\nconst getLabelForLane = enableNewReconciler\n  ? getLabelForLane_new\n  : getLabelForLane_old;\n\nconst TotalLanes = enableNewReconciler ? TotalLanes_new : TotalLanes_old;\n\n/**\n * If performance exists and supports the subset of the User Timing API that we\n * require.\n */\nconst supportsUserTiming =\n  typeof performance !== 'undefined' &&\n  typeof performance.mark === 'function' &&\n  typeof performance.clearMarks === 'function';\n\nlet supportsUserTimingV3 = false;\nif (enableSchedulingProfiler) {\n  if (supportsUserTiming) {\n    const CHECK_V3_MARK = '__v3';\n    const markOptions = {};\n    // $FlowFixMe: Ignore Flow complaining about needing a value\n    Object.defineProperty(markOptions, 'startTime', {\n      get: function() {\n        supportsUserTimingV3 = true;\n        return 0;\n      },\n      set: function() {},\n    });\n\n    try {\n      // $FlowFixMe: Flow expects the User Timing level 2 API.\n      performance.mark(CHECK_V3_MARK, markOptions);\n    } catch (error) {\n      // Ignore\n    } finally {\n      performance.clearMarks(CHECK_V3_MARK);\n    }\n  }\n}\n\nconst laneLabels: Array<string> = [];\n\nexport function getLaneLabels(): Array<string> {\n  if (laneLabels.length === 0) {\n    let lane = 1;\n    for (let index = 0; index < TotalLanes; index++) {\n      laneLabels.push(((getLabelForLane(lane): any): string));\n\n      lane *= 2;\n    }\n  }\n  return laneLabels;\n}\n\nfunction markLaneToLabelMetadata() {\n  getLaneLabels();\n\n  markAndClear(`--react-lane-labels-${laneLabels.join(',')}`);\n}\n\nfunction markAndClear(name) {\n  performance.mark(name);\n  performance.clearMarks(name);\n}\n\nfunction markVersionMetadata() {\n  markAndClear(`--react-version-${ReactVersion}`);\n  markAndClear(`--profiler-version-${SCHEDULING_PROFILER_VERSION}`);\n}\n\nexport function markCommitStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear(`--commit-start-${lanes}`);\n\n      // Certain types of metadata should be logged infrequently.\n      // Normally we would log this during module init,\n      // but there's no guarantee a user is profiling at that time.\n      // Commits happen infrequently (less than renders or state updates)\n      // so we log this extra information along with a commit.\n      // It will likely be logged more than once but that's okay.\n      //\n      // TODO Once DevTools supports starting/stopping the profiler,\n      // we can log this data only once (when started) and remove the per-commit logging.\n      markVersionMetadata();\n      markLaneToLabelMetadata();\n    }\n  }\n}\n\nexport function markCommitStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear('--commit-stop');\n    }\n  }\n}\n\nexport function markComponentRenderStarted(fiber: Fiber): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      const componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n      // TODO (scheduling profiler) Add component stack id\n      markAndClear(`--component-render-start-${componentName}`);\n    }\n  }\n}\n\nexport function markComponentRenderStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear('--component-render-stop');\n    }\n  }\n}\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\n// $FlowFixMe: Flow cannot handle polymorphic WeakMaps\nconst wakeableIDs: WeakMap<Wakeable, number> = new PossiblyWeakMap();\nlet wakeableID: number = 0;\nfunction getWakeableID(wakeable: Wakeable): number {\n  if (!wakeableIDs.has(wakeable)) {\n    wakeableIDs.set(wakeable, wakeableID++);\n  }\n  return ((wakeableIDs.get(wakeable): any): number);\n}\n\nexport function markComponentSuspended(\n  fiber: Fiber,\n  wakeable: Wakeable,\n  lanes: Lanes,\n): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      const eventType = wakeableIDs.has(wakeable) ? 'resuspend' : 'suspend';\n      const id = getWakeableID(wakeable);\n      const componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n      const phase = fiber.alternate === null ? 'mount' : 'update';\n      // TODO (scheduling profiler) Add component stack id\n      markAndClear(\n        `--suspense-${eventType}-${id}-${componentName}-${phase}-${lanes}`,\n      );\n      wakeable.then(\n        () => markAndClear(`--suspense-resolved-${id}-${componentName}`),\n        () => markAndClear(`--suspense-rejected-${id}-${componentName}`),\n      );\n    }\n  }\n}\n\nexport function markLayoutEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear(`--layout-effects-start-${lanes}`);\n    }\n  }\n}\n\nexport function markLayoutEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear('--layout-effects-stop');\n    }\n  }\n}\n\nexport function markPassiveEffectsStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear(`--passive-effects-start-${lanes}`);\n    }\n  }\n}\n\nexport function markPassiveEffectsStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear('--passive-effects-stop');\n    }\n  }\n}\n\nexport function markRenderStarted(lanes: Lanes): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear(`--render-start-${lanes}`);\n    }\n  }\n}\n\nexport function markRenderYielded(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear('--render-yield');\n    }\n  }\n}\n\nexport function markRenderStopped(): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear('--render-stop');\n    }\n  }\n}\n\nexport function markRenderScheduled(lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      markAndClear(`--schedule-render-${lane}`);\n    }\n  }\n}\n\nexport function markForceUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      const componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n      // TODO (scheduling profiler) Add component stack id\n      markAndClear(`--schedule-forced-update-${lane}-${componentName}`);\n    }\n  }\n}\n\nexport function markStateUpdateScheduled(fiber: Fiber, lane: Lane): void {\n  if (enableSchedulingProfiler) {\n    if (supportsUserTimingV3) {\n      const componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n      // TODO (scheduling profiler) Add component stack id\n      markAndClear(`--schedule-state-update-${lane}-${componentName}`);\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport const NoTransition = 0;\n\nexport function requestCurrentTransition(): number {\n  return ReactCurrentBatchConfig.transition;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\nimport hasOwnProperty from './hasOwnProperty';\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  HostComponent,\n  LazyComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  IndeterminateComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n  ClassComponent,\n} from './ReactWorkTags';\nimport {\n  describeBuiltInComponentFrame,\n  describeFunctionComponentFrame,\n  describeClassComponentFrame,\n} from 'shared/ReactComponentStackFrame';\n\nfunction describeFiber(fiber: Fiber): string {\n  const owner: null | Function = __DEV__\n    ? fiber._debugOwner\n      ? fiber._debugOwner.type\n      : null\n    : null;\n  const source = __DEV__ ? fiber._debugSource : null;\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy', source, owner);\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense', source, owner);\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n    default:\n      return '';\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  try {\n    let info = '';\n    let node = workInProgress;\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nexport let current: Fiber | null = null;\nexport let isRendering: boolean = false;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\n\nexport function setIsRendering(rendering: boolean) {\n  if (__DEV__) {\n    isRendering = rendering;\n  }\n}\n\nexport function getIsRendering() {\n  if (__DEV__) {\n    return isRendering;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\n\ntype FiberArray = Array<Fiber>;\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\n\nconst ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\n  flushPendingUnsafeLifecycleWarnings(): void {},\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\n  flushLegacyContextWarning(): void {},\n  discardPendingWarnings(): void {},\n};\n\nif (__DEV__) {\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\n    let maybeStrictRoot = null;\n\n    let node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillUpdateWarnings: Array<Fiber> = [];\n\n  // Tracks components we have already warned about.\n  const didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === 'function' &&\n      // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillMount === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === 'function' &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === 'function' &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    // We do an initial pass to gather component names\n    const componentWillMountUniqueNames = new Set();\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    const UNSAFE_componentWillMountUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    const componentWillReceivePropsUniqueNames = new Set();\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    const componentWillUpdateUniqueNames = new Set();\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    }\n\n    // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillMountUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, \" +\n          'refactor your code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\n\n      console.warn(\n        'componentWillMount has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        componentWillReceivePropsUniqueNames,\n      );\n\n      console.warn(\n        'componentWillReceiveProps has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, refactor your \" +\n          'code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\n\n      console.warn(\n        'componentWillUpdate has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n  };\n\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\n\n  // Tracks components we have already warned about.\n  const didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      console.error(\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === 'function')\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\n      (fiberArray: FiberArray, strictRoot) => {\n        if (fiberArray.length === 0) {\n          return;\n        }\n        const firstFiber = fiberArray[0];\n\n        const uniqueNames = new Set();\n        fiberArray.forEach(fiber => {\n          uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n          didWarnAboutLegacyContext.add(fiber.type);\n        });\n\n        const sortedNames = setToSortedString(uniqueNames);\n\n        try {\n          setCurrentDebugFiberInDEV(firstFiber);\n          console.error(\n            'Legacy context API has been detected within a strict-mode tree.' +\n              '\\n\\nThe old API will be supported in all 16.x releases, but applications ' +\n              'using it should migrate to the new version.' +\n              '\\n\\nPlease update the following components: %s' +\n              '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context',\n            sortedNames,\n          );\n        } finally {\n          resetCurrentDebugFiberInDEV();\n        }\n      },\n    );\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nexport default ReactStrictModeWarnings;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = Object.assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\nimport type {\n  Fiber,\n  ContextDependency,\n  Dependencies,\n} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SharedQueue} from './ReactUpdateQueue.old';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedFragment,\n} from './ReactWorkTags';\nimport {\n  NoLanes,\n  NoTimestamp,\n  isSubsetOfLanes,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\nimport {\n  NoFlags,\n  DidPropagateContext,\n  NeedsPropagation,\n} from './ReactFiberFlags';\n\nimport invariant from 'shared/invariant';\nimport is from 'shared/objectIs';\nimport {createUpdate, ForceUpdate} from './ReactUpdateQueue.old';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {\n  enableSuspenseServerRenderer,\n  enableLazyContextPropagation,\n} from 'shared/ReactFeatureFlags';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastFullyObservedContext: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependencies(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(\n  providerFiber: Fiber,\n  context: ReactContext<T>,\n  nextValue: T,\n): void {\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(\n  context: ReactContext<any>,\n  providerFiber: Fiber,\n): void {\n  const currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n  if (isPrimaryRenderer) {\n    context._currentValue = currentValue;\n  } else {\n    context._currentValue2 = currentValue;\n  }\n}\n\nexport function scheduleWorkOnParentPath(\n  parent: Fiber | null,\n  renderLanes: Lanes,\n) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  let node = parent;\n  while (node !== null) {\n    const alternate = node.alternate;\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n    node = node.return;\n  }\n}\n\nexport function propagateContextChange<T>(\n  workInProgress: Fiber,\n  context: ReactContext<T>,\n  renderLanes: Lanes,\n): void {\n  if (enableLazyContextPropagation) {\n    // TODO: This path is only used by Cache components. Update\n    // lazilyPropagateParentContextChanges to look for Cache components so they\n    // can take advantage of lazy propagation.\n    const forcePropagateEntireTree = true;\n    propagateContextChanges(\n      workInProgress,\n      [context],\n      renderLanes,\n      forcePropagateEntireTree,\n    );\n  } else {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager<T>(\n  workInProgress: Fiber,\n  context: ReactContext<T>,\n  renderLanes: Lanes,\n): void {\n  // Only used by eager implementation\n  if (enableLazyContextPropagation) {\n    return;\n  }\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.firstContext;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const lane = pickArbitraryLane(renderLanes);\n            const update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n\n            // Inlined `enqueueUpdate` to remove interleaved update check\n            const updateQueue = fiber.updateQueue;\n            if (updateQueue === null) {\n              // Only occurs if the fiber has been unmounted.\n            } else {\n              const sharedQueue: SharedQueue<any> = (updateQueue: any).shared;\n              const pending = sharedQueue.pending;\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          const alternate = fiber.alternate;\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n          scheduleWorkOnParentPath(fiber.return, renderLanes);\n\n          // Mark the updated lanes on the list, too.\n          list.lanes = mergeLanes(list.lanes, renderLanes);\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedFragment\n    ) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n      invariant(\n        parentSuspense !== null,\n        'We just came from a parent so we must have had a parent. This is a bug in React.',\n      );\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(parentSuspense, renderLanes);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nfunction propagateContextChanges<T>(\n  workInProgress: Fiber,\n  contexts: Array<any>,\n  renderLanes: Lanes,\n  forcePropagateEntireTree: boolean,\n): void {\n  // Only used by lazy implementation\n  if (!enableLazyContextPropagation) {\n    return;\n  }\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dep = list.firstContext;\n      findChangedDep: while (dep !== null) {\n        // Assigning these to constants to help Flow\n        const dependency = dep;\n        const consumer = fiber;\n        findContext: for (let i = 0; i < contexts.length; i++) {\n          const context: ReactContext<T> = contexts[i];\n          // Check if the context matches.\n          // TODO: Compare selected values to bail out early.\n          if (dependency.context === context) {\n            // Match! Schedule an update on this fiber.\n\n            // In the lazy implementation, don't mark a dirty flag on the\n            // dependency itself. Not all changes are propagated, so we can't\n            // rely on the propagation function alone to determine whether\n            // something has changed; the consumer will check. In the future, we\n            // could add back a dirty flag as an optimization to avoid double\n            // checking, but until we have selectors it's not really worth\n            // the trouble.\n            consumer.lanes = mergeLanes(consumer.lanes, renderLanes);\n            const alternate = consumer.alternate;\n            if (alternate !== null) {\n              alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n            }\n            scheduleWorkOnParentPath(consumer.return, renderLanes);\n\n            if (!forcePropagateEntireTree) {\n              // During lazy propagation, when we find a match, we can defer\n              // propagating changes to the children, because we're going to\n              // visit them during render. We should continue propagating the\n              // siblings, though\n              nextFiber = null;\n            }\n\n            // Since we already found a match, we can stop traversing the\n            // dependency list.\n            break findChangedDep;\n          }\n        }\n        dep = dependency.next;\n      }\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedFragment\n    ) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n      invariant(\n        parentSuspense !== null,\n        'We just came from a parent so we must have had a parent. This is a bug in React.',\n      );\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(parentSuspense, renderLanes);\n      nextFiber = null;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function lazilyPropagateParentContextChanges(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const forcePropagateEntireTree = false;\n  propagateParentContextChanges(\n    current,\n    workInProgress,\n    renderLanes,\n    forcePropagateEntireTree,\n  );\n}\n\n// Used for propagating a deferred tree (Suspense, Offscreen). We must propagate\n// to the entire subtree, because we won't revisit it until after the current\n// render has completed, at which point we'll have lost track of which providers\n// have changed.\nexport function propagateParentContextChangesToDeferredTree(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const forcePropagateEntireTree = true;\n  propagateParentContextChanges(\n    current,\n    workInProgress,\n    renderLanes,\n    forcePropagateEntireTree,\n  );\n}\n\nfunction propagateParentContextChanges(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n  forcePropagateEntireTree: boolean,\n) {\n  if (!enableLazyContextPropagation) {\n    return;\n  }\n\n  // Collect all the parent providers that changed. Since this is usually small\n  // number, we use an Array instead of Set.\n  let contexts = null;\n  let parent = workInProgress;\n  let isInsidePropagationBailout = false;\n  while (parent !== null) {\n    if (!isInsidePropagationBailout) {\n      if ((parent.flags & NeedsPropagation) !== NoFlags) {\n        isInsidePropagationBailout = true;\n      } else if ((parent.flags & DidPropagateContext) !== NoFlags) {\n        break;\n      }\n    }\n\n    if (parent.tag === ContextProvider) {\n      const currentParent = parent.alternate;\n      invariant(\n        currentParent !== null,\n        'Should have a current fiber. This is a bug in React.',\n      );\n      const oldProps = currentParent.memoizedProps;\n      if (oldProps !== null) {\n        const providerType: ReactProviderType<any> = parent.type;\n        const context: ReactContext<any> = providerType._context;\n\n        const newProps = parent.pendingProps;\n        const newValue = newProps.value;\n\n        const oldValue = oldProps.value;\n\n        if (!is(newValue, oldValue)) {\n          if (contexts !== null) {\n            contexts.push(context);\n          } else {\n            contexts = [context];\n          }\n        }\n      }\n    }\n    parent = parent.return;\n  }\n\n  if (contexts !== null) {\n    // If there were any changed providers, search through the children and\n    // propagate their changes.\n    propagateContextChanges(\n      workInProgress,\n      contexts,\n      renderLanes,\n      forcePropagateEntireTree,\n    );\n  }\n\n  // This is an optimization so that we only propagate once per subtree. If a\n  // deeply nested child bails out, and it calls this propagation function, it\n  // uses this flag to know that the remaining ancestor providers have already\n  // been propagated.\n  //\n  // NOTE: This optimization is only necessary because we sometimes enter the\n  // begin phase of nodes that don't have any work scheduled on them —\n  // specifically, the siblings of a node that _does_ have scheduled work. The\n  // siblings will bail out and call this function again, even though we already\n  // propagated content changes to it and its subtree. So we use this flag to\n  // mark that the parent providers already propagated.\n  //\n  // Unfortunately, though, we need to ignore this flag when we're inside a\n  // tree whose context propagation was deferred — that's what the\n  // `NeedsPropagation` flag is for.\n  //\n  // If we could instead bail out before entering the siblings' begin phase,\n  // then we could remove both `DidPropagateContext` and `NeedsPropagation`.\n  // Consider this as part of the next refactor to the fiber tree structure.\n  workInProgress.flags |= DidPropagateContext;\n}\n\nexport function checkIfContextChanged(currentDependencies: Dependencies) {\n  if (!enableLazyContextPropagation) {\n    return false;\n  }\n  // Iterate over the current dependencies to see if something changed. This\n  // only gets called if props and state has already bailed out, so it's a\n  // relatively uncommon path, except at the root of a changed subtree.\n  // Alternatively, we could move these comparisons into `readContext`, but\n  // that's a much hotter path, so I think this is an appropriate trade off.\n  let dependency = currentDependencies.firstContext;\n  while (dependency !== null) {\n    const context = dependency.context;\n    const newValue = isPrimaryRenderer\n      ? context._currentValue\n      : context._currentValue2;\n    const oldValue = dependency.memoizedValue;\n    if (!is(newValue, oldValue)) {\n      return true;\n    }\n    dependency = dependency.next;\n  }\n  return false;\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  const dependencies = workInProgress.dependencies;\n  if (dependencies !== null) {\n    if (enableLazyContextPropagation) {\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    } else {\n      const firstContext = dependencies.firstContext;\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        }\n        // Reset the work-in-progress list\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\n\nexport function readContext<T>(context: ReactContext<T>): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n\n  const value = isPrimaryRenderer\n    ? context._currentValue\n    : context._currentValue2;\n\n  if (lastFullyObservedContext === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else {\n    const contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      memoizedValue: value,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      invariant(\n        currentlyRenderingFiber !== null,\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem,\n      };\n      if (enableLazyContextPropagation) {\n        currentlyRenderingFiber.flags |= NeedsPropagation;\n      }\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {UpdateQueue as HookQueue} from './ReactFiberHooks.old';\nimport type {SharedQueue as ClassQueue} from './ReactUpdateQueue.old';\n\n// An array of all update queues that received updates during the current\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\nlet interleavedQueues: Array<\n  HookQueue<any, any> | ClassQueue<any>,\n> | null = null;\n\nexport function pushInterleavedQueue(\n  queue: HookQueue<any, any> | ClassQueue<any>,\n) {\n  if (interleavedQueues === null) {\n    interleavedQueues = [queue];\n  } else {\n    interleavedQueues.push(queue);\n  }\n}\n\nexport function enqueueInterleavedUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (interleavedQueues !== null) {\n    for (let i = 0; i < interleavedQueues.length; i++) {\n      const queue = interleavedQueues[i];\n      const lastInterleavedUpdate = queue.interleaved;\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        const firstInterleavedUpdate = lastInterleavedUpdate.next;\n        const lastPendingUpdate = queue.pending;\n        if (lastPendingUpdate !== null) {\n          const firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = (firstInterleavedUpdate: any);\n          lastInterleavedUpdate.next = (firstPendingUpdate: any);\n        }\n        queue.pending = (lastInterleavedUpdate: any);\n      }\n    }\n    interleavedQueues = null;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\n\nimport {\n  NoLane,\n  NoLanes,\n  isSubsetOfLanes,\n  mergeLanes,\n  isTransitionLane,\n  intersectLanes,\n  markRootEntangled,\n} from './ReactFiberLane.old';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext.old';\nimport {Callback, ShouldCapture, DidCapture} from './ReactFiberFlags';\n\nimport {debugRenderPhaseSideEffectsForStrictMode} from 'shared/ReactFeatureFlags';\n\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {\n  markSkippedUpdateLanes,\n  isInterleavedUpdate,\n} from './ReactFiberWorkLoop.old';\nimport {pushInterleavedQueue} from './ReactFiberInterleavedUpdates.old';\nimport {setIsStrictModeForDevtools} from './ReactFiberReconciler';\n\nimport invariant from 'shared/invariant';\n\nexport type Update<State> = {|\n  // TODO: Temporary field. Will remove this by storing a map of\n  // transition -> event time on the root.\n  eventTime: number,\n  lane: Lane,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State> | null,\n|};\n\nexport type SharedQueue<State> = {|\n  pending: Update<State> | null,\n  interleaved: Update<State> | null,\n  lanes: Lanes,\n|};\n\nexport type UpdateQueue<State> = {|\n  baseState: State,\n  firstBaseUpdate: Update<State> | null,\n  lastBaseUpdate: Update<State> | null,\n  shared: SharedQueue<State>,\n  effects: Array<Update<State>> | null,\n|};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function initializeUpdateQueue<State>(fiber: Fiber): void {\n  const queue: UpdateQueue<State> = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n\nexport function cloneUpdateQueue<State>(\n  current: Fiber,\n  workInProgress: Fiber,\n): void {\n  // Clone the update queue from current. Unless it's already a clone.\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n  if (queue === currentQueue) {\n    const clone: UpdateQueue<State> = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects,\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\n\nexport function createUpdate(eventTime: number, lane: Lane): Update<*> {\n  const update: Update<*> = {\n    eventTime,\n    lane,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n  };\n  return update;\n}\n\nexport function enqueueUpdate<State>(\n  fiber: Fiber,\n  update: Update<State>,\n  lane: Lane,\n) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<State> = (updateQueue: any).shared;\n\n  if (isInterleavedUpdate(fiber, lane)) {\n    const interleaved = sharedQueue.interleaved;\n    if (interleaved === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n      // At the end of the current render, this queue's interleaved updates will\n      // be transferred to the pending queue.\n      pushInterleavedQueue(sharedQueue);\n    } else {\n      update.next = interleaved.next;\n      interleaved.next = update;\n    }\n    sharedQueue.interleaved = update;\n  } else {\n    const pending = sharedQueue.pending;\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n    sharedQueue.pending = update;\n  }\n\n  if (__DEV__) {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      console.error(\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\n\nexport function entangleTransitions(root: FiberRoot, fiber: Fiber, lane: Lane) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<mixed> = (updateQueue: any).shared;\n  if (isTransitionLane(lane)) {\n    let queueLanes = sharedQueue.lanes;\n\n    // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n\n    // Entangle the new transition lane with the other transition lanes.\n    const newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes;\n    // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  capturedUpdate: Update<State>,\n) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  let queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  // Check if the work-in-progress queue is a clone.\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      let newFirst = null;\n      let newLast = null;\n      const firstBaseUpdate = queue.firstBaseUpdate;\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        let update = firstBaseUpdate;\n        do {\n          const clone: Update<State> = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n          update = update.next;\n        } while (update !== null);\n\n        // Append the captured update the end of the cloned list.\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects,\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  }\n\n  // Append the update to the end of the list.\n  const lastBaseUpdate = queue.lastBaseUpdate;\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictLegacyMode\n          ) {\n            setIsStrictModeForDevtools(true);\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              setIsStrictModeForDevtools(false);\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictLegacyMode\n          ) {\n            setIsStrictModeForDevtools(true);\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              setIsStrictModeForDevtools(false);\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return Object.assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  props: any,\n  instance: any,\n  renderLanes: Lanes,\n): void {\n  // This is always non-null on a ClassComponent or HostRoot\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  hasForceUpdate = false;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate;\n\n  // Check if there are pending updates. If so, transfer them to the base queue.\n  let pendingQueue = queue.shared.pending;\n  if (pendingQueue !== null) {\n    queue.shared.pending = null;\n\n    // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n    const lastPendingUpdate = pendingQueue;\n    const firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    // Append pending updates to base queue\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n    lastBaseUpdate = lastPendingUpdate;\n\n    // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n    const current = workInProgress.alternate;\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  }\n\n  // These values may change as we process the queue.\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState;\n    // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n    let newLanes = NoLanes;\n\n    let newBaseState = null;\n    let newFirstBaseUpdate = null;\n    let newLastBaseUpdate = null;\n\n    let update = firstBaseUpdate;\n    do {\n      const updateLane = update.lane;\n      const updateEventTime = update.eventTime;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<State> = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n\n          next: null,\n        };\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newLastBaseUpdate !== null) {\n          const clone: Update<State> = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n\n        // Process this update.\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance,\n        );\n        const callback = update.callback;\n        if (\n          callback !== null &&\n          // If the update was already committed, we should not queue its\n          // callback again.\n          update.lane !== NoLane\n        ) {\n          workInProgress.flags |= Callback;\n          const effects = queue.effects;\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n      update = update.next;\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          const lastPendingUpdate = pendingQueue;\n          // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n          const firstPendingUpdate = ((lastPendingUpdate.next: any): Update<State>);\n          lastPendingUpdate.next = null;\n          update = firstPendingUpdate;\n          queue.lastBaseUpdate = lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = ((newBaseState: any): State);\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate;\n\n    // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n    const lastInterleaved = queue.shared.interleaved;\n    if (lastInterleaved !== null) {\n      let interleaved = lastInterleaved;\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = ((interleaved: any).next: Update<State>);\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    }\n\n    // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  invariant(\n    typeof callback === 'function',\n    'Invalid argument passed as callback. Expected a function. Instead ' +\n      'received: %s',\n    callback,\n  );\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n): void {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport * as React from 'react';\nimport {\n  LayoutStatic,\n  MountLayoutDev,\n  Update,\n  Snapshot,\n} from './ReactFiberFlags';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  warnAboutDeprecatedLifecycles,\n  enableStrictEffects,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {isMounted} from './ReactFiberTreeReflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\nimport {setIsStrictModeForDevtools} from './ReactFiberReconciler';\n\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  DebugTracingMode,\n  NoMode,\n  StrictLegacyMode,\n  StrictEffectsMode,\n} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  entangleTransitions,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n  initializeUpdateQueue,\n  cloneUpdateQueue,\n} from './ReactUpdateQueue.old';\nimport {NoLanes} from './ReactFiberLane.old';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext.old';\nimport {readContext, checkIfContextChanged} from './ReactFiberNewContext.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n} from './ReactFiberWorkLoop.old';\nimport {logForceUpdateScheduled, logStateUpdateScheduled} from './DebugTracing';\n\nimport {\n  markForceUpdateScheduled,\n  markStateUpdateScheduled,\n} from './SchedulingProfiler';\n\nconst fakeInternalInstance = {};\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nexport const emptyRefsObject = new React.Component().refs;\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = callerName + '_' + (callback: any);\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentNameFromType(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      invariant(\n        false,\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n  let partialState = getDerivedStateFromProps(nextProps, prevState);\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        // Invoke the function an extra time to help detect side-effects.\n        partialState = getDerivedStateFromProps(nextProps, prevState);\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : Object.assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update, lane);\n    const root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update, lane);\n    const root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update, lane);\n    const root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logForceUpdateScheduled(name, lane);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markForceUpdateScheduled(fiber, lane);\n    }\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    let shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          // Invoke the function an extra time to help detect side-effects.\n          shouldUpdate = instance.shouldComponentUpdate(\n            newProps,\n            newState,\n            nextContext,\n          );\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n      if (shouldUpdate === undefined) {\n        console.error(\n          '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n            'boolean value. Make sure to return true or false.',\n          getComponentNameFromType(ctor) || 'Component',\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentNameFromType(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentNameFromType(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentNameFromType(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      const isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentNameFromType(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  let instance = new ctor(props, context);\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        instance = new ctor(props, context); // eslint-disable-line no-new\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n  }\n\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentNameFromType(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://reactjs.org/link/unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentNameFromFiber(workInProgress) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentNameFromFiber(workInProgress) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        console.error(\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  initializeUpdateQueue(workInProgress);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    let fiberFlags: Flags = Update;\n    if (enableSuspenseLayoutEffectSemantics) {\n      fiberFlags |= LayoutStatic;\n    }\n    if (\n      __DEV__ &&\n      enableStrictEffects &&\n      (workInProgress.mode & StrictEffectsMode) !== NoMode\n    ) {\n      fiberFlags |= MountLayoutDev;\n    }\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  cloneUpdateQueue(current, workInProgress);\n\n  const unresolvedOldProps = workInProgress.memoizedProps;\n  const oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  const unresolvedNewProps = workInProgress.pendingProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing() &&\n    !(\n      enableLazyContextPropagation &&\n      current !== null &&\n      current.dependencies !== null &&\n      checkIfContextChanged(current.dependencies)\n    )\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    ) ||\n    // TODO: In some cases, we'll end up checking if context has changed twice,\n    // both before and after `shouldComponentUpdate` has been called. Not ideal,\n    // but I'm loath to refactor this function. This only happens for memoized\n    // components so it's not that common.\n    (enableLazyContextPropagation &&\n      current !== null &&\n      current.dependencies !== null &&\n      checkIfContextChanged(current.dependencies));\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {Placement, ChildDeletion} from './ReactFiberFlags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\nimport {ClassComponent, HostText, HostPortal, Fragment} from './ReactWorkTags';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\nimport {\n  warnAboutStringRefs,\n  enableLazyElements,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  createWorkInProgress,\n  resetWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber.old';\nimport {emptyRefsObject} from './ReactFiberClassComponent.old';\nimport {isCompatibleFamilyForHotReloading} from './ReactFiberHotReloading.old';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefs;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed, returnFiber: Fiber) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed, returnFiber: Fiber) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n    invariant(\n      typeof child._store === 'object',\n      'React Component in warnForMissingKey should have a _store. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n    child._store.validated = true;\n\n    const componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n    ownerHasKeyUseWarning[componentName] = true;\n\n    console.error(\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  const mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) &&\n        // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        const componentName =\n          getComponentNameFromFiber(returnFiber) || 'Component';\n        if (!didWarnAboutStringRefs[componentName]) {\n          if (warnAboutStringRefs) {\n            console.error(\n              'Component \"%s\" contains the string ref \"%s\". Support for string refs ' +\n                'will be removed in a future major release. We recommend using ' +\n                'useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              componentName,\n              mixedRef,\n            );\n          } else {\n            console.error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                'String refs are a source of potential bugs and should be avoided. ' +\n                'We recommend using useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              mixedRef,\n            );\n          }\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n        invariant(\n          ownerFiber.tag === ClassComponent,\n          'Function components cannot have string refs. ' +\n            'We recommend using useRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n        );\n        inst = ownerFiber.stateNode;\n      }\n      invariant(\n        inst,\n        'Missing owner for string ref %s. This error is likely caused by a ' +\n          'bug in React. Please file an issue.',\n        mixedRef,\n      );\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function(value) {\n        let refs = inst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      invariant(\n        typeof mixedRef === 'string',\n        'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n      );\n      invariant(\n        element._owner,\n        'Element ref was specified as a string (%s) but no owner was set. This could happen for one of' +\n          ' the following reasons:\\n' +\n          '1. You may be adding a ref to a function component\\n' +\n          \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n          '3. You have multiple copies of React loaded\\n' +\n          'See https://reactjs.org/link/refs-must-have-owner for more information.',\n        mixedRef,\n      );\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  const childString = Object.prototype.toString.call(newChild);\n  invariant(\n    false,\n    'Objects are not valid as a React child (found: %s). ' +\n      'If you meant to render a collection of children, use an array ' +\n      'instead.',\n    childString === '[object Object]'\n      ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n      : childString,\n  );\n}\n\nfunction warnOnFunctionType(returnFiber: Fiber) {\n  if (__DEV__) {\n    const componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    console.error(\n      'Functions are not valid as a React child. This may happen if ' +\n        'you return a Component instead of <Component /> from render. ' +\n        'Or maybe you meant to call this function rather than return it.',\n    );\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  const payload = lazyType._payload;\n  const init = lazyType._init;\n  return init(payload);\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    const deletions = returnFiber.deletions;\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber: Fiber, pendingProps: mixed): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key,\n      );\n    }\n    if (current !== null) {\n      if (\n        current.elementType === elementType ||\n        // Keep this check inline so it only runs on the false path:\n        (__DEV__\n          ? isCompatibleFamilyForHotReloading(current, element)\n          : false) ||\n        // Lazy types should reconcile their resolved type.\n        // We need to do this after the Hot Reloading check above,\n        // because hot reloading has different semantics than prod because\n        // it doesn't resuspend. So we can't let the call below suspend.\n        (enableLazyElements &&\n          typeof elementType === 'object' &&\n          elementType !== null &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type)\n      ) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      }\n    }\n    // Insert\n    const created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    lanes: Lanes,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        lanes,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return createChild(returnFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updateElement(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateFromMap(\n              existingChildren,\n              returnFiber,\n              newIdx,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, matchedFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n    returnFiber: Fiber,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          console.error(\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = child._payload;\n            const init = (child._init: any);\n            warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n            break;\n          }\n        // We intentionally fallthrough here if enableLazyElements is not on.\n        // eslint-disable-next-lined no-fallthrough\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildren: Array<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n    invariant(\n      typeof iteratorFn === 'function',\n      'An object is not an iterable. This error is likely caused by a bug in ' +\n        'React. Please file an issue.',\n    );\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        if (!didWarnAboutGenerators) {\n          console.error(\n            'Using Generators as children is unsupported and will likely yield ' +\n              'unexpected results because enumerating a generator mutates it. ' +\n              'You may convert it to an array with `Array.from()` or the ' +\n              '`[...spread]` operator before rendering. Keep in mind ' +\n              'you might need to polyfill these features for older browsers.',\n          );\n        }\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          console.error(\n            'Using Maps as children is not supported. ' +\n              'Use an array of keyed ReactElements instead.',\n          );\n        }\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n    invariant(newChildren != null, 'An iterable object provided no iterator.');\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ): Fiber {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        const elementType = element.type;\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            const existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n            if (__DEV__) {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        } else {\n          if (\n            child.elementType === elementType ||\n            // Keep this check inline so it only runs on the false path:\n            (__DEV__\n              ? isCompatibleFamilyForHotReloading(child, element)\n              : false) ||\n            // Lazy types should reconcile their resolved type.\n            // We need to do this after the Hot Reloading check above,\n            // because hot reloading has different semantics than prod because\n            // it doesn't resuspend. So we can't let the call below suspend.\n            (enableLazyElements &&\n              typeof elementType === 'object' &&\n              elementType !== null &&\n              elementType.$$typeof === REACT_LAZY_TYPE &&\n              resolveLazy(elementType) === child.type)\n          ) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            const existing = useFiber(child, element.props);\n            existing.ref = coerceRef(returnFiber, child, element);\n            existing.return = returnFiber;\n            if (__DEV__) {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        }\n        // Didn't match.\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(element, returnFiber.mode, lanes);\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            // TODO: This function is supposed to be non-recursive.\n            return reconcileChildFibers(\n              returnFiber,\n              currentFirstChild,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes,\n        );\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes,\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          '' + newChild,\n          lanes,\n        ),\n      );\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nexport const reconcileChildFibers = ChildReconciler(true);\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  invariant(\n    current === null || workInProgress.child === current.child,\n    'Resuming work not yet implemented.',\n  );\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\n// Reset a workInProgress child set to prepare it for a second pass.\nexport function resetChildFibers(workInProgress: Fiber, lanes: Lanes): void {\n  let child = workInProgress.child;\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nconst contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst rootInstanceStackCursor: StackCursor<\n  Container | NoContextT,\n> = createCursor(NO_CONTEXT);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  invariant(\n    c !== NO_CONTEXT,\n    'Expected host context to exist. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nexport opaque type SuspenseContext = number;\nexport opaque type SubtreeSuspenseContext: SuspenseContext = number;\nexport opaque type ShallowSuspenseContext: SuspenseContext = number;\n\nconst DefaultSuspenseContext: SuspenseContext = 0b00;\n\n// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nconst SubtreeSuspenseContextMask: SuspenseContext = 0b01;\n\n// Subtree Flags:\n\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nexport const InvisibleParentSuspenseContext: SubtreeSuspenseContext = 0b01;\n\n// Shallow Flags:\n\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nexport const ForceSuspenseFallback: ShallowSuspenseContext = 0b10;\n\nexport const suspenseStackCursor: StackCursor<SuspenseContext> = createCursor(\n  DefaultSuspenseContext,\n);\n\nexport function hasSuspenseContext(\n  parentContext: SuspenseContext,\n  flag: SuspenseContext,\n): boolean {\n  return (parentContext & flag) !== 0;\n}\n\nexport function setDefaultShallowSuspenseContext(\n  parentContext: SuspenseContext,\n): SuspenseContext {\n  return parentContext & SubtreeSuspenseContextMask;\n}\n\nexport function setShallowSuspenseContext(\n  parentContext: SuspenseContext,\n  shallowContext: ShallowSuspenseContext,\n): SuspenseContext {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\n\nexport function addSubtreeSuspenseContext(\n  parentContext: SuspenseContext,\n  subtreeContext: SubtreeSuspenseContext,\n): SuspenseContext {\n  return parentContext | subtreeContext;\n}\n\nexport function pushSuspenseContext(\n  fiber: Fiber,\n  newContext: SuspenseContext,\n): void {\n  push(suspenseStackCursor, newContext, fiber);\n}\n\nexport function popSuspenseContext(fiber: Fiber): void {\n  pop(suspenseStackCursor, fiber);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {Lane} from './ReactFiberLane.old';\nimport {SuspenseComponent, SuspenseListComponent} from './ReactWorkTags';\nimport {NoFlags, DidCapture} from './ReactFiberFlags';\nimport {\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n} from './ReactFiberHostConfig';\n\nexport type SuspenseProps = {|\n  children?: ReactNodeList,\n  fallback?: ReactNodeList,\n\n  // TODO: Add \"unstable_\" prefix?\n  suspenseCallback?: (Set<Wakeable> | null) => mixed,\n\n  unstable_expectedLoadTime?: number,\n|};\n\n// A null SuspenseState represents an unsuspended normal Suspense boundary.\n// A non-null SuspenseState means that it is blocked for one reason or another.\n// - A non-null dehydrated field means it's blocked pending hydration.\n//   - A non-null dehydrated field can use isSuspenseInstancePending or\n//     isSuspenseInstanceFallback to query the reason for being dehydrated.\n// - A null dehydrated field means it's blocked by something suspending and\n//   we're currently showing a fallback instead.\nexport type SuspenseState = {|\n  // If this boundary is still dehydrated, we store the SuspenseInstance\n  // here to indicate that it is dehydrated (flag) and for quick access\n  // to check things like isSuspenseInstancePending.\n  dehydrated: null | SuspenseInstance,\n  // Represents the lane we should attempt to hydrate a dehydrated boundary at.\n  // OffscreenLane is the default for dehydrated boundaries.\n  // NoLane is the default for normal boundaries, which turns into \"normal\" pri.\n  retryLane: Lane,\n|};\n\nexport type SuspenseListTailMode = 'collapsed' | 'hidden' | void;\n\nexport type SuspenseListRenderState = {|\n  isBackwards: boolean,\n  // The currently rendering tail row.\n  rendering: null | Fiber,\n  // The absolute time when we started rendering the most recent tail row.\n  renderingStartTime: number,\n  // The last of the already rendered children.\n  last: null | Fiber,\n  // Remaining rows on the tail of the list.\n  tail: null | Fiber,\n  // Tail insertions setting.\n  tailMode: SuspenseListTailMode,\n|};\n\nexport function shouldCaptureSuspense(\n  workInProgress: Fiber,\n  hasInvisibleParent: boolean,\n): boolean {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n    return false;\n  }\n  const props = workInProgress.memoizedProps;\n  // Regular boundaries always capture.\n  if (props.unstable_avoidThisFallback !== true) {\n    return true;\n  }\n  // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n  if (hasInvisibleParent) {\n    return false;\n  }\n  // If the parent is not able to handle it, we must handle it.\n  return true;\n}\n\nexport function findFirstSuspended(row: Fiber): null | Fiber {\n  let node = row;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        const dehydrated: null | SuspenseInstance = state.dehydrated;\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending(dehydrated) ||\n          isSuspenseInstanceFallback(dehydrated)\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent &&\n      // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      const didSuspend = (node.flags & DidCapture) !== NoFlags;\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) {\n      return null;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookFlags = number;\n\nexport const NoFlags = /*  */ 0b000;\n\n// Represents whether effect should fire.\nexport const HasEffect = /* */ 0b001;\n\n// Represents the phase in which the effect (not the clean-up) fires.\nexport const Layout = /*    */ 0b010;\nexport const Passive = /*   */ 0b100;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {ChildDeletion, Placement, Hydrating} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createFiberFromHostInstanceForDeletion,\n  createFiberFromDehydratedFragment,\n} from './ReactFiber.old';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  hydrateInstance,\n  hydrateTextInstance,\n  hydrateSuspenseInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  shouldDeleteUnhydratedTailInstances,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateContainerInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableContainerInstance,\n  didNotFindHydratableContainerTextInstance,\n  didNotFindHydratableContainerSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\nimport {OffscreenLane} from './ReactFiberLane.old';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\nfunction warnIfHydrating() {\n  if (__DEV__) {\n    if (isHydrating) {\n      console.error(\n        'We should not be hydrating here. This is a bug in React. Please file a bug.',\n      );\n    }\n  }\n}\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n  suspenseInstance: SuspenseInstance,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\n  popToNextHostParent(fiber);\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        didNotHydrateContainerInstance(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      case HostComponent:\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n        );\n        break;\n    }\n  }\n\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n\n  const deletions = returnFiber.deletions;\n  if (deletions === null) {\n    returnFiber.deletions = [childToDelete];\n    returnFiber.flags |= ChildDeletion;\n  } else {\n    deletions.push(childToDelete);\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.flags = (fiber.flags & ~Hydrating) | Placement;\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableContainerInstance(parentContainer, type, props);\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableContainerTextInstance(parentContainer, text);\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableContainerSuspenseInstance(parentContainer);\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        const suspenseInstance: null | SuspenseInstance = canHydrateSuspenseInstance(\n          nextInstance,\n        );\n        if (suspenseInstance !== null) {\n          const suspenseState: SuspenseState = {\n            dehydrated: suspenseInstance,\n            retryLane: OffscreenLane,\n          };\n          fiber.memoizedState = suspenseState;\n          // Store the dehydrated fragment as a child fiber.\n          // This simplifies the code for getHostSibling and deleting nodes,\n          // since it doesn't have to consider all Suspense boundaries and\n          // check if they're dehydrated ones or not.\n          const dehydratedFragment = createFiberFromDehydratedFragment(\n            suspenseInstance,\n          );\n          dehydratedFragment.return = fiber;\n          fiber.child = dehydratedFragment;\n          return true;\n        }\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(\n      (hydrationParentFiber: any),\n      firstAttemptedInstance,\n    );\n  }\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild((nextInstance: any));\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n  if (__DEV__) {\n    if (shouldUpdate) {\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\n      // hydration parent is the parent host component of this host text.\n      const returnFiber = hydrationParentFiber;\n      if (returnFiber !== null) {\n        switch (returnFiber.tag) {\n          case HostRoot: {\n            const parentContainer = returnFiber.stateNode.containerInfo;\n            didNotMatchHydratedContainerTextInstance(\n              parentContainer,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n          case HostComponent: {\n            const parentType = returnFiber.type;\n            const parentProps = returnFiber.memoizedProps;\n            const parentInstance = returnFiber.stateNode;\n            didNotMatchHydratedTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(\n  fiber: Fiber,\n): null | HydratableInstance {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== SuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them. We also don't delete anything inside the root container.\n  if (\n    fiber.tag !== HostRoot &&\n    (fiber.tag !== HostComponent ||\n      (shouldDeleteUnhydratedTailInstances(fiber.type) &&\n        !shouldSetTextContent(fiber.type, fiber.memoizedProps)))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratableSibling(fiber.stateNode)\n      : null;\n  }\n  return true;\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nfunction getIsHydrating(): boolean {\n  return isHydrating;\n}\n\nexport {\n  warnIfHydrating,\n  enterHydrationState,\n  getIsHydrating,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceVersion} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\n\n// Work in progress version numbers only apply to a single render,\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nconst workInProgressSources: Array<MutableSource<any>> = [];\n\nlet rendererSigil;\nif (__DEV__) {\n  // Used to detect multiple renderers using the same mutable source.\n  rendererSigil = {};\n}\n\nexport function markSourceAsDirty(mutableSource: MutableSource<any>): void {\n  workInProgressSources.push(mutableSource);\n}\n\nexport function resetWorkInProgressVersions(): void {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n    if (isPrimaryRenderer) {\n      mutableSource._workInProgressVersionPrimary = null;\n    } else {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n  workInProgressSources.length = 0;\n}\n\nexport function getWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n): null | MutableSourceVersion {\n  if (isPrimaryRenderer) {\n    return mutableSource._workInProgressVersionPrimary;\n  } else {\n    return mutableSource._workInProgressVersionSecondary;\n  }\n}\n\nexport function setWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n  version: MutableSourceVersion,\n): void {\n  if (isPrimaryRenderer) {\n    mutableSource._workInProgressVersionPrimary = version;\n  } else {\n    mutableSource._workInProgressVersionSecondary = version;\n  }\n  workInProgressSources.push(mutableSource);\n}\n\nexport function warnAboutMultipleRenderersDEV(\n  mutableSource: MutableSource<any>,\n): void {\n  if (__DEV__) {\n    if (isPrimaryRenderer) {\n      if (mutableSource._currentPrimaryRenderer == null) {\n        mutableSource._currentPrimaryRenderer = rendererSigil;\n      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    } else {\n      if (mutableSource._currentSecondaryRenderer == null) {\n        mutableSource._currentSecondaryRenderer = rendererSigil;\n      } else if (mutableSource._currentSecondaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    }\n  }\n}\n\n// Eager reads the version of a mutable source and stores it on the root.\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nexport function registerMutableSourceForHydration(\n  root: FiberRoot,\n  mutableSource: MutableSource<any>,\n): void {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source);\n\n  // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {enableCache} from 'shared/ReactFeatureFlags';\nimport {REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {pushProvider, popProvider} from './ReactFiberNewContext.old';\n\nexport type Cache = Map<() => mixed, mixed>;\n\nexport type CacheComponentState = {|\n  +parent: Cache,\n  +cache: Cache,\n|};\n\nexport type SpawnedCachePool = {|\n  +parent: Cache,\n  +pool: Cache,\n|};\n\nexport const CacheContext: ReactContext<Cache> = enableCache\n  ? {\n      $$typeof: REACT_CONTEXT_TYPE,\n      // We don't use Consumer/Provider for Cache components. So we'll cheat.\n      Consumer: (null: any),\n      Provider: (null: any),\n      // We'll initialize these at the root.\n      _currentValue: (null: any),\n      _currentValue2: (null: any),\n      _threadCount: 0,\n    }\n  : (null: any);\n\nif (__DEV__ && enableCache) {\n  CacheContext._currentRenderer = null;\n  CacheContext._currentRenderer2 = null;\n}\n\n// The cache that newly mounted Cache boundaries should use. It's either\n// retrieved from the cache pool, or the result of a refresh.\nlet pooledCache: Cache | null = null;\n\n// When retrying a Suspense/Offscreen boundary, we override pooledCache with the\n// cache from the render that suspended.\nconst prevFreshCacheOnStack: StackCursor<Cache | null> = createCursor(null);\n\nexport function pushCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  pushProvider(workInProgress, CacheContext, cache);\n}\n\nexport function popCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  popProvider(CacheContext, workInProgress);\n}\n\nexport function requestCacheFromPool(renderLanes: Lanes): Cache {\n  if (!enableCache) {\n    return (null: any);\n  }\n  if (pooledCache !== null) {\n    return pooledCache;\n  }\n  // Create a fresh cache.\n  pooledCache = new Map();\n  return pooledCache;\n}\n\nexport function pushRootCachePool(root: FiberRoot) {\n  if (!enableCache) {\n    return;\n  }\n  // When we start rendering a tree, read the pooled cache for this render\n  // from `root.pooledCache`. If it's currently `null`, we will lazily\n  // initialize it the first type it's requested. However, we only mutate\n  // the root itself during the complete/unwind phase of the HostRoot.\n  pooledCache = root.pooledCache;\n}\n\nexport function popRootCachePool(root: FiberRoot, renderLanes: Lanes) {\n  if (!enableCache) {\n    return;\n  }\n  // The `pooledCache` variable points to the cache that was used for new\n  // cache boundaries during this render, if any. Stash it on the root so that\n  // parallel transitions may share the same cache. We will clear this field\n  // once all the transitions that depend on it (which we track with\n  // `pooledCacheLanes`) have committed.\n  root.pooledCache = pooledCache;\n  if (pooledCache !== null) {\n    root.pooledCacheLanes |= renderLanes;\n  }\n}\n\nexport function restoreSpawnedCachePool(\n  offscreenWorkInProgress: Fiber,\n  prevCachePool: SpawnedCachePool,\n): SpawnedCachePool | null {\n  if (!enableCache) {\n    return (null: any);\n  }\n  const nextParentCache = isPrimaryRenderer\n    ? CacheContext._currentValue\n    : CacheContext._currentValue2;\n  if (nextParentCache !== prevCachePool.parent) {\n    // There was a refresh. Don't bother restoring anything since the refresh\n    // will override it.\n    return null;\n  } else {\n    // No refresh. Resume with the previous cache. This will override the cache\n    // pool so that any new Cache boundaries in the subtree use this one instead\n    // of requesting a fresh one.\n    push(prevFreshCacheOnStack, pooledCache, offscreenWorkInProgress);\n    pooledCache = prevCachePool.pool;\n\n    // Return the cache pool to signal that we did in fact push it. We will\n    // assign this to the field on the fiber so we know to pop the context.\n    return prevCachePool;\n  }\n}\n\n// Note: Ideally, `popCachePool` would return this value, and then we would pass\n// it to `getSuspendedCachePool`. But factoring reasons, those two functions are\n// in different phases/files. They are always called in sequence, though, so we\n// can stash the value here temporarily.\nlet _suspendedPooledCache: Cache | null = null;\n\nexport function popCachePool(workInProgress: Fiber) {\n  if (!enableCache) {\n    return;\n  }\n  _suspendedPooledCache = pooledCache;\n  pooledCache = prevFreshCacheOnStack.current;\n  pop(prevFreshCacheOnStack, workInProgress);\n}\n\nexport function getSuspendedCachePool(): SpawnedCachePool | null {\n  if (!enableCache) {\n    return null;\n  }\n\n  // We check the cache on the stack first, since that's the one any new Caches\n  // would have accessed.\n  let pool = pooledCache;\n  if (pool === null) {\n    // There's no pooled cache above us in the stack. However, a child in the\n    // suspended tree may have requested a fresh cache pool. If so, we would\n    // have unwound it with `popCachePool`.\n    if (_suspendedPooledCache !== null) {\n      pool = _suspendedPooledCache;\n      _suspendedPooledCache = null;\n    } else {\n      // There's no suspended cache pool.\n      return null;\n    }\n  }\n\n  return {\n    // We must also save the parent, so that when we resume we can detect\n    // a refresh.\n    parent: isPrimaryRenderer\n      ? CacheContext._currentValue\n      : CacheContext._currentValue2,\n    pool,\n  };\n}\n\nexport function getOffscreenDeferredCachePool(): SpawnedCachePool | null {\n  if (!enableCache) {\n    return null;\n  }\n\n  if (pooledCache === null) {\n    // There's no deferred cache pool.\n    return null;\n  }\n\n  return {\n    // We must also store the parent, so that when we resume we can detect\n    // a refresh.\n    parent: isPrimaryRenderer\n      ? CacheContext._currentValue\n      : CacheContext._currentValue2,\n    pool: pooledCache,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n} from 'shared/ReactTypes';\nimport type {Fiber, Dispatcher, HookType} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {OpaqueIDType} from './ReactFiberHostConfig';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableNewReconciler,\n  enableCache,\n  enableUseRefAccessWarning,\n  enableStrictEffects,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  StrictEffectsMode,\n} from './ReactTypeOfMode';\nimport {\n  NoLane,\n  SyncLane,\n  NoLanes,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  intersectLanes,\n  isTransitionLane,\n  markRootEntangled,\n  markRootMutableRead,\n  NoTimestamp,\n} from './ReactFiberLane.old';\nimport {\n  ContinuousEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n  higherEventPriority,\n} from './ReactEventPriorities.old';\nimport {readContext, checkIfContextChanged} from './ReactFiberNewContext.old';\nimport {HostRoot, CacheComponent} from './ReactWorkTags';\nimport {\n  LayoutStatic as LayoutStaticEffect,\n  MountLayoutDev as MountLayoutDevEffect,\n  MountPassiveDev as MountPassiveDevEffect,\n  Passive as PassiveEffect,\n  PassiveStatic as PassiveStaticEffect,\n  StaticMask as StaticMaskEffect,\n  Update as UpdateEffect,\n} from './ReactFiberFlags';\nimport {\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {\n  getWorkInProgressRoot,\n  scheduleUpdateOnFiber,\n  requestUpdateLane,\n  requestEventTime,\n  warnIfNotCurrentlyActingEffectsInDEV,\n  warnIfNotCurrentlyActingUpdatesInDev,\n  markSkippedUpdateLanes,\n  isInterleavedUpdate,\n} from './ReactFiberWorkLoop.old';\n\nimport invariant from 'shared/invariant';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport is from 'shared/objectIs';\nimport isArray from 'shared/isArray';\nimport {\n  markWorkInProgressReceivedUpdate,\n  checkIfWorkInProgressReceivedUpdate,\n} from './ReactFiberBeginWork.old';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {\n  makeClientId,\n  makeClientIdInDEV,\n  makeOpaqueHydratingObject,\n} from './ReactFiberHostConfig';\nimport {\n  getWorkInProgressVersion,\n  markSourceAsDirty,\n  setWorkInProgressVersion,\n  warnAboutMultipleRenderersDEV,\n} from './ReactMutableSource.old';\nimport {getIsRendering} from './ReactCurrentFiber';\nimport {logStateUpdateScheduled} from './DebugTracing';\nimport {markStateUpdateScheduled} from './SchedulingProfiler';\nimport {CacheContext} from './ReactFiberCacheComponent.old';\nimport {\n  createUpdate,\n  enqueueUpdate,\n  entangleTransitions,\n} from './ReactUpdateQueue.old';\nimport {pushInterleavedQueue} from './ReactFiberInterleavedUpdates.old';\nimport {getIsStrictModeForDevtools} from './ReactFiberReconciler.old';\nimport {warnOnSubscriptionInsideStartTransition} from 'shared/ReactFeatureFlags';\n\nconst {ReactCurrentDispatcher, ReactCurrentBatchConfig} = ReactSharedInternals;\n\ntype Update<S, A> = {|\n  lane: Lane,\n  action: A,\n  eagerReducer: ((S, A) => S) | null,\n  eagerState: S | null,\n  next: Update<S, A>,\n|};\n\nexport type UpdateQueue<S, A> = {|\n  pending: Update<S, A> | null,\n  interleaved: Update<S, A> | null,\n  lanes: Lanes,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n|};\n\nlet didWarnAboutMismatchedHooksForComponent;\nlet didWarnAboutUseOpaqueIdentifier;\nlet didWarnUncachedGetSnapshot;\nif (__DEV__) {\n  didWarnAboutUseOpaqueIdentifier = {};\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {|\n  memoizedState: any,\n  baseState: any,\n  baseQueue: Update<any, any> | null,\n  queue: any,\n  next: Hook | null,\n|};\n\nexport type Effect = {|\n  tag: HookFlags,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n|};\n\ntype StoreInstance<T> = {|\n  value: T,\n  getSnapshot: () => T,\n|};\n\nexport type FunctionComponentUpdateQueue = {|lastEffect: Effect | null|};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderLanes: Lanes = NoLanes;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber = (null: any);\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n\n// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\nlet didScheduleRenderPhaseUpdateDuringThisPass: boolean = false;\n\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\n// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nlet ignorePreviousDependencies: boolean = false;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps: mixed) {\n  if (__DEV__) {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      console.error(\n        '%s received a final argument that is not an array (instead, received `%s`). When ' +\n          'specified, the final argument must be an array.',\n        currentHookNameInDev,\n        typeof deps,\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentNameFromFiber(currentlyRenderingFiber);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        console.error(\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  invariant(\n    false,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (__DEV__) {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${prevDeps.join(', ')}]`,\n        `[${nextDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks<Props, SecondArg>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n  nextRenderLanes: Lanes,\n): any {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n    // Used for hot reloading:\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes;\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n  if (__DEV__) {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders: number = 0;\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      invariant(\n        numberOfReRenders < RE_RENDER_LIMIT,\n        'Too many re-renders. React limits the number of renders to prevent ' +\n          'an infinite loop.',\n      );\n\n      numberOfReRenders += 1;\n      if (__DEV__) {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      }\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n\n      workInProgress.updateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnRerenderInDEV\n        : HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (__DEV__) {\n    workInProgress._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n    if (\n      current !== null &&\n      (current.flags & StaticMaskEffect) !==\n        (workInProgress.flags & StaticMaskEffect) &&\n      // Disable this warning in legacy mode, because legacy Suspense is weird\n      // and creates false positives. To make this work in legacy mode, we'd\n      // need to mark fibers that commit in an incomplete state, somehow. For\n      // now I'll disable the warning that most of the bugs that would trigger\n      // it are either exclusive to concurrent mode or exist in both.\n      (current.mode & ConcurrentMode) !== NoMode\n    ) {\n      console.error(\n        'Internal React error: Expected static flag was missing. Please ' +\n          'notify the React team.',\n      );\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n\n  invariant(\n    !didRenderTooFewHooks,\n    'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n      'early return statement.',\n  );\n\n  if (enableLazyContextPropagation) {\n    if (current !== null) {\n      if (!checkIfWorkInProgressReceivedUpdate()) {\n        // If there were no changes to props or state, we need to check if there\n        // was a context change. We didn't already do this because there's no\n        // 1:1 correspondence between dependencies and hooks. Although, because\n        // there almost always is in the common case (`readContext` is an\n        // internal API), we could compare in there. OTOH, we only hit this case\n        // if everything else bails out, so on the whole it might be better to\n        // keep the comparison out of the common path.\n        const currentDependencies = current.dependencies;\n        if (\n          currentDependencies !== null &&\n          checkIfContextChanged(currentDependencies)\n        ) {\n          markWorkInProgressReceivedUpdate();\n        }\n      }\n    }\n  }\n\n  return children;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  lanes: Lanes,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (workInProgress.mode & StrictEffectsMode) !== NoMode\n  ) {\n    workInProgress.flags &= ~(\n      MountPassiveDevEffect |\n      MountLayoutDevEffect |\n      PassiveEffect |\n      UpdateEffect\n    );\n  } else {\n    workInProgress.flags &= ~(PassiveEffect | UpdateEffect);\n  }\n  current.lanes = removeLanes(current.lanes, lanes);\n}\n\nexport function resetHooksAfterThrow(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook: Hook | null = currentlyRenderingFiber.memoizedState;\n    while (hook !== null) {\n      const queue = hook.queue;\n      if (queue !== null) {\n        queue.pending = null;\n      }\n      hook = hook.next;\n    }\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook: null | Hook;\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber.alternate;\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook: null | Hook;\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n\n    invariant(\n      nextCurrentHook !== null,\n      'Rendered more hooks than during the previous render.',\n    );\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue: UpdateQueue<S, A> = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  };\n  hook.queue = queue;\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  const pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    if (__DEV__) {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        console.error(\n          'Internal error: Expected work-in-progress queue to be a clone. ' +\n            'This is a bug in React.',\n        );\n      }\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    do {\n      const updateLane = update.lane;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<S, A> = {\n          lane: updateLane,\n          action: update.action,\n          eagerReducer: update.eagerReducer,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n        currentlyRenderingFiber.lanes = mergeLanes(\n          currentlyRenderingFiber.lanes,\n          updateLane,\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            eagerReducer: update.eagerReducer,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Process this update.\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n  const lastInterleaved = queue.interleaved;\n  if (lastInterleaved !== null) {\n    let interleaved = lastInterleaved;\n    do {\n      const interleavedLane = interleaved.lane;\n      currentlyRenderingFiber.lanes = mergeLanes(\n        currentlyRenderingFiber.lanes,\n        interleavedLane,\n      );\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = ((interleaved: any).next: Update<S, A>);\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate);\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\n\ntype MutableSourceMemoizedState<Source, Snapshot> = {|\n  refs: {\n    getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n    setSnapshot: Snapshot => void,\n  },\n  source: MutableSource<any>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n|};\n\nfunction readFromUnsubscribedMutableSource<Source, Snapshot>(\n  root: FiberRoot,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n): Snapshot {\n  if (__DEV__) {\n    warnAboutMultipleRenderersDEV(source);\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  // Is it safe for this component to read from this source during the current render?\n  let isSafeToReadFromSource = false;\n\n  // Check the version first.\n  // If this render has already been started with a specific version,\n  // we can use it alone to determine if we can safely read from the source.\n  const currentRenderVersion = getWorkInProgressVersion(source);\n  if (currentRenderVersion !== null) {\n    // It's safe to read if the store hasn't been mutated since the last time\n    // we read something.\n    isSafeToReadFromSource = currentRenderVersion === version;\n  } else {\n    // If there's no version, then this is the first time we've read from the\n    // source during the current render pass, so we need to do a bit more work.\n    // What we need to determine is if there are any hooks that already\n    // subscribed to the source, and if so, whether there are any pending\n    // mutations that haven't been synchronized yet.\n    //\n    // If there are no pending mutations, then `root.mutableReadLanes` will be\n    // empty, and we know we can safely read.\n    //\n    // If there *are* pending mutations, we may still be able to safely read\n    // if the currently rendering lanes are inclusive of the pending mutation\n    // lanes, since that guarantees that the value we're about to read from\n    // the source is consistent with the values that we read during the most\n    // recent mutation.\n    isSafeToReadFromSource = isSubsetOfLanes(\n      renderLanes,\n      root.mutableReadLanes,\n    );\n\n    if (isSafeToReadFromSource) {\n      // If it's safe to read from this source during the current render,\n      // store the version in case other components read from it.\n      // A changed version number will let those components know to throw and restart the render.\n      setWorkInProgressVersion(source, version);\n    }\n  }\n\n  if (isSafeToReadFromSource) {\n    const snapshot = getSnapshot(source._source);\n    if (__DEV__) {\n      if (typeof snapshot === 'function') {\n        console.error(\n          'Mutable source should not return a function as the snapshot value. ' +\n            'Functions may close over mutable values and cause tearing.',\n        );\n      }\n    }\n    return snapshot;\n  } else {\n    // This handles the special case of a mutable source being shared between renderers.\n    // In that case, if the source is mutated between the first and second renderer,\n    // The second renderer don't know that it needs to reset the WIP version during unwind,\n    // (because the hook only marks sources as dirty if it's written to their WIP version).\n    // That would cause this tear check to throw again and eventually be visible to the user.\n    // We can avoid this infinite loop by explicitly marking the source as dirty.\n    //\n    // This can lead to tearing in the first renderer when it resumes,\n    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).\n    markSourceAsDirty(source);\n\n    // Intentioally throw an error to force React to retry synchronously. During\n    // the synchronous retry, it will block interleaved mutations, so we should\n    // get a consistent read. Therefore, the following error should never be\n    // visible to the user.\n    //\n    // If it were to become visible to the user, it suggests one of two things:\n    // a bug in React, or (more likely), a mutation during the render phase that\n    // caused the second re-render attempt to be different from the first.\n    //\n    // We know it's the second case if the logs are currently disabled. So in\n    // dev, we can present a more accurate error message.\n    if (__DEV__) {\n      // eslint-disable-next-line react-internal/no-production-logging\n      if (getIsStrictModeForDevtools()) {\n        // If getIsStrictModeForDevtools is true, this is the dev-only double render\n        // This is only reachable if there was a mutation during render. Show a helpful\n        // error message.\n        //\n        // Something interesting to note: because we only double render in\n        // development, this error will never happen during production. This is\n        // actually true of all errors that occur during a double render,\n        // because if the first render had thrown, we would have exited the\n        // begin phase without double rendering. We should consider suppressing\n        // any error from a double render (with a warning) to more closely match\n        // the production behavior.\n        const componentName = getComponentNameFromFiber(\n          currentlyRenderingFiber,\n        );\n        invariant(\n          false,\n          'A mutable source was mutated while the %s component was rendering. ' +\n            'This is not supported. Move any mutations into event handlers ' +\n            'or effects.',\n          componentName,\n        );\n      }\n    }\n\n    // We expect this error not to be thrown during the synchronous retry,\n    // because we blocked interleaved mutations.\n    invariant(\n      false,\n      'Cannot read from mutable source during the current render without tearing. This may be a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction useMutableSource<Source, Snapshot>(\n  hook: Hook,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n  invariant(\n    root !== null,\n    'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n  );\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // eslint-disable-next-line prefer-const\n  let [currentSnapshot, setSnapshot] = dispatcher.useState(() =>\n    readFromUnsubscribedMutableSource(root, source, getSnapshot),\n  );\n  let snapshot = currentSnapshot;\n\n  // Grab a handle to the state hook as well.\n  // We use it to clear the pending update queue if we have a new source.\n  const stateHook = ((workInProgressHook: any): Hook);\n\n  const memoizedState = ((hook.memoizedState: any): MutableSourceMemoizedState<\n    Source,\n    Snapshot,\n  >);\n  const refs = memoizedState.refs;\n  const prevGetSnapshot = refs.getSnapshot;\n  const prevSource = memoizedState.source;\n  const prevSubscribe = memoizedState.subscribe;\n\n  const fiber = currentlyRenderingFiber;\n\n  hook.memoizedState = ({\n    refs,\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n\n  // Sync the values needed by our subscription handler after each commit.\n  dispatcher.useEffect(() => {\n    refs.getSnapshot = getSnapshot;\n\n    // Normally the dispatch function for a state hook never changes,\n    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.\n    // handleChange() below needs to reference the dispatch function without re-subscribing,\n    // so we use a ref to ensure that it always has the latest version.\n    refs.setSnapshot = setSnapshot;\n\n    // Check for a possible change between when we last rendered now.\n    const maybeNewVersion = getVersion(source._source);\n    if (!is(version, maybeNewVersion)) {\n      const maybeNewSnapshot = getSnapshot(source._source);\n      if (__DEV__) {\n        if (typeof maybeNewSnapshot === 'function') {\n          console.error(\n            'Mutable source should not return a function as the snapshot value. ' +\n              'Functions may close over mutable values and cause tearing.',\n          );\n        }\n      }\n\n      if (!is(snapshot, maybeNewSnapshot)) {\n        setSnapshot(maybeNewSnapshot);\n\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      }\n      // If the source mutated between render and now,\n      // there may be state updates already scheduled from the old source.\n      // Entangle the updates so that they render in the same batch.\n      markRootEntangled(root, root.mutableReadLanes);\n    }\n  }, [getSnapshot, source, subscribe]);\n\n  // If we got a new source or subscribe function, re-subscribe in a passive effect.\n  dispatcher.useEffect(() => {\n    const handleChange = () => {\n      const latestGetSnapshot = refs.getSnapshot;\n      const latestSetSnapshot = refs.setSnapshot;\n\n      try {\n        latestSetSnapshot(latestGetSnapshot(source._source));\n\n        // Record a pending mutable source update with the same expiration time.\n        const lane = requestUpdateLane(fiber);\n\n        markRootMutableRead(root, lane);\n      } catch (error) {\n        // A selector might throw after a source mutation.\n        // e.g. it might try to read from a part of the store that no longer exists.\n        // In this case we should still schedule an update with React.\n        // Worst case the selector will throw again and then an error boundary will handle it.\n        latestSetSnapshot(\n          (() => {\n            throw error;\n          }: any),\n        );\n      }\n    };\n\n    const unsubscribe = subscribe(source._source, handleChange);\n    if (__DEV__) {\n      if (typeof unsubscribe !== 'function') {\n        console.error(\n          'Mutable source subscribe function must return an unsubscribe function.',\n        );\n      }\n    }\n\n    return unsubscribe;\n  }, [source, subscribe]);\n\n  // If any of the inputs to useMutableSource change, reading is potentially unsafe.\n  //\n  // If either the source or the subscription have changed we can't can't trust the update queue.\n  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.\n  //\n  // If the getSnapshot function changed, we also shouldn't rely on the update queue.\n  // It's possible that the underlying source was mutated between the when the last \"change\" event fired,\n  // and when the current render (with the new getSnapshot function) is processed.\n  //\n  // In both cases, we need to throw away pending updates (since they are no longer relevant)\n  // and treat reading from the source as we do in the mount case.\n  if (\n    !is(prevGetSnapshot, getSnapshot) ||\n    !is(prevSource, source) ||\n    !is(prevSubscribe, subscribe)\n  ) {\n    // Create a new queue and setState method,\n    // So if there are interleaved updates, they get pushed to the older queue.\n    // When this becomes current, the previous queue and dispatch method will be discarded,\n    // including any interleaving updates that occur.\n    const newQueue: UpdateQueue<Snapshot, BasicStateAction<Snapshot>> = {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: snapshot,\n    };\n    newQueue.dispatch = setSnapshot = (dispatchAction.bind(\n      null,\n      currentlyRenderingFiber,\n      newQueue,\n    ): any);\n    stateHook.queue = newQueue;\n    stateHook.baseQueue = null;\n    snapshot = readFromUnsubscribedMutableSource(root, source, getSnapshot);\n    stateHook.memoizedState = stateHook.baseState = snapshot;\n  }\n\n  return snapshot;\n}\n\nfunction mountMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = ({\n    refs: {\n      getSnapshot,\n      setSnapshot: (null: any),\n    },\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction updateMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = updateWorkInProgressHook();\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction mountSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n): T {\n  const hook = mountWorkInProgressHook();\n  // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n  const nextSnapshot = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      if (nextSnapshot !== getSnapshot()) {\n        console.error(\n          'The result of getSnapshot should be cached to avoid an infinite loop',\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n  hook.memoizedState = nextSnapshot;\n  const inst: StoreInstance<T> = {\n    value: nextSnapshot,\n    getSnapshot,\n  };\n  hook.queue = inst;\n  return useSyncExternalStore(hook, inst, subscribe, getSnapshot, nextSnapshot);\n}\n\nfunction updateSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n): T {\n  const hook = updateWorkInProgressHook();\n  // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n  const nextSnapshot = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      if (nextSnapshot !== getSnapshot()) {\n        console.error(\n          'The result of getSnapshot should be cached to avoid an infinite loop',\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n  const prevSnapshot = hook.memoizedState;\n  if (!is(prevSnapshot, nextSnapshot)) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n  const inst = hook.queue;\n  return useSyncExternalStore(hook, inst, subscribe, getSnapshot, nextSnapshot);\n}\n\nfunction useSyncExternalStore<T>(\n  hook: Hook,\n  inst: StoreInstance<T>,\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  nextSnapshot: T,\n): T {\n  const fiber = currentlyRenderingFiber;\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  // TODO: Circumvent SSR warning\n  dispatcher.useLayoutEffect(() => {\n    inst.value = nextSnapshot;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    // TODO: Move the tearing checks to an earlier, pre-commit phase so that the\n    // layout effects always observe a consistent tree.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  }, [subscribe, nextSnapshot, getSnapshot]);\n\n  dispatcher.useEffect(() => {\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceStoreRerender(fiber);\n      }\n    };\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    handleStoreChange();\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n\n  return nextSnapshot;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue: UpdateQueue<S, BasicStateAction<S>> = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  };\n  hook.queue = queue;\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction rerenderState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return rerenderReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nlet stackContainsErrorMessage: boolean | null = null;\n\nfunction getCallerStackFrame(): string {\n  const stackFrames = new Error('Error message').stack.split('\\n');\n\n  // Some browsers (e.g. Chrome) include the error message in the stack\n  // but others (e.g. Firefox) do not.\n  if (stackContainsErrorMessage === null) {\n    stackContainsErrorMessage = stackFrames[0].includes('Error message');\n  }\n\n  return stackContainsErrorMessage\n    ? stackFrames.slice(3, 4).join('\\n')\n    : stackFrames.slice(2, 3).join('\\n');\n}\n\nfunction mountRef<T>(initialValue: T): {|current: T|} {\n  const hook = mountWorkInProgressHook();\n  if (enableUseRefAccessWarning) {\n    if (__DEV__) {\n      // Support lazy initialization pattern shown in docs.\n      // We need to store the caller stack frame so that we don't warn on subsequent renders.\n      let hasBeenInitialized = initialValue != null;\n      let lazyInitGetterStack = null;\n      let didCheckForLazyInit = false;\n\n      // Only warn once per component+hook.\n      let didWarnAboutRead = false;\n      let didWarnAboutWrite = false;\n\n      let current = initialValue;\n      const ref = {\n        get current() {\n          if (!hasBeenInitialized) {\n            didCheckForLazyInit = true;\n            lazyInitGetterStack = getCallerStackFrame();\n          } else if (currentlyRenderingFiber !== null && !didWarnAboutRead) {\n            if (\n              lazyInitGetterStack === null ||\n              lazyInitGetterStack !== getCallerStackFrame()\n            ) {\n              didWarnAboutRead = true;\n              console.warn(\n                '%s: Unsafe read of a mutable value during render.\\n\\n' +\n                  'Reading from a ref during render is only safe if:\\n' +\n                  '1. The ref value has not been updated, or\\n' +\n                  '2. The ref holds a lazily-initialized value that is only set once.\\n',\n                getComponentNameFromFiber(currentlyRenderingFiber) || 'Unknown',\n              );\n            }\n          }\n          return current;\n        },\n        set current(value) {\n          if (currentlyRenderingFiber !== null && !didWarnAboutWrite) {\n            if (\n              hasBeenInitialized ||\n              (!hasBeenInitialized && !didCheckForLazyInit)\n            ) {\n              didWarnAboutWrite = true;\n              console.warn(\n                '%s: Unsafe write of a mutable value during render.\\n\\n' +\n                  'Writing to a ref during render is only safe if the ref holds ' +\n                  'a lazily-initialized value that is only set once.\\n',\n                getComponentNameFromFiber(currentlyRenderingFiber) || 'Unknown',\n              );\n            }\n          }\n\n          hasBeenInitialized = true;\n          current = value;\n        },\n      };\n      Object.seal(ref);\n      hook.memoizedState = ref;\n      return ref;\n    } else {\n      const ref = {current: initialValue};\n      hook.memoizedState = ref;\n      return ref;\n    }\n  } else {\n    const ref = {current: initialValue};\n    hook.memoizedState = ref;\n    return ref;\n  }\n}\n\nfunction updateRef<T>(initialValue: T): {|current: T|} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps,\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber.flags |= fiberFlags;\n\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps,\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    return mountEffectImpl(\n      MountPassiveDevEffect | PassiveEffect | PassiveStaticEffect,\n      HookPassive,\n      create,\n      deps,\n    );\n  } else {\n    return mountEffectImpl(\n      PassiveEffect | PassiveStaticEffect,\n      HookPassive,\n      create,\n      deps,\n    );\n  }\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return updateEffectImpl(PassiveEffect, HookPassive, create, deps);\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  let fiberFlags: Flags = UpdateEffect;\n  if (enableSuspenseLayoutEffectSemantics) {\n    fiberFlags |= LayoutStaticEffect;\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    fiberFlags |= MountLayoutDevEffect;\n  }\n  return mountEffectImpl(fiberFlags, HookLayout, create, deps);\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      if (!refObject.hasOwnProperty('current')) {\n        console.error(\n          'Expected useImperativeHandle() first argument to either be a ' +\n            'ref callback or React.createRef() object. Instead received: %s.',\n          'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n        );\n      }\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  let fiberFlags: Flags = UpdateEffect;\n  if (enableSuspenseLayoutEffectSemantics) {\n    fiberFlags |= LayoutStaticEffect;\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    fiberFlags |= MountLayoutDevEffect;\n  }\n  return mountEffectImpl(\n    fiberFlags,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = mountState(value);\n  mountEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction updateDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = updateState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction rerenderDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = rerenderState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction startTransition(setPending, callback) {\n  const previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(\n    higherEventPriority(previousPriority, ContinuousEventPriority),\n  );\n\n  setPending(true);\n\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = 1;\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n    if (__DEV__) {\n      if (\n        prevTransition !== 1 &&\n        warnOnSubscriptionInsideStartTransition &&\n        ReactCurrentBatchConfig._updatedFibers\n      ) {\n        const updatedFibersCount = ReactCurrentBatchConfig._updatedFibers.size;\n        if (updatedFibersCount > 10) {\n          console.warn(\n            'Detected a large number of updates inside startTransition. ' +\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\n              'Otherwise concurrent mode guarantees are off the table.',\n          );\n        }\n        ReactCurrentBatchConfig._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition(): [boolean, (() => void) => void] {\n  const [isPending, setPending] = mountState(false);\n  // The `start` method never changes.\n  const start = startTransition.bind(null, setPending);\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition(): [boolean, (() => void) => void] {\n  const [isPending] = updateState(false);\n  const hook = updateWorkInProgressHook();\n  const start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition(): [boolean, (() => void) => void] {\n  const [isPending] = rerenderState(false);\n  const hook = updateWorkInProgressHook();\n  const start = hook.memoizedState;\n  return [isPending, start];\n}\n\nlet isUpdatingOpaqueValueInRenderPhase = false;\nexport function getIsUpdatingOpaqueValueInRenderPhaseInDEV(): boolean | void {\n  if (__DEV__) {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction warnOnOpaqueIdentifierAccessInDEV(fiber) {\n  if (__DEV__) {\n    // TODO: Should warn in effects and callbacks, too\n    const name = getComponentNameFromFiber(fiber) || 'Unknown';\n    if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {\n      console.error(\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the ' +\n          'value directly.',\n      );\n      didWarnAboutUseOpaqueIdentifier[name] = true;\n    }\n  }\n}\n\nfunction mountOpaqueIdentifier(): OpaqueIDType | void {\n  const makeId = __DEV__\n    ? makeClientIdInDEV.bind(\n        null,\n        warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber),\n      )\n    : makeClientId;\n\n  if (getIsHydrating()) {\n    let didUpgrade = false;\n    const fiber = currentlyRenderingFiber;\n    const readValue = () => {\n      if (!didUpgrade) {\n        // Only upgrade once. This works even inside the render phase because\n        // the update is added to a shared queue, which outlasts the\n        // in-progress render.\n        didUpgrade = true;\n        if (__DEV__) {\n          isUpdatingOpaqueValueInRenderPhase = true;\n          setId(makeId());\n          isUpdatingOpaqueValueInRenderPhase = false;\n          warnOnOpaqueIdentifierAccessInDEV(fiber);\n        } else {\n          setId(makeId());\n        }\n      }\n      invariant(\n        false,\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the value directly.',\n      );\n    };\n    const id = makeOpaqueHydratingObject(readValue);\n\n    const setId = mountState(id)[1];\n\n    if ((currentlyRenderingFiber.mode & ConcurrentMode) === NoMode) {\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (currentlyRenderingFiber.mode & StrictEffectsMode) === NoMode\n      ) {\n        currentlyRenderingFiber.flags |= MountPassiveDevEffect | PassiveEffect;\n      } else {\n        currentlyRenderingFiber.flags |= PassiveEffect;\n      }\n      pushEffect(\n        HookHasEffect | HookPassive,\n        () => {\n          setId(makeId());\n        },\n        undefined,\n        null,\n      );\n    }\n    return id;\n  } else {\n    const id = makeId();\n    mountState(id);\n    return id;\n  }\n}\n\nfunction updateOpaqueIdentifier(): OpaqueIDType | void {\n  const id = updateState(undefined)[0];\n  return id;\n}\n\nfunction rerenderOpaqueIdentifier(): OpaqueIDType | void {\n  const id = rerenderState(undefined)[0];\n  return id;\n}\n\nfunction mountRefresh() {\n  const hook = mountWorkInProgressHook();\n  const refresh = (hook.memoizedState = refreshCache.bind(\n    null,\n    currentlyRenderingFiber,\n  ));\n  return refresh;\n}\n\nfunction updateRefresh() {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction refreshCache<T>(fiber: Fiber, seedKey: ?() => T, seedValue: T) {\n  // TODO: Does Cache work in legacy mode? Should decide and write a test.\n  // TODO: Consider warning if the refresh is at discrete priority, or if we\n  // otherwise suspect that it wasn't batched properly.\n  let provider = fiber.return;\n  while (provider !== null) {\n    switch (provider.tag) {\n      case CacheComponent:\n      case HostRoot: {\n        const lane = requestUpdateLane(provider);\n        const eventTime = requestEventTime();\n        const root = scheduleUpdateOnFiber(provider, lane, eventTime);\n        if (root !== null) {\n          entangleTransitions(root, provider, lane);\n        }\n\n        const seededCache = new Map();\n        if (seedKey !== null && seedKey !== undefined && root !== null) {\n          // Seed the cache with the value passed by the caller. This could be\n          // from a server mutation, or it could be a streaming response.\n          seededCache.set(seedKey, seedValue);\n        }\n\n        // Schedule an update on the cache boundary to trigger a refresh.\n        const refreshUpdate = createUpdate(eventTime, lane);\n        const payload = {\n          cache: seededCache,\n        };\n        refreshUpdate.payload = payload;\n        enqueueUpdate(provider, refreshUpdate, lane);\n        return;\n      }\n    }\n    provider = provider.return;\n  }\n  // TODO: Warn if unmounted?\n}\n\nfunction dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  const alternate = fiber.alternate;\n  if (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  ) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n    const pending = queue.pending;\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n    queue.pending = update;\n  } else {\n    if (isInterleavedUpdate(fiber, lane)) {\n      const interleaved = queue.interleaved;\n      if (interleaved === null) {\n        // This is the first update. Create a circular list.\n        update.next = update;\n        // At the end of the current render, this queue's interleaved updates will\n        // be transferred to the pending queue.\n        pushInterleavedQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n      queue.interleaved = update;\n    } else {\n      const pending = queue.pending;\n      if (pending === null) {\n        // This is the first update. Create a circular list.\n        update.next = update;\n      } else {\n        update.next = pending.next;\n        pending.next = update;\n      }\n      queue.pending = update;\n    }\n\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.eagerReducer = lastRenderedReducer;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n    if (__DEV__) {\n      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n      if ('undefined' !== typeof jest) {\n        warnIfNotCurrentlyActingUpdatesInDev(fiber);\n      }\n    }\n    const root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (isTransitionLane(lane) && root !== null) {\n      let queueLanes = queue.lanes;\n\n      // If any entangled lanes are no longer pending on the root, then they\n      // must have finished. We can remove them from the shared queue, which\n      // represents a superset of the actually pending lanes. In some cases we\n      // may entangle more than we need to, but that's OK. In fact it's worse if\n      // we *don't* entangle when we should.\n      queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n\n      // Entangle the new transition lane with the other transition lanes.\n      const newQueueLanes = mergeLanes(queueLanes, lane);\n      queue.lanes = newQueueLanes;\n      // Even if queue.lanes already include lane, we don't know for certain if\n      // the lane finished since the last time we entangled it. So we need to\n      // entangle it again, just to be sure.\n      markRootEntangled(root, newQueueLanes);\n    }\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      if (fiber.mode & DebugTracingMode) {\n        const name = getComponentNameFromFiber(fiber) || 'Unknown';\n        logStateUpdateScheduled(name, lane, action);\n      }\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markStateUpdateScheduled(fiber, lane);\n  }\n}\n\nfunction getCacheForType<T>(resourceType: () => T): T {\n  if (!enableCache) {\n    invariant(false, 'Not implemented.');\n  }\n  const cache: Cache = readContext(CacheContext);\n  let cacheForType: T | void = (cache.get(resourceType): any);\n  if (cacheForType === undefined) {\n    cacheForType = resourceType();\n    cache.set(resourceType, cacheForType);\n  }\n  return cacheForType;\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useOpaqueIdentifier: throwInvalidHookError,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (ContextOnlyDispatcher: Dispatcher).getCacheForType = getCacheForType;\n  (ContextOnlyDispatcher: Dispatcher).useCacheRefresh = throwInvalidHookError;\n}\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useSyncExternalStore: mountSyncExternalStore,\n  useOpaqueIdentifier: mountOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnMount: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnMount: Dispatcher).useCacheRefresh = mountRefresh;\n}\n\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: updateSyncExternalStore,\n  useOpaqueIdentifier: updateOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnUpdate: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnUpdate: Dispatcher).useCacheRefresh = updateRefresh;\n}\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: mountSyncExternalStore,\n  useOpaqueIdentifier: rerenderOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnRerender: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnRerender: Dispatcher).useCacheRefresh = updateRefresh;\n}\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    console.error(\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    console.error(\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://reactjs.org/link/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnMountInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnMountInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      mountHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\nimport {HostRoot, Profiler} from './ReactWorkTags';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nconst {unstable_now: now} = Scheduler;\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  isCurrentUpdateNested(): boolean,\n  markNestedUpdateScheduled(): void,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n  syncNestedUpdateFlag(): void,\n  ...\n};\n\nlet commitTime: number = 0;\nlet layoutEffectStartTime: number = -1;\nlet profilerStartTime: number = -1;\nlet passiveEffectStartTime: number = -1;\n\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\nlet currentUpdateIsNested: boolean = false;\nlet nestedUpdateScheduled: boolean = false;\n\nfunction isCurrentUpdateNested(): boolean {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (layoutEffectStartTime >= 0) {\n    const elapsedTime = now() - layoutEffectStartTime;\n\n    layoutEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          const root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n        case Profiler:\n          const parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (passiveEffectStartTime >= 0) {\n    const elapsedTime = now() - passiveEffectStartTime;\n\n    passiveEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          const root = parentFiber.stateNode;\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n          return;\n        case Profiler:\n          const parentStateNode = parentFiber.stateNode;\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n          return;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  layoutEffectStartTime = now();\n}\n\nfunction startPassiveEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  passiveEffectStartTime = now();\n}\n\nfunction transferActualDuration(fiber: Fiber): void {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  let child = fiber.child;\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nexport {\n  getCommitTime,\n  isCurrentUpdateNested,\n  markNestedUpdateScheduled,\n  recordCommitTime,\n  recordLayoutEffectDuration,\n  recordPassiveEffectDuration,\n  resetNestedUpdateFlag,\n  startLayoutEffectTimer,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  syncNestedUpdateFlag,\n  transferActualDuration,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\n\nexport type CapturedValue<T> = {|\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n|};\n\nexport function createCapturedValue<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from '../ReactFiber.old';\nimport type {CapturedValue} from '../ReactCapturedValue';\n\nimport {ClassComponent} from '../ReactWorkTags';\n\nimport invariant from 'shared/invariant';\n\n// Provided by www\nconst ReactFiberErrorDialogWWW = require('ReactFiberErrorDialog');\ninvariant(\n  typeof ReactFiberErrorDialogWWW.showErrorDialog === 'function',\n  'Expected ReactFiberErrorDialog.showErrorDialog to be a function.',\n);\n\nexport function showErrorDialog(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): boolean {\n  const capturedError = {\n    componentStack: errorInfo.stack !== null ? errorInfo.stack : '',\n    error: errorInfo.value,\n    errorBoundary:\n      boundary !== null && boundary.tag === ClassComponent\n        ? boundary.stateNode\n        : null,\n  };\n  return ReactFiberErrorDialogWWW.showErrorDialog(capturedError);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\nimport {ClassComponent} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {HostRoot} from 'react-reconciler/src/ReactWorkTags';\n\nexport function logCapturedError(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): void {\n  try {\n    const logError = showErrorDialog(boundary, errorInfo);\n\n    // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n    if (logError === false) {\n      return;\n    }\n\n    const error = (errorInfo.value: any);\n    if (__DEV__) {\n      const source = errorInfo.source;\n      const stack = errorInfo.stack;\n      const componentStack = stack !== null ? stack : '';\n      // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        }\n        // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      const componentName = source ? getComponentNameFromFiber(source) : null;\n      const componentNameMessage = componentName\n        ? `The above error occurred in the <${componentName}> component:`\n        : 'The above error occurred in one of your React components:';\n\n      let errorBoundaryMessage;\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage =\n          'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n          'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      } else {\n        const errorBoundaryName =\n          getComponentNameFromFiber(boundary) || 'Anonymous';\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      }\n      const combinedMessage =\n        `${componentNameMessage}\\n${componentStack}\\n\\n` +\n        `${errorBoundaryMessage}`;\n\n      // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lane, Lanes} from './ReactFiberLane.old';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactUpdateQueue.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n  IncompleteClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoFlags,\n  ShouldCapture,\n  LifecycleEffectMask,\n  ForceUpdateForLegacySuspense,\n} from './ReactFiberFlags';\nimport {\n  supportsPersistence,\n  getOffscreenContainerProps,\n} from './ReactFiberHostConfig';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent.old';\nimport {NoMode, ConcurrentMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableLazyContextPropagation,\n  enableUpdaterTracking,\n  enablePersistentOffscreenHostContainer,\n} from 'shared/ReactFeatureFlags';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactUpdateQueue.old';\nimport {markFailedErrorBoundaryForHotReloading} from './ReactFiberHotReloading.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {\n  renderDidError,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n  restorePendingUpdaters,\n} from './ReactFiberWorkLoop.old';\nimport {propagateParentContextChangesToDeferredTree} from './ReactFiberNewContext.old';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {logComponentSuspended} from './DebugTracing';\nimport {\n  markComponentRenderStopped,\n  markComponentSuspended,\n} from './SchedulingProfiler';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  SyncLane,\n  NoTimestamp,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = () => {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      logCapturedError(fiber, errorInfo);\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, (SyncLane: Lane))) {\n            console.error(\n              '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n                'In that method, return a state update to display an error message or fallback UI.',\n              getComponentNameFromFiber(fiber) || 'Unknown',\n            );\n          }\n        }\n      }\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(root: FiberRoot, wakeable: Wakeable, lanes: Lanes) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But only if\n  // one does not already exist for the lanes we're currently rendering (which\n  // acts like a \"thread ID\" here).\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    const ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        // If we have pending work still, restore the original updaters\n        restorePendingUpdaters(root, lanes);\n      }\n    }\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  rootRenderLanes: Lanes,\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      // If we have pending work still, restore the original updaters\n      restorePendingUpdaters(root, rootRenderLanes);\n    }\n  }\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    if (enableLazyContextPropagation) {\n      const currentSourceFiber = sourceFiber.alternate;\n      if (currentSourceFiber !== null) {\n        // Since we never visited the children of the suspended component, we\n        // need to propagate the context change now, to ensure that we visit\n        // them during the retry.\n        //\n        // We don't have to do this for errors because we retry errors without\n        // committing in between. So this is specific to Suspense.\n        propagateParentContextChangesToDeferredTree(\n          currentSourceFiber,\n          sourceFiber,\n          rootRenderLanes,\n        );\n      }\n    }\n\n    // This is a wakeable.\n    const wakeable: Wakeable = (value: any);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (sourceFiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(sourceFiber) || 'Unknown';\n          logComponentSuspended(name, wakeable);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markComponentRenderStopped();\n      markComponentSuspended(sourceFiber, wakeable, rootRenderLanes);\n    }\n\n    // Reset the memoizedState to what it was before we attempted to render it.\n    // A legacy mode Suspense quirk, only relevant to hook components.\n    const tag = sourceFiber.tag;\n    if (\n      (sourceFiber.mode & ConcurrentMode) === NoMode &&\n      (tag === FunctionComponent ||\n        tag === ForwardRef ||\n        tag === SimpleMemoComponent)\n    ) {\n      const currentSource = sourceFiber.alternate;\n      if (currentSource) {\n        sourceFiber.updateQueue = currentSource.updateQueue;\n        sourceFiber.memoizedState = currentSource.memoizedState;\n        sourceFiber.lanes = currentSource.lanes;\n      } else {\n        sourceFiber.updateQueue = null;\n        sourceFiber.memoizedState = null;\n      }\n    }\n\n    const hasInvisibleParentBoundary = hasSuspenseContext(\n      suspenseStackCursor.current,\n      (InvisibleParentSuspenseContext: SuspenseContext),\n    );\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    let workInProgress = returnFiber;\n    do {\n      if (\n        workInProgress.tag === SuspenseComponent &&\n        shouldCaptureSuspense(workInProgress, hasInvisibleParentBoundary)\n      ) {\n        // Found the nearest boundary.\n\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        // attach another listener to flip the boundary back to its normal state.\n        const wakeables: Set<Wakeable> = (workInProgress.updateQueue: any);\n        if (wakeables === null) {\n          const updateQueue = (new Set(): any);\n          updateQueue.add(wakeable);\n          workInProgress.updateQueue = updateQueue;\n        } else {\n          wakeables.add(wakeable);\n        }\n\n        // If the boundary is in legacy mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a concurrent mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n        //\n        // If the suspense boundary suspended itself suspended, we don't have to\n        // do this trick because nothing was partially started. We can just\n        // directly do a second pass over the fallback in this render and\n        // pretend we meant to render that directly.\n        if (\n          (workInProgress.mode & ConcurrentMode) === NoMode &&\n          workInProgress !== returnFiber\n        ) {\n          workInProgress.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n\n          // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n          if (supportsPersistence && enablePersistentOffscreenHostContainer) {\n            // Another legacy Suspense quirk. In persistent mode, if this is the\n            // initial mount, override the props of the host container to hide\n            // its contents.\n            const currentSuspenseBoundary = workInProgress.alternate;\n            if (currentSuspenseBoundary === null) {\n              const offscreenFiber: Fiber = (workInProgress.child: any);\n              const offscreenContainer = offscreenFiber.child;\n              if (offscreenContainer !== null) {\n                const children = offscreenContainer.memoizedProps.children;\n                const containerProps = getOffscreenContainerProps(\n                  'hidden',\n                  children,\n                );\n                offscreenContainer.pendingProps = containerProps;\n                offscreenContainer.memoizedProps = containerProps;\n              }\n            }\n          }\n\n          if (sourceFiber.tag === ClassComponent) {\n            const currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force update to\n              // prevent a bail out.\n              const update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update, SyncLane);\n            }\n          }\n\n          // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n\n          // Exit without suspending.\n          return;\n        }\n\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n        //\n        // After this we'll use a set of heuristics to determine whether this\n        // render pass will run to completion or restart or \"suspend\" the commit.\n        // The actual logic for this is spread out in different places.\n        //\n        // This first principle is that if we're going to suspend when we complete\n        // a root, then we should also restart if we get an update or ping that\n        // might unsuspend it, and vice versa. The only reason to suspend is\n        // because you think you might want to restart before committing. However,\n        // it doesn't make sense to restart only while in the period we're suspended.\n        //\n        // Restarting too aggressively is also not good because it starves out any\n        // intermediate loading state. So we use heuristics to determine when.\n\n        // Suspense Heuristics\n        //\n        // If nothing threw a Promise or all the same fallbacks are already showing,\n        // then don't suspend/restart.\n        //\n        // If this is an initial render of a new tree of Suspense boundaries and\n        // those trigger a fallback, then don't suspend/restart. We want to ensure\n        // that we can show the initial loading state as quickly as possible.\n        //\n        // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n        // a fallback, then we should always suspend/restart. Transitions apply\n        // to this case. If none is defined, JND is used instead.\n        //\n        // If we're already showing a fallback and it gets \"retried\", allowing us to show\n        // another level, but there's still an inner boundary that would show a fallback,\n        // then we suspend/restart for 500ms since the last time we showed a fallback\n        // anywhere in the tree. This effectively throttles progressive loading into a\n        // consistent train of commits. This also gives us an opportunity to restart to\n        // get to the completed state slightly earlier.\n        //\n        // If there's ambiguity due to batching it's resolved in preference of:\n        // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n        //\n        // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n        // ensure that new initial loading states can commit as soon as possible.\n\n        attachPingListener(root, wakeable, rootRenderLanes);\n\n        workInProgress.flags |= ShouldCapture;\n        // TODO: I think we can remove this, since we now use `DidCapture` in\n        // the begin phase to prevent an early bailout.\n        workInProgress.lanes = rootRenderLanes;\n\n        return;\n      }\n      // This boundary already captured during this render. Continue to the next\n      // boundary.\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null);\n    // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n    value = new Error(\n      (getComponentNameFromFiber(sourceFiber) || 'A React component') +\n        ' suspended while rendering, but no fallback UI was specified.\\n' +\n        '\\n' +\n        'Add a <Suspense fallback=...> component higher in the tree to ' +\n        'provide a loading indicator or placeholder to display.',\n    );\n  }\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  renderDidError();\n\n  value = createCapturedValue(value, sourceFiber);\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        const lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        const update = createRootErrorUpdate(workInProgress, errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            lane,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nexport {throwException, createRootErrorUpdate, createClassErrorUpdate};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {\n  ReactScopeInstance,\n  ReactContext,\n  ReactScopeQuery,\n} from 'shared/ReactTypes';\n\nimport {\n  getPublicInstance,\n  getInstanceFromNode,\n  getInstanceFromScope,\n} from './ReactFiberHostConfig';\nimport {isFiberSuspenseAndTimedOut} from './ReactFiberTreeReflection';\n\nimport {HostComponent, ScopeComponent, ContextProvider} from './ReactWorkTags';\nimport {enableScopeAPI} from 'shared/ReactFeatureFlags';\n\nfunction getSuspenseFallbackChild(fiber: Fiber): Fiber | null {\n  return ((((fiber.child: any): Fiber).sibling: any): Fiber).child;\n}\n\nconst emptyObject = {};\n\nfunction collectScopedNodes(\n  node: Fiber,\n  fn: ReactScopeQuery,\n  scopedNodes: Array<any>,\n): void {\n  if (enableScopeAPI) {\n    if (node.tag === HostComponent) {\n      const {type, memoizedProps, stateNode} = node;\n      const instance = getPublicInstance(stateNode);\n      if (\n        instance !== null &&\n        fn(type, memoizedProps || emptyObject, instance) === true\n      ) {\n        scopedNodes.push(instance);\n      }\n    }\n    let child = node.child;\n\n    if (isFiberSuspenseAndTimedOut(node)) {\n      child = getSuspenseFallbackChild(node);\n    }\n    if (child !== null) {\n      collectScopedNodesFromChildren(child, fn, scopedNodes);\n    }\n  }\n}\n\nfunction collectFirstScopedNode(\n  node: Fiber,\n  fn: ReactScopeQuery,\n): null | Object {\n  if (enableScopeAPI) {\n    if (node.tag === HostComponent) {\n      const {type, memoizedProps, stateNode} = node;\n      const instance = getPublicInstance(stateNode);\n      if (instance !== null && fn(type, memoizedProps, instance) === true) {\n        return instance;\n      }\n    }\n    let child = node.child;\n\n    if (isFiberSuspenseAndTimedOut(node)) {\n      child = getSuspenseFallbackChild(node);\n    }\n    if (child !== null) {\n      return collectFirstScopedNodeFromChildren(child, fn);\n    }\n  }\n  return null;\n}\n\nfunction collectScopedNodesFromChildren(\n  startingChild: Fiber,\n  fn: ReactScopeQuery,\n  scopedNodes: Array<any>,\n): void {\n  let child = startingChild;\n  while (child !== null) {\n    collectScopedNodes(child, fn, scopedNodes);\n    child = child.sibling;\n  }\n}\n\nfunction collectFirstScopedNodeFromChildren(\n  startingChild: Fiber,\n  fn: ReactScopeQuery,\n): Object | null {\n  let child = startingChild;\n  while (child !== null) {\n    const scopedNode = collectFirstScopedNode(child, fn);\n    if (scopedNode !== null) {\n      return scopedNode;\n    }\n    child = child.sibling;\n  }\n  return null;\n}\n\nfunction collectNearestContextValues<T>(\n  node: Fiber,\n  context: ReactContext<T>,\n  childContextValues: Array<T>,\n): void {\n  if (node.tag === ContextProvider && node.type._context === context) {\n    const contextValue = node.memoizedProps.value;\n    childContextValues.push(contextValue);\n  } else {\n    let child = node.child;\n\n    if (isFiberSuspenseAndTimedOut(node)) {\n      child = getSuspenseFallbackChild(node);\n    }\n    if (child !== null) {\n      collectNearestChildContextValues(child, context, childContextValues);\n    }\n  }\n}\n\nfunction collectNearestChildContextValues<T>(\n  startingChild: Fiber | null,\n  context: ReactContext<T>,\n  childContextValues: Array<T>,\n): void {\n  let child = startingChild;\n  while (child !== null) {\n    collectNearestContextValues(child, context, childContextValues);\n    child = child.sibling;\n  }\n}\n\nfunction DO_NOT_USE_queryAllNodes(fn: ReactScopeQuery): null | Array<Object> {\n  const currentFiber = getInstanceFromScope(this);\n  if (currentFiber === null) {\n    return null;\n  }\n  const child = currentFiber.child;\n  const scopedNodes = [];\n  if (child !== null) {\n    collectScopedNodesFromChildren(child, fn, scopedNodes);\n  }\n  return scopedNodes.length === 0 ? null : scopedNodes;\n}\n\nfunction DO_NOT_USE_queryFirstNode(fn: ReactScopeQuery): null | Object {\n  const currentFiber = getInstanceFromScope(this);\n  if (currentFiber === null) {\n    return null;\n  }\n  const child = currentFiber.child;\n  if (child !== null) {\n    return collectFirstScopedNodeFromChildren(child, fn);\n  }\n  return null;\n}\n\nfunction containsNode(node: Object): boolean {\n  let fiber = getInstanceFromNode(node);\n  while (fiber !== null) {\n    if (fiber.tag === ScopeComponent && fiber.stateNode === this) {\n      return true;\n    }\n    fiber = fiber.return;\n  }\n  return false;\n}\n\nfunction getChildContextValues<T>(context: ReactContext<T>): Array<T> {\n  const currentFiber = getInstanceFromScope(this);\n  if (currentFiber === null) {\n    return [];\n  }\n  const child = currentFiber.child;\n  const childContextValues = [];\n  if (child !== null) {\n    collectNearestChildContextValues(child, context, childContextValues);\n  }\n  return childContextValues;\n}\n\nexport function createScopeInstance(): ReactScopeInstance {\n  return {\n    DO_NOT_USE_queryAllNodes,\n    DO_NOT_USE_queryFirstNode,\n    containsNode,\n    getChildContextValues,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {\n  ReactScopeInstance,\n  ReactContext,\n  Wakeable,\n} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\nimport type {Cache, SpawnedCachePool} from './ReactFiberCacheComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\n\nimport {now} from './Scheduler';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport {NoMode, ConcurrentMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  Ref,\n  RefStatic,\n  Placement,\n  Update,\n  Visibility,\n  NoFlags,\n  DidCapture,\n  Snapshot,\n  ChildDeletion,\n  StaticMask,\n  MutationMask,\n} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createInstance,\n  createTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneHiddenTextInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n  preparePortalMount,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n  popSuspenseContext,\n  pushSuspenseContext,\n  setShallowSuspenseContext,\n  ForceSuspenseFallback,\n  setDefaultShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n  resetHydrationState,\n  getIsHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  enableSuspenseCallback,\n  enableSuspenseServerRenderer,\n  enableScopeAPI,\n  enableProfilerTimer,\n  enableCache,\n  enableSuspenseLayoutEffectSemantics,\n  enablePersistentOffscreenHostContainer,\n} from 'shared/ReactFeatureFlags';\nimport {\n  renderDidSuspend,\n  renderDidSuspendDelayIfPossible,\n  renderHasNotSuspendedYet,\n  popRenderLanes,\n  getRenderTargetTime,\n  subtreeRenderLanes,\n} from './ReactFiberWorkLoop.old';\nimport {\n  OffscreenLane,\n  SomeRetryLane,\n  NoLanes,\n  includesSomeLane,\n  mergeLanes,\n} from './ReactFiberLane.old';\nimport {resetChildFibers} from './ReactChildFiber.old';\nimport {createScopeInstance} from './ReactFiberScope.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\nimport {\n  popCacheProvider,\n  popRootCachePool,\n  popCachePool,\n} from './ReactFiberCacheComponent.old';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.flags |= Ref;\n  if (enableSuspenseLayoutEffectSemantics) {\n    workInProgress.flags |= RefStatic;\n  }\n}\n\nfunction hadNoMutationsEffects(current: null | Fiber, completedWork: Fiber) {\n  const didBailout = current !== null && current.child === completedWork.child;\n  if (didBailout) {\n    return true;\n  }\n\n  if ((completedWork.flags & ChildDeletion) !== NoFlags) {\n    return false;\n  }\n\n  // TODO: If we move the `hadNoMutationsEffects` call after `bubbleProperties`\n  // then we only have to check the `completedWork.subtreeFlags`.\n  let child = completedWork.child;\n  while (child !== null) {\n    if (\n      (child.flags & MutationMask) !== NoFlags ||\n      (child.subtreeFlags & MutationMask) !== NoFlags\n    ) {\n      return false;\n    }\n    child = child.sibling;\n  }\n  return true;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (\n        node.tag === OffscreenComponent &&\n        node.memoizedState !== null\n      ) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        const child = node.child;\n        if (child !== null) {\n          child.return = node;\n        }\n        if (enablePersistentOffscreenHostContainer) {\n          appendAllChildren(parent, node, false, false);\n        } else {\n          appendAllChildren(parent, node, true, true);\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function(\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (\n        node.tag === OffscreenComponent &&\n        node.memoizedState !== null\n      ) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        const child = node.child;\n        if (child !== null) {\n          child.return = node;\n        }\n        if (enablePersistentOffscreenHostContainer) {\n          appendAllChildrenToContainer(containerChildSet, node, false, false);\n        } else {\n          appendAllChildrenToContainer(containerChildSet, node, true, true);\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n      ...\n    } = workInProgress.stateNode;\n    const childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      const newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction cutOffTailIfNeeded(\n  renderState: SuspenseListRenderState,\n  hasRenderedATailFallback: boolean,\n) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n  switch (renderState.tailMode) {\n    case 'hidden': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n    case 'collapsed': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n  }\n}\n\nfunction bubbleProperties(completedWork: Fiber) {\n  const didBailout =\n    completedWork.alternate !== null &&\n    completedWork.alternate.child === completedWork.child;\n\n  let newChildLanes = NoLanes;\n  let subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      let actualDuration = completedWork.actualDuration;\n      let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags;\n\n        // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n        actualDuration += child.actualDuration;\n\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags;\n\n        // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n        child.return = completedWork;\n\n        child = child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n        subtreeFlags |= child.subtreeFlags & StaticMask;\n        subtreeFlags |= child.flags & StaticMask;\n\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n        subtreeFlags |= child.subtreeFlags & StaticMask;\n        subtreeFlags |= child.flags & StaticMask;\n\n        // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n        child.return = completedWork;\n\n        child = child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n\n  return didBailout;\n}\n\nexport function completeSuspendedOffscreenHostContainer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n) {\n  // This is a fork of the complete phase for HostComponent. We use it when\n  // a suspense tree is in its fallback state, because in that case the primary\n  // tree that includes the offscreen boundary is skipped over without a\n  // regular complete phase.\n  //\n  // We can optimize this path further by inlining the update logic for\n  // offscreen instances specifically, i.e. skipping the `prepareUpdate` call.\n  const rootContainerInstance = getRootHostContainer();\n  const type = workInProgress.type;\n  const newProps = workInProgress.memoizedProps;\n  if (current !== null) {\n    updateHostComponent(\n      current,\n      workInProgress,\n      type,\n      newProps,\n      rootContainerInstance,\n    );\n  } else {\n    const currentHostContext = getHostContext();\n    const instance = createInstance(\n      type,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n      workInProgress,\n    );\n\n    appendAllChildren(instance, workInProgress, false, false);\n\n    workInProgress.stateNode = instance;\n\n    // Certain renderers require commit-time effects for initial mount.\n    // (eg DOM renderer supports auto-focus for certain elements).\n    // Make sure such renderers get scheduled for later work.\n    if (\n      finalizeInitialChildren(\n        instance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n\n    if (workInProgress.ref !== null) {\n      // If there is a ref on a host node we need to schedule a callback\n      markRef(workInProgress);\n    }\n  }\n  bubbleProperties(workInProgress);\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostRoot: {\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n      if (enableCache) {\n        popRootCachePool(fiberRoot, renderLanes);\n\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else if (!fiberRoot.hydrate) {\n          // Schedule an effect to clear this container at the start of the next commit.\n          // This handles the case of React rendering into a container with previous children.\n          // It's also safe to do for updates too, because current.child would only be null\n          // if the previous render was null (so the the container would already be empty).\n          workInProgress.flags |= Snapshot;\n        }\n      }\n      updateHostContainer(current, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          const instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n\n          appendAllChildren(instance, workInProgress, false, false);\n\n          workInProgress.stateNode = instance;\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostText: {\n      const newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const nextState: null | SuspenseState = workInProgress.memoizedState;\n\n      if (enableSuspenseServerRenderer) {\n        if (nextState !== null && nextState.dehydrated !== null) {\n          if (current === null) {\n            const wasHydrated = popHydrationState(workInProgress);\n            invariant(\n              wasHydrated,\n              'A dehydrated suspense component was completed without a hydrated node. ' +\n                'This is probably a bug in React.',\n            );\n            prepareToHydrateHostSuspenseInstance(workInProgress);\n            bubbleProperties(workInProgress);\n            if (enableProfilerTimer) {\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                const isTimedOutSuspense = nextState !== null;\n                if (isTimedOutSuspense) {\n                  // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n                  const primaryChildFragment = workInProgress.child;\n                  if (primaryChildFragment !== null) {\n                    // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n                    workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n                  }\n                }\n              }\n            }\n            return null;\n          } else {\n            // We should never have been in a hydration state if we didn't have a current.\n            // However, in some of those paths, we might have reentered a hydration state\n            // and then we might be inside a hydration state. In that case, we'll need to exit out of it.\n            resetHydrationState();\n            if ((workInProgress.flags & DidCapture) === NoFlags) {\n              // This boundary did not suspend so it's now hydrated and unsuspended.\n              workInProgress.memoizedState = null;\n            }\n            // If nothing suspended, we need to schedule an effect to mark this boundary\n            // as having hydrated so events know that they're free to be invoked.\n            // It's also a signal to replay events and the suspense callback.\n            // If something suspended, schedule an effect to attach retry listeners.\n            // So we might as well always mark this.\n            workInProgress.flags |= Update;\n            bubbleProperties(workInProgress);\n            if (enableProfilerTimer) {\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                const isTimedOutSuspense = nextState !== null;\n                if (isTimedOutSuspense) {\n                  // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n                  const primaryChildFragment = workInProgress.child;\n                  if (primaryChildFragment !== null) {\n                    // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n                    workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n                  }\n                }\n              }\n            }\n            return null;\n          }\n        }\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes;\n        // Do not reset the effect list.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        // Don't bubble properties in this case.\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      let prevDidTimeout = false;\n      if (current === null) {\n        popHydrationState(workInProgress);\n      } else {\n        const prevState: null | SuspenseState = current.memoizedState;\n        prevDidTimeout = prevState !== null;\n      }\n\n      // If the suspended state of the boundary changes, we need to schedule\n      // an effect to toggle the subtree's visibility. When we switch from\n      // fallback -> primary, the inner Offscreen fiber schedules this effect\n      // as part of its normal complete phase. But when we switch from\n      // primary -> fallback, the inner Offscreen fiber does not have a complete\n      // phase. So we need to schedule its effect here.\n      //\n      // We also use this flag to connect/disconnect the effects, but the same\n      // logic applies: when re-connecting, the Offscreen fiber's complete\n      // phase will handle scheduling the effect. It's only when the fallback\n      // is active that we have to do anything special.\n      if (nextDidTimeout && !prevDidTimeout) {\n        const offscreenFiber: Fiber = (workInProgress.child: any);\n        offscreenFiber.flags |= Visibility;\n\n        // TODO: This will still suspend a synchronous tree if anything\n        // in the concurrent tree already suspended during this render.\n        // This is a known bug.\n        if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n          // TODO: Move this back to throwException because this is too late\n          // if this is a large tree which is common for initial loads. We\n          // don't know if we should restart a render or not until we get\n          // this marker, and this is too late.\n          // If this render already had a ping or lower pri updates,\n          // and this is the first time we know we're going to suspend we\n          // should be able to immediately restart from within throwException.\n          const hasInvisibleChildContext =\n            current === null &&\n            workInProgress.memoizedProps.unstable_avoidThisFallback !== true;\n          if (\n            hasInvisibleChildContext ||\n            hasSuspenseContext(\n              suspenseStackCursor.current,\n              (InvisibleParentSuspenseContext: SuspenseContext),\n            )\n          ) {\n            // If this was in an invisible tree or a new render, then showing\n            // this boundary is ok.\n            renderDidSuspend();\n          } else {\n            // Otherwise, we're going to have to hide content so we should\n            // suspend for longer if possible.\n            renderDidSuspendDelayIfPossible();\n          }\n        }\n      }\n\n      const wakeables: Set<Wakeable> | null = (workInProgress.updateQueue: any);\n      if (wakeables !== null) {\n        // Schedule an effect to attach a retry listener to the promise.\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n\n      if (\n        enableSuspenseCallback &&\n        workInProgress.updateQueue !== null &&\n        workInProgress.memoizedProps.suspenseCallback != null\n      ) {\n        // Always notify the callback\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n      bubbleProperties(workInProgress);\n      if (enableProfilerTimer) {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          if (nextDidTimeout) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            const primaryChildFragment = workInProgress.child;\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n            }\n          }\n        }\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case ContextProvider:\n      // Pop provider fiber\n      const context: ReactContext<any> = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n\n      const renderState: null | SuspenseListRenderState =\n        workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n      let didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      const renderedTail = renderState.rendering;\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          const cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n          if (!cannotBeSuspended) {\n            let row = workInProgress.child;\n            while (row !== null) {\n              const suspended = findFirstSuspended(row);\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false);\n\n                // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thenables. Instead, we'll transfer its thenables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n                const newThenables = suspended.updateQueue;\n                if (newThenables !== null) {\n                  workInProgress.updateQueue = newThenables;\n                  workInProgress.flags |= Update;\n                }\n\n                // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect flags before doing the second pass since that's now invalid.\n                // Reset the child fibers to their original state.\n                workInProgress.subtreeFlags = NoFlags;\n                resetChildFibers(workInProgress, renderLanes);\n\n                // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback,\n                  ),\n                );\n                // Don't bubble properties in this case.\n                return workInProgress.child;\n              }\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        }\n        // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          const suspended = findFirstSuspended(renderedTail);\n          if (suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n            const newThenables = suspended.updateQueue;\n            if (newThenables !== null) {\n              workInProgress.updateQueue = newThenables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true);\n            // This might have been modified.\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === 'hidden' &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We're done.\n              bubbleProperties(workInProgress);\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n          }\n        }\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          const previousSibling = renderState.last;\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        const next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.renderingStartTime = now();\n        next.sibling = null;\n\n        // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n        let suspenseContext = suspenseStackCursor.current;\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback,\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n        pushSuspenseContext(workInProgress, suspenseContext);\n        // Do a pass over the next row.\n        // Don't bubble properties in this case.\n        return next;\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        if (current === null) {\n          const scopeInstance: ReactScopeInstance = createScopeInstance();\n          workInProgress.stateNode = scopeInstance;\n          prepareScopeUpdate(scopeInstance, workInProgress);\n          if (workInProgress.ref !== null) {\n            markRef(workInProgress);\n            markUpdate(workInProgress);\n          }\n        } else {\n          if (workInProgress.ref !== null) {\n            markUpdate(workInProgress);\n          }\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        }\n        bubbleProperties(workInProgress);\n        return null;\n      }\n      break;\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      const nextState: OffscreenState | null = workInProgress.memoizedState;\n      const nextIsHidden = nextState !== null;\n\n      if (current !== null) {\n        const prevState: OffscreenState | null = current.memoizedState;\n        const prevIsHidden = prevState !== null;\n        if (\n          prevIsHidden !== nextIsHidden &&\n          newProps.mode !== 'unstable-defer-without-hiding' &&\n          // LegacyHidden doesn't do any hiding — it only pre-renders.\n          workInProgress.tag !== LegacyHiddenComponent\n        ) {\n          workInProgress.flags |= Visibility;\n        }\n      }\n\n      if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n        bubbleProperties(workInProgress);\n      } else {\n        // Don't bubble properties for hidden children unless we're rendering\n        // at offscreen priority.\n        if (includesSomeLane(subtreeRenderLanes, (OffscreenLane: Lane))) {\n          bubbleProperties(workInProgress);\n          if (supportsMutation) {\n            // Check if there was an insertion or update in the hidden subtree.\n            // If so, we need to hide those nodes in the commit phase, so\n            // schedule a visibility effect.\n            if (\n              workInProgress.tag !== LegacyHiddenComponent &&\n              workInProgress.subtreeFlags & (Placement | Update) &&\n              newProps.mode !== 'unstable-defer-without-hiding'\n            ) {\n              workInProgress.flags |= Visibility;\n            }\n          }\n        }\n      }\n\n      if (enableCache) {\n        const spawnedCachePool: SpawnedCachePool | null = (workInProgress.updateQueue: any);\n        if (spawnedCachePool !== null) {\n          popCachePool(workInProgress);\n        }\n      }\n\n      return null;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n        bubbleProperties(workInProgress);\n        return null;\n      }\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactProviderType, ReactContext} from 'shared/ReactTypes';\nimport type {LazyComponent as LazyComponentType} from 'react/src/ReactLazy';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {MutableSource} from 'shared/ReactTypes';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n  SuspenseListTailMode,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {\n  OffscreenProps,\n  OffscreenState,\n} from './ReactFiberOffscreenComponent';\nimport type {\n  Cache,\n  CacheComponentState,\n  SpawnedCachePool,\n} from './ReactFiberCacheComponent.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\n\nimport checkPropTypes from 'shared/checkPropTypes';\nimport {\n  markComponentRenderStarted,\n  markComponentRenderStopped,\n} from './SchedulingProfiler';\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Hydrating,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  RefStatic,\n  ChildDeletion,\n  ForceUpdateForLegacySuspense,\n  StaticMask,\n  ShouldCapture,\n} from './ReactFiberFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  disableModulePatternComponents,\n  enableProfilerCommitHooks,\n  enableProfilerTimer,\n  enableSuspenseServerRenderer,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableCache,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n  enableSchedulingProfiler,\n  enablePersistentOffscreenHostContainer,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {REACT_LAZY_TYPE, getIteratorFn} from 'shared/ReactSymbols';\nimport {\n  getCurrentFiberOwnerNameInDevOrNull,\n  setIsRendering,\n} from './ReactCurrentFiber';\nimport {\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n  resolveClassForHotReloading,\n} from './ReactFiberHotReloading.old';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber.old';\nimport {\n  processUpdateQueue,\n  cloneUpdateQueue,\n  initializeUpdateQueue,\n  enqueueCapturedUpdate,\n} from './ReactUpdateQueue.old';\nimport {\n  NoLane,\n  NoLanes,\n  SyncLane,\n  OffscreenLane,\n  DefaultHydrationLane,\n  SomeRetryLane,\n  NoTimestamp,\n  includesSomeLane,\n  laneToLanes,\n  removeLanes,\n  mergeLanes,\n  getBumpedLaneForHydration,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\nimport {\n  ConcurrentMode,\n  NoMode,\n  ProfileMode,\n  StrictLegacyMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n  registerSuspenseInstanceRetry,\n  supportsHydration,\n  isPrimaryRenderer,\n  supportsPersistence,\n  getOffscreenContainerProps,\n} from './ReactFiberHostConfig';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport {\n  shouldError,\n  shouldSuspend,\n  setIsStrictModeForDevtools,\n} from './ReactFiberReconciler';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  pushSuspenseContext,\n  InvisibleParentSuspenseContext,\n  ForceSuspenseFallback,\n  hasSuspenseContext,\n  setDefaultShallowSuspenseContext,\n  addSubtreeSuspenseContext,\n  setShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  pushProvider,\n  propagateContextChange,\n  lazilyPropagateParentContextChanges,\n  propagateParentContextChangesToDeferredTree,\n  checkIfContextChanged,\n  readContext,\n  prepareToReadContext,\n  scheduleWorkOnParentPath,\n} from './ReactFiberNewContext.old';\nimport {renderWithHooks, bailoutHooks} from './ReactFiberHooks.old';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer.old';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext.old';\nimport {\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  warnIfHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createFiberFromOffscreen,\n  createWorkInProgress,\n  createOffscreenHostContainerFiber,\n  isSimpleFunctionComponent,\n} from './ReactFiber.old';\nimport {\n  retryDehydratedSuspenseBoundary,\n  scheduleUpdateOnFiber,\n  renderDidSuspendDelayIfPossible,\n  markSkippedUpdateLanes,\n  getWorkInProgressRoot,\n  pushRenderLanes,\n  getExecutionContext,\n  RetryAfterError,\n  NoContext,\n} from './ReactFiberWorkLoop.old';\nimport {setWorkInProgressVersion} from './ReactMutableSource.old';\nimport {\n  requestCacheFromPool,\n  pushCacheProvider,\n  pushRootCachePool,\n  CacheContext,\n  getSuspendedCachePool,\n  restoreSpawnedCachePool,\n  getOffscreenDeferredCachePool,\n} from './ReactFiberCacheComponent.old';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {createClassErrorUpdate} from './ReactFiberThrow.old';\nimport {completeSuspendedOffscreenHostContainer} from './ReactFiberCompleteWork.old';\nimport is from 'shared/objectIs';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutModulePatternComponent;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\nlet didWarnAboutRevealOrder;\nlet didWarnAboutTailOptions;\nlet didWarnAboutDefaultPropsOnFunctionComponent;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\n}\n\nexport function reconcileChildren(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderLanes,\n        );\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (current === null) {\n    const type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      let resolvedType = type;\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(type);\n      }\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        renderLanes,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(type),\n        );\n      }\n    }\n    const child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentNameFromType(type),\n      );\n    }\n  }\n  const currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  const hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n    current,\n    renderLanes,\n  );\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  const newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        const lazyComponent: LazyComponentType<any, any> = outerMemoType;\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        }\n        // Inner propTypes will be validated in the function component path.\n        const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            'prop',\n            getComponentNameFromType(outerMemoType),\n          );\n        }\n      }\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref &&\n      // Prevent bailout if the implementation changed due to hot reload.\n      (__DEV__ ? workInProgress.type === current.type : true)\n    ) {\n      didReceiveUpdate = false;\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes,\n  );\n}\n\nfunction updateOffscreenComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps: OffscreenProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  const prevState: OffscreenState | null =\n    current !== null ? current.memoizedState : null;\n\n  // If this is not null, this is a cache pool that was carried over from the\n  // previous render. We will push this to the cache pool context so that we can\n  // resume in-flight requests.\n  let spawnedCachePool: SpawnedCachePool | null = null;\n\n  if (\n    nextProps.mode === 'hidden' ||\n    nextProps.mode === 'unstable-defer-without-hiding'\n  ) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n      };\n      workInProgress.memoizedState = nextState;\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, (OffscreenLane: Lane))) {\n      // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n      let nextBaseLanes;\n      if (prevState !== null) {\n        const prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n        if (enableCache) {\n          // Save the cache pool so we can resume later.\n          spawnedCachePool = getOffscreenDeferredCachePool();\n          // We don't need to push to the cache pool because we're about to\n          // bail out. There won't be a context mismatch because we only pop\n          // the cache pool if `updateQueue` is non-null.\n        }\n      } else {\n        nextBaseLanes = renderLanes;\n      }\n\n      // Schedule this fiber to re-render at offscreen priority. Then bailout.\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane,\n      );\n      const nextState: OffscreenState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n      };\n      workInProgress.memoizedState = nextState;\n      workInProgress.updateQueue = null;\n      // We're about to bail out, but we need to push this to the stack anyway\n      // to avoid a push/pop misalignment.\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      if (enableLazyContextPropagation && current !== null) {\n        // Since this tree will resume rendering in a separate render, we need\n        // to propagate parent contexts now so we don't lose track of which\n        // ones changed.\n        propagateParentContextChangesToDeferredTree(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n\n      if (enableCache && prevState !== null) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        const prevCachePool = prevState.cachePool;\n        if (prevCachePool !== null) {\n          spawnedCachePool = restoreSpawnedCachePool(\n            workInProgress,\n            prevCachePool,\n          );\n        }\n      }\n\n      // Rendering at offscreen, so we can clear the base lanes.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n      };\n      workInProgress.memoizedState = nextState;\n      // Push the lanes that were skipped when we bailed out.\n      const subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    let subtreeRenderLanes;\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n\n      subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      if (enableCache) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        const prevCachePool = prevState.cachePool;\n        if (prevCachePool !== null) {\n          spawnedCachePool = restoreSpawnedCachePool(\n            workInProgress,\n            prevCachePool,\n          );\n        }\n      }\n\n      // Since we're not hidden anymore, reset the state\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      subtreeRenderLanes = renderLanes;\n    }\n    pushRenderLanes(workInProgress, subtreeRenderLanes);\n  }\n\n  if (enableCache) {\n    // If we have a cache pool from a previous render attempt, then this will be\n    // non-null. We use this to infer whether to push/pop the cache context.\n    workInProgress.updateQueue = spawnedCachePool;\n  }\n\n  if (enablePersistentOffscreenHostContainer && supportsPersistence) {\n    // In persistent mode, the offscreen children are wrapped in a host node.\n    // TODO: Optimize this to use the OffscreenComponent fiber instead of\n    // an extra HostComponent fiber. Need to make sure this doesn't break Fabric\n    // or some other infra that expects a HostComponent.\n    const isHidden =\n      nextProps.mode === 'hidden' &&\n      workInProgress.tag !== LegacyHiddenComponent;\n    const offscreenContainer = reconcileOffscreenHostContainer(\n      current,\n      workInProgress,\n      isHidden,\n      nextChildren,\n      renderLanes,\n    );\n    return offscreenContainer;\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    return workInProgress.child;\n  }\n}\n\nfunction reconcileOffscreenHostContainer(\n  currentOffscreen: Fiber | null,\n  offscreen: Fiber,\n  isHidden: boolean,\n  children: any,\n  renderLanes: Lanes,\n) {\n  const containerProps = getOffscreenContainerProps(\n    isHidden ? 'hidden' : 'visible',\n    children,\n  );\n  let hostContainer;\n  if (currentOffscreen === null) {\n    hostContainer = createOffscreenHostContainerFiber(\n      containerProps,\n      offscreen.mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    const currentHostContainer = currentOffscreen.child;\n    if (currentHostContainer === null) {\n      hostContainer = createOffscreenHostContainerFiber(\n        containerProps,\n        offscreen.mode,\n        renderLanes,\n        null,\n      );\n      hostContainer.flags |= Placement;\n    } else {\n      hostContainer = createWorkInProgress(\n        currentHostContainer,\n        containerProps,\n      );\n    }\n  }\n  hostContainer.return = offscreen;\n  offscreen.child = hostContainer;\n  return hostContainer;\n}\n\n// Note: These happen to have identical begin phases, for now. We shouldn't hold\n// ourselves to this constraint, though. If the behavior diverges, we should\n// fork the function.\nconst updateLegacyHiddenComponent = updateOffscreenComponent;\n\nfunction updateCacheComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (!enableCache) {\n    return null;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const parentCache = readContext(CacheContext);\n\n  if (current === null) {\n    // Initial mount. Request a fresh cache from the pool.\n    const freshCache = requestCacheFromPool(renderLanes);\n    const initialState: CacheComponentState = {\n      parent: parentCache,\n      cache: freshCache,\n    };\n    workInProgress.memoizedState = initialState;\n    initializeUpdateQueue(workInProgress);\n    pushCacheProvider(workInProgress, freshCache);\n  } else {\n    // Check for updates\n    if (includesSomeLane(current.lanes, renderLanes)) {\n      cloneUpdateQueue(current, workInProgress);\n      processUpdateQueue(workInProgress, null, null, renderLanes);\n    }\n    const prevState: CacheComponentState = current.memoizedState;\n    const nextState: CacheComponentState = workInProgress.memoizedState;\n\n    // Compare the new parent cache to the previous to see detect there was\n    // a refresh.\n    if (prevState.parent !== parentCache) {\n      // Refresh in parent. Update the parent.\n      const derivedState: CacheComponentState = {\n        parent: parentCache,\n        cache: parentCache,\n      };\n\n      // Copied from getDerivedStateFromProps implementation. Once the update\n      // queue is empty, persist the derived state onto the base state.\n      workInProgress.memoizedState = derivedState;\n      if (workInProgress.lanes === NoLanes) {\n        const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n        workInProgress.memoizedState = updateQueue.baseState = derivedState;\n      }\n\n      pushCacheProvider(workInProgress, parentCache);\n      // No need to propagate a context change because the refreshed parent\n      // already did.\n    } else {\n      // The parent didn't refresh. Now check if this cache did.\n      const nextCache = nextState.cache;\n      pushCacheProvider(workInProgress, nextCache);\n      if (nextCache !== prevState.cache) {\n        // This cache refreshed. Propagate a context change.\n        propagateContextChange(workInProgress, CacheContext, renderLanes);\n      }\n    }\n  }\n\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.flags |= Update;\n\n    if (enableProfilerCommitHooks) {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      const stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n    if (enableSuspenseLayoutEffectSemantics) {\n      workInProgress.flags |= RefStatic;\n    }\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderLanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderLanes,\n        );\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  if (__DEV__) {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false: {\n        const instance = workInProgress.stateNode;\n        const ctor = workInProgress.type;\n        // TODO This way of resetting the error boundary state is a hack.\n        // Is there a better way to do this?\n        const tempInstance = new ctor(\n          workInProgress.memoizedProps,\n          instance.context,\n        );\n        const state = tempInstance.state;\n        instance.updater.enqueueSetState(instance, state, null);\n        break;\n      }\n      case true: {\n        workInProgress.flags |= DidCapture;\n        workInProgress.flags |= ShouldCapture;\n        const error = new Error('Simulated error coming from DevTools');\n        const lane = pickArbitraryLane(renderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        // Schedule the error boundary to re-render using updated state\n        const update = createClassErrorUpdate(\n          workInProgress,\n          createCapturedValue(error, workInProgress),\n          lane,\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        break;\n      }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    if (current !== null) {\n      // A class component without an instance only mounts if it suspended\n      // inside a non-concurrent tree, in an inconsistent state. We want to\n      // treat it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.flags |= Placement;\n    }\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes,\n  );\n  if (__DEV__) {\n    const inst = workInProgress.stateNode;\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentNameFromFiber(workInProgress) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderLanes: Lanes,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (enableSchedulingProfiler) {\n      markComponentRenderStarted(workInProgress);\n    }\n    if (__DEV__) {\n      setIsRendering(true);\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          instance.render();\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n      setIsRendering(false);\n    } else {\n      nextChildren = instance.render();\n    }\n    if (enableSchedulingProfiler) {\n      markComponentRenderStopped();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n  const updateQueue = workInProgress.updateQueue;\n  invariant(\n    current !== null && updateQueue !== null,\n    'If the root does not have an updateQueue, we should have already ' +\n      'bailed out. This error is likely caused by a bug in React. Please ' +\n      'file an issue.',\n  );\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  const nextState = workInProgress.memoizedState;\n\n  const root: FiberRoot = workInProgress.stateNode;\n\n  if (enableCache) {\n    const nextCache: Cache = nextState.cache;\n    pushRootCachePool(root);\n    pushCacheProvider(workInProgress, nextCache);\n    if (nextCache !== prevState.cache) {\n      // The root cache refreshed.\n      propagateContextChange(workInProgress, CacheContext, renderLanes);\n    }\n  }\n\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  const nextChildren = nextState.element;\n  if (nextChildren === prevChildren) {\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  if (root.hydrate && enterHydrationState(workInProgress)) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n\n    if (supportsHydration) {\n      const mutableSourceEagerHydrationData =\n        root.mutableSourceEagerHydrationData;\n      if (mutableSourceEagerHydrationData != null) {\n        for (let i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {\n          const mutableSource = ((mutableSourceEagerHydrationData[\n            i\n          ]: any): MutableSource<any>);\n          const version = mutableSourceEagerHydrationData[i + 1];\n          setWorkInProgressVersion(mutableSource, version);\n        }\n      }\n    }\n\n    const child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n    workInProgress.child = child;\n\n    let node = child;\n    while (node) {\n      // Mark each child as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      node.flags = (node.flags & ~Placement) | Hydrating;\n      node = node.sibling;\n    }\n  } else {\n    // Otherwise reset hydration state in case we aborted and resumed another\n    // root.\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    resetHydrationState();\n  }\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // A lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  const lazyComponent: LazyComponentType<any, any> = elementType;\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  let Component = init(payload);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component,\n        );\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ClassComponent: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component,\n        );\n      }\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ForwardRef: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component,\n        );\n      }\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentNameFromType(Component),\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes,\n      );\n      return child;\n    }\n  }\n  let hint = '';\n  if (__DEV__) {\n    if (\n      Component !== null &&\n      typeof Component === 'object' &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  }\n  // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n  invariant(\n    false,\n    'Element type is invalid. Received a promise that resolves to: %s. ' +\n      'Lazy element type must resolve to a class or function.%s',\n    Component,\n    hint,\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(\n      workInProgress,\n      Component,\n      false,\n    );\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  let value;\n\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    setIsRendering(false);\n  } else {\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n\n  if (__DEV__) {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.render === 'function' &&\n      value.$$typeof === undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    !disableModulePatternComponents &&\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    initializeUpdateQueue(workInProgress);\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes,\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentNameFromType(Component) || 'Unknown',\n        );\n      }\n\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderLanes,\n          );\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n    }\n    reconcileChildren(null, workInProgress, value, renderLanes);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n    if (workInProgress.ref !== null) {\n      let info = '';\n      const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      let warningKey = ownerName || '';\n      const debugSource = workInProgress._debugSource;\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n        console.error(\n          'Function components cannot be given refs. ' +\n            'Attempts to access this ref will fail. ' +\n            'Did you mean to use React.forwardRef()?%s',\n          info,\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nconst SUSPENDED_MARKER: SuspenseState = {\n  dehydrated: null,\n  retryLane: NoLane,\n};\n\nfunction mountSuspenseOffscreenState(renderLanes: Lanes): OffscreenState {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCachePool(),\n  };\n}\n\nfunction updateSuspenseOffscreenState(\n  prevOffscreenState: OffscreenState,\n  renderLanes: Lanes,\n): OffscreenState {\n  let cachePool: SpawnedCachePool | null = null;\n  if (enableCache) {\n    const prevCachePool: SpawnedCachePool | null = prevOffscreenState.cachePool;\n    if (prevCachePool !== null) {\n      const parentCache = isPrimaryRenderer\n        ? CacheContext._currentValue\n        : CacheContext._currentValue2;\n      if (prevCachePool.parent !== parentCache) {\n        // Detected a refresh in the parent. This overrides any previously\n        // suspended cache.\n        cachePool = {\n          parent: parentCache,\n          pool: parentCache,\n        };\n      } else {\n        // We can reuse the cache from last time. The only thing that would have\n        // overridden it is a parent refresh, which we checked for above.\n        cachePool = prevCachePool;\n      }\n    } else {\n      // If there's no previous cache pool, grab the current one.\n      cachePool = getSuspendedCachePool();\n    }\n  }\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool,\n  };\n}\n\n// TODO: Probably should inline this back\nfunction shouldRemainOnFallback(\n  suspenseContext: SuspenseContext,\n  current: null | Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    const suspenseState: SuspenseState = current.memoizedState;\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  }\n\n  // Not currently showing content. Consult the Suspense context.\n  return hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n}\n\nfunction getRemainingWorkInPrimaryTree(current: Fiber, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n\n  // This is used by DevTools to force a boundary to suspend.\n  if (__DEV__) {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let showFallback = false;\n  const didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (\n    didSuspend ||\n    shouldRemainOnFallback(\n      suspenseContext,\n      current,\n      workInProgress,\n      renderLanes,\n    )\n  ) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (\n      current === null ||\n      (current.memoizedState: null | SuspenseState) !== null\n    ) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      if (nextProps.unstable_avoidThisFallback !== true) {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext,\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n  if (current === null) {\n    // Initial mount\n    // If we're currently hydrating, try to hydrate this boundary.\n    tryToClaimNextHydratableInstance(workInProgress);\n    // This could've been a dehydrated suspense component.\n    if (enableSuspenseServerRenderer) {\n      const suspenseState: null | SuspenseState = workInProgress.memoizedState;\n      if (suspenseState !== null) {\n        const dehydrated = suspenseState.dehydrated;\n        if (dehydrated !== null) {\n          return mountDehydratedSuspenseComponent(\n            workInProgress,\n            dehydrated,\n            renderLanes,\n          );\n        }\n      }\n    }\n\n    const nextPrimaryChildren = nextProps.children;\n    const nextFallbackChildren = nextProps.fallback;\n    if (showFallback) {\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackFragment;\n    } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {\n      // This is a CPU-bound tree. Skip this tree and show a placeholder to\n      // unblock the surrounding content. Then immediately retry after the\n      // initial commit.\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      // Since nothing actually suspended, there will nothing to ping this to\n      // get it started back up to attempt the next item. While in terms of\n      // priority this work has the same priority as this current render, it's\n      // not part of the same transition once the transition has committed. If\n      // it's sync, we still want to yield so that it can be painted.\n      // Conceptually, this is really the same as pinging. We can use any\n      // RetryLane even if it's the one currently rendering since we're leaving\n      // it behind on this node.\n      workInProgress.lanes = SomeRetryLane;\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n    }\n  } else {\n    // This is an update.\n\n    // If the current fiber has a SuspenseState, that means it's already showing\n    // a fallback.\n    const prevState: null | SuspenseState = current.memoizedState;\n    if (prevState !== null) {\n      // The current tree is already showing a fallback\n\n      // Special path for hydration\n      if (enableSuspenseServerRenderer) {\n        const dehydrated = prevState.dehydrated;\n        if (dehydrated !== null) {\n          if (!didSuspend) {\n            return updateDehydratedSuspenseComponent(\n              current,\n              workInProgress,\n              dehydrated,\n              prevState,\n              renderLanes,\n            );\n          } else if (\n            (workInProgress.memoizedState: null | SuspenseState) !== null\n          ) {\n            // Something suspended and we should still be in dehydrated mode.\n            // Leave the existing child in place.\n            workInProgress.child = current.child;\n            // The dehydrated completion pass expects this flag to be there\n            // but the normal suspense pass doesn't.\n            workInProgress.flags |= DidCapture;\n            return null;\n          } else {\n            // Suspended but we should no longer be in dehydrated mode.\n            // Therefore we now have to render the fallback.\n            const nextPrimaryChildren = nextProps.children;\n            const nextFallbackChildren = nextProps.fallback;\n            const fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n              current,\n              workInProgress,\n              nextPrimaryChildren,\n              nextFallbackChildren,\n              renderLanes,\n            );\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n              renderLanes,\n            );\n            workInProgress.memoizedState = SUSPENDED_MARKER;\n            return fallbackChildFragment;\n          }\n        }\n      }\n\n      if (showFallback) {\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    } else {\n      // The current tree is not already showing a fallback.\n      if (showFallback) {\n        // Timed out.\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        // Still haven't timed out. Continue rendering the children, like we\n        // normally do.\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    mode,\n    renderLanes,\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const progressedPrimaryFragment: Fiber | null = workInProgress.child;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  let fallbackChildFragment;\n  if (\n    (mode & ConcurrentMode) === NoMode &&\n    progressedPrimaryFragment !== null\n  ) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(\n      primaryChildProps,\n      mode,\n      NoLanes,\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(\n  offscreenProps: OffscreenProps,\n  mode: TypeOfMode,\n  renderLanes: Lanes,\n) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(\n  current: Fiber,\n  offscreenProps: OffscreenProps,\n) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildFragment = updateWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: 'visible',\n      children: primaryChildren,\n    },\n  );\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    const deletions = workInProgress.deletions;\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & ConcurrentMode) === NoMode &&\n    // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    const progressedPrimaryFragment: Fiber = (workInProgress.child: any);\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    }\n\n    if (enablePersistentOffscreenHostContainer && supportsPersistence) {\n      // In persistent mode, the offscreen children are wrapped in a host node.\n      // We need to complete it now, because we're going to skip over its normal\n      // complete phase and go straight to rendering the fallback.\n      const currentOffscreenContainer = currentPrimaryChildFragment.child;\n      const offscreenContainer: Fiber = (primaryChildFragment.child: any);\n      const containerProps = getOffscreenContainerProps(\n        'hidden',\n        primaryChildren,\n      );\n      offscreenContainer.pendingProps = containerProps;\n      offscreenContainer.memoizedProps = containerProps;\n      completeSuspendedOffscreenHostContainer(\n        currentOffscreenContainer,\n        offscreenContainer,\n      );\n    }\n\n    // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps,\n    );\n\n    if (enablePersistentOffscreenHostContainer && supportsPersistence) {\n      // In persistent mode, the offscreen children are wrapped in a host node.\n      // We need to complete it now, because we're going to skip over its normal\n      // complete phase and go straight to rendering the fallback.\n      const currentOffscreenContainer = currentPrimaryChildFragment.child;\n      if (currentOffscreenContainer !== null) {\n        const isHidden = true;\n        const offscreenContainer = reconcileOffscreenHostContainer(\n          currentPrimaryChildFragment,\n          primaryChildFragment,\n          isHidden,\n          primaryChildren,\n          renderLanes,\n        );\n        offscreenContainer.memoizedProps = offscreenContainer.pendingProps;\n        completeSuspendedOffscreenHostContainer(\n          currentOffscreenContainer,\n          offscreenContainer,\n        );\n      }\n    }\n\n    // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n    primaryChildFragment.subtreeFlags =\n      currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n  let fallbackChildFragment;\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren,\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n    // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This will add the old fiber to the deletion list\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n\n  // We're now not suspended nor dehydrated.\n  const nextProps = workInProgress.pendingProps;\n  const primaryChildren = nextProps.children;\n  const primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren,\n    renderLanes,\n  );\n  // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const fiberMode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    fiberMode,\n    NoLanes,\n  );\n  const fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    fiberMode,\n    renderLanes,\n    null,\n  );\n  // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n  fallbackChildFragment.flags |= Placement;\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  renderLanes: Lanes,\n): null | Fiber {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (__DEV__) {\n      console.error(\n        'Cannot hydrate Suspense in legacy mode. Switch from ' +\n          'ReactDOM.hydrate(element, container) to ' +\n          'ReactDOM.createRoot(container, { hydrate: true })' +\n          '.render(element) or remove the Suspense components from ' +\n          'the server rendered components.',\n      );\n    }\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  suspenseState: SuspenseState,\n  renderLanes: Lanes,\n): null | Fiber {\n  // We should never be hydrating at this point because it is the first pass,\n  // but after we've already committed once.\n  warnIfHydrating();\n\n  if ((getExecutionContext() & RetryAfterError) !== NoContext) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This boundary is in a permanent fallback state. In this case, we'll never\n    // get an update and we'll never be able to hydrate the final content. Let's just try the\n    // client side render instead.\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if (\n    enableLazyContextPropagation &&\n    // TODO: Factoring is a little weird, since we check this right below, too.\n    // But don't want to re-arrange the if-else chain until/unless this\n    // feature lands.\n    !didReceiveUpdate\n  ) {\n    // We need to check if any children have context before we decide to bail\n    // out, so propagate the changes now.\n    lazilyPropagateParentContextChanges(current, workInProgress, renderLanes);\n  }\n\n  // We use lanes to indicate that a child might depend on context, so if\n  // any context has changed, we need to treat is as if the input might have changed.\n  const hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n  if (didReceiveUpdate || hasContextChanged) {\n    // This boundary has changed since the first render. This means that we are now unable to\n    // hydrate it. We might still be able to hydrate it using a higher priority lane.\n    const root = getWorkInProgressRoot();\n    if (root !== null) {\n      const attemptHydrationAtLane = getBumpedLaneForHydration(\n        root,\n        renderLanes,\n      );\n      if (\n        attemptHydrationAtLane !== NoLane &&\n        attemptHydrationAtLane !== suspenseState.retryLane\n      ) {\n        // Intentionally mutating since this render will get interrupted. This\n        // is one of the very rare times where we mutate the current tree\n        // during the render phase.\n        suspenseState.retryLane = attemptHydrationAtLane;\n        // TODO: Ideally this would inherit the event time of the current render\n        const eventTime = NoTimestamp;\n        scheduleUpdateOnFiber(current, attemptHydrationAtLane, eventTime);\n      } else {\n        // We have already tried to ping at a higher priority than we're rendering with\n        // so if we got here, we must have failed to hydrate at those levels. We must\n        // now give up. Instead, we're going to delete the whole subtree and instead inject\n        // a new real Suspense boundary to take its place, which may render content\n        // or fallback. This might suspend for a while and if it does we might still have\n        // an opportunity to hydrate before this pass commits.\n      }\n    }\n\n    // If we have scheduled higher pri work above, this will probably just abort the render\n    // since we now have higher priority work, but in case it doesn't, we need to prepare to\n    // render something, if we time out. Even if that requires us to delete everything and\n    // skip hydration.\n    // Delay having to do this as long as the suspense timeout allows us.\n    renderDidSuspendDelayIfPossible();\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  } else if (isSuspenseInstancePending(suspenseInstance)) {\n    // This component is still pending more data from the server, so we can't hydrate its\n    // content. We treat it as if this component suspended itself. It might seem as if\n    // we could just try to render it client-side instead. However, this will perform a\n    // lot of unnecessary work and is unlikely to complete since it often will suspend\n    // on missing data anyway. Additionally, the server might be able to render more\n    // than we can on the client yet. In that case we'd end up with more fallback states\n    // on the client than if we just leave it alone. If the server times out or errors\n    // these should update this boundary to the permanent Fallback state instead.\n    // Mark it as having captured (i.e. suspended).\n    workInProgress.flags |= DidCapture;\n    // Leave the child in place. I.e. the dehydrated fragment.\n    workInProgress.child = current.child;\n    // Register a callback to retry this boundary once the server has sent the result.\n    const retry = retryDehydratedSuspenseBoundary.bind(null, current);\n    registerSuspenseInstanceRetry(suspenseInstance, retry);\n    return null;\n  } else {\n    // This is the first attempt.\n    reenterHydrationStateFromDehydratedSuspenseInstance(\n      workInProgress,\n      suspenseInstance,\n    );\n    const nextProps = workInProgress.pendingProps;\n    const primaryChildren = nextProps.children;\n    const primaryChildFragment = mountSuspensePrimaryChildren(\n      workInProgress,\n      primaryChildren,\n      renderLanes,\n    );\n    // Mark the children as hydrating. This is a fast path to know whether this\n    // tree is part of a hydrating tree. This is used to determine if a child\n    // node has fully mounted yet, and for scheduling event replaying.\n    // Conceptually this is similar to Placement in that a new subtree is\n    // inserted into the React tree here. It just happens to not need DOM\n    // mutations because it already exists.\n    primaryChildFragment.flags |= Hydrating;\n    return primaryChildFragment;\n  }\n}\n\nfunction scheduleWorkOnFiber(fiber: Fiber, renderLanes: Lanes) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n  scheduleWorkOnParentPath(fiber.return, renderLanes);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress: Fiber,\n  firstChild: null | Fiber,\n  renderLanes: Lanes,\n): void {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        scheduleWorkOnFiber(node, renderLanes);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleWorkOnFiber(node, renderLanes);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === workInProgress) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild: null | Fiber): null | Fiber {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow: null | Fiber = null;\n  while (row !== null) {\n    const currentRow = row.alternate;\n    // New rows can't be content rows.\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n    row = row.sibling;\n  }\n  return lastContentRow;\n}\n\ntype SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together' | void;\n\nfunction validateRevealOrder(revealOrder: SuspenseListRevealOrder) {\n  if (__DEV__) {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== 'forwards' &&\n      revealOrder !== 'backwards' &&\n      revealOrder !== 'together' &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          case 'forward':\n          case 'backward': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          default:\n            console.error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder,\n            );\n            break;\n        }\n      } else {\n        console.error(\n          '%s is not a supported value for revealOrder on <SuspenseList />. ' +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder,\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(\n  tailMode: SuspenseListTailMode,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode,\n        );\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode,\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot: mixed, index: number) {\n  if (__DEV__) {\n    const isAnArray = isArray(childSlot);\n    const isIterable =\n      !isAnArray && typeof getIteratorFn(childSlot) === 'function';\n    if (isAnArray || isIterable) {\n      const type = isAnArray ? 'array' : 'iterable';\n      console.error(\n        'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' +\n          'an additional SuspenseList to configure its revealOrder: ' +\n          '<SuspenseList revealOrder=...> ... ' +\n          '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' +\n          '</SuspenseList>',\n        type,\n        index,\n        type,\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction validateSuspenseListChildren(\n  children: mixed,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (\n      (revealOrder === 'forwards' || revealOrder === 'backwards') &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        const iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          const childrenIterator = iteratorFn.call(children);\n          if (childrenIterator) {\n            let step = childrenIterator.next();\n            let i = 0;\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, i)) {\n                return;\n              }\n              i++;\n            }\n          }\n        } else {\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              'This is not useful since it needs multiple rows. ' +\n              'Did you mean to pass multiple children or an array?',\n            revealOrder,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress: Fiber,\n  isBackwards: boolean,\n  tail: null | Fiber,\n  lastContentRow: null | Fiber,\n  tailMode: SuspenseListTailMode,\n): void {\n  const renderState: null | SuspenseListRenderState =\n    workInProgress.memoizedState;\n  if (renderState === null) {\n    workInProgress.memoizedState = ({\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode,\n    }: SuspenseListRenderState);\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n}\n\n// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder: SuspenseListRevealOrder = nextProps.revealOrder;\n  const tailMode: SuspenseListTailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  const shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback,\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    const didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes,\n      );\n    }\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards': {\n        const lastContentRow = findLastContentRow(workInProgress.child);\n        let tail;\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode,\n        );\n        break;\n      }\n      case 'backwards': {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        let tail = null;\n        let row = workInProgress.child;\n        workInProgress.child = null;\n        while (row !== null) {\n          const currentRow = row.alternate;\n          // New rows can't be content rows.\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n          const nextRow = row.sibling;\n          row.sibling = tail;\n          tail = row;\n          row = nextRow;\n        }\n        // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          tail,\n          null, // last\n          tailMode,\n        );\n        break;\n      }\n      case 'together': {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined,\n        );\n        break;\n      }\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n        console.error(\n          'The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?',\n        );\n      }\n    }\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  if (enableLazyContextPropagation) {\n    // In the lazy propagation implementation, we don't scan for matching\n    // consumers until something bails out, because until something bails out\n    // we're going to visit those nodes, anyway. The trade-off is that it shifts\n    // responsibility to the consumer to track whether something has changed.\n  } else {\n    if (oldProps !== null) {\n      const oldValue = oldProps.value;\n      if (is(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (\n          oldProps.children === newProps.children &&\n          !hasLegacyContextChanged()\n        ) {\n          return bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  } else {\n    newChildren = render(newValue);\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateScopeComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nexport function checkIfWorkInProgressReceivedUpdate() {\n  return didReceiveUpdate;\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes);\n\n  // Check if the children have any pending work.\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n\n    if (enableLazyContextPropagation && current !== null) {\n      // Before bailing out, check if there are any context changes in\n      // the children.\n      lazilyPropagateParentContextChanges(current, workInProgress, renderLanes);\n      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(\n  current: Fiber,\n  oldWorkInProgress: Fiber,\n  newWorkInProgress: Fiber,\n): Fiber | null {\n  if (__DEV__) {\n    const returnFiber = oldWorkInProgress.return;\n    if (returnFiber === null) {\n      throw new Error('Cannot swap the root fiber.');\n    }\n\n    // Disconnect from the old current.\n    // It will get deleted.\n    current.alternate = null;\n    oldWorkInProgress.alternate = null;\n\n    // Connect to the new tree.\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref;\n\n    // Replace the child/sibling pointers above it.\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      let prevSibling = returnFiber.child;\n      if (prevSibling === null) {\n        throw new Error('Expected parent to have a child.');\n      }\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n        if (prevSibling === null) {\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n      prevSibling.sibling = newWorkInProgress;\n    }\n\n    // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n    const deletions = returnFiber.deletions;\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement;\n\n    // Restart work from the new fiber.\n    return newWorkInProgress;\n  } else {\n    throw new Error(\n      'Did not expect this call in production. ' +\n        'This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction checkScheduledUpdateOrContext(\n  current: Fiber,\n  renderLanes: Lanes,\n): boolean {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  const updateLanes = current.lanes;\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  }\n  // No pending update, but because context is propagated lazily, we need\n  // to check for a context change before we bail out.\n  if (enableLazyContextPropagation) {\n    const dependencies = current.dependencies;\n    if (dependencies !== null && checkIfContextChanged(dependencies)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      if (enableCache) {\n        const root: FiberRoot = workInProgress.stateNode;\n        const cache: Cache = current.memoizedState.cache;\n        pushCacheProvider(workInProgress, cache);\n        pushRootCachePool(root);\n      }\n      resetHydrationState();\n      break;\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        pushLegacyContextProvider(workInProgress);\n      }\n      break;\n    }\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case ContextProvider: {\n      const newValue = workInProgress.memoizedProps.value;\n      const context: ReactContext<any> = workInProgress.type._context;\n      pushProvider(workInProgress, context, newValue);\n      break;\n    }\n    case Profiler:\n      if (enableProfilerTimer) {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        const hasChildWork = includesSomeLane(\n          renderLanes,\n          workInProgress.childLanes,\n        );\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        if (enableProfilerCommitHooks) {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          const stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n      break;\n    case SuspenseComponent: {\n      const state: SuspenseState | null = workInProgress.memoizedState;\n      if (state !== null) {\n        if (enableSuspenseServerRenderer) {\n          if (state.dehydrated !== null) {\n            pushSuspenseContext(\n              workInProgress,\n              setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n            );\n            // We know that this component will suspend again because if it has\n            // been unsuspended it has committed as a resolved Suspense component.\n            // If it needs to be retried, it should have work scheduled on it.\n            workInProgress.flags |= DidCapture;\n            // We should never render the children of a dehydrated boundary until we\n            // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n            return null;\n          }\n        }\n\n        // If this boundary is currently timed out, we need to decide\n        // whether to retry the primary children, or to skip over it and\n        // go straight to the fallback. Check the priority of the primary\n        // child fragment.\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const primaryChildLanes = primaryChildFragment.childLanes;\n        if (includesSomeLane(renderLanes, primaryChildLanes)) {\n          // The primary children have pending work. Use the normal path\n          // to attempt to render the primary children again.\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        } else {\n          // The primary child fragment does not have pending work marked\n          // on it\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n          );\n          // The primary children do not have pending work with sufficient\n          // priority. Bailout.\n          const child = bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n          if (child !== null) {\n            // The fallback children have pending work. Skip over the\n            // primary children and work on the fallback.\n            return child.sibling;\n          } else {\n            // Note: We can return `null` here because we already checked\n            // whether there were nested context consumers, via the call to\n            // `bailoutOnAlreadyFinishedWork` above.\n            return null;\n          }\n        }\n      } else {\n        pushSuspenseContext(\n          workInProgress,\n          setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n        );\n      }\n      break;\n    }\n    case SuspenseListComponent: {\n      const didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n      let hasChildWork = includesSomeLane(\n        renderLanes,\n        workInProgress.childLanes,\n      );\n\n      if (enableLazyContextPropagation && !hasChildWork) {\n        // Context changes may not have been propagated yet. We need to do\n        // that now, before we can decide whether to bail out.\n        // TODO: We use `childLanes` as a heuristic for whether there is\n        // remaining work in a few places, including\n        // `bailoutOnAlreadyFinishedWork` and\n        // `updateDehydratedSuspenseComponent`. We should maybe extract this\n        // into a dedicated function.\n        lazilyPropagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n        hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n      }\n\n      if (didSuspendBefore) {\n        if (hasChildWork) {\n          // If something was in fallback state last time, and we have all the\n          // same children then we're still in progressive loading state.\n          // Something might get unblocked by state updates or retries in the\n          // tree which will affect the tail. So we need to use the normal\n          // path to compute the correct tail.\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n        }\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        workInProgress.flags |= DidCapture;\n      }\n\n      // If nothing suspended before and we're rendering the same children,\n      // then the tail doesn't matter. Anything new that suspends will work\n      // in the \"together\" mode, so we can continue from the state we had.\n      const renderState = workInProgress.memoizedState;\n      if (renderState !== null) {\n        // Reset to the \"together\" mode in case we've started a different\n        // update in the past but didn't complete it.\n        renderState.rendering = null;\n        renderState.tail = null;\n        renderState.lastEffect = null;\n      }\n      pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n      if (hasChildWork) {\n        break;\n      } else {\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        return null;\n      }\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      // Need to check if the tree still needs to be deferred. This is\n      // almost identical to the logic used in the normal update path,\n      // so we'll just enter that. The only difference is we'll bail out\n      // at the next level instead of this one, because the child props\n      // have not changed. Which is fine.\n      // TODO: Probably should refactor `beginWork` to split the bailout\n      // path from the normal path. I'm tempted to do a labeled break here\n      // but I won't :)\n      workInProgress.lanes = NoLanes;\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        const cache: Cache = current.memoizedState.cache;\n        pushCacheProvider(workInProgress, cache);\n      }\n      break;\n    }\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (__DEV__) {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes,\n        ),\n      );\n    }\n  }\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      // Force a re-render if the implementation changed due to hot reload:\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      const hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n        current,\n        renderLanes,\n      );\n      if (\n        !hasScheduledUpdateOrContext &&\n        // If this is the second pass of an error or suspense boundary, there\n        // may not be work scheduled on `current`, so we check for this flag.\n        (workInProgress.flags & DidCapture) === NoFlags\n      ) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes,\n      );\n    }\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        renderLanes,\n      );\n    }\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentNameFromType(type),\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes,\n      );\n    }\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        return updateScopeComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case LegacyHiddenComponent: {\n      return updateLegacyHiddenComponent(current, workInProgress, renderLanes);\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        return updateCacheComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {Cache, SpawnedCachePool} from './ReactFiberCacheComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  SuspenseListComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport {DidCapture, NoFlags, ShouldCapture} from './ReactFiberFlags';\nimport {NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  enableSuspenseServerRenderer,\n  enableProfilerTimer,\n  enableCache,\n} from 'shared/ReactFeatureFlags';\n\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext.old';\nimport {popSuspenseContext} from './ReactFiberSuspenseContext.old';\nimport {resetHydrationState} from './ReactFiberHydrationContext.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {popRenderLanes} from './ReactFiberWorkLoop.old';\nimport {\n  popCacheProvider,\n  popRootCachePool,\n  popCachePool,\n} from './ReactFiberCacheComponent.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\n\nimport invariant from 'shared/invariant';\n\nfunction unwindWork(workInProgress: Fiber, renderLanes: Lanes) {\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      if (enableCache) {\n        const root: FiberRoot = workInProgress.stateNode;\n        popRootCachePool(root, renderLanes);\n\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const flags = workInProgress.flags;\n      invariant(\n        (flags & DidCapture) === NoFlags,\n        'The root failed to unmount after an error. This is likely a bug in ' +\n          'React. Please file an issue.',\n      );\n      workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n      return workInProgress;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\n          invariant(\n            workInProgress.alternate !== null,\n            'Threw in newly mounted dehydrated component. This is likely a bug in ' +\n              'React. Please file an issue.',\n          );\n          resetHydrationState();\n        }\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      const context: ReactContext<any> = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      if (enableCache) {\n        const spawnedCachePool: SpawnedCachePool | null = (workInProgress.updateQueue: any);\n        if (spawnedCachePool !== null) {\n          popCachePool(workInProgress);\n        }\n      }\n      return null;\n    case CacheComponent:\n      if (enableCache) {\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork: Fiber, renderLanes: Lanes) {\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      if (enableCache) {\n        const root: FiberRoot = interruptedWork.stateNode;\n        popRootCachePool(root, renderLanes);\n\n        const cache: Cache = interruptedWork.memoizedState.cache;\n        popCacheProvider(interruptedWork, cache);\n      }\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      resetMutableSourceWorkInProgressVersions();\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case ContextProvider:\n      const context: ReactContext<any> = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      if (enableCache) {\n        const spawnedCachePool: SpawnedCachePool | null = (interruptedWork.updateQueue: any);\n        if (spawnedCachePool !== null) {\n          popCachePool(interruptedWork);\n        }\n      }\n\n      break;\n    case CacheComponent:\n      if (enableCache) {\n        const cache: Cache = interruptedWork.memoizedState.cache;\n        popCacheProvider(interruptedWork, cache);\n      }\n      break;\n    default:\n      break;\n  }\n}\n\nexport {unwindWork, unwindInterruptedWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\n\n// Provided by www\nconst ReactFbErrorUtils = require('ReactFbErrorUtils');\ninvariant(\n  typeof ReactFbErrorUtils.invokeGuardedCallback === 'function',\n  'Expected ReactFbErrorUtils.invokeGuardedCallback to be a function.',\n);\n\nconst invokeGuardedCallbackImpl = function<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  // This will call `this.onError(err)` if an error was caught.\n  ReactFbErrorUtils.invokeGuardedCallback.apply(this, arguments);\n};\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    invariant(\n      false,\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\nimport type {HookFlags} from './ReactHookEffectTags';\n\nimport {\n  enableCreateEventHandleAPI,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableSuspenseServerRenderer,\n  enableSuspenseCallback,\n  enableScopeAPI,\n  enableStrictEffects,\n  deletedTreeCleanUpLevel,\n  enableSuspenseLayoutEffectSemantics,\n  enableUpdaterTracking,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedFragment,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseListComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {detachDeletedInstance} from './ReactFiberHostConfig';\nimport {\n  NoFlags,\n  ContentReset,\n  Placement,\n  PlacementAndUpdate,\n  ChildDeletion,\n  Snapshot,\n  Update,\n  Ref,\n  Hydrating,\n  HydratingAndUpdate,\n  Passive,\n  BeforeMutationMask,\n  MutationMask,\n  LayoutMask,\n  PassiveMask,\n  Visibility,\n} from './ReactFiberFlags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport invariant from 'shared/invariant';\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {onCommitUnmount} from './ReactFiberDevToolsHook.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  isCurrentUpdateNested,\n  getCommitTime,\n  recordLayoutEffectDuration,\n  startLayoutEffectTimer,\n  recordPassiveEffectDuration,\n  startPassiveEffectTimer,\n} from './ReactProfilerTimer.old';\nimport {ConcurrentMode, NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {commitUpdateQueue} from './ReactUpdateQueue.old';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  supportsHydration,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n  commitHydratedContainer,\n  commitHydratedSuspenseInstance,\n  clearContainer,\n  prepareScopeUpdate,\n  prepareForCommit,\n  beforeActiveInstanceBlur,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  resolveRetryWakeable,\n  markCommitTimeOfFallback,\n  enqueuePendingPassiveProfilerEffect,\n  restorePendingUpdaters,\n} from './ReactFiberWorkLoop.old';\nimport {\n  NoFlags as NoHookEffect,\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork.old';\nimport {doesFiberContain} from './ReactFiberTreeReflection';\nimport {invokeGuardedCallback, clearCaughtError} from 'shared/ReactErrorUtils';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\n// Used during the commit phase to track the state of the Offscreen component stack.\n// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.\n// Only used when enableSuspenseLayoutEffectSemantics is enabled.\nlet offscreenSubtreeIsHidden: boolean = false;\nlet offscreenSubtreeWasHidden: boolean = false;\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nlet nextEffect: Fiber | null = null;\n\n// Used for Profiling builds to track updaters.\nlet inProgressLanes: Lanes | null = null;\nlet inProgressRoot: FiberRoot | null = null;\n\nfunction reportUncaughtErrorInDEV(error) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  if (__DEV__) {\n    invokeGuardedCallback(null, () => {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nconst callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  if (\n    enableProfilerTimer &&\n    enableProfilerCommitHooks &&\n    current.mode & ProfileMode\n  ) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n};\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyCallCommitHookLayoutEffectListMount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  try {\n    commitHookEffectListMount(HookLayout, current);\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  instance: any,\n) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyCallComponentDidMount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  instance: any,\n) {\n  try {\n    instance.componentDidMount();\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyAttachRef(current: Fiber, nearestMountedAncestor: Fiber | null) {\n  try {\n    commitAttachRef(current);\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nfunction safelyDetachRef(current: Fiber, nearestMountedAncestor: Fiber | null) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      try {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          current.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          ref(null);\n        }\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  destroy: () => void,\n) {\n  try {\n    destroy();\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nlet focusedInstanceHandle: null | Fiber = null;\nlet shouldFireAfterActiveInstanceBlur: boolean = false;\n\nexport function commitBeforeMutationEffects(\n  root: FiberRoot,\n  firstChild: Fiber,\n) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin();\n\n  // We no longer need to track the active instance fiber\n  const shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // This phase is only used for beforeActiveInstanceBlur.\n    // Let's skip the whole loop if it's off.\n    if (enableCreateEventHandleAPI) {\n      // TODO: Should wrap this in flags check, too, as optimization\n      const deletions = fiber.deletions;\n      if (deletions !== null) {\n        for (let i = 0; i < deletions.length; i++) {\n          const deletion = deletions[i];\n          commitBeforeMutationEffectsDeletion(deletion);\n        }\n      }\n    }\n\n    const child = fiber.child;\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\n      child !== null\n    ) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      reportUncaughtErrorInDEV(error);\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork: Fiber) {\n  const current = finishedWork.alternate;\n  const flags = finishedWork.flags;\n\n  if (enableCreateEventHandleAPI) {\n    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {\n      // Check to see if the focused element was inside of a hidden (Suspense) subtree.\n      // TODO: Move this out of the hot path using a dedicated effect tag.\n      if (\n        finishedWork.tag === SuspenseComponent &&\n        isSuspenseBoundaryBeingHidden(current, finishedWork) &&\n        doesFiberContain(finishedWork, focusedInstanceHandle)\n      ) {\n        shouldFireAfterActiveInstanceBlur = true;\n        beforeActiveInstanceBlur(finishedWork);\n      }\n    }\n  }\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentDebugFiberInDEV(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        break;\n      }\n      case ClassComponent: {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n            }\n          }\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<mixed>);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              console.error(\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentNameFromFiber(finishedWork),\n              );\n            }\n          }\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n        break;\n      }\n      case HostRoot: {\n        if (supportsMutation) {\n          const root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n        break;\n      }\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n      default: {\n        invariant(\n          false,\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.',\n        );\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n  }\n}\n\nfunction commitBeforeMutationEffectsDeletion(deletion: Fiber) {\n  if (enableCreateEventHandleAPI) {\n    // TODO (effects) It would be nice to avoid calling doesFiberContain()\n    // Maybe we can repurpose one of the subtreeFlags positions for this instead?\n    // Use it to store which part of the tree the focused instance is in?\n    // This assumes we can safely determine that instance during the \"render\" phase.\n    if (doesFiberContain(deletion, ((focusedInstanceHandle: any): Fiber))) {\n      shouldFireAfterActiveInstanceBlur = true;\n      beforeActiveInstanceBlur(deletion);\n    }\n  }\n}\n\nfunction commitHookEffectListUnmount(\n  flags: HookFlags,\n  finishedWork: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Mount\n        const create = effect.create;\n        effect.destroy = create();\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                'useEffect(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            console.error(\n              'An effect function must not return anything besides a function, ' +\n                'which is used for clean-up.%s',\n              addendum,\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nexport function commitPassiveEffectDurations(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          const {passiveEffectDuration} = finishedWork.stateNode;\n          const {id, onPostCommit} = finishedWork.memoizedProps;\n\n          // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n          const commitTime = getCommitTime();\n\n          let phase = finishedWork.alternate === null ? 'mount' : 'update';\n          if (enableProfilerNestedUpdatePhase) {\n            if (isCurrentUpdateNested()) {\n              phase = 'nested-update';\n            }\n          }\n\n          if (typeof onPostCommit === 'function') {\n            onPostCommit(id, phase, passiveEffectDuration, commitTime);\n          }\n\n          // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n          let parentFiber = finishedWork.return;\n          outer: while (parentFiber !== null) {\n            switch (parentFiber.tag) {\n              case HostRoot:\n                const root = parentFiber.stateNode;\n                root.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n              case Profiler:\n                const parentStateNode = parentFiber.stateNode;\n                parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n            }\n            parentFiber = parentFiber.return;\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n): void {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        if (\n          !enableSuspenseLayoutEffectSemantics ||\n          !offscreenSubtreeWasHidden\n        ) {\n          // At this point layout effects have already been destroyed (during mutation phase).\n          // This is done to prevent sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListMount(\n                HookLayout | HookHasEffect,\n                finishedWork,\n              );\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n          }\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = finishedWork.stateNode;\n        if (finishedWork.flags & Update) {\n          if (!offscreenSubtreeWasHidden) {\n            if (current === null) {\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              if (__DEV__) {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    console.error(\n                      'Expected %s props to match memoized props before ' +\n                        'componentDidMount. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.props`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                  if (instance.state !== finishedWork.memoizedState) {\n                    console.error(\n                      'Expected %s state to match memoized state before ' +\n                        'componentDidMount. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.state`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                }\n              }\n              if (\n                enableProfilerTimer &&\n                enableProfilerCommitHooks &&\n                finishedWork.mode & ProfileMode\n              ) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidMount();\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidMount();\n              }\n            } else {\n              const prevProps =\n                finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps,\n                    );\n              const prevState = current.memoizedState;\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              if (__DEV__) {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    console.error(\n                      'Expected %s props to match memoized props before ' +\n                        'componentDidUpdate. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.props`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                  if (instance.state !== finishedWork.memoizedState) {\n                    console.error(\n                      'Expected %s state to match memoized state before ' +\n                        'componentDidUpdate. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.state`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                }\n              }\n              if (\n                enableProfilerTimer &&\n                enableProfilerCommitHooks &&\n                finishedWork.mode & ProfileMode\n              ) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidUpdate(\n                    prevProps,\n                    prevState,\n                    instance.__reactInternalSnapshotBeforeUpdate,\n                  );\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidUpdate(\n                  prevProps,\n                  prevState,\n                  instance.__reactInternalSnapshotBeforeUpdate,\n                );\n              }\n            }\n          }\n        }\n\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue: UpdateQueue<\n          *,\n        > | null = (finishedWork.updateQueue: any);\n        if (updateQueue !== null) {\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'processing the update queue. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'processing the update queue. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n            }\n          }\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n        break;\n      }\n      case HostRoot: {\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue: UpdateQueue<\n          *,\n        > | null = (finishedWork.updateQueue: any);\n        if (updateQueue !== null) {\n          let instance = null;\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n              case ClassComponent:\n                instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n        break;\n      }\n      case HostComponent: {\n        const instance: Instance = finishedWork.stateNode;\n\n        // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n        if (current === null && finishedWork.flags & Update) {\n          const type = finishedWork.type;\n          const props = finishedWork.memoizedProps;\n          commitMount(instance, type, props, finishedWork);\n        }\n\n        break;\n      }\n      case HostText: {\n        // We have no life-cycles associated with text.\n        break;\n      }\n      case HostPortal: {\n        // We have no life-cycles associated with portals.\n        break;\n      }\n      case Profiler: {\n        if (enableProfilerTimer) {\n          const {onCommit, onRender} = finishedWork.memoizedProps;\n          const {effectDuration} = finishedWork.stateNode;\n\n          const commitTime = getCommitTime();\n\n          let phase = current === null ? 'mount' : 'update';\n          if (enableProfilerNestedUpdatePhase) {\n            if (isCurrentUpdateNested()) {\n              phase = 'nested-update';\n            }\n          }\n\n          if (typeof onRender === 'function') {\n            onRender(\n              finishedWork.memoizedProps.id,\n              phase,\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n            );\n          }\n\n          if (enableProfilerCommitHooks) {\n            if (typeof onCommit === 'function') {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                phase,\n                effectDuration,\n                commitTime,\n              );\n            }\n\n            // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n            // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n            // because the effect is also where times bubble to parent Profilers.\n            enqueuePendingPassiveProfilerEffect(finishedWork);\n\n            // Propagate layout effect durations to the next nearest Profiler ancestor.\n            // Do not reset these values until the next render so DevTools has a chance to read them first.\n            let parentFiber = finishedWork.return;\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  const root = parentFiber.stateNode;\n                  root.effectDuration += effectDuration;\n                  break outer;\n                case Profiler:\n                  const parentStateNode = parentFiber.stateNode;\n                  parentStateNode.effectDuration += effectDuration;\n                  break outer;\n              }\n              parentFiber = parentFiber.return;\n            }\n          }\n        }\n        break;\n      }\n      case SuspenseComponent: {\n        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      }\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n        break;\n      default:\n        invariant(\n          false,\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.',\n        );\n    }\n  }\n\n  if (!enableSuspenseLayoutEffectSemantics || !offscreenSubtreeWasHidden) {\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (finishedWork.flags & Ref && finishedWork.tag !== ScopeComponent) {\n        commitAttachRef(finishedWork);\n      }\n    } else {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction reappearLayoutEffectsOnFiber(node: Fiber) {\n  // Turn on layout effects in a tree that previously disappeared.\n  // TODO (Offscreen) Check: flags & LayoutStatic\n  switch (node.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        node.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          safelyCallCommitHookLayoutEffectListMount(node, node.return);\n        } finally {\n          recordLayoutEffectDuration(node);\n        }\n      } else {\n        safelyCallCommitHookLayoutEffectListMount(node, node.return);\n      }\n      break;\n    }\n    case ClassComponent: {\n      const instance = node.stateNode;\n      if (typeof instance.componentDidMount === 'function') {\n        safelyCallComponentDidMount(node, node.return, instance);\n      }\n      safelyAttachRef(node, node.return);\n      break;\n    }\n    case HostComponent: {\n      safelyAttachRef(node, node.return);\n      break;\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  let hostSubtreeRoot = null;\n\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n\n          const instance = node.stateNode;\n          if (isHidden) {\n            hideInstance(instance);\n          } else {\n            unhideInstance(node.stateNode, node.memoizedProps);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          const instance = node.stateNode;\n          if (isHidden) {\n            hideTextInstance(instance);\n          } else {\n            unhideTextInstance(instance, node.memoizedProps);\n          }\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        (node.memoizedState: OffscreenState) !== null &&\n        node !== finishedWork\n      ) {\n        // Found a nested Offscreen component that is hidden.\n        // Don't search any deeper. This tree should remain hidden.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    // Moved outside to ensure DCE works with this flag\n    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {\n      instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        ref(instanceToUse);\n      }\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          console.error(\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().',\n            getComponentNameFromFiber(finishedWork),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        current.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          currentRef(null);\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        currentRef(null);\n      }\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\n// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  nearestMountedAncestor: Fiber,\n): void {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      const updateQueue: FunctionComponentUpdateQueue | null = (current.updateQueue: any);\n      if (updateQueue !== null) {\n        const lastEffect = updateQueue.lastEffect;\n        if (lastEffect !== null) {\n          const firstEffect = lastEffect.next;\n\n          let effect = firstEffect;\n          do {\n            const {destroy, tag} = effect;\n            if (destroy !== undefined) {\n              if ((tag & HookLayout) !== NoHookEffect) {\n                if (\n                  enableProfilerTimer &&\n                  enableProfilerCommitHooks &&\n                  current.mode & ProfileMode\n                ) {\n                  startLayoutEffectTimer();\n                  safelyCallDestroy(current, nearestMountedAncestor, destroy);\n                  recordLayoutEffectDuration(current);\n                } else {\n                  safelyCallDestroy(current, nearestMountedAncestor, destroy);\n                }\n              }\n            }\n            effect = effect.next;\n          } while (effect !== firstEffect);\n        }\n      }\n      return;\n    }\n    case ClassComponent: {\n      safelyDetachRef(current, nearestMountedAncestor);\n      const instance = current.stateNode;\n      if (typeof instance.componentWillUnmount === 'function') {\n        safelyCallComponentWillUnmount(\n          current,\n          nearestMountedAncestor,\n          instance,\n        );\n      }\n      return;\n    }\n    case HostComponent: {\n      safelyDetachRef(current, nearestMountedAncestor);\n      return;\n    }\n    case HostPortal: {\n      // TODO: this is recursive.\n      // We are also not using this parent because\n      // the portal will get pushed immediately.\n      if (supportsMutation) {\n        unmountHostComponents(finishedRoot, current, nearestMountedAncestor);\n      } else if (supportsPersistence) {\n        emptyPortalContainer(current);\n      }\n      return;\n    }\n    case DehydratedFragment: {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((current.stateNode: SuspenseInstance));\n          }\n        }\n      }\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        safelyDetachRef(current, nearestMountedAncestor);\n      }\n      return;\n    }\n  }\n}\n\nfunction commitNestedUnmounts(\n  finishedRoot: FiberRoot,\n  root: Fiber,\n  nearestMountedAncestor: Fiber,\n): void {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  let node: Fiber = root;\n  while (true) {\n    commitUnmount(finishedRoot, node, nearestMountedAncestor);\n    // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n    if (\n      node.child !== null &&\n      // If we use mutation we drill down into portals using commitUnmount above.\n      // If we don't use mutation we drill down into portals here instead.\n      (!supportsMutation || node.tag !== HostPortal)\n    ) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === root) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiberMutation(fiber: Fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber: Fiber) {\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  }\n\n  // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n  if (!(deletedTreeCleanUpLevel >= 2)) {\n    // This is the default branch (level 0).\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.dependencies = null;\n    fiber.memoizedProps = null;\n    fiber.memoizedState = null;\n    fiber.pendingProps = null;\n    fiber.sibling = null;\n    fiber.stateNode = null;\n    fiber.updateQueue = null;\n\n    if (__DEV__) {\n      fiber._debugOwner = null;\n    }\n  } else {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null;\n\n    // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n    if (fiber.tag === HostComponent) {\n      const hostInstance: Instance = fiber.stateNode;\n      if (hostInstance !== null) {\n        detachDeletedInstance(hostInstance);\n      }\n    }\n    fiber.stateNode = null;\n\n    // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    if (__DEV__) {\n      fiber._debugOwner = null;\n    }\n\n    if (deletedTreeCleanUpLevel >= 3) {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null;\n      // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {\n    containerInfo: Container,\n    pendingChildren: ChildSet,\n    ...\n  } = current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction commitContainer(finishedWork: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case ClassComponent:\n    case HostComponent:\n    case HostText: {\n      return;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const portalOrRoot: {\n        containerInfo: Container,\n        pendingChildren: ChildSet,\n        ...\n      } = finishedWork.stateNode;\n      const {containerInfo, pendingChildren} = portalOrRoot;\n      replaceContainerChildren(containerInfo, pendingChildren);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  let parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n  invariant(\n    false,\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  let parent;\n  let isContainer;\n  const parentStateNode = parentFiber.stateNode;\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentStateNode;\n      isContainer = false;\n      break;\n    case HostRoot:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case HostPortal:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    // eslint-disable-next-line-no-fallthrough\n    default:\n      invariant(\n        false,\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n  if (parentFiber.flags & ContentReset) {\n    // Reset the text content of the parent before doing any insertions\n    resetTextContent(parent);\n    // Clear ContentReset from the effect tag\n    parentFiber.flags &= ~ContentReset;\n  }\n\n  const before = getHostSibling(finishedWork);\n  // We only have the top Fiber that was inserted but we need to recurse down its\n  // children to find all the terminal nodes.\n  if (isContainer) {\n    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n  } else {\n    insertOrAppendPlacementNode(finishedWork, before, parent);\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(\n  node: Fiber,\n  before: ?Instance,\n  parent: Container,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost) {\n    const stateNode = node.stateNode;\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(\n  node: Fiber,\n  before: ?Instance,\n  parent: Instance,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost) {\n    const stateNode = node.stateNode;\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction unmountHostComponents(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  nearestMountedAncestor: Fiber,\n): void {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node: Fiber = current;\n\n  // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n  let currentParentIsValid = false;\n\n  // Note: these two variables *must* always be updated together.\n  let currentParent;\n  let currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      let parent = node.return;\n      findParent: while (true) {\n        invariant(\n          parent !== null,\n          'Expected to find a host parent. This error is likely caused by ' +\n            'a bug in React. Please file an issue.',\n        );\n        const parentStateNode = parent.stateNode;\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parentStateNode;\n            currentParentIsContainer = false;\n            break findParent;\n          case HostRoot:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case HostPortal:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n        }\n        parent = parent.return;\n      }\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(finishedRoot, node, nearestMountedAncestor);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: Instance | TextInstance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (node.stateNode: Instance | TextInstance),\n        );\n      }\n      // Don't visit children because we already visited them.\n    } else if (\n      enableSuspenseServerRenderer &&\n      node.tag === DehydratedFragment\n    ) {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((node.stateNode: SuspenseInstance));\n          }\n        }\n      }\n\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (currentParentIsContainer) {\n        clearSuspenseBoundaryFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: SuspenseInstance),\n        );\n      } else {\n        clearSuspenseBoundary(\n          ((currentParent: any): Instance),\n          (node.stateNode: SuspenseInstance),\n        );\n      }\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true;\n        // Visit children because portals might contain host components.\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(finishedRoot, node, nearestMountedAncestor);\n      // Visit children because we may find more host components below.\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n    if (node === current) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n      node = node.return;\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  nearestMountedAncestor: Fiber,\n): void {\n  if (supportsMutation) {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(finishedRoot, current, nearestMountedAncestor);\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitNestedUnmounts(finishedRoot, current, nearestMountedAncestor);\n  }\n\n  detachFiberMutation(current);\n}\n\nfunction commitWork(current: Fiber | null, finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        // TODO: Check if we're inside an Offscreen subtree that disappeared\n        // during this commit. If so, we would have already unmounted its\n        // layout hooks. (However, since we null out the `destroy` function\n        // right before calling it, the behavior is already correct, so this\n        // would mostly be for modeling purposes.)\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          finishedWork.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n              finishedWork.return,\n            );\n          } finally {\n            recordLayoutEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListUnmount(\n            HookLayout | HookHasEffect,\n            finishedWork,\n            finishedWork.return,\n          );\n        }\n        return;\n      }\n      case Profiler: {\n        return;\n      }\n      case SuspenseComponent: {\n        commitSuspenseCallback(finishedWork);\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case SuspenseListComponent: {\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case HostRoot: {\n        if (supportsHydration) {\n          const root: FiberRoot = finishedWork.stateNode;\n          if (root.hydrate) {\n            // We've just hydrated. No need to hydrate again.\n            root.hydrate = false;\n            commitHydratedContainer(root.containerInfo);\n          }\n        }\n        break;\n      }\n      case OffscreenComponent:\n      case LegacyHiddenComponent: {\n        return;\n      }\n    }\n\n    commitContainer(finishedWork);\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      // Layout effects are destroyed during the mutation phase so that all\n      // destroy functions for all fibers are called before any create functions.\n      // This prevents sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          commitHookEffectListUnmount(\n            HookLayout | HookHasEffect,\n            finishedWork,\n            finishedWork.return,\n          );\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListUnmount(\n          HookLayout | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n      }\n      return;\n    }\n    case ClassComponent: {\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n      if (instance != null) {\n        // Commit the work prepared earlier.\n        const newProps = finishedWork.memoizedProps;\n        // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n        const oldProps = current !== null ? current.memoizedProps : newProps;\n        const type = finishedWork.type;\n        // TODO: Type the updateQueue to be specific to host components.\n        const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n        finishedWork.updateQueue = null;\n        if (updatePayload !== null) {\n          commitUpdate(\n            instance,\n            updatePayload,\n            type,\n            oldProps,\n            newProps,\n            finishedWork,\n          );\n        }\n      }\n      return;\n    }\n    case HostText: {\n      invariant(\n        finishedWork.stateNode !== null,\n        'This should have a text node initialized. This error is likely ' +\n          'caused by a bug in React. Please file an issue.',\n      );\n      const textInstance: TextInstance = finishedWork.stateNode;\n      const newText: string = finishedWork.memoizedProps;\n      // For hydration we reuse the update path but we treat the oldProps\n      // as the newProps. The updatePayload will contain the real change in\n      // this case.\n      const oldText: string =\n        current !== null ? current.memoizedProps : newText;\n      commitTextUpdate(textInstance, oldText, newText);\n      return;\n    }\n    case HostRoot: {\n      if (supportsHydration) {\n        const root: FiberRoot = finishedWork.stateNode;\n        if (root.hydrate) {\n          // We've just hydrated. No need to hydrate again.\n          root.hydrate = false;\n          commitHydratedContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case Profiler: {\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseCallback(finishedWork);\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case SuspenseListComponent: {\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case IncompleteClassComponent: {\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        const scopeInstance = finishedWork.stateNode;\n        prepareScopeUpdate(scopeInstance, finishedWork);\n        return;\n      }\n      break;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitSuspenseCallback(finishedWork: Fiber) {\n  // TODO: Move this to passive phase\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (enableSuspenseCallback && newState !== null) {\n    const suspenseCallback = finishedWork.memoizedProps.suspenseCallback;\n    if (typeof suspenseCallback === 'function') {\n      const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n      if (wakeables !== null) {\n        suspenseCallback(new Set(wakeables));\n      }\n    } else if (__DEV__) {\n      if (suspenseCallback !== undefined) {\n        console.error('Unexpected type for suspenseCallback.');\n      }\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n) {\n  if (!supportsHydration) {\n    return;\n  }\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (newState === null) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      const prevState: SuspenseState | null = current.memoizedState;\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n          if (enableSuspenseCallback) {\n            const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n            if (hydrationCallbacks !== null) {\n              const onHydrated = hydrationCallbacks.onHydrated;\n              if (onHydrated) {\n                onHydrated(suspenseInstance);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork: Fiber) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n    wakeables.forEach(wakeable => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      const retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        if (enableUpdaterTracking) {\n          if (isDevToolsPresent) {\n            if (inProgressLanes !== null && inProgressRoot !== null) {\n              // If we have pending work still, associate the original updaters with it.\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            } else {\n              throw Error(\n                'Expected finished root and lanes to be set. This is a bug in React.',\n              );\n            }\n          }\n        }\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n}\n\n// This function detects when a Suspense boundary goes from visible to hidden.\n// It returns false if the boundary is already hidden.\n// TODO: Use an effect tag.\nexport function isSuspenseBoundaryBeingHidden(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): boolean {\n  if (current !== null) {\n    const oldState: SuspenseState | null = current.memoizedState;\n    if (oldState === null || oldState.dehydrated !== null) {\n      const newState: SuspenseState | null = finishedWork.memoizedState;\n      return newState !== null && newState.dehydrated === null;\n    }\n  }\n  return false;\n}\n\nfunction commitResetTextContent(current: Fiber) {\n  if (!supportsMutation) {\n    return;\n  }\n  resetTextContent(current.stateNode);\n}\n\nexport function commitMutationEffects(\n  root: FiberRoot,\n  firstChild: Fiber,\n  committedLanes: Lanes,\n) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = firstChild;\n\n  commitMutationEffects_begin(root);\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitMutationEffects_begin(root: FiberRoot) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // TODO: Should wrap this in flags check, too, as optimization\n    const deletions = fiber.deletions;\n    if (deletions !== null) {\n      for (let i = 0; i < deletions.length; i++) {\n        const childToDelete = deletions[i];\n        try {\n          commitDeletion(root, childToDelete, fiber);\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(childToDelete, fiber, error);\n        }\n      }\n    }\n\n    const child = fiber.child;\n    if ((fiber.subtreeFlags & MutationMask) !== NoFlags && child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitMutationEffects_complete(root);\n    }\n  }\n}\n\nfunction commitMutationEffects_complete(root: FiberRoot) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      commitMutationEffectsOnFiber(fiber, root);\n    } catch (error) {\n      reportUncaughtErrorInDEV(error);\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork: Fiber, root: FiberRoot) {\n  // TODO: The factoring of this phase could probably be improved. Consider\n  // switching on the type of work before checking the flags. That's what\n  // we do in all the other phases. I think this one is only different\n  // because of the shared reconciliation logic below.\n  const flags = finishedWork.flags;\n\n  if (flags & ContentReset) {\n    commitResetTextContent(finishedWork);\n  }\n\n  if (flags & Ref) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      commitDetachRef(current);\n    }\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (finishedWork.tag === ScopeComponent) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n\n  if (flags & Visibility) {\n    switch (finishedWork.tag) {\n      case SuspenseComponent: {\n        const newState: OffscreenState | null = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n        if (isHidden) {\n          const current = finishedWork.alternate;\n          const wasHidden = current !== null && current.memoizedState !== null;\n          if (!wasHidden) {\n            // TODO: Move to passive phase\n            markCommitTimeOfFallback();\n          }\n        }\n        break;\n      }\n      case OffscreenComponent: {\n        const newState: OffscreenState | null = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n        const current = finishedWork.alternate;\n        const wasHidden = current !== null && current.memoizedState !== null;\n        const offscreenBoundary: Fiber = finishedWork;\n\n        if (supportsMutation) {\n          // TODO: This needs to run whenever there's an insertion or update\n          // inside a hidden Offscreen tree.\n          hideOrUnhideAllChildren(offscreenBoundary, isHidden);\n        }\n\n        if (enableSuspenseLayoutEffectSemantics) {\n          if (isHidden) {\n            if (!wasHidden) {\n              if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {\n                nextEffect = offscreenBoundary;\n                let offscreenChild = offscreenBoundary.child;\n                while (offscreenChild !== null) {\n                  nextEffect = offscreenChild;\n                  disappearLayoutEffects_begin(offscreenChild);\n                  offscreenChild = offscreenChild.sibling;\n                }\n              }\n            }\n          } else {\n            if (wasHidden) {\n              // TODO: Move re-appear call here for symmetry?\n            }\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  // The following switch statement is only concerned about placement,\n  // updates, and deletions. To avoid needing to add a case for every possible\n  // bitmap value, we remove the secondary effects from the effect tag and\n  // switch on that value.\n  const primaryFlags = flags & (Placement | Update | Hydrating);\n  outer: switch (primaryFlags) {\n    case Placement: {\n      commitPlacement(finishedWork);\n      // Clear the \"placement\" from effect tag so that we know that this is\n      // inserted, before any life-cycles like componentDidMount gets called.\n      // TODO: findDOMNode doesn't rely on this any more but isMounted does\n      // and isMounted is deprecated anyway so we should be able to kill this.\n      finishedWork.flags &= ~Placement;\n      break;\n    }\n    case PlacementAndUpdate: {\n      // Placement\n      commitPlacement(finishedWork);\n      // Clear the \"placement\" from effect tag so that we know that this is\n      // inserted, before any life-cycles like componentDidMount gets called.\n      finishedWork.flags &= ~Placement;\n\n      // Update\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n    case Hydrating: {\n      finishedWork.flags &= ~Hydrating;\n      break;\n    }\n    case HydratingAndUpdate: {\n      finishedWork.flags &= ~Hydrating;\n\n      // Update\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n    case Update: {\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n  }\n}\n\nexport function commitLayoutEffects(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n): void {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffects_begin(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  const isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if (\n      enableSuspenseLayoutEffectSemantics &&\n      fiber.tag === OffscreenComponent &&\n      isModernRoot\n    ) {\n      // Keep track of the current Offscreen stack's state.\n      const isHidden = fiber.memoizedState !== null;\n      const newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;\n      if (newOffscreenSubtreeIsHidden) {\n        // The Offscreen tree is hidden. Skip over its layout effects.\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        continue;\n      } else {\n        // TODO (Offscreen) Also check: subtreeFlags & LayoutMask\n        const current = fiber.alternate;\n        const wasHidden = current !== null && current.memoizedState !== null;\n        const newOffscreenSubtreeWasHidden =\n          wasHidden || offscreenSubtreeWasHidden;\n        const prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;\n        const prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n\n        // Traverse the Offscreen subtree with the current Offscreen as the root.\n        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;\n\n        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {\n          // This is the root of a reappearing boundary. Turn its layout effects\n          // back on.\n          nextEffect = fiber;\n          reappearLayoutEffects_begin(fiber);\n        }\n\n        let child = firstChild;\n        while (child !== null) {\n          nextEffect = child;\n          commitLayoutEffects_begin(\n            child, // New root; bubble back up to here and stop.\n            root,\n            committedLanes,\n          );\n          child = child.sibling;\n        }\n\n        // Restore Offscreen state and resume in our-progress traversal.\n        nextEffect = fiber;\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n\n        continue;\n      }\n    }\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      ensureCorrectReturnPointer(firstChild, fiber);\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      const current = fiber.alternate;\n      setCurrentDebugFiberInDEV(fiber);\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction disappearLayoutEffects_begin(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(HookLayout, fiber, fiber.return);\n          } finally {\n            recordLayoutEffectDuration(fiber);\n          }\n        } else {\n          commitHookEffectListUnmount(HookLayout, fiber, fiber.return);\n        }\n        break;\n      }\n      case ClassComponent: {\n        // TODO (Offscreen) Check: flags & RefStatic\n        safelyDetachRef(fiber, fiber.return);\n\n        const instance = fiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n        }\n        break;\n      }\n      case HostComponent: {\n        safelyDetachRef(fiber, fiber.return);\n        break;\n      }\n      case OffscreenComponent: {\n        // Check if this is a\n        const isHidden = fiber.memoizedState !== null;\n        if (isHidden) {\n          // Nested Offscreen tree is already hidden. Don't disappear\n          // its effects.\n          disappearLayoutEffects_complete(subtreeRoot);\n          continue;\n        }\n        break;\n      }\n    }\n\n    // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n    if (firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      disappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction disappearLayoutEffects_complete(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction reappearLayoutEffects_begin(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if (fiber.tag === OffscreenComponent) {\n      const isHidden = fiber.memoizedState !== null;\n      if (isHidden) {\n        // Nested Offscreen tree is still hidden. Don't re-appear its effects.\n        reappearLayoutEffects_complete(subtreeRoot);\n        continue;\n      }\n    }\n\n    // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n    if (firstChild !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      reappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction reappearLayoutEffects_complete(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // TODO (Offscreen) Check: flags & LayoutStatic\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      reappearLayoutEffectsOnFiber(fiber);\n    } catch (error) {\n      reportUncaughtErrorInDEV(error);\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nexport function commitPassiveMountEffects(\n  root: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(finishedWork, root);\n}\n\nfunction commitPassiveMountEffects_begin(subtreeRoot: Fiber, root: FiberRoot) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      ensureCorrectReturnPointer(firstChild, fiber);\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(subtreeRoot, root);\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentDebugFiberInDEV(fiber);\n      try {\n        commitPassiveMountOnFiber(root, fiber);\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        try {\n          commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n        } finally {\n          recordPassiveEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n      }\n      break;\n    }\n  }\n}\n\nexport function commitPassiveUnmountEffects(firstChild: Fiber): void {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      const deletions = fiber.deletions;\n      if (deletions !== null) {\n        for (let i = 0; i < deletions.length; i++) {\n          const fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n            fiberToDelete,\n            fiber,\n          );\n        }\n\n        if (deletedTreeCleanUpLevel >= 1) {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          const previousFiber = fiber.alternate;\n          if (previousFiber !== null) {\n            let detachedChild = previousFiber.child;\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n              do {\n                const detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentDebugFiberInDEV(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentDebugFiberInDEV();\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork: Fiber): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          HookPassive | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n        recordPassiveEffectDuration(finishedWork);\n      } else {\n        commitHookEffectListUnmount(\n          HookPassive | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n      }\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n    setCurrentDebugFiberInDEV(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentDebugFiberInDEV();\n\n    const child = fiber.child;\n    // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n    if (child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n        deletedSubtreeRoot,\n      );\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n  deletedSubtreeRoot: Fiber,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const sibling = fiber.sibling;\n    const returnFiber = fiber.return;\n\n    if (deletedTreeCleanUpLevel >= 2) {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    } else {\n      // This is the default branch (level 0). We do not recursively clear all\n      // the fiber fields. Only the root of the deleted subtree.\n      if (fiber === deletedSubtreeRoot) {\n        detachFiberAfterEffects(fiber);\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, returnFiber);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n): void {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        current.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          HookPassive,\n          current,\n          nearestMountedAncestor,\n        );\n        recordPassiveEffectDuration(current);\n      } else {\n        commitHookEffectListUnmount(\n          HookPassive,\n          current,\n          nearestMountedAncestor,\n        );\n      }\n      break;\n    }\n  }\n}\n\nlet didWarnWrongReturnPointer = false;\nfunction ensureCorrectReturnPointer(fiber, expectedReturnFiber) {\n  if (__DEV__) {\n    if (!didWarnWrongReturnPointer && fiber.return !== expectedReturnFiber) {\n      didWarnWrongReturnPointer = true;\n      console.error(\n        'Internal React error: Return pointer is inconsistent ' +\n          'with parent.',\n      );\n    }\n  }\n\n  // TODO: Remove this assignment once we're confident that it won't break\n  // anything, by checking the warning logs for the above invariant\n  fiber.return = expectedReturnFiber;\n}\n\n// TODO: Reuse reappearLayoutEffects traversal here?\nfunction invokeLayoutEffectMountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListMount(HookLayout | HookHasEffect, fiber);\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = fiber.stateNode;\n        try {\n          instance.componentDidMount();\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokePassiveEffectMountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListMount(HookPassive | HookHasEffect, fiber);\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokeLayoutEffectUnmountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListUnmount(\n            HookLayout | HookHasEffect,\n            fiber,\n            fiber.return,\n          );\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = fiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokePassiveEffectUnmountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListUnmount(\n            HookPassive | HookHasEffect,\n            fiber,\n            fiber.return,\n          );\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n      }\n    }\n  }\n}\n\nexport {\n  commitResetTextContent,\n  commitPlacement,\n  commitDeletion,\n  commitWork,\n  commitAttachRef,\n  commitDetachRef,\n  invokeLayoutEffectMountInDEV,\n  invokeLayoutEffectUnmountInDEV,\n  invokePassiveEffectMountInDEV,\n  invokePassiveEffectUnmountInDEV,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\nimport {HostComponent, HostText} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {\n  findFiberRoot,\n  getBoundingRect,\n  getInstanceFromNode,\n  getTextContent,\n  isHiddenSubtree,\n  matchAccessibilityRole,\n  setFocusIfFocusable,\n  setupIntersectionObserver,\n  supportsTestSelectors,\n} from './ReactFiberHostConfig';\n\nlet COMPONENT_TYPE = 0b000;\nlet HAS_PSEUDO_CLASS_TYPE = 0b001;\nlet ROLE_TYPE = 0b010;\nlet TEST_NAME_TYPE = 0b011;\nlet TEXT_TYPE = 0b100;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\n\ntype Type = Symbol | number;\n\ntype ComponentSelector = {|\n  $$typeof: Type,\n  value: React$AbstractComponent<empty, mixed>,\n|};\n\ntype HasPseudoClassSelector = {|\n  $$typeof: Type,\n  value: Array<Selector>,\n|};\n\ntype RoleSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TextSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TestNameSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype Selector =\n  | ComponentSelector\n  | HasPseudoClassSelector\n  | RoleSelector\n  | TextSelector\n  | TestNameSelector;\n\nexport function createComponentSelector(\n  component: React$AbstractComponent<empty, mixed>,\n): ComponentSelector {\n  return {\n    $$typeof: COMPONENT_TYPE,\n    value: component,\n  };\n}\n\nexport function createHasPseudoClassSelector(\n  selectors: Array<Selector>,\n): HasPseudoClassSelector {\n  return {\n    $$typeof: HAS_PSEUDO_CLASS_TYPE,\n    value: selectors,\n  };\n}\n\nexport function createRoleSelector(role: string): RoleSelector {\n  return {\n    $$typeof: ROLE_TYPE,\n    value: role,\n  };\n}\n\nexport function createTextSelector(text: string): TextSelector {\n  return {\n    $$typeof: TEXT_TYPE,\n    value: text,\n  };\n}\n\nexport function createTestNameSelector(id: string): TestNameSelector {\n  return {\n    $$typeof: TEST_NAME_TYPE,\n    value: id,\n  };\n}\n\nfunction findFiberRootForHostRoot(hostRoot: Instance): Fiber {\n  const maybeFiber = getInstanceFromNode((hostRoot: any));\n  if (maybeFiber != null) {\n    invariant(\n      typeof maybeFiber.memoizedProps['data-testname'] === 'string',\n      'Invalid host root specified. Should be either a React container or a node with a testname attribute.',\n    );\n    return ((maybeFiber: any): Fiber);\n  } else {\n    const fiberRoot = findFiberRoot(hostRoot);\n    invariant(\n      fiberRoot !== null,\n      'Could not find React container within specified host subtree.',\n    );\n    // The Flow type for FiberRoot is a little funky.\n    // createFiberRoot() cheats this by treating the root as :any and adding stateNode lazily.\n    return ((fiberRoot: any).stateNode.current: Fiber);\n  }\n}\n\nfunction matchSelector(fiber: Fiber, selector: Selector): boolean {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      if (fiber.type === selector.value) {\n        return true;\n      }\n      break;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return hasMatchingPaths(\n        fiber,\n        ((selector: any): HasPseudoClassSelector).value,\n      );\n    case ROLE_TYPE:\n      if (fiber.tag === HostComponent) {\n        const node = fiber.stateNode;\n        if (\n          matchAccessibilityRole(node, ((selector: any): RoleSelector).value)\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEXT_TYPE:\n      if (fiber.tag === HostComponent || fiber.tag === HostText) {\n        const textContent = getTextContent(fiber);\n        if (\n          textContent !== null &&\n          textContent.indexOf(((selector: any): TextSelector).value) >= 0\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEST_NAME_TYPE:\n      if (fiber.tag === HostComponent) {\n        const dataTestID = fiber.memoizedProps['data-testname'];\n        if (\n          typeof dataTestID === 'string' &&\n          dataTestID.toLowerCase() ===\n            ((selector: any): TestNameSelector).value.toLowerCase()\n        ) {\n          return true;\n        }\n      }\n      break;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return false;\n}\n\nfunction selectorToString(selector: Selector): string | null {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      const displayName = getComponentNameFromType(selector.value) || 'Unknown';\n      return `<${displayName}>`;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return `:has(${selectorToString(selector) || ''})`;\n    case ROLE_TYPE:\n      return `[role=\"${((selector: any): RoleSelector).value}\"]`;\n    case TEXT_TYPE:\n      return `\"${((selector: any): TextSelector).value}\"`;\n    case TEST_NAME_TYPE:\n      return `[data-testname=\"${((selector: any): TestNameSelector).value}\"]`;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return null;\n}\n\nfunction findPaths(root: Fiber, selectors: Array<Selector>): Array<Fiber> {\n  const matchingFibers: Array<Fiber> = [];\n\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      matchingFibers.push(fiber);\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return matchingFibers;\n}\n\n// Same as findPaths but with eager bailout on first match\nfunction hasMatchingPaths(root: Fiber, selectors: Array<Selector>): boolean {\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      return true;\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function findAllNodes(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<Instance> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const instanceRoots: Array<Instance> = [];\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const node = ((stack[index++]: any): Fiber);\n    if (node.tag === HostComponent) {\n      if (isHiddenSubtree(node)) {\n        continue;\n      }\n      instanceRoots.push(node.stateNode);\n    } else {\n      let child = node.child;\n      while (child !== null) {\n        stack.push(child);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return instanceRoots;\n}\n\nexport function getFindAllNodesFailureDescription(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): string | null {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n\n  let maxSelectorIndex: number = 0;\n  const matchedNames = [];\n\n  // The logic of this loop should be kept in sync with findPaths()\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    const selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else if (matchSelector(fiber, selector)) {\n      matchedNames.push(selectorToString(selector));\n      selectorIndex++;\n\n      if (selectorIndex > maxSelectorIndex) {\n        maxSelectorIndex = selectorIndex;\n      }\n    }\n\n    if (selectorIndex < selectors.length) {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  if (maxSelectorIndex < selectors.length) {\n    const unmatchedNames = [];\n    for (let i = maxSelectorIndex; i < selectors.length; i++) {\n      unmatchedNames.push(selectorToString(selectors[i]));\n    }\n\n    return (\n      'findAllNodes was able to match part of the selector:\\n' +\n      `  ${matchedNames.join(' > ')}\\n\\n` +\n      'No matching component was found for:\\n' +\n      `  ${unmatchedNames.join(' > ')}`\n    );\n  }\n\n  return null;\n}\n\nexport type BoundingRect = {|\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n|};\n\nexport function findBoundingRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<BoundingRect> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const boundingRects: Array<BoundingRect> = [];\n  for (let i = 0; i < instanceRoots.length; i++) {\n    boundingRects.push(getBoundingRect(instanceRoots[i]));\n  }\n\n  for (let i = boundingRects.length - 1; i > 0; i--) {\n    const targetRect = boundingRects[i];\n    const targetLeft = targetRect.x;\n    const targetRight = targetLeft + targetRect.width;\n    const targetTop = targetRect.y;\n    const targetBottom = targetTop + targetRect.height;\n\n    for (let j = i - 1; j >= 0; j--) {\n      if (i !== j) {\n        const otherRect = boundingRects[j];\n        const otherLeft = otherRect.x;\n        const otherRight = otherLeft + otherRect.width;\n        const otherTop = otherRect.y;\n        const otherBottom = otherTop + otherRect.height;\n\n        // Merging all rects to the minimums set would be complicated,\n        // but we can handle the most common cases:\n        // 1. completely overlapping rects\n        // 2. adjacent rects that are the same width or height (e.g. items in a list)\n        //\n        // Even given the above constraints,\n        // we still won't end up with the fewest possible rects without doing multiple passes,\n        // but it's good enough for this purpose.\n\n        if (\n          targetLeft >= otherLeft &&\n          targetTop >= otherTop &&\n          targetRight <= otherRight &&\n          targetBottom <= otherBottom\n        ) {\n          // Complete overlapping rects; remove the inner one.\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetLeft === otherLeft &&\n          targetRect.width === otherRect.width &&\n          !(otherBottom < targetTop) &&\n          !(otherTop > targetBottom)\n        ) {\n          // Adjacent vertical rects; merge them.\n          if (otherTop > targetTop) {\n            otherRect.height += otherTop - targetTop;\n            otherRect.y = targetTop;\n          }\n          if (otherBottom < targetBottom) {\n            otherRect.height = targetBottom - otherTop;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetTop === otherTop &&\n          targetRect.height === otherRect.height &&\n          !(otherRight < targetLeft) &&\n          !(otherLeft > targetRight)\n        ) {\n          // Adjacent horizontal rects; merge them.\n          if (otherLeft > targetLeft) {\n            otherRect.width += otherLeft - targetLeft;\n            otherRect.x = targetLeft;\n          }\n          if (otherRight < targetRight) {\n            otherRect.width = targetRight - otherLeft;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  return boundingRects;\n}\n\nexport function focusWithin(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): boolean {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    if (isHiddenSubtree(fiber)) {\n      continue;\n    }\n    if (fiber.tag === HostComponent) {\n      const node = fiber.stateNode;\n      if (setFocusIfFocusable(node)) {\n        return true;\n      }\n    }\n    let child = fiber.child;\n    while (child !== null) {\n      stack.push(child);\n      child = child.sibling;\n    }\n  }\n\n  return false;\n}\n\nconst commitHooks: Array<Function> = [];\n\nexport function onCommitRoot(): void {\n  if (supportsTestSelectors) {\n    commitHooks.forEach(commitHook => commitHook());\n  }\n}\n\nexport type IntersectionObserverOptions = Object;\n\nexport type ObserveVisibleRectsCallback = (\n  intersections: Array<{ratio: number, rect: BoundingRect}>,\n) => void;\n\nexport function observeVisibleRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n  callback: (intersections: Array<{ratio: number, rect: BoundingRect}>) => void,\n  options?: IntersectionObserverOptions,\n): {|disconnect: () => void|} {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const {disconnect, observe, unobserve} = setupIntersectionObserver(\n    instanceRoots,\n    callback,\n    options,\n  );\n\n  // When React mutates the host environment, we may need to change what we're listening to.\n  const commitHook = () => {\n    const nextInstanceRoots = findAllNodes(hostRoot, selectors);\n\n    instanceRoots.forEach(target => {\n      if (nextInstanceRoots.indexOf(target) < 0) {\n        unobserve(target);\n      }\n    });\n\n    nextInstanceRoots.forEach(target => {\n      if (instanceRoots.indexOf(target) < 0) {\n        observe(target);\n      }\n    });\n  };\n\n  commitHooks.push(commitHook);\n\n  return {\n    disconnect: () => {\n      // Stop listening for React mutations:\n      const index = commitHooks.indexOf(commitHook);\n      if (index >= 0) {\n        commitHooks.splice(index, 1);\n      }\n\n      // Disconnect the host observer:\n      disconnect();\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport {\n  warnAboutDeprecatedLifecycles,\n  enableSuspenseServerRenderer,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableCreateEventHandleAPI,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableProfilerNestedUpdateScheduledHook,\n  deferRenderPhaseUpdateToNextBatch,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  disableSchedulerTimeoutInWorkLoop,\n  enableStrictEffects,\n  skipUnmountedBoundaries,\n  enableUpdaterTracking,\n  warnOnSubscriptionInsideStartTransition,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\n\nimport {\n  // Aliased because `act` will override and push to an internal queue\n  scheduleCallback as Scheduler_scheduleCallback,\n  cancelCallback as Scheduler_cancelCallback,\n  shouldYield,\n  requestPaint,\n  now,\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n} from './Scheduler';\nimport {\n  flushSyncCallbacks,\n  flushSyncCallbacksOnlyInLegacyMode,\n  scheduleSyncCallback,\n  scheduleLegacySyncCallback,\n} from './ReactFiberSyncTaskQueue.old';\nimport {\n  logCommitStarted,\n  logCommitStopped,\n  logLayoutEffectsStarted,\n  logLayoutEffectsStopped,\n  logPassiveEffectsStarted,\n  logPassiveEffectsStopped,\n  logRenderStarted,\n  logRenderStopped,\n} from './DebugTracing';\nimport {\n  markCommitStarted,\n  markCommitStopped,\n  markLayoutEffectsStarted,\n  markLayoutEffectsStopped,\n  markPassiveEffectsStarted,\n  markPassiveEffectsStopped,\n  markRenderStarted,\n  markRenderYielded,\n  markRenderStopped,\n} from './SchedulingProfiler';\n\nimport {\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  warnsIfNotActing,\n  afterActiveInstanceBlur,\n  clearContainer,\n  getCurrentEventPriority,\n  supportsMicrotasks,\n  errorHydratingContainer,\n  scheduleMicrotask,\n} from './ReactFiberHostConfig';\n\nimport {\n  createWorkInProgress,\n  assignFiberPropertiesInDEV,\n} from './ReactFiber.old';\nimport {\n  NoMode,\n  StrictLegacyMode,\n  ProfileMode,\n  ConcurrentMode,\n} from './ReactTypeOfMode';\nimport {\n  HostRoot,\n  IndeterminateComponent,\n  ClassComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  ForwardRef,\n  MemoComponent,\n  SimpleMemoComponent,\n  Profiler,\n} from './ReactWorkTags';\nimport {LegacyRoot} from './ReactRootTags';\nimport {\n  NoFlags,\n  Placement,\n  Incomplete,\n  HostEffectMask,\n  Hydrating,\n  BeforeMutationMask,\n  MutationMask,\n  LayoutMask,\n  PassiveMask,\n  MountPassiveDev,\n  MountLayoutDev,\n} from './ReactFiberFlags';\nimport {\n  NoLanes,\n  NoLane,\n  SyncLane,\n  NoTimestamp,\n  claimNextTransitionLane,\n  claimNextRetryLane,\n  includesSomeLane,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  pickArbitraryLane,\n  includesNonIdleWork,\n  includesOnlyRetries,\n  includesOnlyTransitions,\n  shouldTimeSlice,\n  getNextLanes,\n  markStarvedLanesAsExpired,\n  getLanesToRetrySynchronouslyOnError,\n  getMostRecentEventTime,\n  markRootUpdated,\n  markRootSuspended as markRootSuspended_dontCallThisOneDirectly,\n  markRootPinged,\n  markRootEntangled,\n  markRootFinished,\n  getHighestPriorityLane,\n  addFiberToLanesMap,\n  movePendingFibersToMemoized,\n} from './ReactFiberLane.old';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n  lowerEventPriority,\n  lanesToEventPriority,\n} from './ReactEventPriorities.old';\nimport {requestCurrentTransition, NoTransition} from './ReactFiberTransition';\nimport {beginWork as originalBeginWork} from './ReactFiberBeginWork.old';\nimport {completeWork} from './ReactFiberCompleteWork.old';\nimport {unwindWork, unwindInterruptedWork} from './ReactFiberUnwindWork.old';\nimport {\n  throwException,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberThrow.old';\nimport {\n  commitBeforeMutationEffects,\n  commitLayoutEffects,\n  commitMutationEffects,\n  commitPassiveEffectDurations,\n  commitPassiveMountEffects,\n  commitPassiveUnmountEffects,\n  invokeLayoutEffectMountInDEV,\n  invokePassiveEffectMountInDEV,\n  invokeLayoutEffectUnmountInDEV,\n  invokePassiveEffectUnmountInDEV,\n} from './ReactFiberCommitWork.old';\nimport {enqueueUpdate} from './ReactUpdateQueue.old';\nimport {resetContextDependencies} from './ReactFiberNewContext.old';\nimport {\n  resetHooksAfterThrow,\n  ContextOnlyDispatcher,\n  getIsUpdatingOpaqueValueInRenderPhaseInDEV,\n} from './ReactFiberHooks.old';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  push as pushToStack,\n  pop as popFromStack,\n  createCursor,\n} from './ReactFiberStack.old';\nimport {enqueueInterleavedUpdates} from './ReactFiberInterleavedUpdates.old';\n\nimport {\n  markNestedUpdateScheduled,\n  recordCommitTime,\n  resetNestedUpdateFlag,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  syncNestedUpdateFlag,\n} from './ReactProfilerTimer.old';\n\n// DEV stuff\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {\n  isRendering as ReactCurrentDebugFiberIsRenderingInDEV,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  onCommitRoot as onCommitRootDevTools,\n  onPostCommitRoot as onPostCommitRootDevTools,\n  isDevToolsPresent,\n} from './ReactFiberDevToolsHook.old';\nimport {onCommitRoot as onCommitRootTestSelector} from './ReactTestSelectors';\n\nconst ceil = Math.ceil;\n\nconst {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  ReactCurrentBatchConfig,\n  ReactCurrentActQueue,\n} = ReactSharedInternals;\n\ntype ExecutionContext = number;\n\nexport const NoContext = /*             */ 0b0000;\nconst BatchedContext = /*               */ 0b0001;\nconst RenderContext = /*                */ 0b0010;\nconst CommitContext = /*                */ 0b0100;\nexport const RetryAfterError = /*       */ 0b1000;\n\ntype RootExitStatus = 0 | 1 | 2 | 3 | 4 | 5;\nconst RootIncomplete = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5;\n\n// Describes where we are in the React execution stack\nlet executionContext: ExecutionContext = NoContext;\n// The root we're working on\nlet workInProgressRoot: FiberRoot | null = null;\n// The fiber we're working on\nlet workInProgress: Fiber | null = null;\n// The lanes we're rendering\nlet workInProgressRootRenderLanes: Lanes = NoLanes;\n\n// Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\nexport let subtreeRenderLanes: Lanes = NoLanes;\nconst subtreeRenderLanesCursor: StackCursor<Lanes> = createCursor(NoLanes);\n\n// Whether to root completed, errored, suspended, etc.\nlet workInProgressRootExitStatus: RootExitStatus = RootIncomplete;\n// A fatal error, if one is thrown\nlet workInProgressRootFatalError: mixed = null;\n// \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\nlet workInProgressRootIncludedLanes: Lanes = NoLanes;\n// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nlet workInProgressRootSkippedLanes: Lanes = NoLanes;\n// Lanes that were updated (in an interleaved event) during this render.\nlet workInProgressRootUpdatedLanes: Lanes = NoLanes;\n// Lanes that were pinged (in an interleaved event) during this render.\nlet workInProgressRootPingedLanes: Lanes = NoLanes;\n\n// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nlet globalMostRecentFallbackTime: number = 0;\nconst FALLBACK_THROTTLE_MS: number = 500;\n\n// The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\nlet workInProgressRootRenderTargetTime: number = Infinity;\n// How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\nconst RENDER_TIMEOUT_MS = 500;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nexport function getRenderTargetTime(): number {\n  return workInProgressRootRenderTargetTime;\n}\n\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\n// Only used when enableProfilerNestedUpdateScheduledHook is true;\n// to track which root is currently committing layout effects.\nlet rootCommittingMutationOrLayoutEffects: FiberRoot | null = null;\n\nlet rootDoesHavePassiveEffects: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet pendingPassiveEffectsLanes: Lanes = NoLanes;\nlet pendingPassiveProfilerEffects: Array<Fiber> = [];\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet rootWithNestedUpdates: FiberRoot | null = null;\n\nconst NESTED_PASSIVE_UPDATE_LIMIT = 50;\nlet nestedPassiveUpdateCount: number = 0;\n\n// If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\nlet currentEventTime: number = NoTimestamp;\nlet currentEventTransitionLane: Lanes = NoLanes;\n\nexport function getWorkInProgressRoot(): FiberRoot | null {\n  return workInProgressRoot;\n}\n\nexport function requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  }\n  // We're not inside React, so we may be in the middle of a browser event.\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  }\n  // This is the first update since React yielded. Compute a new start time.\n  currentEventTime = now();\n  return currentEventTime;\n}\n\nexport function getCurrentTime() {\n  return now();\n}\n\nexport function requestUpdateLane(fiber: Fiber): Lane {\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & ConcurrentMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if (\n    !deferRenderPhaseUpdateToNextBatch &&\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n  if (isTransition) {\n    if (\n      __DEV__ &&\n      warnOnSubscriptionInsideStartTransition &&\n      ReactCurrentBatchConfig._updatedFibers\n    ) {\n      ReactCurrentBatchConfig._updatedFibers.add(fiber);\n    }\n    // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n    return currentEventTransitionLane;\n  }\n\n  // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n  const updateLane: Lane = (getCurrentUpdatePriority(): any);\n  if (updateLane !== NoLane) {\n    return updateLane;\n  }\n\n  // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n  const eventLane: Lane = (getCurrentEventPriority(): any);\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber: Fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & ConcurrentMode) === NoMode) {\n    return (SyncLane: Lane);\n  }\n\n  return claimNextRetryLane();\n}\n\nexport function scheduleUpdateOnFiber(\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number,\n): FiberRoot | null {\n  checkForNestedUpdates();\n  warnAboutRenderPhaseUpdatesInDEV(fiber);\n\n  const root = markUpdateLaneFromFiberToRoot(fiber, lane);\n  if (root === null) {\n    return null;\n  }\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      addFiberToLanesMap(root, fiber, lane);\n    }\n  }\n\n  // Mark that the root has a pending update.\n  markRootUpdated(root, lane, eventTime);\n\n  if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n    if (\n      (executionContext & CommitContext) !== NoContext &&\n      root === rootCommittingMutationOrLayoutEffects\n    ) {\n      if (fiber.mode & ProfileMode) {\n        let current = fiber;\n        while (current !== null) {\n          if (current.tag === Profiler) {\n            const {id, onNestedUpdateScheduled} = current.memoizedProps;\n            if (typeof onNestedUpdateScheduled === 'function') {\n              onNestedUpdateScheduled(id);\n            }\n          }\n          current = current.return;\n        }\n      }\n    }\n  }\n\n  // TODO: Consolidate with `isInterleavedUpdate` check\n  if (root === workInProgressRoot) {\n    // Received an update to a tree that's in the middle of rendering. Mark\n    // that there was an interleaved update work on this root. Unless the\n    // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n    // phase update. In that case, we don't treat render phase updates as if\n    // they were interleaved, for backwards compat reasons.\n    if (\n      deferRenderPhaseUpdateToNextBatch ||\n      (executionContext & RenderContext) === NoContext\n    ) {\n      workInProgressRootUpdatedLanes = mergeLanes(\n        workInProgressRootUpdatedLanes,\n        lane,\n      );\n    }\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n      // The root already suspended with a delay, which means this render\n      // definitely won't finish. Since we have a new update, let's mark it as\n      // suspended now, right before marking the incoming update. This has the\n      // effect of interrupting the current render and switching to the update.\n      // TODO: Make sure this doesn't override pings that happen while we've\n      // already started rendering.\n      markRootSuspended(root, workInProgressRootRenderLanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n  if (\n    lane === SyncLane &&\n    executionContext === NoContext &&\n    (fiber.mode & ConcurrentMode) === NoMode &&\n    // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n    !(__DEV__ && ReactCurrentActQueue.isBatchingLegacy)\n  ) {\n    // Flush the synchronous work now, unless we're already working or inside\n    // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n    // scheduleCallbackForFiber to preserve the ability to schedule a callback\n    // without immediately flushing it. We only do this for user-initiated\n    // updates, to preserve historical behavior of legacy mode.\n    resetRenderTimer();\n    flushSyncCallbacksOnlyInLegacyMode();\n  }\n\n  return root;\n}\n\n// This is split into a separate function so we can mark a fiber with pending\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber,\n  lane: Lane,\n): FiberRoot | null {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n  if (__DEV__) {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  }\n  // Walk the parent path to the root and update the child lanes.\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      if (__DEV__) {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n    node = parent;\n    parent = parent.return;\n  }\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nexport function isInterleavedUpdate(fiber: Fiber, lane: Lane) {\n  return (\n    // TODO: Optimize slightly by comparing to root that fiber belongs to.\n    // Requires some refactoring. Not a big deal though since it's rare for\n    // concurrent apps to have more than a single root.\n    workInProgressRoot !== null &&\n    (fiber.mode & ConcurrentMode) !== NoMode &&\n    // If this is a render phase update (i.e. UNSAFE_componentWillReceiveProps),\n    // then don't treat this as an interleaved update. This pattern is\n    // accompanied by a warning but we haven't fully deprecated it yet. We can\n    // remove once the deferRenderPhaseUpdateToNextBatch flag is enabled.\n    (deferRenderPhaseUpdateToNextBatch ||\n      (executionContext & RenderContext) === NoContext)\n  );\n}\n\n// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\nfunction ensureRootIsScheduled(root: FiberRoot, currentTime: number) {\n  const existingCallbackNode = root.callbackNode;\n\n  // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n  markStarvedLanesAsExpired(root, currentTime);\n\n  // Determine the next lanes to work on, and their priority.\n  const nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n    }\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  }\n\n  // We use the highest priority lane to represent the priority of the callback.\n  const newCallbackPriority = getHighestPriorityLane(nextLanes);\n\n  // Check if there's an existing task. We may be able to reuse it.\n  const existingCallbackPriority = root.callbackPriority;\n  if (\n    existingCallbackPriority === newCallbackPriority &&\n    // Special case related to `act`. If the currently scheduled task is a\n    // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n    // on the `act` queue.\n    !(\n      __DEV__ &&\n      ReactCurrentActQueue.current !== null &&\n      existingCallbackNode !== fakeActCallbackNode\n    )\n  ) {\n    if (__DEV__) {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (\n        existingCallbackNode == null &&\n        existingCallbackPriority !== SyncLane\n      ) {\n        console.error(\n          'Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.',\n        );\n      }\n    }\n    // The priority hasn't changed. We can reuse the existing task. Exit.\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback(existingCallbackNode);\n  }\n\n  // Schedule a new callback.\n  let newCallbackNode;\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if (__DEV__ && ReactCurrentActQueue.isBatchingLegacy !== null) {\n        ReactCurrentActQueue.didScheduleLegacyUpdate = true;\n      }\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n    if (supportsMicrotasks) {\n      // Flush the queue in a microtask.\n      if (__DEV__ && ReactCurrentActQueue.current !== null) {\n        // Inside `act`, use our internal `act` queue so that these get flushed\n        // at the end of the current scope even when using the sync version\n        // of `act`.\n        ReactCurrentActQueue.current.push(flushSyncCallbacks);\n      } else {\n        scheduleMicrotask(flushSyncCallbacks);\n      }\n    } else {\n      // Flush the queue in an Immediate task.\n      scheduleCallback(ImmediateSchedulerPriority, flushSyncCallbacks);\n    }\n    newCallbackNode = null;\n  } else {\n    let schedulerPriorityLevel;\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediateSchedulerPriority;\n        break;\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingSchedulerPriority;\n        break;\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalSchedulerPriority;\n        break;\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdleSchedulerPriority;\n        break;\n      default:\n        schedulerPriorityLevel = NormalSchedulerPriority;\n        break;\n    }\n    newCallbackNode = scheduleCallback(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n}\n\n// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n    resetNestedUpdateFlag();\n  }\n\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n  const originalCallbackNode = root.callbackNode;\n  const didFlushPassiveEffects = flushPassiveEffects();\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // Determine the next lanes to work on, using the fields stored\n  // on the root.\n  let lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  }\n\n  // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n  let exitStatus =\n    shouldTimeSlice(root, lanes) &&\n    (disableSchedulerTimeoutInWorkLoop || !didTimeout)\n      ? renderRootConcurrent(root, lanes)\n      : renderRootSync(root, lanes);\n  if (exitStatus !== RootIncomplete) {\n    if (exitStatus === RootErrored) {\n      const prevExecutionContext = executionContext;\n      executionContext |= RetryAfterError;\n\n      // If an error occurred during hydration,\n      // discard server response and fall back to client side render.\n      if (root.hydrate) {\n        root.hydrate = false;\n        if (__DEV__) {\n          errorHydratingContainer(root.containerInfo);\n        }\n        clearContainer(root.containerInfo);\n      }\n\n      // If something threw an error, try rendering one more time. We'll render\n      // synchronously to block concurrent data mutations, and we'll includes\n      // all pending updates are included. If it still fails after the second\n      // attempt, we'll give up and commit the resulting tree.\n      const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = renderRootSync(root, errorRetryLanes);\n      }\n\n      executionContext = prevExecutionContext;\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    // We now have a consistent tree. The next step is either to commit it,\n    // or, if something suspended, wait to commit it after a timeout.\n    const finishedWork: Fiber = (root.current.alternate: any);\n    root.finishedWork = finishedWork;\n    root.finishedLanes = lanes;\n    finishConcurrentRender(root, exitStatus, lanes);\n  }\n\n  ensureRootIsScheduled(root, now());\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n  return null;\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootIncomplete:\n    case RootFatalErrored: {\n      invariant(false, 'Root did not complete. This is a bug in React.');\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspended: {\n      markRootSuspended(root, lanes);\n\n      // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) &&\n        // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        const msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          const nextLanes = getNextLanes(root, NoLanes);\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n          const suspendedLanes = root.suspendedLanes;\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            const eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes, eventTime);\n            break;\n          }\n\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspendedWithDelay: {\n      markRootSuspended(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n\n        const mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        const eventTimeMs = mostRecentEventTime;\n        const timeElapsedMs = now() - eventTimeMs;\n        const msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n\n      // Commit the placeholder.\n      commitRoot(root);\n      break;\n    }\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(root);\n      break;\n    }\n    default: {\n      invariant(false, 'Unknown root exit status.');\n    }\n  }\n}\n\nfunction markRootSuspended(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);\n  markRootSuspended_dontCallThisOneDirectly(root, suspendedLanes);\n}\n\n// This is the entry point for synchronous tasks that don't go\n// through Scheduler\nfunction performSyncWorkOnRoot(root) {\n  if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n    syncNestedUpdateFlag();\n  }\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  flushPassiveEffects();\n\n  let lanes = getNextLanes(root, NoLanes);\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  let exitStatus = renderRootSync(root, lanes);\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    const prevExecutionContext = executionContext;\n    executionContext |= RetryAfterError;\n\n    // If an error occurred during hydration,\n    // discard server response and fall back to client side render.\n    if (root.hydrate) {\n      root.hydrate = false;\n      if (__DEV__) {\n        errorHydratingContainer(root.containerInfo);\n      }\n      clearContainer(root.containerInfo);\n    }\n\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = renderRootSync(root, lanes);\n    }\n\n    executionContext = prevExecutionContext;\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    const fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n  const finishedWork: Fiber = (root.current.alternate: any);\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root);\n\n  // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n  ensureRootIsScheduled(root, now());\n\n  return null;\n}\n\nexport function flushRoot(root: FiberRoot, lanes: Lanes) {\n  if (lanes !== NoLanes) {\n    markRootEntangled(root, mergeLanes(lanes, SyncLane));\n    ensureRootIsScheduled(root, now());\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function getExecutionContext(): ExecutionContext {\n  return executionContext;\n}\n\nexport function deferredUpdates<A>(fn: () => A): A {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DefaultEventPriority);\n    return fn();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nexport function batchedUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n    if (\n      executionContext === NoContext &&\n      // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !(__DEV__ && ReactCurrentActQueue.isBatchingLegacy)\n    ) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n\nexport function discreteUpdates<A, B, C, D, R>(\n  fn: (A, B, C, D) => R,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n): R {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    return fn(a, b, c, d);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n    if (executionContext === NoContext) {\n      resetRenderTimer();\n    }\n  }\n}\n\n// Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\ndeclare function flushSyncWithoutWarningIfAlreadyRendering<R>(fn: () => R): R;\n// eslint-disable-next-line no-redeclare\ndeclare function flushSyncWithoutWarningIfAlreadyRendering(): void;\n// eslint-disable-next-line no-redeclare\nexport function flushSyncWithoutWarningIfAlreadyRendering(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (\n    rootWithPendingPassiveEffects !== null &&\n    rootWithPendingPassiveEffects.tag === LegacyRoot &&\n    (executionContext & (RenderContext | CommitContext)) === NoContext\n  ) {\n    flushPassiveEffects();\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  const previousPriority = getCurrentUpdatePriority();\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n    executionContext = prevExecutionContext;\n    // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\n\n// Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\ndeclare function flushSync<R>(fn: () => R): R;\n// eslint-disable-next-line no-redeclare\ndeclare function flushSync(): void;\n// eslint-disable-next-line no-redeclare\nexport function flushSync(fn) {\n  if (__DEV__) {\n    if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n      console.error(\n        'flushSync was called from inside a lifecycle method. React cannot ' +\n          'flush when React is already rendering. Consider moving this call to ' +\n          'a scheduler task or micro task.',\n      );\n    }\n  }\n  return flushSyncWithoutWarningIfAlreadyRendering(fn);\n}\n\nexport function flushControlled(fn: () => mixed): void {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  const previousPriority = getCurrentUpdatePriority();\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    fn();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function pushRenderLanes(fiber: Fiber, lanes: Lanes) {\n  pushToStack(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes,\n  );\n}\n\nexport function popRenderLanes(fiber: Fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  popFromStack(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  const timeoutHandle = root.timeoutHandle;\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout;\n    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork, workInProgressRootRenderLanes);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n  workInProgressRoot = root;\n  workInProgress = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootIncomplete;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n\n  enqueueInterleavedUpdates();\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n}\n\nfunction handleError(root, thrownValue): void {\n  do {\n    let erroredWork = workInProgress;\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentDebugFiberInDEV();\n      // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n      ReactCurrentOwner.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue;\n        // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes,\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n      continue;\n    }\n    // Return to the normal work loop.\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nexport function markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\n\nexport function markSkippedUpdateLanes(lane: Lane | Lanes): void {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes,\n  );\n}\n\nexport function renderDidSuspend(): void {\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\n\nexport function renderDidSuspendDelayIfPossible(): void {\n  if (\n    workInProgressRootExitStatus === RootIncomplete ||\n    workInProgressRootExitStatus === RootSuspended\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  }\n\n  // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\n\nexport function renderDidError() {\n  if (workInProgressRootExitStatus !== RootCompleted) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n}\n\n// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nexport function renderHasNotSuspendedYet(): boolean {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootIncomplete;\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        const memoizedUpdaters = root.memoizedUpdaters;\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        }\n\n        // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    prepareFreshStack(root, lanes);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    invariant(\n      false,\n      'Cannot commit an incomplete root. This error is likely caused by a ' +\n        'bug in React. Please file an issue.',\n    );\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStopped();\n  }\n\n  // Set this to null to indicate there's no in-progress render.\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n\n  return workInProgressRootExitStatus;\n}\n\n// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        const memoizedUpdaters = root.memoizedUpdaters;\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        }\n\n        // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    if (enableSchedulingProfiler) {\n      markRenderYielded();\n    }\n    return RootIncomplete;\n  } else {\n    // Completed the tree.\n    if (enableSchedulingProfiler) {\n      markRenderStopped();\n    }\n\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus;\n  }\n}\n\n/** @noinline */\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  const current = unitOfWork.alternate;\n  setCurrentDebugFiberInDEV(unitOfWork);\n\n  let next;\n  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentDebugFiberInDEV();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  let completedWork = unitOfWork;\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return;\n\n    // Check if the work completed or if something threw.\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentDebugFiberInDEV(completedWork);\n      let next;\n      if (\n        !enableProfilerTimer ||\n        (completedWork.mode & ProfileMode) === NoMode\n      ) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n        // Update render duration assuming we didn't error.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n      resetCurrentDebugFiberInDEV();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(completedWork, subtreeRenderLanes);\n\n      // Because this fiber did not complete, don't reset its lanes.\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.flags &= HostEffectMask;\n        workInProgress = next;\n        return;\n      }\n\n      if (\n        enableProfilerTimer &&\n        (completedWork.mode & ProfileMode) !== NoMode\n      ) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = completedWork.actualDuration;\n        let child = completedWork.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    }\n    // Otherwise, return to the parent\n    completedWork = returnFiber;\n    // Update the next thing we're working on in case something throws.\n    workInProgress = completedWork;\n  } while (completedWork !== null);\n\n  // We've reached the root.\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(root) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  const previousUpdateLanePriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(root, previousUpdateLanePriority);\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(root, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStarted(lanes);\n  }\n\n  if (finishedWork === null) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    return null;\n  } else {\n    if (__DEV__) {\n      if (lanes === NoLanes) {\n        console.error(\n          'root.finishedLanes should not be empty during a commit. This is a ' +\n            'bug in React.',\n        );\n      }\n    }\n  }\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  invariant(\n    finishedWork !== root.current,\n    'Cannot commit the same tree as before. This error is likely caused by ' +\n      'a bug in React. Please file an issue.',\n  );\n\n  // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n  root.callbackNode = null;\n  root.callbackPriority = NoLane;\n\n  // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n  let remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } else {\n    // This indicates that the last root we worked on is not the same one that\n    // we're committing now. This most commonly happens when a suspended root\n    // times out.\n  }\n\n  // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\n    (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n\n  // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n  const subtreeHasEffects =\n    (finishedWork.subtreeFlags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n  const rootHasEffect =\n    (finishedWork.flags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 0;\n    const previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    const prevExecutionContext = executionContext;\n    executionContext |= CommitContext;\n\n    // Reset this to null before calling lifecycles\n    ReactCurrentOwner.current = null;\n\n    // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n    const shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(\n      root,\n      finishedWork,\n    );\n\n    if (enableProfilerTimer) {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      // Track the root here, rather than in commitLayoutEffects(), because of ref setters.\n      // Updates scheduled during ref detachment should also be flagged.\n      rootCommittingMutationOrLayoutEffects = root;\n    }\n\n    // The next phase is the mutation phase, where we mutate the host tree.\n    commitMutationEffects(root, finishedWork, lanes);\n\n    if (enableCreateEventHandleAPI) {\n      if (shouldFireAfterActiveInstanceBlur) {\n        afterActiveInstanceBlur();\n      }\n    }\n    resetAfterCommit(root.containerInfo);\n\n    // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n    root.current = finishedWork;\n\n    // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logLayoutEffectsStarted(lanes);\n      }\n    }\n    if (enableSchedulingProfiler) {\n      markLayoutEffectsStarted(lanes);\n    }\n    commitLayoutEffects(finishedWork, root, lanes);\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logLayoutEffectsStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markLayoutEffectsStopped();\n    }\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      rootCommittingMutationOrLayoutEffects = null;\n    }\n\n    // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n    requestPaint();\n\n    executionContext = prevExecutionContext;\n\n    // Reset the priority to the previous non-sync value.\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork;\n    // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n    if (enableProfilerTimer) {\n      recordCommitTime();\n    }\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  }\n\n  // Read this again, since an effect might have updated it\n  remainingLanes = root.pendingLanes;\n\n  // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  if (__DEV__ && enableStrictEffects) {\n    if (!rootDidHavePassiveEffects) {\n      commitDoubleInvokeEffectsInDEV(root.current, false);\n    }\n  }\n\n  onCommitRootDevTools(finishedWork.stateNode, renderPriorityLevel);\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      root.memoizedUpdaters.clear();\n    }\n  }\n\n  if (__DEV__) {\n    onCommitRootTestSelector();\n  }\n\n  // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now());\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\n    root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects();\n  }\n\n  // Read this again, since a passive effect might have updated it\n  remainingLanes = root.pendingLanes;\n  if (includesSomeLane(remainingLanes, (SyncLane: Lane))) {\n    if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n      markNestedUpdateScheduled();\n    }\n\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbacks();\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStopped();\n  }\n\n  return null;\n}\n\nexport function flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    const renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    const priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    const previousPriority = getCurrentUpdatePriority();\n    try {\n      ReactCurrentBatchConfig.transition = 0;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }\n  return false;\n}\n\nexport function enqueuePendingPassiveProfilerEffect(fiber: Fiber): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    pendingPassiveProfilerEffects.push(fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  const root = rootWithPendingPassiveEffects;\n  const lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null;\n  // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n  pendingPassiveEffectsLanes = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Cannot flush passive effects while already rendering.',\n  );\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStarted(lanes);\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current);\n\n  // TODO: Move to commitPassiveMountEffects\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n    for (let i = 0; i < profilerEffects.length; i++) {\n      const fiber = ((profilerEffects[i]: any): Fiber);\n      commitPassiveEffectDurations(root, fiber);\n    }\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStopped();\n  }\n\n  if (__DEV__ && enableStrictEffects) {\n    commitDoubleInvokeEffectsInDEV(root.current, true);\n  }\n\n  executionContext = prevExecutionContext;\n\n  flushSyncCallbacks();\n\n  // If additional passive effects were scheduled, increment a counter. If this\n  // exceeds the limit, we'll fire a warning.\n  nestedPassiveUpdateCount =\n    rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;\n\n  // TODO: Move to commitPassiveMountEffects\n  onPostCommitRootDevTools(root);\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nexport function isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nexport function markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error: mixed) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\nexport const onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(\n  rootFiber: Fiber,\n  sourceFiber: Fiber,\n  error: mixed,\n) {\n  const errorInfo = createCapturedValue(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, (SyncLane: Lane));\n  enqueueUpdate(rootFiber, update, (SyncLane: Lane));\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(rootFiber, (SyncLane: Lane));\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nexport function captureCommitPhaseError(\n  sourceFiber: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  error: mixed,\n) {\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = null;\n  if (skipUnmountedBoundaries) {\n    fiber = nearestMountedAncestor;\n  } else {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n      if (\n        typeof ctor.getDerivedStateFromError === 'function' ||\n        (typeof instance.componentDidCatch === 'function' &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        const errorInfo = createCapturedValue(error, sourceFiber);\n        const update = createClassErrorUpdate(\n          fiber,\n          errorInfo,\n          (SyncLane: Lane),\n        );\n        enqueueUpdate(fiber, update, (SyncLane: Lane));\n        const eventTime = requestEventTime();\n        const root = markUpdateLaneFromFiberToRoot(fiber, (SyncLane: Lane));\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n\n  if (__DEV__) {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    console.error(\n      'Internal React error: Attempted to capture a commit phase error ' +\n        'inside a detached tree. This indicates a bug in React. Likely ' +\n        'causes include deleting the same fiber more than once, committing an ' +\n        'already-finished tree, or an inconsistent return pointer.\\n\\n' +\n        'Error message:\\n\\n%s',\n      error,\n    );\n  }\n}\n\nexport function pingSuspendedRoot(\n  root: FiberRoot,\n  wakeable: Wakeable,\n  pingedLanes: Lanes,\n) {\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  const eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes, eventTime);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes,\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber: Fiber, retryLane: Lane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  }\n  // TODO: Special case idle priority?\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nexport function retryDehydratedSuspenseBoundary(boundaryFiber: Fiber) {\n  const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n  let retryLane = NoLane;\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\nexport function resolveRetryWakeable(boundaryFiber: Fiber, wakeable: Wakeable) {\n  let retryLane = NoLane; // Default\n  let retryCache: WeakSet<Wakeable> | Set<Wakeable> | null;\n  if (enableSuspenseServerRenderer) {\n    switch (boundaryFiber.tag) {\n      case SuspenseComponent:\n        retryCache = boundaryFiber.stateNode;\n        const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n        if (suspenseState !== null) {\n          retryLane = suspenseState.retryLane;\n        }\n        break;\n      case SuspenseListComponent:\n        retryCache = boundaryFiber.stateNode;\n        break;\n      default:\n        invariant(\n          false,\n          'Pinged unknown suspense boundary type. ' +\n            'This is probably a bug in React.',\n        );\n    }\n  } else {\n    retryCache = boundaryFiber.stateNode;\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\n// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed: number) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    invariant(\n      false,\n      'Maximum update depth exceeded. This can happen when a component ' +\n        'repeatedly calls setState inside componentWillUpdate or ' +\n        'componentDidUpdate. React limits the number of nested updates to ' +\n        'prevent infinite loops.',\n    );\n  }\n\n  if (__DEV__) {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      console.error(\n        'Maximum update depth exceeded. This can happen when a component ' +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          'have a dependency array, or one of the dependencies changes on ' +\n          'every render.',\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nfunction commitDoubleInvokeEffectsInDEV(\n  fiber: Fiber,\n  hasPassiveEffects: boolean,\n) {\n  if (__DEV__ && enableStrictEffects) {\n    // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects\n    // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.\n    // Maybe not a big deal since this is DEV only behavior.\n\n    setCurrentDebugFiberInDEV(fiber);\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(\n        fiber,\n        MountPassiveDev,\n        invokePassiveEffectUnmountInDEV,\n      );\n    }\n\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);\n    }\n    resetCurrentDebugFiberInDEV();\n  }\n}\n\nfunction invokeEffectsInDev(\n  firstChild: Fiber,\n  fiberFlags: Flags,\n  invokeEffectFn: (fiber: Fiber) => void,\n): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n\n    let current = firstChild;\n    let subtreeRoot = null;\n    while (current !== null) {\n      const primarySubtreeFlag = current.subtreeFlags & fiberFlags;\n      if (\n        current !== subtreeRoot &&\n        current.child !== null &&\n        primarySubtreeFlag !== NoFlags\n      ) {\n        current = current.child;\n      } else {\n        if ((current.flags & fiberFlags) !== NoFlags) {\n          invokeEffectFn(current);\n        }\n\n        if (current.sibling !== null) {\n          current = current.sibling;\n        } else {\n          current = subtreeRoot = current.return;\n        }\n      }\n    }\n  }\n}\n\nlet didWarnStateUpdateForNotYetMountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    const tag = fiber.tag;\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    const previousFiber = ReactCurrentFiberCurrent;\n    try {\n      setCurrentDebugFiberInDEV(fiber);\n      console.error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          'This indicates that you have a side-effect in your render function that ' +\n          'asynchronously later calls tries to update the component. Move this work to ' +\n          'useEffect instead.',\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentDebugFiberInDEV(fiber);\n      } else {\n        resetCurrentDebugFiberInDEV();\n      }\n    }\n  }\n}\n\nlet beginWork;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  const dummyFiber = null;\n  beginWork = (current, unitOfWork, lanes) => {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    const originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork,\n    );\n    try {\n      return originalBeginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        originalError !== null &&\n        typeof originalError === 'object' &&\n        typeof originalError.then === 'function'\n      ) {\n        // Don't replay promises. Treat everything else like an error.\n        throw originalError;\n      }\n\n      // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n\n      // Unwind the failed stack frame\n      unwindInterruptedWork(unitOfWork, workInProgressRootRenderLanes);\n\n      // Restore the original properties of the fiber.\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      }\n\n      // Run beginWork again.\n      invokeGuardedCallback(\n        null,\n        originalBeginWork,\n        null,\n        current,\n        unitOfWork,\n        lanes,\n      );\n\n      if (hasCaughtError()) {\n        const replayError = clearCaughtError();\n        if (\n          typeof replayError === 'object' &&\n          replayError !== null &&\n          replayError._suppressLogging &&\n          typeof originalError === 'object' &&\n          originalError !== null &&\n          !originalError._suppressLogging\n        ) {\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\n          originalError._suppressLogging = true;\n        }\n      }\n      // We always throw the original error in case the second render pass is not idempotent.\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invokation.\n      throw originalError;\n    }\n  };\n} else {\n  beginWork = originalBeginWork;\n}\n\nlet didWarnAboutUpdateInRender = false;\nlet didWarnAboutUpdateInRenderForAnotherComponent;\nif (__DEV__) {\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  if (__DEV__) {\n    if (\n      ReactCurrentDebugFiberIsRenderingInDEV &&\n      (executionContext & RenderContext) !== NoContext &&\n      !getIsUpdatingOpaqueValueInRenderPhaseInDEV()\n    ) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          const renderingComponentName =\n            (workInProgress && getComponentNameFromFiber(workInProgress)) ||\n            'Unknown';\n          // Dedupe by the rendering component because it's the one that needs to be fixed.\n          const dedupeKey = renderingComponentName;\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            const setStateComponentName =\n              getComponentNameFromFiber(fiber) || 'Unknown';\n            console.error(\n              'Cannot update a component (`%s`) while rendering a ' +\n                'different component (`%s`). To locate the bad setState() call inside `%s`, ' +\n                'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName,\n            );\n          }\n          break;\n        }\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            console.error(\n              'Cannot update during an existing state transition (such as ' +\n                'within `render`). Render methods should be a pure ' +\n                'function of props and state.',\n            );\n            didWarnAboutUpdateInRender = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport function restorePendingUpdaters(root: FiberRoot, lanes: Lanes): void {\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      const memoizedUpdaters = root.memoizedUpdaters;\n      memoizedUpdaters.forEach(schedulingFiber => {\n        addFiberToLanesMap(root, schedulingFiber, lanes);\n      });\n\n      // This function intentionally does not clear memoized updaters.\n      // Those may still be relevant to the current commit\n      // and a future one (e.g. Suspense).\n    }\n  }\n}\n\nconst fakeActCallbackNode = {};\nfunction scheduleCallback(priorityLevel, callback) {\n  if (__DEV__) {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    const actQueue = ReactCurrentActQueue.current;\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return Scheduler_scheduleCallback(priorityLevel, callback);\n    }\n  } else {\n    // In production, always call Scheduler. This function will be stripped out.\n    return Scheduler_scheduleCallback(priorityLevel, callback);\n  }\n}\n\nfunction cancelCallback(callbackNode) {\n  if (__DEV__ && callbackNode === fakeActCallbackNode) {\n    return;\n  }\n  // In production, always call Scheduler. This function will be stripped out.\n  return Scheduler_cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return __DEV__ && ReactCurrentActQueue.current !== null;\n}\n\nexport function warnIfNotCurrentlyActingEffectsInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      (fiber.mode & StrictLegacyMode) !== NoMode &&\n      ReactCurrentActQueue.current === null &&\n      // Our internal tests use a custom implementation of `act` that works by\n      // mocking the Scheduler package. Disable the `act` warning.\n      // TODO: Maybe the warning should be disabled by default, and then turned\n      // on at the testing frameworks layer? Instead of what we do now, which\n      // is check if a `jest` global is defined.\n      ReactCurrentActQueue.disableActWarning === false\n    ) {\n      console.error(\n        'An update to %s ran an effect, but was not wrapped in act(...).\\n\\n' +\n          'When testing, code that causes React state updates should be ' +\n          'wrapped into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* fire events that update state */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n        getComponentNameFromFiber(fiber),\n      );\n    }\n  }\n}\n\nfunction warnIfNotCurrentlyActingUpdatesInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      executionContext === NoContext &&\n      ReactCurrentActQueue.current === null &&\n      // Our internal tests use a custom implementation of `act` that works by\n      // mocking the Scheduler package. Disable the `act` warning.\n      // TODO: Maybe the warning should be disabled by default, and then turned\n      // on at the testing frameworks layer? Instead of what we do now, which\n      // is check if a `jest` global is defined.\n      ReactCurrentActQueue.disableActWarning === false\n    ) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n            'When testing, code that causes React state updates should be ' +\n            'wrapped into act(...):\\n\\n' +\n            'act(() => {\\n' +\n            '  /* fire events that update state */\\n' +\n            '});\\n' +\n            '/* assert on the output */\\n\\n' +\n            \"This ensures that you're testing the behavior the user would see \" +\n            'in the browser.' +\n            ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n          getComponentNameFromFiber(fiber),\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nexport const warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  flushSync,\n  scheduleUpdateOnFiber,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {updateContainer} from './ReactFiberReconciler.old';\nimport {emptyContextObject} from './ReactFiberContext.old';\nimport {SyncLane, NoTimestamp} from './ReactFiberLane.old';\nimport {\n  ClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  HostComponent,\n  HostPortal,\n  HostRoot,\n  MemoComponent,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type Family = {|\n  current: any,\n|};\n\nexport type RefreshUpdate = {|\n  staleFamilies: Set<Family>,\n  updatedFamilies: Set<Family>,\n|};\n\n// Resolves type to a family.\ntype RefreshHandler = any => Family | void;\n\n// Used by React Refresh runtime through DevTools Global Hook.\nexport type SetRefreshHandler = (handler: RefreshHandler | null) => void;\nexport type ScheduleRefresh = (root: FiberRoot, update: RefreshUpdate) => void;\nexport type ScheduleRoot = (root: FiberRoot, element: ReactNodeList) => void;\nexport type FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n) => Set<Instance>;\n\nlet resolveFamily: RefreshHandler | null = null;\n// $FlowFixMe Flow gets confused by a WeakSet feature check below.\nlet failedBoundaries: WeakSet<Fiber> | null = null;\n\nexport const setRefreshHandler = (handler: RefreshHandler | null): void => {\n  if (__DEV__) {\n    resolveFamily = handler;\n  }\n};\n\nexport function resolveFunctionForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function resolveClassForHotReloading(type: any): any {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\n\nexport function resolveForwardRefForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === 'function'\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        const currentRender = resolveFunctionForHotReloading(type.render);\n        if (type.render !== currentRender) {\n          const syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender,\n          };\n          if (type.displayName !== undefined) {\n            (syntheticType: any).displayName = type.displayName;\n          }\n          return syntheticType;\n        }\n      }\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function isCompatibleFamilyForHotReloading(\n  fiber: Fiber,\n  element: ReactElement,\n): boolean {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    const prevType = fiber.elementType;\n    const nextType = element.type;\n\n    // If we got here, we know types aren't === equal.\n    let needsCompareFamilies = false;\n\n    const $$typeofNextType =\n      typeof nextType === 'object' && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case FunctionComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n\n    // Check if both types have a family and it's the same one.\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      const prevFamily = resolveFamily(prevType);\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n}\n\nexport function markFailedErrorBoundaryForHotReloading(fiber: Fiber) {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n    failedBoundaries.add(fiber);\n  }\n}\n\nexport const scheduleRefresh: ScheduleRefresh = (\n  root: FiberRoot,\n  update: RefreshUpdate,\n): void => {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    const {staleFamilies, updatedFamilies} = update;\n    flushPassiveEffects();\n    flushSync(() => {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies,\n      );\n    });\n  }\n};\n\nexport const scheduleRoot: ScheduleRoot = (\n  root: FiberRoot,\n  element: ReactNodeList,\n): void => {\n  if (__DEV__) {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n    flushPassiveEffects();\n    flushSync(() => {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber: Fiber,\n  updatedFamilies: Set<Family>,\n  staleFamilies: Set<Family>,\n) {\n  if (__DEV__) {\n    const {alternate, child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    let needsRender = false;\n    let needsRemount = false;\n    if (candidateType !== null) {\n      const family = resolveFamily(candidateType);\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n    if (needsRemount || needsRender) {\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n  }\n}\n\nexport const findHostInstancesForRefresh: FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n): Set<Instance> => {\n  if (__DEV__) {\n    const hostInstances = new Set();\n    const types = new Set(families.map(family => family.current));\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances,\n    );\n    return hostInstances;\n  } else {\n    throw new Error(\n      'Did not expect findHostInstancesForRefresh to be called in production.',\n    );\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber: Fiber,\n  types: Set<any>,\n  hostInstances: Set<Instance>,\n) {\n  if (__DEV__) {\n    const {child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    let didMatch = false;\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances,\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances,\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): void {\n  if (__DEV__) {\n    const foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances,\n    );\n    if (foundHostInstances) {\n      return;\n    }\n    // If we didn't find any host children, fallback to closest host parent.\n    let node = fiber;\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): boolean {\n  if (__DEV__) {\n    let node: Fiber = fiber;\n    let foundHostInstances = false;\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode);\n        // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactFragment, ReactPortal, ReactScope} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {WorkTag} from './ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseInstance, Props} from './ReactFiberHostConfig';\nimport type {OffscreenProps} from './ReactFiberOffscreenComponent';\n\nimport invariant from 'shared/invariant';\nimport {\n  createRootStrictEffectsByDefault,\n  enableCache,\n  enableStrictEffects,\n  enableProfilerTimer,\n  enableScopeAPI,\n  enableSyncDefaultUpdates,\n  allowConcurrentByDefault,\n} from 'shared/ReactFeatureFlags';\nimport {\n  supportsPersistence,\n  getOffscreenContainerType,\n} from './ReactFiberHostConfig';\nimport {NoFlags, Placement, StaticMask} from './ReactFiberFlags';\nimport {ConcurrentRoot} from './ReactRootTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  DehydratedFragment,\n  FunctionComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  resolveClassForHotReloading,\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n} from './ReactFiberHotReloading.old';\nimport {NoLanes} from './ReactFiberLane.old';\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  ProfileMode,\n  StrictLegacyMode,\n  StrictEffectsMode,\n  ConcurrentUpdatesByDefaultMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_CACHE_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type {Fiber};\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  if (__DEV__) {\n    // This isn't directly used but is handy for debugging internals:\n\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nexport function createWorkInProgress(current: Fiber, pendingProps: any): Fiber {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.flags = NoFlags;\n\n    // The effects are no longer valid.\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n\n  // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext,\n        };\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  if (__DEV__) {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return workInProgress;\n}\n\n// Used to reuse a Fiber for a second pass.\nexport function resetWorkInProgress(workInProgress: Fiber, renderLanes: Lanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement;\n\n  // The effects are no longer valid.\n\n  const current = workInProgress.alternate;\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    workInProgress.dependencies = null;\n\n    workInProgress.stateNode = null;\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext,\n          };\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(\n  tag: RootTag,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n): Fiber {\n  let mode;\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n\n      if (enableStrictEffects) {\n        mode |= StrictEffectsMode;\n      }\n    } else if (enableStrictEffects && createRootStrictEffectsByDefault) {\n      mode |= StrictLegacyMode | StrictEffectsMode;\n    }\n    if (\n      // We only use this flag for our repo tests to check both behaviors.\n      // TODO: Flip this flag and rename it something like \"forceConcurrentByDefaultForTesting\"\n      !enableSyncDefaultUpdates ||\n      // Only for internal experiments.\n      (allowConcurrentByDefault && concurrentUpdatesByDefaultOverride)\n    ) {\n      mode |= ConcurrentUpdatesByDefaultMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n      if (__DEV__) {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= DebugTracingMode;\n        break;\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n        if (enableStrictEffects && (mode & ConcurrentMode) !== NoMode) {\n          // Strict effects should never run on legacy roots\n          mode |= StrictEffectsMode;\n        }\n        break;\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      case REACT_LEGACY_HIDDEN_TYPE:\n        return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);\n      case REACT_SCOPE_TYPE:\n        if (enableScopeAPI) {\n          return createFiberFromScope(type, pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_CACHE_TYPE:\n        if (enableCache) {\n          return createFiberFromCache(pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              if (__DEV__) {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentNameFromFiber(owner) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n        invariant(\n          false,\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            'but got: %s.%s',\n          type == null ? type : typeof type,\n          info,\n        );\n      }\n    }\n  }\n\n  const fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  if (__DEV__) {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\n\nexport function createOffscreenHostContainerFiber(\n  props: Props,\n  fiberMode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (supportsPersistence) {\n    const type = getOffscreenContainerType();\n    const fiber = createFiber(HostComponent, props, key, fiberMode);\n    fiber.elementType = type;\n    fiber.type = type;\n    fiber.lanes = lanes;\n    return fiber;\n  } else {\n    // Only implemented in persistent mode\n    invariant(false, 'Not implemented.');\n  }\n}\n\nexport function createFiberFromElement(\n  element: ReactElement,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromScope(\n  scope: ReactScope,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(ScopeComponent, pendingProps, key, mode);\n  fiber.type = scope;\n  fiber.elementType = scope;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (typeof pendingProps.id !== 'string') {\n      console.error(\n        'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\n        typeof pendingProps.id,\n      );\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  if (enableProfilerTimer) {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0,\n    };\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromSuspenseList(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromOffscreen(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromLegacyHidden(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromCache(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(CacheComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_CACHE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoMode);\n  fiber.elementType = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromDehydratedFragment(\n  dehydratedNode: SuspenseInstance,\n): Fiber {\n  const fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.subtreeFlags = source.subtreeFlags;\n  target.deletions = source.deletions;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\n\nimport {noTimeout, supportsHydration} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber.old';\nimport {\n  NoLane,\n  NoLanes,\n  NoTimestamp,\n  TotalLanes,\n  createLaneMap,\n} from './ReactFiberLane.old';\nimport {\n  enableSuspenseCallback,\n  enableCache,\n  enableProfilerCommitHooks,\n  enableProfilerTimer,\n  enableUpdaterTracking,\n} from 'shared/ReactFeatureFlags';\nimport {initializeUpdateQueue} from './ReactUpdateQueue.old';\nimport {LegacyRoot, ConcurrentRoot} from './ReactRootTags';\n\nfunction FiberRootNode(containerInfo, tag, hydrate) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.hydrate = hydrate;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n\n  if (enableCache) {\n    this.pooledCache = null;\n    this.pooledCacheLanes = NoLanes;\n  }\n\n  if (supportsHydration) {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  if (enableUpdaterTracking) {\n    this.memoizedUpdaters = new Set();\n    const pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\n    for (let i = 0; i < TotalLanes; i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  if (__DEV__) {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = 'createRoot()';\n        break;\n      case LegacyRoot:\n        this._debugRootType = 'createLegacyRoot()';\n        break;\n    }\n  }\n}\n\nexport function createFiberRoot(\n  containerInfo: any,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n): FiberRoot {\n  const root: FiberRoot = (new FiberRootNode(containerInfo, tag, hydrate): any);\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber(\n    tag,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n  );\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  if (enableCache) {\n    const initialCache = new Map();\n    root.pooledCache = initialCache;\n    const initialState = {\n      element: null,\n      cache: initialCache,\n    };\n    uninitializedFiber.memoizedState = initialState;\n  } else {\n    const initialState = {\n      element: null,\n    };\n    uninitializedFiber.memoizedState = initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n\n  return root;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport type {RendererInspectionConfig} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Lane} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from './ReactFiberTreeReflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {\n  HostComponent,\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\nimport {\n  enableSchedulingProfiler,\n  consoleManagedByDevToolsDuringStrictMode,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext.old';\nimport {createFiberRoot} from './ReactFiberRoot.old';\nimport {injectInternals, onScheduleRoot} from './ReactFiberDevToolsHook.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n  flushRoot,\n  batchedUpdates,\n  flushSync,\n  flushControlled,\n  deferredUpdates,\n  discreteUpdates,\n  flushSyncWithoutWarningIfAlreadyRendering,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {\n  createUpdate,\n  enqueueUpdate,\n  entangleTransitions,\n} from './ReactUpdateQueue.old';\nimport {\n  isRendering as ReactCurrentFiberIsRendering,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {\n  SyncLane,\n  SelectiveHydrationLane,\n  NoTimestamp,\n  getHighestPriorityPendingLanes,\n  higherPriorityLane,\n} from './ReactFiberLane.old';\nimport {\n  getCurrentUpdatePriority,\n  runWithPriority,\n} from './ReactEventPriorities.old';\nimport {\n  scheduleRefresh,\n  scheduleRoot,\n  setRefreshHandler,\n  findHostInstancesForRefresh,\n} from './ReactFiberHotReloading.old';\nimport {markRenderScheduled} from './SchedulingProfiler';\nimport ReactVersion from 'shared/ReactVersion';\nexport {registerMutableSourceForHydration} from './ReactMutableSource.old';\nexport {createPortal} from './ReactPortal';\nexport {\n  createComponentSelector,\n  createHasPseudoClassSelector,\n  createRoleSelector,\n  createTestNameSelector,\n  createTextSelector,\n  getFindAllNodesFailureDescription,\n  findAllNodes,\n  findBoundingRects,\n  focusWithin,\n  observeVisibleRects,\n} from './ReactTestSelectors';\n\nimport * as Scheduler from './Scheduler';\nimport {setSuppressWarning} from 'shared/consoleWithStackDev';\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber | null,\n  rendererConfig?: RendererInspectionConfig,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      invariant(false, 'Unable to find node on an unmounted component.');\n    } else {\n      invariant(\n        false,\n        'Argument appears to not be a ReactComponent. Keys: %s',\n        Object.keys(component),\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        invariant(false, 'Unable to find node on an unmounted component.');\n      } else {\n        invariant(\n          false,\n          'Argument appears to not be a ReactComponent. Keys: %s',\n          Object.keys(component),\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictLegacyMode) {\n      const componentName = getComponentNameFromFiber(fiber) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n\n        const previousFiber = ReactCurrentFiberCurrent;\n        try {\n          setCurrentDebugFiberInDEV(hostFiber);\n          if (fiber.mode & StrictLegacyMode) {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which is inside StrictMode. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          } else {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which renders StrictMode children. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentDebugFiberInDEV(previousFiber);\n          } else {\n            resetCurrentDebugFiberInDEV();\n          }\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n): OpaqueRoot {\n  return createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n  );\n}\n\nexport function updateContainer(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n): Lane {\n  if (__DEV__) {\n    onScheduleRoot(container, element);\n  }\n  const current = container.current;\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(current);\n\n  if (enableSchedulingProfiler) {\n    markRenderScheduled(lane);\n  }\n\n  const context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberIsRendering &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      console.error(\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentNameFromFiber(ReactCurrentFiberCurrent) || 'Unknown',\n      );\n    }\n  }\n\n  const update = createUpdate(eventTime, lane);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element};\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    if (__DEV__) {\n      if (typeof callback !== 'function') {\n        console.error(\n          'render(...): Expected the last optional `callback` argument to be a ' +\n            'function. Instead received: %s.',\n          callback,\n        );\n      }\n    }\n    update.callback = callback;\n  }\n\n  enqueueUpdate(current, update, lane);\n  const root = scheduleUpdateOnFiber(current, lane, eventTime);\n  if (root !== null) {\n    entangleTransitions(root, current, lane);\n  }\n\n  return lane;\n}\n\nexport {\n  batchedUpdates,\n  deferredUpdates,\n  discreteUpdates,\n  flushControlled,\n  flushSync,\n  flushSyncWithoutWarningIfAlreadyRendering,\n  flushPassiveEffects,\n};\n\nexport function getPublicRootInstance(\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  const containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport function attemptSynchronousHydration(fiber: Fiber): void {\n  switch (fiber.tag) {\n    case HostRoot:\n      const root: FiberRoot = fiber.stateNode;\n      if (root.hydrate) {\n        // Flush the first scheduled \"update\".\n        const lanes = getHighestPriorityPendingLanes(root);\n        flushRoot(root, lanes);\n      }\n      break;\n    case SuspenseComponent:\n      const eventTime = requestEventTime();\n      flushSync(() => scheduleUpdateOnFiber(fiber, SyncLane, eventTime));\n      // If we're still blocked after this, we need to increase\n      // the priority of any promises resolving within this\n      // boundary so that they next attempt also has higher pri.\n      const retryLane = SyncLane;\n      markRetryLaneIfNotHydrated(fiber, retryLane);\n      break;\n  }\n}\n\nfunction markRetryLaneImpl(fiber: Fiber, retryLane: Lane) {\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(\n      suspenseState.retryLane,\n      retryLane,\n    );\n  }\n}\n\n// Increases the priority of thenables when they resolve within this boundary.\nfunction markRetryLaneIfNotHydrated(fiber: Fiber, retryLane: Lane) {\n  markRetryLaneImpl(fiber, retryLane);\n  const alternate = fiber.alternate;\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\n\nexport function attemptDiscreteHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = SyncLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptContinuousHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = SelectiveHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptHydrationAtCurrentPriority(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport {getCurrentUpdatePriority, runWithPriority};\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nlet shouldErrorImpl = fiber => null;\n\nexport function shouldError(fiber: Fiber): ?boolean {\n  return shouldErrorImpl(fiber);\n}\n\nlet shouldSuspendImpl = fiber => false;\n\nexport function shouldSuspend(fiber: Fiber): boolean {\n  return shouldSuspendImpl(fiber);\n}\n\nlet isStrictMode = false;\n\nlet overrideHookState = null;\nlet overrideHookStateDeletePath = null;\nlet overrideHookStateRenamePath = null;\nlet overrideProps = null;\nlet overridePropsDeletePath = null;\nlet overridePropsRenamePath = null;\nlet scheduleUpdate = null;\nlet setErrorHandler = null;\nlet setSuspenseHandler = null;\n\nif (__DEV__) {\n  const copyWithDeleteImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n  ) => {\n    const key = path[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(((key: any): number), 1);\n      } else {\n        delete updated[key];\n      }\n      return updated;\n    }\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  const copyWithDelete = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n  ): Object | Array<any> => {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  const copyWithRenameImpl = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n    index: number,\n  ) => {\n    const oldKey = oldPath[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === oldPath.length) {\n      const newKey = newPath[index];\n      // $FlowFixMe number or string is fine here\n      updated[newKey] = updated[oldKey];\n      if (isArray(updated)) {\n        updated.splice(((oldKey: any): number), 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1,\n      );\n    }\n    return updated;\n  };\n\n  const copyWithRename = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ): Object | Array<any> => {\n    if (oldPath.length !== newPath.length) {\n      console.warn('copyWithRename() expects paths of the same length');\n      return;\n    } else {\n      for (let i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          console.warn(\n            'copyWithRename() expects paths to be the same except for the deepest key',\n          );\n          return;\n        }\n      }\n    }\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n    value: any,\n  ) => {\n    if (index >= path.length) {\n      return value;\n    }\n    const key = path[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  const findHook = (fiber: Fiber, id: number) => {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    let currentHook = fiber.memoizedState;\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n    return currentHook;\n  };\n\n  // Support DevTools editable values for useState and useReducer.\n  overrideHookState = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n    value: any,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateDeletePath = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateRenamePath = (\n    fiber: Fiber,\n    id: number,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsDeletePath = (fiber: Fiber, path: Array<string | number>) => {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsRenamePath = (\n    fiber: Fiber,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  scheduleUpdate = (fiber: Fiber) => {\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  setErrorHandler = (newShouldErrorImpl: Fiber => ?boolean) => {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = (newShouldSuspendImpl: Fiber => boolean) => {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(\n  instance: Instance | TextInstance,\n): Fiber | null {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return ReactCurrentFiberCurrent;\n}\n\nexport function getIsStrictModeForDevtools() {\n  return isStrictMode;\n}\n\nexport function setIsStrictModeForDevtools(newIsStrictMode: boolean) {\n  isStrictMode = newIsStrictMode;\n\n  if (consoleManagedByDevToolsDuringStrictMode) {\n    // We're in a test because Scheduler.unstable_yieldValue only exists\n    // in SchedulerMock. To reduce the noise in strict mode tests,\n    // suppress warnings and disable scheduler yielding during the double render\n    if (typeof Scheduler.unstable_yieldValue === 'function') {\n      Scheduler.unstable_setDisableYieldValue(newIsStrictMode);\n      setSuppressWarning(newIsStrictMode);\n    }\n  } else {\n    if (newIsStrictMode) {\n      disableLogs();\n    } else {\n      reenableLogs();\n    }\n  }\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState,\n    overrideHookStateDeletePath,\n    overrideHookStateRenamePath,\n    overrideProps,\n    overridePropsDeletePath,\n    overridePropsRenamePath,\n    setErrorHandler,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: __DEV__ ? findHostInstancesForRefresh : null,\n    scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n    scheduleRoot: __DEV__ ? scheduleRoot : null,\n    setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: __DEV__ ? getCurrentFiberForDevTools : null,\n    getIsStrictMode: __DEV__ ? getIsStrictModeForDevtools : null,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion,\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport * as React from 'react';\nimport ReactVersion from 'shared/ReactVersion';\nimport {LegacyRoot} from 'react-reconciler/src/ReactRootTags';\nimport {\n  createContainer,\n  updateContainer,\n  injectIntoDevTools,\n} from 'react-reconciler/src/ReactFiberReconciler';\nimport Transform from 'art/core/transform';\nimport Mode from 'art/modes/current';\nimport FastNoSideEffects from 'art/modes/fast-noSideEffects';\n\nimport {TYPES, childrenAsString} from './ReactARTInternals';\n\nMode.setCurrent(\n  // Change to 'art/modes/dom' for easier debugging via SVG\n  FastNoSideEffects,\n);\n\n/** Declarative fill-type objects; API design not finalized */\n\nconst slice = Array.prototype.slice;\n\nclass LinearGradient {\n  constructor(stops, x1, y1, x2, y2) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillLinear.apply(node, this._args);\n  }\n}\n\nclass RadialGradient {\n  constructor(stops, fx, fy, rx, ry, cx, cy) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillRadial.apply(node, this._args);\n  }\n}\n\nclass Pattern {\n  constructor(url, width, height, left, top) {\n    this._args = slice.call(arguments);\n  }\n\n  applyFill(node) {\n    node.fillImage.apply(node, this._args);\n  }\n}\n\n/** React Components */\n\nclass Surface extends React.Component {\n  componentDidMount() {\n    const {height, width} = this.props;\n\n    this._surface = Mode.Surface(+width, +height, this._tagRef);\n\n    this._mountNode = createContainer(this._surface, LegacyRoot, false, null);\n    updateContainer(this.props.children, this._mountNode, this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    const props = this.props;\n\n    if (props.height !== prevProps.height || props.width !== prevProps.width) {\n      this._surface.resize(+props.width, +props.height);\n    }\n\n    updateContainer(this.props.children, this._mountNode, this);\n\n    if (this._surface.render) {\n      this._surface.render();\n    }\n  }\n\n  componentWillUnmount() {\n    updateContainer(null, this._mountNode, this);\n  }\n\n  render() {\n    // This is going to be a placeholder because we don't know what it will\n    // actually resolve to because ART may render canvas, vml or svg tags here.\n    // We only allow a subset of properties since others might conflict with\n    // ART's properties.\n    const props = this.props;\n\n    // TODO: ART's Canvas Mode overrides surface title and cursor\n    const Tag = Mode.Surface.tagName;\n\n    return (\n      <Tag\n        ref={ref => (this._tagRef = ref)}\n        accessKey={props.accessKey}\n        className={props.className}\n        draggable={props.draggable}\n        role={props.role}\n        style={props.style}\n        tabIndex={props.tabIndex}\n        title={props.title}\n      />\n    );\n  }\n}\n\nclass Text extends React.Component {\n  constructor(props) {\n    super(props);\n    // We allow reading these props. Ideally we could expose the Text node as\n    // ref directly.\n    ['height', 'width', 'x', 'y'].forEach(key => {\n      Object.defineProperty(this, key, {\n        get: function() {\n          return this._text ? this._text[key] : undefined;\n        },\n      });\n    });\n  }\n  render() {\n    // This means you can't have children that render into strings...\n    const T = TYPES.TEXT;\n    return (\n      <T {...this.props} ref={t => (this._text = t)}>\n        {childrenAsString(this.props.children)}\n      </T>\n    );\n  }\n}\n\ninjectIntoDevTools({\n  findFiberByHostInstance: () => null,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-art',\n});\n\n/** API */\n\nexport const ClippingRectangle = TYPES.CLIPPING_RECTANGLE;\nexport const Group = TYPES.GROUP;\nexport const Shape = TYPES.SHAPE;\nexport const Path = Mode.Path;\nexport {LinearGradient, Pattern, RadialGradient, Surface, Text, Transform};\n"],"names":["LegacyRoot","ConcurrentRoot","warningWWW","require","suppressWarning","setSuppressWarning","newSuppressWarning","warn","format","args","printWarning","error","level","React","ReactSharedInternals","__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED","ReactDebugCurrentFrame","stack","getStackAddendum","push","unshift","apply","get","key","_reactInternals","set","value","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_OPAQUE_ID_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","Symbol","for","symbolFor","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","name","getContextName","type","getComponentNameFromType","tag","$$typeof","context","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","getComponentNameFromFiber","fiber","dynamicFeatureFlags","disableInputAttributeSyncing","enableTrustedTypesIntegration","disableSchedulerTimeoutBasedOnReactExpirationTime","warnAboutSpreadingKeyToJSX","replayFailedUnitOfWorkWithInvokeGuardedCallback","enableFilterEmptyStringAttributesDOM","enableLegacyFBSupport","deferRenderPhaseUpdateToNextBatch","enableDebugTracing","skipUnmountedBoundaries","createRootStrictEffectsByDefault","enableUseRefAccessWarning","disableNativeComponentFrames","disableSchedulerTimeoutInWorkLoop","enableLazyContextPropagation","enableSyncDefaultUpdates","warnOnSubscriptionInsideStartTransition","enableStrictEffects","__DEV__","enableProfilerTimer","__PROFILE__","enableProfilerCommitHooks","enableProfilerNestedUpdateScheduledHook","enableSchedulingProfiler","warnAboutStringRefs","enableNewReconciler","__VARIANT__","NoFlags","PerformedWork","Placement","Update","PlacementAndUpdate","ChildDeletion","ContentReset","Callback","DidCapture","Ref","Snapshot","Passive","Hydrating","HydratingAndUpdate","Visibility","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","DidPropagateContext","NeedsPropagation","RefStatic","LayoutStatic","PassiveStatic","MountLayoutDev","MountPassiveDev","BeforeMutationMask","enableCreateEventHandleAPI","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","node","nearestMounted","alternate","nextNode","flags","return","isMounted","component","owner","current","ownerFiber","instance","stateNode","_warnedAboutRefsInRender","getInstance","assertIsMounted","findCurrentFiberUsingSlowPath","a","b","parentA","parentB","nextParent","child","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","isFiberSuspenseAndTimedOut","memoizedState","dehydrated","doesFiberContain","parentFiber","childFiber","parentFiberAlternate","isArrayImpl","Array","isArray","TYPES","CLIPPING_RECTANGLE","GROUP","SHAPE","TEXT","EVENT_TYPES","onClick","onMouseMove","onMouseOver","onMouseOut","onMouseUp","onMouseDown","childrenAsString","children","length","join","scheduleCallback","Scheduler","cancelCallback","shouldYield","requestPaint","now","ImmediatePriority","UserBlockingPriority","NormalPriority","IdlePriority","unstable_yieldValue","unstable_setDisableYieldValue","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","inject","err","checkDCE","onScheduleRoot","root","onScheduleFiberRoot","onCommitRoot","eventPriority","onCommitFiberRoot","didError","schedulerPriority","DiscreteEventPriority","ImmediateSchedulerPriority","ContinuousEventPriority","UserBlockingSchedulerPriority","DefaultEventPriority","NormalSchedulerPriority","IdleEventPriority","IdleSchedulerPriority","undefined","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","NoMode","ConcurrentMode","ProfileMode","DebugTracingMode","StrictLegacyMode","StrictEffectsMode","ConcurrentUpdatesByDefaultMode","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","getLabelForLane","lane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","allowConcurrentByDefault","mode","entangledLanes","entanglements","index","pickArbitraryLaneIndex","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesNonIdleWork","includesOnlyRetries","includesOnlyTransitions","shouldTimeSlice","SyncDefaultLanes","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","clz32","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","i","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootMutableRead","mutableReadLanes","markRootFinished","remainingLanes","noLongerPendingLanes","pooledCacheLanes","pooledCache","markRootEntangled","rootEntangledLanes","getBumpedLaneForHydration","renderLanes","renderLane","addFiberToLanesMap","pendingUpdatersLaneMap","updaters","add","movePendingFibersToMemoized","memoizedUpdaters","size","forEach","has","clear","Math","clz32Fallback","log","LN2","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","registerSuspenseInstanceRetry","hydrateTextInstance","clearSuspenseBoundary","clearSuspenseBoundaryFromContainer","errorHydratingContainer","prepareScopeUpdate","getInstanceFromScope","pooledTransform","Transform","NO_CONTEXT","UPDATE_SIGNAL","Object","freeze","addEventListeners","listener","_listeners","_subscriptions","subscribe","createEventHandler","handleEvent","event","call","destroyEventListeners","getScaleX","props","scaleX","scale","getScaleY","scaleY","isSameFont","oldFont","newFont","fontSize","fontStyle","fontVariant","fontWeight","fontFamily","applyClippingRectangleProps","prevProps","applyNodeProps","width","height","applyGroupProps","transformTo","move","y","rotate","rotation","originX","originY","transform","xx","yx","xy","yy","cursor","title","indicate","blend","opacity","visible","show","hide","applyRenderableNodeProps","fill","applyFill","stroke","strokeWidth","strokeCap","strokeJoin","strokeDash","applyShapeProps","path","d","prevDelta","_prevDelta","prevPath","_prevPath","delta","draw","applyTextProps","string","_currentString","font","alignment","appendInitialChild","parentInstance","createInstance","internalInstanceHandle","ClippingRectangle","_applyProps","Group","Shape","Text","createTextInstance","text","rootContainerInstance","getPublicInstance","prepareForCommit","prepareUpdate","domElement","oldProps","newProps","resetAfterCommit","resetTextContent","getRootHostContext","getChildHostContext","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","getCurrentEventPriority","appendChild","parentNode","eject","appendChildToContainer","insertBefore","beforeChild","injectBefore","insertInContainerBefore","removeChild","removeChildFromContainer","commitUpdate","updatePayload","hideInstance","unhideInstance","unhideTextInstance","textInstance","clearContainer","container","getInstanceFromNode","Error","makeClientIdInDEV","warnOnAccessInDEV","preparePortalMount","portalInstance","disabledDepth","prevLog","prevInfo","prevWarn","prevError","prevGroup","prevGroupCollapsed","prevGroupEnd","disabledLog","__reactDisabledLog","disableLogs","console","info","group","groupCollapsed","groupEnd","configurable","enumerable","writable","defineProperties","reenableLogs","ReactCurrentDispatcher","prefix","describeBuiltInComponentFrame","source","ownerFn","trim","reentry","componentFrameCache","PossiblyWeakMap","WeakMap","Map","describeNativeComponentFrame","fn","construct","frame","control","previousPrepareStackTrace","prepareStackTrace","previousDispatcher","Fake","defineProperty","prototype","Reflect","sample","sampleLines","split","controlLines","s","c","replace","syntheticFrame","describeClassComponentFrame","ctor","describeFunctionComponentFrame","shouldConstruct","Component","isReactComponent","describeUnknownElementTypeFrameInDEV","hasOwnProperty","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","Function","bind","typeSpecName","ex","message","valueStack","fiberStack","createCursor","defaultValue","pop","emptyContextObject","hasContextChanged","isContextProvider","pushTopLevelContextObject","didChange","processChildContext","parentContext","findCurrentUnmaskedContext","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","callback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","slice","nativeConsole","nativeConsoleLog","pendingGroupArgs","printedGroupIndex","formatLanes","laneOrLanes","toString","padStart","groupArgs","REACT_LOGO_STYLE","logCommitStarted","logCommitStopped","wakeableIDs","wakeableID","getWakeableID","wakeable","logComponentSuspended","id","display","then","logLayoutEffectsStarted","logLayoutEffectsStopped","logPassiveEffectsStarted","logPassiveEffectsStopped","logRenderStarted","logRenderStopped","logForceUpdateScheduled","logStateUpdateScheduled","payloadOrAction","SCHEDULING_PROFILER_VERSION","getLabelForLane_old","TotalLanes_old","supportsUserTiming","performance","mark","clearMarks","supportsUserTimingV3","CHECK_V3_MARK","markOptions","laneLabels","getLaneLabels","markLaneToLabelMetadata","markAndClear","markVersionMetadata","ReactVersion","markCommitStarted","markCommitStopped","markComponentRenderStarted","markComponentRenderStopped","markComponentSuspended","eventType","phase","markLayoutEffectsStarted","markLayoutEffectsStopped","markPassiveEffectsStarted","markPassiveEffectsStopped","markRenderStarted","markRenderYielded","markRenderStopped","markRenderScheduled","markForceUpdateScheduled","markStateUpdateScheduled","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","is","objectIs","shallowEqual","objA","objB","keysA","keys","keysB","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","workInProgress","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","setIsRendering","rendering","getIsRendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","setToSortedString","array","sort","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","sortedNames","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","contextTypes","childContextTypes","getChildContext","fiberArray","firstFiber","uniqueNames","setCurrentDebugFiberInDEV","resetCurrentDebugFiberInDEV","resolveDefaultProps","baseProps","defaultProps","assign","propName","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","nextValue","_currentValue2","_currentRenderer2","popProvider","currentValue","scheduleWorkOnParentPath","childLanes","propagateContextChange","forcePropagateEntireTree","propagateContextChanges","propagateContextChange_eager","nextFiber","list","dependencies","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","next","enableSuspenseServerRenderer","parentSuspense","contexts","dep","findChangedDep","consumer","findContext","lazilyPropagateParentContextChanges","propagateParentContextChanges","propagateParentContextChangesToDeferredTree","isInsidePropagationBailout","memoizedProps","providerType","pendingProps","newValue","oldValue","checkIfContextChanged","currentDependencies","isPrimaryRenderer","memoizedValue","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","contextItem","interleavedQueues","pushInterleavedQueue","enqueueInterleavedUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","isInterleavedUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextProps","nextState","debugRenderPhaseSideEffectsForStrictMode","setIsStrictModeForDevtools","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","lastInterleaved","markSkippedUpdateLanes","callCallback","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutInvalidateContextType","didWarnAboutContextTypeAndContextTypes","didWarnOnInvalidCallback","callerName","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","inst","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","shouldUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","adoptClassInstance","updater","setInstance","_reactInternalInstance","constructClassInstance","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","oldContext","hasNewLifecycles","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","warnOnFunctionType","resolveLazy","lazyType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","enableLazyElements","createFiberFromElement","updatePortal","portal","containerInfo","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","delete","reconcileChildrenIterator","newChildrenIterable","iteratorFn","toStringTag","entries","step","done","reconcileSingleTextNode","reconcileSingleElement","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","contextStackCursor","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","unstable_avoidThisFallback","findFirstSuspended","row","revealOrder","didSuspend","HasEffect","Layout","isHydrating","enterHydrationState","prepareToHydrateHostInstance","hostContext","prepareToHydrateHostTextInstance","prepareToHydrateHostSuspenseInstance","popHydrationState","getIsHydrating","workInProgressSources","markSourceAsDirty","mutableSource","resetWorkInProgressVersions","_workInProgressVersionSecondary","getWorkInProgressVersion","setWorkInProgressVersion","version","warnAboutMultipleRenderersDEV","_currentSecondaryRenderer","CacheContext","enableCache","Consumer","Provider","_currentValue","_threadCount","_currentRenderer","prevFreshCacheOnStack","pushCacheProvider","cache","popCacheProvider","requestCacheFromPool","pushRootCachePool","popRootCachePool","restoreSpawnedCachePool","offscreenWorkInProgress","prevCachePool","nextParentCache","pool","_suspendedPooledCache","popCachePool","getSuspendedCachePool","getOffscreenDeferredCachePool","didWarnAboutMismatchedHooksForComponent","didWarnAboutUseOpaqueIdentifier","didWarnUncachedGetSnapshot","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","StaticMaskEffect","checkIfWorkInProgressReceivedUpdate","bailoutHooks","MountPassiveDevEffect","MountLayoutDevEffect","PassiveEffect","UpdateEffect","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","basicStateReducer","action","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","eagerReducer","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","readFromUnsubscribedMutableSource","getSnapshot","getVersion","_getVersion","isSafeToReadFromSource","currentRenderVersion","snapshot","getIsStrictModeForDevtools","useMutableSource","getWorkInProgressRoot","dispatcher","useState","currentSnapshot","setSnapshot","stateHook","prevGetSnapshot","prevSource","prevSubscribe","useEffect","maybeNewVersion","maybeNewSnapshot","handleChange","latestGetSnapshot","latestSetSnapshot","unsubscribe","newQueue","mountMutableSource","updateMutableSource","mountSyncExternalStore","nextSnapshot","useSyncExternalStore","updateSyncExternalStore","prevSnapshot","useLayoutEffect","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","prevValue","mountState","updateState","rerenderState","pushEffect","create","destroy","componentUpdateQueue","firstEffect","stackContainsErrorMessage","getCallerStackFrame","stackFrames","includes","mountRef","initialValue","hasBeenInitialized","lazyInitGetterStack","didCheckForLazyInit","didWarnAboutRead","didWarnAboutWrite","seal","updateRef","mountEffectImpl","hookFlags","HookHasEffect","updateEffectImpl","prevEffect","mountEffect","PassiveStaticEffect","HookPassive","updateEffect","mountLayoutEffect","LayoutStaticEffect","HookLayout","updateLayoutEffect","imperativeHandleEffect","refCallback","refObject","mountImperativeHandle","effectDeps","concat","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","setValue","prevTransition","updateDeferredValue","rerenderDeferredValue","startTransition","setPending","previousPriority","_updatedFibers","updatedFibersCount","mountTransition","isPending","start","updateTransition","rerenderTransition","getIsUpdatingOpaqueValueInRenderPhaseInDEV","warnOnOpaqueIdentifierAccessInDEV","mountOpaqueIdentifier","makeId","updateOpaqueIdentifier","rerenderOpaqueIdentifier","mountRefresh","refresh","refreshCache","updateRefresh","seedKey","seedValue","seededCache","refreshUpdate","arguments","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","currentState","getCacheForType","resourceType","cacheForType","useCallback","useContext","useImperativeHandle","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useOpaqueIdentifier","unstable_isNewReconciler","useCacheRefresh","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValue","ReactFiberErrorDialogWWW","showErrorDialog","boundary","errorInfo","capturedError","componentStack","errorBoundary","logCapturedError","logError","_suppressLogging","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","e","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","pingCache","threadIDs","ping","pingSuspendedRoot","restorePendingUpdaters","throwException","sourceFiber","rootRenderLanes","currentSourceFiber","currentSource","hasInvisibleParentBoundary","wakeables","renderDidError","isAlreadyFailedLegacyErrorBoundary","getSuspenseFallbackChild","emptyObject","collectScopedNodes","scopedNodes","collectScopedNodesFromChildren","collectFirstScopedNode","collectFirstScopedNodeFromChildren","startingChild","scopedNode","collectNearestContextValues","childContextValues","contextValue","collectNearestChildContextValues","DO_NOT_USE_queryAllNodes","currentFiber","DO_NOT_USE_queryFirstNode","containsNode","getChildContextValues","createScopeInstance","markUpdate","markRef","appendAllChildren","updateHostContainer","updateHostComponent","updateHostText","needsVisibilityToggle","isHidden","currentHostContext","oldText","newText","cutOffTailIfNeeded","renderState","hasRenderedATailFallback","tailMode","tailNode","tail","lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","subtreeFlags","treeBaseDuration","completeWork","fiberRoot","popTopLevelLegacyContextObject","resetMutableSourceWorkInProgressVersions","pendingContext","wasHydrated","hydrate","isTimedOutSuspense","primaryChildFragment","nextDidTimeout","prevDidTimeout","offscreenFiber","hasInvisibleChildContext","renderDidSuspend","renderDidSuspendDelayIfPossible","enableSuspenseCallback","suspenseCallback","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","renderingStartTime","isBackwards","previousSibling","last","suspenseContext","scopeInstance","popRenderLanes","nextIsHidden","prevIsHidden","subtreeRenderLanes","spawnedCachePool","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","didWarnAboutDefaultPropsOnFunctionComponent","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","baseLanes","cachePool","pushRenderLanes","nextBaseLanes","prevBaseLanes","updateLegacyHiddenComponent","updateCacheComponent","parentCache","freshCache","derivedState","nextCache","updateMode","updateProfiler","updateClassComponent","shouldError","tempInstance","hasContext","isLegacyContextProvider","pushLegacyContextProvider","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","updateHostRoot","prevChildren","resetHydrationState","isDirectTextChild","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","disableLegacyContext","ownerName","warningKey","debugSource","fileName","lineNumber","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","mountDehydratedSuspenseComponent","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","unstable_expectedLoadTime","mountSuspensePrimaryChildren","updateDehydratedSuspenseComponent","fallbackChildFragment","mountSuspenseFallbackAfterRetryWithoutHydrating","updateSuspenseFallbackChildren","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","retrySuspenseComponentWithoutHydrating","fiberMode","suspenseInstance","getExecutionContext","RetryAfterError","NoContext","attemptHydrationAtLane","retry","retryDehydratedSuspenseBoundary","scheduleWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","toLowerCase","validateTailOptions","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","initSuspenseListRenderState","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerPropTypes","hasLegacyContextChanged","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","updateScopeComponent","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","beginWork","_debugNeedsRemount","unresolvedProps","unwindWork","unwindInterruptedWork","interruptedWork","ReactFbErrorUtils","invokeGuardedCallback","invokeGuardedCallbackImpl","func","f","hasError","caughtError","reporter","onError","hasCaughtError","clearCaughtError","didWarnAboutUndefinedSnapshotBeforeUpdate","offscreenSubtreeIsHidden","offscreenSubtreeWasHidden","PossiblyWeakSet","WeakSet","nextEffect","inProgressLanes","inProgressRoot","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallCommitHookLayoutEffectListMount","nearestMountedAncestor","commitHookEffectListMount","captureCommitPhaseError","safelyCallComponentWillUnmount","safelyCallComponentDidMount","safelyAttachRef","commitAttachRef","safelyDetachRef","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","deletion","commitBeforeMutationEffectsDeletion","ensureCorrectReturnPointer","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","isSuspenseBoundaryBeingHidden","beforeActiveInstanceBlur","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","commitPassiveEffectDurations","finishedRoot","onPostCommit","outer","commitLayoutEffectOnFiber","committedLanes","commitMount","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitSuspenseHydrationCallbacks","reappearLayoutEffectsOnFiber","hideOrUnhideAllChildren","hostSubtreeRoot","instanceToUse","enableScopeAPI","commitDetachRef","currentRef","commitUnmount","NoHookEffect","unmountHostComponents","hydrationCallbacks","onDeleted","commitNestedUnmounts","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","isContainer","before","insertOrAppendPlacementNodeIntoContainer","insertOrAppendPlacementNode","isHost","currentParentIsValid","currentParentIsContainer","findParent","commitDeletion","commitWork","commitTextUpdate","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","resolveRetryWakeable","commitResetTextContent","commitMutationEffects","commitMutationEffects_begin","commitMutationEffects_complete","commitMutationEffectsOnFiber","wasHidden","markCommitTimeOfFallback","offscreenBoundary","offscreenChild","disappearLayoutEffects_begin","primaryFlags","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","enableSuspenseLayoutEffectSemantics","newOffscreenSubtreeIsHidden","commitLayoutMountEffects_complete","newOffscreenSubtreeWasHidden","prevOffscreenSubtreeIsHidden","prevOffscreenSubtreeWasHidden","reappearLayoutEffects_begin","disappearLayoutEffects_complete","reappearLayoutEffects_complete","commitPassiveMountEffects","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","didWarnWrongReturnPointer","expectedReturnFiber","invokeLayoutEffectMountInDEV","invokePassiveEffectMountInDEV","invokeLayoutEffectUnmountInDEV","invokePassiveEffectUnmountInDEV","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","ceil","ReactCurrentActQueue","BatchedContext","RenderContext","CommitContext","RootIncomplete","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootUpdatedLanes","workInProgressRootPingedLanes","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootCommittingMutationOrLayoutEffects","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","currentEventTime","currentEventTransitionLane","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","markUpdateLaneFromFiberToRoot","onNestedUpdateScheduled","ensureRootIsScheduled","isBatchingLegacy","warnAboutUpdateOnNotYetMountedFiberInDEV","existingCallbackNode","callbackNode","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","exitStatus","renderRootConcurrent","renderRootSync","prevExecutionContext","errorRetryLanes","fatalError","prepareFreshStack","finishedLanes","finishConcurrentRender","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","jnd","markRootSuspended_dontCallThisOneDirectly","flushSyncWithoutWarningIfAlreadyRendering","flushSync","pushToStack","popFromStack","handleError","thrownValue","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","siblingFiber","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","rootDidHavePassiveEffects","commitDoubleInvokeEffectsInDEV","onCommitRootDevTools","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","onPostCommitRootDevTools","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","retryTimedOutBoundary","boundaryFiber","timeElapsed","hasPassiveEffects","invokeEffectsInDev","invokeEffectFn","primarySubtreeFlag","didWarnStateUpdateForNotYetMountedComponent","ReactCurrentFiberCurrent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalBeginWork","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","ReactCurrentDebugFiberIsRenderingInDEV","renderingComponentName","dedupeKey","setStateComponentName","schedulingFiber","priorityLevel","actQueue","Scheduler_scheduleCallback","Scheduler_cancelCallback","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","findHostInstancesForRefresh","families","hostInstances","types","map","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","createFiberFromLegacyHidden","createFiberFromScope","createFiberFromCache","elements","scope","content","pendingChildren","target","FiberRootNode","_debugRootType","createFiberRoot","uninitializedFiber","initialCache","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","createContainer","ReactCurrentFiberIsRendering","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","obj","updated","splice","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","hostFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","newIsStrictMode","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","rendererPackageName","rendererConfig","currentDispatcherRef","getCurrentFiber","getIsStrictMode","reconcilerVersion","setCurrent","FastNoSideEffects","LinearGradient","stops","x1","y1","x2","y2","_args","fillLinear","RadialGradient","fx","fy","rx","ry","cx","cy","fillRadial","Pattern","url","left","top","fillImage","Surface","_surface","_tagRef","_mountNode","resize","Tag","tagName","React.createElement","accessKey","className","draggable","role","style","tabIndex","_text","T","t","Path"],"mappings":"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"}