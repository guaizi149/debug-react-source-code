{"version":3,"file":"ReactNativeRenderer-dev.js","sources":["../../../packages/shared/ReactSharedInternals.js","../../../packages/shared/consoleWithStackDev.js","../../../packages/shared/invokeGuardedCallbackImpl.js","../../../packages/shared/ReactErrorUtils.js","../../../packages/shared/isArray.js","../../../packages/react-native-renderer/src/legacy-events/EventPluginUtils.js","../../../packages/react-native-renderer/src/legacy-events/SyntheticEvent.js","../../../packages/react-native-renderer/src/legacy-events/ResponderSyntheticEvent.js","../../../packages/react-native-renderer/src/legacy-events/ResponderTopLevelEventTypes.js","../../../packages/react-native-renderer/src/legacy-events/ResponderTouchHistoryStore.js","../../../packages/react-native-renderer/src/legacy-events/accumulate.js","../../../packages/react-native-renderer/src/legacy-events/accumulateInto.js","../../../packages/react-native-renderer/src/legacy-events/forEachAccumulated.js","../../../packages/react-reconciler/src/ReactWorkTags.js","../../../packages/react-native-renderer/src/legacy-events/ResponderEventPlugin.js","../../../packages/react-native-renderer/src/legacy-events/EventPluginRegistry.js","../../../packages/react-native-renderer/src/ReactNativeGetListener.js","../../../packages/react-native-renderer/src/ReactNativeBridgeEventPlugin.js","../../../packages/react-native-renderer/src/ReactNativeEventPluginOrder.js","../../../packages/react-native-renderer/src/ReactNativeInjectionShared.js","../../../packages/react-native-renderer/src/ReactNativeComponentTree.js","../../../packages/react-native-renderer/src/legacy-events/ReactGenericBatching.js","../../../packages/react-native-renderer/src/legacy-events/EventBatching.js","../../../packages/react-native-renderer/src/ReactNativeEventEmitter.js","../../../packages/react-native-renderer/src/ReactNativeGlobalResponderHandler.js","../../../packages/react-native-renderer/src/ReactNativeInjection.js","../../../packages/shared/ReactInstanceMap.js","../../../packages/shared/ReactSymbols.js","../../../packages/shared/getComponentNameFromType.js","../../../packages/react-reconciler/src/getComponentNameFromFiber.js","../../../packages/shared/forks/ReactFeatureFlags.native-oss.js","../../../packages/react-reconciler/src/ReactFiberFlags.js","../../../packages/react-reconciler/src/ReactFiberTreeReflection.js","../../../packages/react-native-renderer/src/ReactNativeAttributePayload.js","../../../packages/react-native-renderer/src/NativeMethodsMixinUtils.js","../../../packages/react-native-renderer/src/ReactNativeFiberHostComponent.js","../../../packages/react-reconciler/src/Scheduler.js","../../../packages/react-reconciler/src/ReactFiberDevToolsHook.old.js","../../../packages/react-reconciler/src/ReactTypeOfMode.js","../../../packages/react-reconciler/src/ReactFiberLane.old.js","../../../packages/react-reconciler/src/ReactEventPriorities.old.js","../../../packages/react-reconciler/src/ReactFiberHostConfigWithNoHydration.js","../../../packages/react-native-renderer/src/ReactNativeHostConfig.js","../../../packages/shared/ReactComponentStackFrame.js","../../../packages/shared/hasOwnProperty.js","../../../packages/shared/checkPropTypes.js","../../../packages/react-reconciler/src/ReactFiberStack.old.js","../../../packages/react-reconciler/src/ReactFiberContext.old.js","../../../packages/react-reconciler/src/ReactRootTags.js","../../../packages/react-reconciler/src/ReactFiberSyncTaskQueue.old.js","../../../packages/shared/ReactVersion.js","../../../packages/react-reconciler/src/ReactFiberTransition.js","../../../packages/shared/objectIs.js","../../../packages/shared/shallowEqual.js","../../../packages/react-reconciler/src/ReactFiberComponentStack.js","../../../packages/react-reconciler/src/ReactCurrentFiber.js","../../../packages/react-reconciler/src/ReactStrictModeWarnings.old.js","../../../packages/react-reconciler/src/ReactFiberLazyComponent.old.js","../../../packages/react-reconciler/src/ReactFiberNewContext.old.js","../../../packages/react-reconciler/src/ReactFiberInterleavedUpdates.old.js","../../../packages/react-reconciler/src/ReactUpdateQueue.old.js","../../../packages/react-reconciler/src/ReactFiberClassComponent.old.js","../../../packages/react-reconciler/src/ReactChildFiber.old.js","../../../packages/react-reconciler/src/ReactFiberHostContext.old.js","../../../packages/react-reconciler/src/ReactFiberSuspenseContext.old.js","../../../packages/react-reconciler/src/ReactFiberSuspenseComponent.old.js","../../../packages/react-reconciler/src/ReactHookEffectTags.js","../../../packages/react-reconciler/src/ReactFiberHydrationContext.old.js","../../../packages/react-reconciler/src/ReactMutableSource.old.js","../../../packages/react-reconciler/src/ReactFiberCacheComponent.old.js","../../../packages/react-reconciler/src/ReactFiberHooks.old.js","../../../packages/react-reconciler/src/ReactProfilerTimer.old.js","../../../packages/react-reconciler/src/ReactCapturedValue.js","../../../packages/react-reconciler/src/forks/ReactFiberErrorDialog.native.js","../../../packages/react-reconciler/src/ReactFiberErrorLogger.js","../../../packages/react-reconciler/src/ReactFiberThrow.old.js","../../../packages/react-reconciler/src/ReactFiberCompleteWork.old.js","../../../packages/react-reconciler/src/ReactFiberBeginWork.old.js","../../../packages/react-reconciler/src/ReactFiberUnwindWork.old.js","../../../packages/react-reconciler/src/ReactFiberCommitWork.old.js","../../../packages/react-reconciler/src/ReactTestSelectors.js","../../../packages/react-reconciler/src/ReactFiberWorkLoop.old.js","../../../packages/react-reconciler/src/ReactFiberHotReloading.old.js","../../../packages/react-reconciler/src/ReactFiber.old.js","../../../packages/react-reconciler/src/ReactFiberRoot.old.js","../../../packages/react-reconciler/src/ReactPortal.js","../../../packages/react-reconciler/src/ReactFiberReconciler.old.js","../../../packages/react-native-renderer/src/ReactNativeFiberInspector.js","../../../packages/react-native-renderer/src/ReactNativeRenderer.js"],"sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport * as React from 'react';\n\nconst ReactSharedInternals =\n  React.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n\nexport default ReactSharedInternals;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nlet suppressWarning = false;\nexport function setSuppressWarning(newSuppressWarning) {\n  if (__DEV__) {\n    suppressWarning = newSuppressWarning;\n  }\n}\n\n// In DEV, calls to console.warn and console.error get replaced\n// by calls to these methods by a Babel plugin.\n//\n// In PROD (or in packages without access to React internals),\n// they are left as they are instead.\n\nexport function warn(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('warn', format, args);\n    }\n  }\n}\n\nexport function error(format, ...args) {\n  if (__DEV__) {\n    if (!suppressWarning) {\n      printWarning('error', format, args);\n    }\n  }\n}\n\nfunction printWarning(level, format, args) {\n  // When changing this logic, you might want to also\n  // update consoleWithStackDev.www.js as well.\n  if (__DEV__) {\n    const ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n    const stack = ReactDebugCurrentFrame.getStackAddendum();\n    if (stack !== '') {\n      format += '%s';\n      args = args.concat([stack]);\n    }\n\n    const argsWithFormat = args.map(item => '' + item);\n    // Careful: RN currently depends on this prefix\n    argsWithFormat.unshift('Warning: ' + format);\n    // We intentionally don't use spread (or .apply) directly because it\n    // breaks IE9: https://github.com/facebook/react/issues/13610\n    // eslint-disable-next-line react-internal/no-production-logging\n    Function.prototype.apply.call(console[level], console, argsWithFormat);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nfunction invokeGuardedCallbackProd<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n) {\n  const funcArgs = Array.prototype.slice.call(arguments, 3);\n  try {\n    func.apply(context, funcArgs);\n  } catch (error) {\n    this.onError(error);\n  }\n}\n\nlet invokeGuardedCallbackImpl = invokeGuardedCallbackProd;\n\nif (__DEV__) {\n  // In DEV mode, we swap out invokeGuardedCallback for a special version\n  // that plays more nicely with the browser's DevTools. The idea is to preserve\n  // \"Pause on exceptions\" behavior. Because React wraps all user-provided\n  // functions in invokeGuardedCallback, and the production version of\n  // invokeGuardedCallback uses a try-catch, all user exceptions are treated\n  // like caught exceptions, and the DevTools won't pause unless the developer\n  // takes the extra step of enabling pause on caught exceptions. This is\n  // unintuitive, though, because even though React has caught the error, from\n  // the developer's perspective, the error is uncaught.\n  //\n  // To preserve the expected \"Pause on exceptions\" behavior, we don't use a\n  // try-catch in DEV. Instead, we synchronously dispatch a fake event to a fake\n  // DOM node, and call the user-provided callback from inside an event handler\n  // for that fake event. If the callback throws, the error is \"captured\" using\n  // a global event handler. But because the error happens in a different\n  // event loop context, it does not interrupt the normal program flow.\n  // Effectively, this gives us try-catch behavior without actually using\n  // try-catch. Neat!\n\n  // Check that the browser supports the APIs we need to implement our special\n  // DEV version of invokeGuardedCallback\n  if (\n    typeof window !== 'undefined' &&\n    typeof window.dispatchEvent === 'function' &&\n    typeof document !== 'undefined' &&\n    typeof document.createEvent === 'function'\n  ) {\n    const fakeNode = document.createElement('react');\n\n    invokeGuardedCallbackImpl = function invokeGuardedCallbackDev<\n      A,\n      B,\n      C,\n      D,\n      E,\n      F,\n      Context,\n    >(\n      name: string | null,\n      func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n      context: Context,\n      a: A,\n      b: B,\n      c: C,\n      d: D,\n      e: E,\n      f: F,\n    ) {\n      // If document doesn't exist we know for sure we will crash in this method\n      // when we call document.createEvent(). However this can cause confusing\n      // errors: https://github.com/facebook/create-react-app/issues/3482\n      // So we preemptively throw with a better message instead.\n      invariant(\n        typeof document !== 'undefined',\n        'The `document` global was defined when React was initialized, but is not ' +\n          'defined anymore. This can happen in a test environment if a component ' +\n          'schedules an update from an asynchronous callback, but the test has already ' +\n          'finished running. To solve this, you can either unmount the component at ' +\n          'the end of your test (and ensure that any asynchronous operations get ' +\n          'canceled in `componentWillUnmount`), or you can change the test itself ' +\n          'to be asynchronous.',\n      );\n      const evt = document.createEvent('Event');\n\n      let didCall = false;\n      // Keeps track of whether the user-provided callback threw an error. We\n      // set this to true at the beginning, then set it to false right after\n      // calling the function. If the function errors, `didError` will never be\n      // set to false. This strategy works even if the browser is flaky and\n      // fails to call our global error handler, because it doesn't rely on\n      // the error event at all.\n      let didError = true;\n\n      // Keeps track of the value of window.event so that we can reset it\n      // during the callback to let user code access window.event in the\n      // browsers that support it.\n      const windowEvent = window.event;\n\n      // Keeps track of the descriptor of window.event to restore it after event\n      // dispatching: https://github.com/facebook/react/issues/13688\n      const windowEventDescriptor = Object.getOwnPropertyDescriptor(\n        window,\n        'event',\n      );\n\n      function restoreAfterDispatch() {\n        // We immediately remove the callback from event listeners so that\n        // nested `invokeGuardedCallback` calls do not clash. Otherwise, a\n        // nested call would trigger the fake event handlers of any call higher\n        // in the stack.\n        fakeNode.removeEventListener(evtType, callCallback, false);\n\n        // We check for window.hasOwnProperty('event') to prevent the\n        // window.event assignment in both IE <= 10 as they throw an error\n        // \"Member not found\" in strict mode, and in Firefox which does not\n        // support window.event.\n        if (\n          typeof window.event !== 'undefined' &&\n          window.hasOwnProperty('event')\n        ) {\n          window.event = windowEvent;\n        }\n      }\n\n      // Create an event handler for our fake event. We will synchronously\n      // dispatch our fake event using `dispatchEvent`. Inside the handler, we\n      // call the user-provided callback.\n      const funcArgs = Array.prototype.slice.call(arguments, 3);\n      function callCallback() {\n        didCall = true;\n        restoreAfterDispatch();\n        func.apply(context, funcArgs);\n        didError = false;\n      }\n\n      // Create a global error event handler. We use this to capture the value\n      // that was thrown. It's possible that this error handler will fire more\n      // than once; for example, if non-React code also calls `dispatchEvent`\n      // and a handler for that event throws. We should be resilient to most of\n      // those cases. Even if our error event handler fires more than once, the\n      // last error event is always used. If the callback actually does error,\n      // we know that the last error event is the correct one, because it's not\n      // possible for anything else to have happened in between our callback\n      // erroring and the code that follows the `dispatchEvent` call below. If\n      // the callback doesn't error, but the error event was fired, we know to\n      // ignore it because `didError` will be false, as described above.\n      let error;\n      // Use this to track whether the error event is ever called.\n      let didSetError = false;\n      let isCrossOriginError = false;\n\n      function handleWindowError(event) {\n        error = event.error;\n        didSetError = true;\n        if (error === null && event.colno === 0 && event.lineno === 0) {\n          isCrossOriginError = true;\n        }\n        if (event.defaultPrevented) {\n          // Some other error handler has prevented default.\n          // Browsers silence the error report if this happens.\n          // We'll remember this to later decide whether to log it or not.\n          if (error != null && typeof error === 'object') {\n            try {\n              error._suppressLogging = true;\n            } catch (inner) {\n              // Ignore.\n            }\n          }\n        }\n      }\n\n      // Create a fake event type.\n      const evtType = `react-${name ? name : 'invokeguardedcallback'}`;\n\n      // Attach our event handlers\n      window.addEventListener('error', handleWindowError);\n      fakeNode.addEventListener(evtType, callCallback, false);\n\n      // Synchronously dispatch our fake event. If the user-provided function\n      // errors, it will trigger our global error handler.\n      evt.initEvent(evtType, false, false);\n      fakeNode.dispatchEvent(evt);\n\n      if (windowEventDescriptor) {\n        Object.defineProperty(window, 'event', windowEventDescriptor);\n      }\n\n      if (didCall && didError) {\n        if (!didSetError) {\n          // The callback errored, but the error event never fired.\n          error = new Error(\n            'An error was thrown inside one of your components, but React ' +\n              \"doesn't know what it was. This is likely due to browser \" +\n              'flakiness. React does its best to preserve the \"Pause on ' +\n              'exceptions\" behavior of the DevTools, which requires some ' +\n              \"DEV-mode only tricks. It's possible that these don't work in \" +\n              'your browser. Try triggering the error in production mode, ' +\n              'or switching to a modern browser. If you suspect that this is ' +\n              'actually an issue with React, please file an issue.',\n          );\n        } else if (isCrossOriginError) {\n          error = new Error(\n            \"A cross-origin error was thrown. React doesn't have access to \" +\n              'the actual error object in development. ' +\n              'See https://reactjs.org/link/crossorigin-error for more information.',\n          );\n        }\n        this.onError(error);\n      }\n\n      // Remove our event listeners\n      window.removeEventListener('error', handleWindowError);\n\n      if (!didCall) {\n        // Something went really wrong, and our event was not dispatched.\n        // https://github.com/facebook/react/issues/16734\n        // https://github.com/facebook/react/issues/16585\n        // Fall back to the production implementation.\n        restoreAfterDispatch();\n        return invokeGuardedCallbackProd.apply(this, arguments);\n      }\n    };\n  }\n}\n\nexport default invokeGuardedCallbackImpl;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport invokeGuardedCallbackImpl from './invokeGuardedCallbackImpl';\n\n// Used by Fiber to simulate a try-catch.\nlet hasError: boolean = false;\nlet caughtError: mixed = null;\n\n// Used by event system to capture/rethrow the first error.\nlet hasRethrowError: boolean = false;\nlet rethrowError: mixed = null;\n\nconst reporter = {\n  onError(error: mixed) {\n    hasError = true;\n    caughtError = error;\n  },\n};\n\n/**\n * Call a function while guarding against errors that happens within it.\n * Returns an error if it throws, otherwise null.\n *\n * In production, this is implemented using a try-catch. The reason we don't\n * use a try-catch directly is so that we can swap out a different\n * implementation in DEV mode.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallback<A, B, C, D, E, F, Context>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => mixed,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  hasError = false;\n  caughtError = null;\n  invokeGuardedCallbackImpl.apply(reporter, arguments);\n}\n\n/**\n * Same as invokeGuardedCallback, but instead of returning an error, it stores\n * it in a global so it can be rethrown by `rethrowCaughtError` later.\n * TODO: See if caughtError and rethrowError can be unified.\n *\n * @param {String} name of the guard to use for logging or debugging\n * @param {Function} func The function to invoke\n * @param {*} context The context to use when calling the function\n * @param {...*} args Arguments for function\n */\nexport function invokeGuardedCallbackAndCatchFirstError<\n  A,\n  B,\n  C,\n  D,\n  E,\n  F,\n  Context,\n>(\n  name: string | null,\n  func: (a: A, b: B, c: C, d: D, e: E, f: F) => void,\n  context: Context,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n  e: E,\n  f: F,\n): void {\n  invokeGuardedCallback.apply(this, arguments);\n  if (hasError) {\n    const error = clearCaughtError();\n    if (!hasRethrowError) {\n      hasRethrowError = true;\n      rethrowError = error;\n    }\n  }\n}\n\n/**\n * During execution of guarded functions we will capture the first error which\n * we will rethrow to be handled by the top level error handler.\n */\nexport function rethrowCaughtError() {\n  if (hasRethrowError) {\n    const error = rethrowError;\n    hasRethrowError = false;\n    rethrowError = null;\n    throw error;\n  }\n}\n\nexport function hasCaughtError() {\n  return hasError;\n}\n\nexport function clearCaughtError() {\n  if (hasError) {\n    const error = caughtError;\n    hasError = false;\n    caughtError = null;\n    return error;\n  } else {\n    invariant(\n      false,\n      'clearCaughtError was called but no error was captured. This error ' +\n        'is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\ndeclare function isArray(a: mixed): boolean %checks(Array.isArray(a));\n\nconst isArrayImpl = Array.isArray;\n\n// eslint-disable-next-line no-redeclare\nfunction isArray(a: mixed): boolean {\n  return isArrayImpl(a);\n}\n\nexport default isArray;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {invokeGuardedCallbackAndCatchFirstError} from 'shared/ReactErrorUtils';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\n\nexport let getFiberCurrentPropsFromNode = null;\nexport let getInstanceFromNode = null;\nexport let getNodeFromInstance = null;\n\nexport function setComponentTree(\n  getFiberCurrentPropsFromNodeImpl,\n  getInstanceFromNodeImpl,\n  getNodeFromInstanceImpl,\n) {\n  getFiberCurrentPropsFromNode = getFiberCurrentPropsFromNodeImpl;\n  getInstanceFromNode = getInstanceFromNodeImpl;\n  getNodeFromInstance = getNodeFromInstanceImpl;\n  if (__DEV__) {\n    if (!getNodeFromInstance || !getInstanceFromNode) {\n      console.error(\n        'EventPluginUtils.setComponentTree(...): Injected ' +\n          'module is missing getNodeFromInstance or getInstanceFromNode.',\n      );\n    }\n  }\n}\n\nlet validateEventDispatches;\nif (__DEV__) {\n  validateEventDispatches = function(event) {\n    const dispatchListeners = event._dispatchListeners;\n    const dispatchInstances = event._dispatchInstances;\n\n    const listenersIsArr = isArray(dispatchListeners);\n    const listenersLen = listenersIsArr\n      ? dispatchListeners.length\n      : dispatchListeners\n      ? 1\n      : 0;\n\n    const instancesIsArr = isArray(dispatchInstances);\n    const instancesLen = instancesIsArr\n      ? dispatchInstances.length\n      : dispatchInstances\n      ? 1\n      : 0;\n\n    if (instancesIsArr !== listenersIsArr || instancesLen !== listenersLen) {\n      console.error('EventPluginUtils: Invalid `event`.');\n    }\n  };\n}\n\n/**\n * Dispatch the event to the listener.\n * @param {SyntheticEvent} event SyntheticEvent to handle\n * @param {function} listener Application-level callback\n * @param {*} inst Internal component instance\n */\nexport function executeDispatch(event, listener, inst) {\n  const type = event.type || 'unknown-event';\n  event.currentTarget = getNodeFromInstance(inst);\n  invokeGuardedCallbackAndCatchFirstError(type, listener, undefined, event);\n  event.currentTarget = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches.\n */\nexport function executeDispatchesInOrder(event) {\n  const dispatchListeners = event._dispatchListeners;\n  const dispatchInstances = event._dispatchInstances;\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  if (isArray(dispatchListeners)) {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      executeDispatch(event, dispatchListeners[i], dispatchInstances[i]);\n    }\n  } else if (dispatchListeners) {\n    executeDispatch(event, dispatchListeners, dispatchInstances);\n  }\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n}\n\n/**\n * Standard/simple iteration through an event's collected dispatches, but stops\n * at the first dispatch execution returning true, and returns that id.\n *\n * @return {?string} id of the first dispatch execution who's listener returns\n * true, or null if no listener returned true.\n */\nfunction executeDispatchesInOrderStopAtTrueImpl(event) {\n  const dispatchListeners = event._dispatchListeners;\n  const dispatchInstances = event._dispatchInstances;\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  if (isArray(dispatchListeners)) {\n    for (let i = 0; i < dispatchListeners.length; i++) {\n      if (event.isPropagationStopped()) {\n        break;\n      }\n      // Listeners and Instances are two parallel arrays that are always in sync.\n      if (dispatchListeners[i](event, dispatchInstances[i])) {\n        return dispatchInstances[i];\n      }\n    }\n  } else if (dispatchListeners) {\n    if (dispatchListeners(event, dispatchInstances)) {\n      return dispatchInstances;\n    }\n  }\n  return null;\n}\n\n/**\n * @see executeDispatchesInOrderStopAtTrueImpl\n */\nexport function executeDispatchesInOrderStopAtTrue(event) {\n  const ret = executeDispatchesInOrderStopAtTrueImpl(event);\n  event._dispatchInstances = null;\n  event._dispatchListeners = null;\n  return ret;\n}\n\n/**\n * Execution of a \"direct\" dispatch - there must be at most one dispatch\n * accumulated on the event or it is considered an error. It doesn't really make\n * sense for an event with multiple dispatches (bubbled) to keep track of the\n * return values at each dispatch execution, but it does tend to make sense when\n * dealing with \"direct\" dispatches.\n *\n * @return {*} The return value of executing the single dispatch.\n */\nexport function executeDirectDispatch(event) {\n  if (__DEV__) {\n    validateEventDispatches(event);\n  }\n  const dispatchListener = event._dispatchListeners;\n  const dispatchInstance = event._dispatchInstances;\n  invariant(\n    !isArray(dispatchListener),\n    'executeDirectDispatch(...): Invalid `event`.',\n  );\n  event.currentTarget = dispatchListener\n    ? getNodeFromInstance(dispatchInstance)\n    : null;\n  const res = dispatchListener ? dispatchListener(event) : null;\n  event.currentTarget = null;\n  event._dispatchListeners = null;\n  event._dispatchInstances = null;\n  return res;\n}\n\n/**\n * @param {SyntheticEvent} event\n * @return {boolean} True iff number of dispatches accumulated is greater than 0.\n */\nexport function hasDispatches(event) {\n  return !!event._dispatchListeners;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/* eslint valid-typeof: 0 */\n\nimport invariant from 'shared/invariant';\n\nconst EVENT_POOL_SIZE = 10;\n\n/**\n * @interface Event\n * @see http://www.w3.org/TR/DOM-Level-3-Events/\n */\nconst EventInterface = {\n  type: null,\n  target: null,\n  // currentTarget is set when dispatching; no use in copying it here\n  currentTarget: function() {\n    return null;\n  },\n  eventPhase: null,\n  bubbles: null,\n  cancelable: null,\n  timeStamp: function(event) {\n    return event.timeStamp || Date.now();\n  },\n  defaultPrevented: null,\n  isTrusted: null,\n};\n\nfunction functionThatReturnsTrue() {\n  return true;\n}\n\nfunction functionThatReturnsFalse() {\n  return false;\n}\n\n/**\n * Synthetic events are dispatched by event plugins, typically in response to a\n * top-level event delegation handler.\n *\n * These systems should generally use pooling to reduce the frequency of garbage\n * collection. The system should check `isPersistent` to determine whether the\n * event should be released into the pool after being dispatched. Users that\n * need a persisted event should invoke `persist`.\n *\n * Synthetic events (and subclasses) implement the DOM Level 3 Events API by\n * normalizing browser quirks. Subclasses do not necessarily have to implement a\n * DOM interface; custom application-specific events can also subclass this.\n *\n * @param {object} dispatchConfig Configuration used to dispatch this event.\n * @param {*} targetInst Marker identifying the event target.\n * @param {object} nativeEvent Native browser event.\n * @param {DOMEventTarget} nativeEventTarget Target node.\n */\nfunction SyntheticEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  if (__DEV__) {\n    // these have a getter/setter for warnings\n    delete this.nativeEvent;\n    delete this.preventDefault;\n    delete this.stopPropagation;\n    delete this.isDefaultPrevented;\n    delete this.isPropagationStopped;\n  }\n\n  this.dispatchConfig = dispatchConfig;\n  this._targetInst = targetInst;\n  this.nativeEvent = nativeEvent;\n  this._dispatchListeners = null;\n  this._dispatchInstances = null;\n\n  const Interface = this.constructor.Interface;\n  for (const propName in Interface) {\n    if (!Interface.hasOwnProperty(propName)) {\n      continue;\n    }\n    if (__DEV__) {\n      delete this[propName]; // this has a getter/setter for warnings\n    }\n    const normalize = Interface[propName];\n    if (normalize) {\n      this[propName] = normalize(nativeEvent);\n    } else {\n      if (propName === 'target') {\n        this.target = nativeEventTarget;\n      } else {\n        this[propName] = nativeEvent[propName];\n      }\n    }\n  }\n\n  const defaultPrevented =\n    nativeEvent.defaultPrevented != null\n      ? nativeEvent.defaultPrevented\n      : nativeEvent.returnValue === false;\n  if (defaultPrevented) {\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  } else {\n    this.isDefaultPrevented = functionThatReturnsFalse;\n  }\n  this.isPropagationStopped = functionThatReturnsFalse;\n  return this;\n}\n\nObject.assign(SyntheticEvent.prototype, {\n  preventDefault: function() {\n    this.defaultPrevented = true;\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.preventDefault) {\n      event.preventDefault();\n    } else if (typeof event.returnValue !== 'unknown') {\n      event.returnValue = false;\n    }\n    this.isDefaultPrevented = functionThatReturnsTrue;\n  },\n\n  stopPropagation: function() {\n    const event = this.nativeEvent;\n    if (!event) {\n      return;\n    }\n\n    if (event.stopPropagation) {\n      event.stopPropagation();\n    } else if (typeof event.cancelBubble !== 'unknown') {\n      // The ChangeEventPlugin registers a \"propertychange\" event for\n      // IE. This event does not support bubbling or cancelling, and\n      // any references to cancelBubble throw \"Member not found\".  A\n      // typeof check of \"unknown\" circumvents this issue (and is also\n      // IE specific).\n      event.cancelBubble = true;\n    }\n\n    this.isPropagationStopped = functionThatReturnsTrue;\n  },\n\n  /**\n   * We release all dispatched `SyntheticEvent`s after each event loop, adding\n   * them back into the pool. This allows a way to hold onto a reference that\n   * won't be added back into the pool.\n   */\n  persist: function() {\n    this.isPersistent = functionThatReturnsTrue;\n  },\n\n  /**\n   * Checks if this event should be released back into the pool.\n   *\n   * @return {boolean} True if this should not be released, false otherwise.\n   */\n  isPersistent: functionThatReturnsFalse,\n\n  /**\n   * `PooledClass` looks for `destructor` on each instance it releases.\n   */\n  destructor: function() {\n    const Interface = this.constructor.Interface;\n    for (const propName in Interface) {\n      if (__DEV__) {\n        Object.defineProperty(\n          this,\n          propName,\n          getPooledWarningPropertyDefinition(propName, Interface[propName]),\n        );\n      } else {\n        this[propName] = null;\n      }\n    }\n    this.dispatchConfig = null;\n    this._targetInst = null;\n    this.nativeEvent = null;\n    this.isDefaultPrevented = functionThatReturnsFalse;\n    this.isPropagationStopped = functionThatReturnsFalse;\n    this._dispatchListeners = null;\n    this._dispatchInstances = null;\n    if (__DEV__) {\n      Object.defineProperty(\n        this,\n        'nativeEvent',\n        getPooledWarningPropertyDefinition('nativeEvent', null),\n      );\n      Object.defineProperty(\n        this,\n        'isDefaultPrevented',\n        getPooledWarningPropertyDefinition(\n          'isDefaultPrevented',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'isPropagationStopped',\n        getPooledWarningPropertyDefinition(\n          'isPropagationStopped',\n          functionThatReturnsFalse,\n        ),\n      );\n      Object.defineProperty(\n        this,\n        'preventDefault',\n        getPooledWarningPropertyDefinition('preventDefault', () => {}),\n      );\n      Object.defineProperty(\n        this,\n        'stopPropagation',\n        getPooledWarningPropertyDefinition('stopPropagation', () => {}),\n      );\n    }\n  },\n});\n\nSyntheticEvent.Interface = EventInterface;\n\n/**\n * Helper to reduce boilerplate when creating subclasses.\n */\nSyntheticEvent.extend = function(Interface) {\n  const Super = this;\n\n  const E = function() {};\n  E.prototype = Super.prototype;\n  const prototype = new E();\n\n  function Class() {\n    return Super.apply(this, arguments);\n  }\n  Object.assign(prototype, Class.prototype);\n  Class.prototype = prototype;\n  Class.prototype.constructor = Class;\n\n  Class.Interface = Object.assign({}, Super.Interface, Interface);\n  Class.extend = Super.extend;\n  addEventPoolingTo(Class);\n\n  return Class;\n};\n\naddEventPoolingTo(SyntheticEvent);\n\n/**\n * Helper to nullify syntheticEvent instance properties when destructing\n *\n * @param {String} propName\n * @param {?object} getVal\n * @return {object} defineProperty object\n */\nfunction getPooledWarningPropertyDefinition(propName, getVal) {\n  function set(val) {\n    const action = isFunction ? 'setting the method' : 'setting the property';\n    warn(action, 'This is effectively a no-op');\n    return val;\n  }\n\n  function get() {\n    const action = isFunction\n      ? 'accessing the method'\n      : 'accessing the property';\n    const result = isFunction\n      ? 'This is a no-op function'\n      : 'This is set to null';\n    warn(action, result);\n    return getVal;\n  }\n\n  function warn(action, result) {\n    if (__DEV__) {\n      console.error(\n        \"This synthetic event is reused for performance reasons. If you're seeing this, \" +\n          \"you're %s `%s` on a released/nullified synthetic event. %s. \" +\n          'If you must keep the original synthetic event around, use event.persist(). ' +\n          'See https://reactjs.org/link/event-pooling for more information.',\n        action,\n        propName,\n        result,\n      );\n    }\n  }\n  const isFunction = typeof getVal === 'function';\n  return {\n    configurable: true,\n    set: set,\n    get: get,\n  };\n}\n\nfunction createOrGetPooledEvent(\n  dispatchConfig,\n  targetInst,\n  nativeEvent,\n  nativeInst,\n) {\n  const EventConstructor = this;\n  if (EventConstructor.eventPool.length) {\n    const instance = EventConstructor.eventPool.pop();\n    EventConstructor.call(\n      instance,\n      dispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeInst,\n    );\n    return instance;\n  }\n  return new EventConstructor(\n    dispatchConfig,\n    targetInst,\n    nativeEvent,\n    nativeInst,\n  );\n}\n\nfunction releasePooledEvent(event) {\n  const EventConstructor = this;\n  invariant(\n    event instanceof EventConstructor,\n    'Trying to release an event instance into a pool of a different type.',\n  );\n  event.destructor();\n  if (EventConstructor.eventPool.length < EVENT_POOL_SIZE) {\n    EventConstructor.eventPool.push(event);\n  }\n}\n\nfunction addEventPoolingTo(EventConstructor) {\n  EventConstructor.getPooled = createOrGetPooledEvent;\n  EventConstructor.eventPool = [];\n  EventConstructor.release = releasePooledEvent;\n}\n\nexport default SyntheticEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport SyntheticEvent from './SyntheticEvent';\n\n/**\n * `touchHistory` isn't actually on the native event, but putting it in the\n * interface will ensure that it is cleaned up when pooled/destroyed. The\n * `ResponderEventPlugin` will populate it appropriately.\n */\nconst ResponderSyntheticEvent = SyntheticEvent.extend({\n  touchHistory: function(nativeEvent) {\n    return null; // Actually doesn't even look at the native event.\n  },\n});\n\nexport default ResponderSyntheticEvent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport const TOP_TOUCH_START = 'topTouchStart';\nexport const TOP_TOUCH_MOVE = 'topTouchMove';\nexport const TOP_TOUCH_END = 'topTouchEnd';\nexport const TOP_TOUCH_CANCEL = 'topTouchCancel';\nexport const TOP_SCROLL = 'topScroll';\nexport const TOP_SELECTION_CHANGE = 'topSelectionChange';\n\nexport function isStartish(topLevelType: mixed): boolean {\n  return topLevelType === TOP_TOUCH_START;\n}\n\nexport function isMoveish(topLevelType: mixed): boolean {\n  return topLevelType === TOP_TOUCH_MOVE;\n}\n\nexport function isEndish(topLevelType: mixed): boolean {\n  return topLevelType === TOP_TOUCH_END || topLevelType === TOP_TOUCH_CANCEL;\n}\n\nexport const startDependencies = [TOP_TOUCH_START];\nexport const moveDependencies = [TOP_TOUCH_MOVE];\nexport const endDependencies = [TOP_TOUCH_CANCEL, TOP_TOUCH_END];\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\nimport {isStartish, isMoveish, isEndish} from './ResponderTopLevelEventTypes';\n\n/**\n * Tracks the position and time of each active touch by `touch.identifier`. We\n * should typically only see IDs in the range of 1-20 because IDs get recycled\n * when touches end and start again.\n */\ntype TouchRecord = {|\n  touchActive: boolean,\n  startPageX: number,\n  startPageY: number,\n  startTimeStamp: number,\n  currentPageX: number,\n  currentPageY: number,\n  currentTimeStamp: number,\n  previousPageX: number,\n  previousPageY: number,\n  previousTimeStamp: number,\n|};\n\nconst MAX_TOUCH_BANK = 20;\nconst touchBank: Array<TouchRecord> = [];\nconst touchHistory = {\n  touchBank,\n  numberActiveTouches: 0,\n  // If there is only one active touch, we remember its location. This prevents\n  // us having to loop through all of the touches all the time in the most\n  // common case.\n  indexOfSingleActiveTouch: -1,\n  mostRecentTimeStamp: 0,\n};\n\ntype Touch = {\n  identifier: ?number,\n  pageX: number,\n  pageY: number,\n  timestamp: number,\n  ...\n};\ntype TouchEvent = {\n  changedTouches: Array<Touch>,\n  touches: Array<Touch>,\n  ...\n};\n\nfunction timestampForTouch(touch: Touch): number {\n  // The legacy internal implementation provides \"timeStamp\", which has been\n  // renamed to \"timestamp\". Let both work for now while we iron it out\n  // TODO (evv): rename timeStamp to timestamp in internal code\n  return (touch: any).timeStamp || touch.timestamp;\n}\n\n/**\n * TODO: Instead of making gestures recompute filtered velocity, we could\n * include a built in velocity computation that can be reused globally.\n */\nfunction createTouchRecord(touch: Touch): TouchRecord {\n  return {\n    touchActive: true,\n    startPageX: touch.pageX,\n    startPageY: touch.pageY,\n    startTimeStamp: timestampForTouch(touch),\n    currentPageX: touch.pageX,\n    currentPageY: touch.pageY,\n    currentTimeStamp: timestampForTouch(touch),\n    previousPageX: touch.pageX,\n    previousPageY: touch.pageY,\n    previousTimeStamp: timestampForTouch(touch),\n  };\n}\n\nfunction resetTouchRecord(touchRecord: TouchRecord, touch: Touch): void {\n  touchRecord.touchActive = true;\n  touchRecord.startPageX = touch.pageX;\n  touchRecord.startPageY = touch.pageY;\n  touchRecord.startTimeStamp = timestampForTouch(touch);\n  touchRecord.currentPageX = touch.pageX;\n  touchRecord.currentPageY = touch.pageY;\n  touchRecord.currentTimeStamp = timestampForTouch(touch);\n  touchRecord.previousPageX = touch.pageX;\n  touchRecord.previousPageY = touch.pageY;\n  touchRecord.previousTimeStamp = timestampForTouch(touch);\n}\n\nfunction getTouchIdentifier({identifier}: Touch): number {\n  invariant(identifier != null, 'Touch object is missing identifier.');\n  if (__DEV__) {\n    if (identifier > MAX_TOUCH_BANK) {\n      console.error(\n        'Touch identifier %s is greater than maximum supported %s which causes ' +\n          'performance issues backfilling array locations for all of the indices.',\n        identifier,\n        MAX_TOUCH_BANK,\n      );\n    }\n  }\n  return identifier;\n}\n\nfunction recordTouchStart(touch: Touch): void {\n  const identifier = getTouchIdentifier(touch);\n  const touchRecord = touchBank[identifier];\n  if (touchRecord) {\n    resetTouchRecord(touchRecord, touch);\n  } else {\n    touchBank[identifier] = createTouchRecord(touch);\n  }\n  touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n}\n\nfunction recordTouchMove(touch: Touch): void {\n  const touchRecord = touchBank[getTouchIdentifier(touch)];\n  if (touchRecord) {\n    touchRecord.touchActive = true;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    if (__DEV__) {\n      console.warn(\n        'Cannot record touch move without a touch start.\\n' +\n          'Touch Move: %s\\n' +\n          'Touch Bank: %s',\n        printTouch(touch),\n        printTouchBank(),\n      );\n    }\n  }\n}\n\nfunction recordTouchEnd(touch: Touch): void {\n  const touchRecord = touchBank[getTouchIdentifier(touch)];\n  if (touchRecord) {\n    touchRecord.touchActive = false;\n    touchRecord.previousPageX = touchRecord.currentPageX;\n    touchRecord.previousPageY = touchRecord.currentPageY;\n    touchRecord.previousTimeStamp = touchRecord.currentTimeStamp;\n    touchRecord.currentPageX = touch.pageX;\n    touchRecord.currentPageY = touch.pageY;\n    touchRecord.currentTimeStamp = timestampForTouch(touch);\n    touchHistory.mostRecentTimeStamp = timestampForTouch(touch);\n  } else {\n    if (__DEV__) {\n      console.warn(\n        'Cannot record touch end without a touch start.\\n' +\n          'Touch End: %s\\n' +\n          'Touch Bank: %s',\n        printTouch(touch),\n        printTouchBank(),\n      );\n    }\n  }\n}\n\nfunction printTouch(touch: Touch): string {\n  return JSON.stringify({\n    identifier: touch.identifier,\n    pageX: touch.pageX,\n    pageY: touch.pageY,\n    timestamp: timestampForTouch(touch),\n  });\n}\n\nfunction printTouchBank(): string {\n  let printed = JSON.stringify(touchBank.slice(0, MAX_TOUCH_BANK));\n  if (touchBank.length > MAX_TOUCH_BANK) {\n    printed += ' (original size: ' + touchBank.length + ')';\n  }\n  return printed;\n}\n\nlet instrumentationCallback: ?(string, TouchEvent) => void;\n\nconst ResponderTouchHistoryStore = {\n  /**\n   * Registers a listener which can be used to instrument every touch event.\n   */\n  instrument(callback: (string, TouchEvent) => void): void {\n    instrumentationCallback = callback;\n  },\n\n  recordTouchTrack(topLevelType: string, nativeEvent: TouchEvent): void {\n    if (instrumentationCallback != null) {\n      instrumentationCallback(topLevelType, nativeEvent);\n    }\n\n    if (isMoveish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchMove);\n    } else if (isStartish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchStart);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n      if (touchHistory.numberActiveTouches === 1) {\n        touchHistory.indexOfSingleActiveTouch =\n          nativeEvent.touches[0].identifier;\n      }\n    } else if (isEndish(topLevelType)) {\n      nativeEvent.changedTouches.forEach(recordTouchEnd);\n      touchHistory.numberActiveTouches = nativeEvent.touches.length;\n      if (touchHistory.numberActiveTouches === 1) {\n        for (let i = 0; i < touchBank.length; i++) {\n          const touchTrackToCheck = touchBank[i];\n          if (touchTrackToCheck != null && touchTrackToCheck.touchActive) {\n            touchHistory.indexOfSingleActiveTouch = i;\n            break;\n          }\n        }\n        if (__DEV__) {\n          const activeRecord = touchBank[touchHistory.indexOfSingleActiveTouch];\n          if (activeRecord == null || !activeRecord.touchActive) {\n            console.error('Cannot find single active touch.');\n          }\n        }\n      }\n    }\n  },\n\n  touchHistory,\n};\n\nexport default ResponderTouchHistoryStore;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\n\n/**\n * Accumulates items that must not be null or undefined.\n *\n * This is used to conserve memory by avoiding array allocations.\n *\n * @return {*|array<*>} An accumulation of items.\n */\nfunction accumulate<T>(\n  current: ?(T | Array<T>),\n  next: T | Array<T>,\n): T | Array<T> {\n  invariant(\n    next != null,\n    'accumulate(...): Accumulated items must not be null or undefined.',\n  );\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (isArray(current)) {\n    return current.concat(next);\n  }\n\n  if (isArray(next)) {\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nexport default accumulate;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\n\n/**\n * Accumulates items that must not be null or undefined into the first one. This\n * is used to conserve memory by avoiding array allocations, and thus sacrifices\n * API cleanness. Since `current` can be null before being passed in and not\n * null after this function, make sure to assign it back to `current`:\n *\n * `a = accumulateInto(a, b);`\n *\n * This API should be sparingly used. Try `accumulate` for something cleaner.\n *\n * @return {*|array<*>} An accumulation of items.\n */\n\nfunction accumulateInto<T>(\n  current: ?(Array<T> | T),\n  next: T | Array<T>,\n): T | Array<T> {\n  invariant(\n    next != null,\n    'accumulateInto(...): Accumulated items must not be null or undefined.',\n  );\n\n  if (current == null) {\n    return next;\n  }\n\n  // Both are not empty. Warning: Never call x.concat(y) when you are not\n  // certain that x is an Array (x could be a string with concat method).\n  if (isArray(current)) {\n    if (isArray(next)) {\n      current.push.apply(current, next);\n      return current;\n    }\n    current.push(next);\n    return current;\n  }\n\n  if (isArray(next)) {\n    // A bit too dangerous to mutate `next`.\n    return [current].concat(next);\n  }\n\n  return [current, next];\n}\n\nexport default accumulateInto;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * @param {array} arr an \"accumulation\" of items which is either an Array or\n * a single item. Useful when paired with the `accumulate` module. This is a\n * simple utility that allows us to reason about a collection of items, but\n * handling the case when there is exactly one item (and we do not need to\n * allocate an array).\n * @param {function} cb Callback invoked with each element or a collection.\n * @param {?} [scope] Scope used as `this` in a callback.\n */\nfunction forEachAccumulated<T>(\n  arr: ?(Array<T> | T),\n  cb: (elem: T) => void,\n  scope: ?any,\n) {\n  if (Array.isArray(arr)) {\n    arr.forEach(cb, scope);\n  } else if (arr) {\n    cb.call(scope, arr);\n  }\n}\n\nexport default forEachAccumulated;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type WorkTag =\n  | 0\n  | 1\n  | 2\n  | 3\n  | 4\n  | 5\n  | 6\n  | 7\n  | 8\n  | 9\n  | 10\n  | 11\n  | 12\n  | 13\n  | 14\n  | 15\n  | 16\n  | 17\n  | 18\n  | 19\n  | 20\n  | 21\n  | 22\n  | 23\n  | 24;\n\nexport const FunctionComponent = 0;\nexport const ClassComponent = 1;\nexport const IndeterminateComponent = 2; // Before we know whether it is function or class\nexport const HostRoot = 3; // Root of a host tree. Could be nested inside another node.\nexport const HostPortal = 4; // A subtree. Could be an entry point to a different renderer.\nexport const HostComponent = 5;\nexport const HostText = 6;\nexport const Fragment = 7;\nexport const Mode = 8;\nexport const ContextConsumer = 9;\nexport const ContextProvider = 10;\nexport const ForwardRef = 11;\nexport const Profiler = 12;\nexport const SuspenseComponent = 13;\nexport const MemoComponent = 14;\nexport const SimpleMemoComponent = 15;\nexport const LazyComponent = 16;\nexport const IncompleteClassComponent = 17;\nexport const DehydratedFragment = 18;\nexport const SuspenseListComponent = 19;\nexport const ScopeComponent = 21;\nexport const OffscreenComponent = 22;\nexport const LegacyHiddenComponent = 23;\nexport const CacheComponent = 24;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport {\n  executeDirectDispatch,\n  hasDispatches,\n  executeDispatchesInOrderStopAtTrue,\n  getInstanceFromNode,\n  getFiberCurrentPropsFromNode,\n} from './EventPluginUtils';\nimport ResponderSyntheticEvent from './ResponderSyntheticEvent';\nimport ResponderTouchHistoryStore from './ResponderTouchHistoryStore';\nimport accumulate from './accumulate';\nimport {\n  TOP_SCROLL,\n  TOP_SELECTION_CHANGE,\n  TOP_TOUCH_CANCEL,\n  isStartish,\n  isMoveish,\n  isEndish,\n  startDependencies,\n  moveDependencies,\n  endDependencies,\n} from './ResponderTopLevelEventTypes';\nimport accumulateInto from './accumulateInto';\nimport forEachAccumulated from './forEachAccumulated';\nimport {HostComponent} from 'react-reconciler/src/ReactWorkTags';\nimport invariant from 'shared/invariant';\n\n/**\n * Instance of element that should respond to touch/move types of interactions,\n * as indicated explicitly by relevant callbacks.\n */\nlet responderInst = null;\n\n/**\n * Count of current touches. A textInput should become responder iff the\n * selection changes while there is a touch on the screen.\n */\nlet trackedTouchCount = 0;\n\nconst changeResponder = function(nextResponderInst, blockHostResponder) {\n  const oldResponderInst = responderInst;\n  responderInst = nextResponderInst;\n  if (ResponderEventPlugin.GlobalResponderHandler !== null) {\n    ResponderEventPlugin.GlobalResponderHandler.onChange(\n      oldResponderInst,\n      nextResponderInst,\n      blockHostResponder,\n    );\n  }\n};\n\nconst eventTypes = {\n  /**\n   * On a `touchStart`/`mouseDown`, is it desired that this element become the\n   * responder?\n   */\n  startShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onStartShouldSetResponder',\n      captured: 'onStartShouldSetResponderCapture',\n    },\n    dependencies: startDependencies,\n  },\n\n  /**\n   * On a `scroll`, is it desired that this element become the responder? This\n   * is usually not needed, but should be used to retroactively infer that a\n   * `touchStart` had occurred during momentum scroll. During a momentum scroll,\n   * a touch start will be immediately followed by a scroll event if the view is\n   * currently scrolling.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  scrollShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onScrollShouldSetResponder',\n      captured: 'onScrollShouldSetResponderCapture',\n    },\n    dependencies: [TOP_SCROLL],\n  },\n\n  /**\n   * On text selection change, should this element become the responder? This\n   * is needed for text inputs or other views with native selection, so the\n   * JS view can claim the responder.\n   *\n   * TODO: This shouldn't bubble.\n   */\n  selectionChangeShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onSelectionChangeShouldSetResponder',\n      captured: 'onSelectionChangeShouldSetResponderCapture',\n    },\n    dependencies: [TOP_SELECTION_CHANGE],\n  },\n\n  /**\n   * On a `touchMove`/`mouseMove`, is it desired that this element become the\n   * responder?\n   */\n  moveShouldSetResponder: {\n    phasedRegistrationNames: {\n      bubbled: 'onMoveShouldSetResponder',\n      captured: 'onMoveShouldSetResponderCapture',\n    },\n    dependencies: moveDependencies,\n  },\n\n  /**\n   * Direct responder events dispatched directly to responder. Do not bubble.\n   */\n  responderStart: {\n    registrationName: 'onResponderStart',\n    dependencies: startDependencies,\n  },\n  responderMove: {\n    registrationName: 'onResponderMove',\n    dependencies: moveDependencies,\n  },\n  responderEnd: {\n    registrationName: 'onResponderEnd',\n    dependencies: endDependencies,\n  },\n  responderRelease: {\n    registrationName: 'onResponderRelease',\n    dependencies: endDependencies,\n  },\n  responderTerminationRequest: {\n    registrationName: 'onResponderTerminationRequest',\n    dependencies: [],\n  },\n  responderGrant: {\n    registrationName: 'onResponderGrant',\n    dependencies: [],\n  },\n  responderReject: {\n    registrationName: 'onResponderReject',\n    dependencies: [],\n  },\n  responderTerminate: {\n    registrationName: 'onResponderTerminate',\n    dependencies: [],\n  },\n};\n\n// Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return;\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Return the lowest common ancestor of A and B, or null if they are in\n * different trees.\n */\nexport function getLowestCommonAncestor(instA, instB) {\n  let depthA = 0;\n  for (let tempA = instA; tempA; tempA = getParent(tempA)) {\n    depthA++;\n  }\n  let depthB = 0;\n  for (let tempB = instB; tempB; tempB = getParent(tempB)) {\n    depthB++;\n  }\n\n  // If A is deeper, crawl up.\n  while (depthA - depthB > 0) {\n    instA = getParent(instA);\n    depthA--;\n  }\n\n  // If B is deeper, crawl up.\n  while (depthB - depthA > 0) {\n    instB = getParent(instB);\n    depthB--;\n  }\n\n  // Walk in lockstep until we find a match.\n  let depth = depthA;\n  while (depth--) {\n    if (instA === instB || instA === instB.alternate) {\n      return instA;\n    }\n    instA = getParent(instA);\n    instB = getParent(instB);\n  }\n  return null;\n}\n\n/**\n * Return if A is an ancestor of B.\n */\nfunction isAncestor(instA, instB) {\n  while (instB) {\n    if (instA === instB || instA === instB.alternate) {\n      return true;\n    }\n    instB = getParent(instB);\n  }\n  return false;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nfunction traverseTwoPhase(inst, fn, arg) {\n  const path = [];\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n  let i;\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\nfunction getListener(inst, registrationName) {\n  const stateNode = inst.stateNode;\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  const props = getFiberCurrentPropsFromNode(stateNode);\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n  const listener = props[registrationName];\n  invariant(\n    !listener || typeof listener === 'function',\n    'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n    registrationName,\n    typeof listener,\n  );\n  return listener;\n}\n\nfunction listenerAtPhase(inst, event, propagationPhase: PropagationPhases) {\n  const registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (__DEV__) {\n    if (!inst) {\n      console.error('Dispatching inst must not be null');\n    }\n  }\n  const listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener,\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(\n  inst: Object,\n  ignoredDirection: ?boolean,\n  event: Object,\n): void {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    const registrationName = event.dispatchConfig.registrationName;\n    const listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener,\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event: Object) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches(events: ?(Array<Object> | Object)) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\nfunction accumulateTwoPhaseDispatchesSingleSkipTarget(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    const targetInst = event._targetInst;\n    const parentInst = targetInst ? getParent(targetInst) : null;\n    traverseTwoPhase(parentInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSkipTarget(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingleSkipTarget);\n}\n\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n// End of inline\n\n/**\n *\n * Responder System:\n * ----------------\n *\n * - A global, solitary \"interaction lock\" on a view.\n * - If a node becomes the responder, it should convey visual feedback\n *   immediately to indicate so, either by highlighting or moving accordingly.\n * - To be the responder means, that touches are exclusively important to that\n *   responder view, and no other view.\n * - While touches are still occurring, the responder lock can be transferred to\n *   a new view, but only to increasingly \"higher\" views (meaning ancestors of\n *   the current responder).\n *\n * Responder being granted:\n * ------------------------\n *\n * - Touch starts, moves, and scrolls can cause an ID to become the responder.\n * - We capture/bubble `startShouldSetResponder`/`moveShouldSetResponder` to\n *   the \"appropriate place\".\n * - If nothing is currently the responder, the \"appropriate place\" is the\n *   initiating event's `targetID`.\n * - If something *is* already the responder, the \"appropriate place\" is the\n *   first common ancestor of the event target and the current `responderInst`.\n * - Some negotiation happens: See the timing diagram below.\n * - Scrolled views automatically become responder. The reasoning is that a\n *   platform scroll view that isn't built on top of the responder system has\n *   began scrolling, and the active responder must now be notified that the\n *   interaction is no longer locked to it - the system has taken over.\n *\n * - Responder being released:\n *   As soon as no more touches that *started* inside of descendants of the\n *   *current* responderInst, an `onResponderRelease` event is dispatched to the\n *   current responder, and the responder lock is released.\n *\n * TODO:\n * - on \"end\", a callback hook for `onResponderEndShouldRemainResponder` that\n *   determines if the responder lock should remain.\n * - If a view shouldn't \"remain\" the responder, any active touches should by\n *   default be considered \"dead\" and do not influence future negotiations or\n *   bubble paths. It should be as if those touches do not exist.\n * -- For multitouch: Usually a translate-z will choose to \"remain\" responder\n *  after one out of many touches ended. For translate-y, usually the view\n *  doesn't wish to \"remain\" responder after one of many touches end.\n * - Consider building this on top of a `stopPropagation` model similar to\n *   `W3C` events.\n * - Ensure that `onResponderTerminate` is called on touch cancels, whether or\n *   not `onResponderTerminationRequest` returns `true` or `false`.\n *\n */\n\n/*                                             Negotiation Performed\n                                             +-----------------------+\n                                            /                         \\\nProcess low level events to    +     Current Responder      +   wantsResponderID\ndetermine who to perform negot-|   (if any exists at all)   |\niation/transition              | Otherwise just pass through|\n-------------------------------+----------------------------+------------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchStart|           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onStartShouldSetResponder|----->|onResponderStart (cur)  |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderReject\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderStart|\n                               |                            | +----------------+\nBubble to find first ID        |                            |\nto return true:wantsResponderID|                            |\n                               |                            |\n     +-------------+           |                            |\n     | onTouchMove |           |                            |\n     +------+------+     none  |                            |\n            |            return|                            |\n+-----------v-------------+true| +------------------------+ |\n|onMoveShouldSetResponder |----->|onResponderMove (cur)   |<-----------+\n+-----------+-------------+    | +------------------------+ |          |\n            |                  |                            | +--------+-------+\n            | returned true for|       false:REJECT +-------->|onResponderRejec|\n            | wantsResponderID |                    |       | +----------------+\n            | (now attempt     | +------------------+-----+ |\n            |  handoff)        | |   onResponder          | |\n            +------------------->|      TerminationRequest| |\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |         true:GRANT +-------->|onResponderGrant|\n                               |                            | +--------+-------+\n                               | +------------------------+ |          |\n                               | |   onResponderTerminate |<-----------+\n                               | +------------------+-----+ |\n                               |                    |       | +----------------+\n                               |                    +-------->|onResponderMove |\n                               |                            | +----------------+\n                               |                            |\n                               |                            |\n      Some active touch started|                            |\n      inside current responder | +------------------------+ |\n      +------------------------->|      onResponderEnd    | |\n      |                        | +------------------------+ |\n  +---+---------+              |                            |\n  | onTouchEnd  |              |                            |\n  +---+---------+              |                            |\n      |                        | +------------------------+ |\n      +------------------------->|     onResponderEnd     | |\n      No active touches started| +-----------+------------+ |\n      inside current responder |             |              |\n                               |             v              |\n                               | +------------------------+ |\n                               | |    onResponderRelease  | |\n                               | +------------------------+ |\n                               |                            |\n                               +                            + */\n\n/**\n * A note about event ordering in the `EventPluginRegistry`.\n *\n * Suppose plugins are injected in the following order:\n *\n * `[R, S, C]`\n *\n * To help illustrate the example, assume `S` is `SimpleEventPlugin` (for\n * `onClick` etc) and `R` is `ResponderEventPlugin`.\n *\n * \"Deferred-Dispatched Events\":\n *\n * - The current event plugin system will traverse the list of injected plugins,\n *   in order, and extract events by collecting the plugin's return value of\n *   `extractEvents()`.\n * - These events that are returned from `extractEvents` are \"deferred\n *   dispatched events\".\n * - When returned from `extractEvents`, deferred-dispatched events contain an\n *   \"accumulation\" of deferred dispatches.\n * - These deferred dispatches are accumulated/collected before they are\n *   returned, but processed at a later time by the `EventPluginRegistry` (hence the\n *   name deferred).\n *\n * In the process of returning their deferred-dispatched events, event plugins\n * themselves can dispatch events on-demand without returning them from\n * `extractEvents`. Plugins might want to do this, so that they can use event\n * dispatching as a tool that helps them decide which events should be extracted\n * in the first place.\n *\n * \"On-Demand-Dispatched Events\":\n *\n * - On-demand-dispatched events are not returned from `extractEvents`.\n * - On-demand-dispatched events are dispatched during the process of returning\n *   the deferred-dispatched events.\n * - They should not have side effects.\n * - They should be avoided, and/or eventually be replaced with another\n *   abstraction that allows event plugins to perform multiple \"rounds\" of event\n *   extraction.\n *\n * Therefore, the sequence of event dispatches becomes:\n *\n * - `R`s on-demand events (if any)   (dispatched by `R` on-demand)\n * - `S`s on-demand events (if any)   (dispatched by `S` on-demand)\n * - `C`s on-demand events (if any)   (dispatched by `C` on-demand)\n * - `R`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `S`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n * - `C`s extracted events (if any)   (dispatched by `EventPluginRegistry`)\n *\n * In the case of `ResponderEventPlugin`: If the `startShouldSetResponder`\n * on-demand dispatch returns `true` (and some other details are satisfied) the\n * `onResponderGrant` deferred dispatched event is returned from\n * `extractEvents`. The sequence of dispatch executions in this case\n * will appear as follows:\n *\n * - `startShouldSetResponder` (`ResponderEventPlugin` dispatches on-demand)\n * - `touchStartCapture`       (`EventPluginRegistry` dispatches as usual)\n * - `touchStart`              (`EventPluginRegistry` dispatches as usual)\n * - `responderGrant/Reject`   (`EventPluginRegistry` dispatches as usual)\n */\n\nfunction setResponderAndExtractTransfer(\n  topLevelType,\n  targetInst,\n  nativeEvent,\n  nativeEventTarget,\n) {\n  const shouldSetEventType = isStartish(topLevelType)\n    ? eventTypes.startShouldSetResponder\n    : isMoveish(topLevelType)\n    ? eventTypes.moveShouldSetResponder\n    : topLevelType === TOP_SELECTION_CHANGE\n    ? eventTypes.selectionChangeShouldSetResponder\n    : eventTypes.scrollShouldSetResponder;\n\n  // TODO: stop one short of the current responder.\n  const bubbleShouldSetFrom = !responderInst\n    ? targetInst\n    : getLowestCommonAncestor(responderInst, targetInst);\n\n  // When capturing/bubbling the \"shouldSet\" event, we want to skip the target\n  // (deepest ID) if it happens to be the current responder. The reasoning:\n  // It's strange to get an `onMoveShouldSetResponder` when you're *already*\n  // the responder.\n  const skipOverBubbleShouldSetFrom = bubbleShouldSetFrom === responderInst;\n  const shouldSetEvent = ResponderSyntheticEvent.getPooled(\n    shouldSetEventType,\n    bubbleShouldSetFrom,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  shouldSetEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n  if (skipOverBubbleShouldSetFrom) {\n    accumulateTwoPhaseDispatchesSkipTarget(shouldSetEvent);\n  } else {\n    accumulateTwoPhaseDispatches(shouldSetEvent);\n  }\n  const wantsResponderInst = executeDispatchesInOrderStopAtTrue(shouldSetEvent);\n  if (!shouldSetEvent.isPersistent()) {\n    shouldSetEvent.constructor.release(shouldSetEvent);\n  }\n\n  if (!wantsResponderInst || wantsResponderInst === responderInst) {\n    return null;\n  }\n  let extracted;\n  const grantEvent = ResponderSyntheticEvent.getPooled(\n    eventTypes.responderGrant,\n    wantsResponderInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  grantEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n\n  accumulateDirectDispatches(grantEvent);\n  const blockHostResponder = executeDirectDispatch(grantEvent) === true;\n  if (responderInst) {\n    const terminationRequestEvent = ResponderSyntheticEvent.getPooled(\n      eventTypes.responderTerminationRequest,\n      responderInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    terminationRequestEvent.touchHistory =\n      ResponderTouchHistoryStore.touchHistory;\n    accumulateDirectDispatches(terminationRequestEvent);\n    const shouldSwitch =\n      !hasDispatches(terminationRequestEvent) ||\n      executeDirectDispatch(terminationRequestEvent);\n    if (!terminationRequestEvent.isPersistent()) {\n      terminationRequestEvent.constructor.release(terminationRequestEvent);\n    }\n\n    if (shouldSwitch) {\n      const terminateEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderTerminate,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      terminateEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(terminateEvent);\n      extracted = accumulate(extracted, [grantEvent, terminateEvent]);\n      changeResponder(wantsResponderInst, blockHostResponder);\n    } else {\n      const rejectEvent = ResponderSyntheticEvent.getPooled(\n        eventTypes.responderReject,\n        wantsResponderInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      rejectEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(rejectEvent);\n      extracted = accumulate(extracted, rejectEvent);\n    }\n  } else {\n    extracted = accumulate(extracted, grantEvent);\n    changeResponder(wantsResponderInst, blockHostResponder);\n  }\n  return extracted;\n}\n\n/**\n * A transfer is a negotiation between a currently set responder and the next\n * element to claim responder status. Any start event could trigger a transfer\n * of responderInst. Any move event could trigger a transfer.\n *\n * @param {string} topLevelType Record from `BrowserEventConstants`.\n * @return {boolean} True if a transfer of responder could possibly occur.\n */\nfunction canTriggerTransfer(topLevelType, topLevelInst, nativeEvent) {\n  return (\n    topLevelInst &&\n    // responderIgnoreScroll: We are trying to migrate away from specifically\n    // tracking native scroll events here and responderIgnoreScroll indicates we\n    // will send topTouchCancel to handle canceling touch events instead\n    ((topLevelType === TOP_SCROLL && !nativeEvent.responderIgnoreScroll) ||\n      (trackedTouchCount > 0 && topLevelType === TOP_SELECTION_CHANGE) ||\n      isStartish(topLevelType) ||\n      isMoveish(topLevelType))\n  );\n}\n\n/**\n * Returns whether or not this touch end event makes it such that there are no\n * longer any touches that started inside of the current `responderInst`.\n *\n * @param {NativeEvent} nativeEvent Native touch end event.\n * @return {boolean} Whether or not this touch end event ends the responder.\n */\nfunction noResponderTouches(nativeEvent) {\n  const touches = nativeEvent.touches;\n  if (!touches || touches.length === 0) {\n    return true;\n  }\n  for (let i = 0; i < touches.length; i++) {\n    const activeTouch = touches[i];\n    const target = activeTouch.target;\n    if (target !== null && target !== undefined && target !== 0) {\n      // Is the original touch location inside of the current responder?\n      const targetInst = getInstanceFromNode(target);\n      if (isAncestor(responderInst, targetInst)) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nconst ResponderEventPlugin = {\n  /* For unit testing only */\n  _getResponder: function() {\n    return responderInst;\n  },\n\n  eventTypes: eventTypes,\n\n  /**\n   * We must be resilient to `targetInst` being `null` on `touchMove` or\n   * `touchEnd`. On certain platforms, this means that a native scroll has\n   * assumed control and the original touch targets are destroyed.\n   */\n  extractEvents: function(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n    eventSystemFlags,\n  ) {\n    if (isStartish(topLevelType)) {\n      trackedTouchCount += 1;\n    } else if (isEndish(topLevelType)) {\n      if (trackedTouchCount >= 0) {\n        trackedTouchCount -= 1;\n      } else {\n        if (__DEV__) {\n          console.warn(\n            'Ended a touch event which was not counted in `trackedTouchCount`.',\n          );\n        }\n        return null;\n      }\n    }\n\n    ResponderTouchHistoryStore.recordTouchTrack(topLevelType, nativeEvent);\n\n    let extracted = canTriggerTransfer(topLevelType, targetInst, nativeEvent)\n      ? setResponderAndExtractTransfer(\n          topLevelType,\n          targetInst,\n          nativeEvent,\n          nativeEventTarget,\n        )\n      : null;\n    // Responder may or may not have transferred on a new touch start/move.\n    // Regardless, whoever is the responder after any potential transfer, we\n    // direct all touch start/move/ends to them in the form of\n    // `onResponderMove/Start/End`. These will be called for *every* additional\n    // finger that move/start/end, dispatched directly to whoever is the\n    // current responder at that moment, until the responder is \"released\".\n    //\n    // These multiple individual change touch events are are always bookended\n    // by `onResponderGrant`, and one of\n    // (`onResponderRelease/onResponderTerminate`).\n    const isResponderTouchStart = responderInst && isStartish(topLevelType);\n    const isResponderTouchMove = responderInst && isMoveish(topLevelType);\n    const isResponderTouchEnd = responderInst && isEndish(topLevelType);\n    const incrementalTouch = isResponderTouchStart\n      ? eventTypes.responderStart\n      : isResponderTouchMove\n      ? eventTypes.responderMove\n      : isResponderTouchEnd\n      ? eventTypes.responderEnd\n      : null;\n\n    if (incrementalTouch) {\n      const gesture = ResponderSyntheticEvent.getPooled(\n        incrementalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      gesture.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(gesture);\n      extracted = accumulate(extracted, gesture);\n    }\n\n    const isResponderTerminate =\n      responderInst && topLevelType === TOP_TOUCH_CANCEL;\n    const isResponderRelease =\n      responderInst &&\n      !isResponderTerminate &&\n      isEndish(topLevelType) &&\n      noResponderTouches(nativeEvent);\n    const finalTouch = isResponderTerminate\n      ? eventTypes.responderTerminate\n      : isResponderRelease\n      ? eventTypes.responderRelease\n      : null;\n    if (finalTouch) {\n      const finalEvent = ResponderSyntheticEvent.getPooled(\n        finalTouch,\n        responderInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      finalEvent.touchHistory = ResponderTouchHistoryStore.touchHistory;\n      accumulateDirectDispatches(finalEvent);\n      extracted = accumulate(extracted, finalEvent);\n      changeResponder(null);\n    }\n\n    return extracted;\n  },\n\n  GlobalResponderHandler: null,\n\n  injection: {\n    /**\n     * @param {{onChange: (ReactID, ReactID) => void} GlobalResponderHandler\n     * Object that handles any change in responder. Use this to inject\n     * integration with an existing touch handling system etc.\n     */\n    injectGlobalResponderHandler(GlobalResponderHandler) {\n      ResponderEventPlugin.GlobalResponderHandler = GlobalResponderHandler;\n    },\n  },\n};\n\nexport default ResponderEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {DispatchConfig} from './ReactSyntheticEventType';\nimport type {\n  AnyNativeEvent,\n  PluginName,\n  LegacyPluginModule,\n} from './PluginModuleType';\n\nimport invariant from 'shared/invariant';\n\ntype NamesToPlugins = {\n  [key: PluginName]: LegacyPluginModule<AnyNativeEvent>,\n  ...,\n};\ntype EventPluginOrder = null | Array<PluginName>;\n\n/**\n * Injectable ordering of event plugins.\n */\nlet eventPluginOrder: EventPluginOrder = null;\n\n/**\n * Injectable mapping from names to event plugin modules.\n */\nconst namesToPlugins: NamesToPlugins = {};\n\n/**\n * Recomputes the plugin list using the injected plugins and plugin ordering.\n *\n * @private\n */\nfunction recomputePluginOrdering(): void {\n  if (!eventPluginOrder) {\n    // Wait until an `eventPluginOrder` is injected.\n    return;\n  }\n  for (const pluginName in namesToPlugins) {\n    const pluginModule = namesToPlugins[pluginName];\n    const pluginIndex = eventPluginOrder.indexOf(pluginName);\n    invariant(\n      pluginIndex > -1,\n      'EventPluginRegistry: Cannot inject event plugins that do not exist in ' +\n        'the plugin ordering, `%s`.',\n      pluginName,\n    );\n    if (plugins[pluginIndex]) {\n      continue;\n    }\n    invariant(\n      pluginModule.extractEvents,\n      'EventPluginRegistry: Event plugins must implement an `extractEvents` ' +\n        'method, but `%s` does not.',\n      pluginName,\n    );\n    plugins[pluginIndex] = pluginModule;\n    const publishedEvents = pluginModule.eventTypes;\n    for (const eventName in publishedEvents) {\n      invariant(\n        publishEventForPlugin(\n          publishedEvents[eventName],\n          pluginModule,\n          eventName,\n        ),\n        'EventPluginRegistry: Failed to publish event `%s` for plugin `%s`.',\n        eventName,\n        pluginName,\n      );\n    }\n  }\n}\n\n/**\n * Publishes an event so that it can be dispatched by the supplied plugin.\n *\n * @param {object} dispatchConfig Dispatch configuration for the event.\n * @param {object} PluginModule Plugin publishing the event.\n * @return {boolean} True if the event was successfully published.\n * @private\n */\nfunction publishEventForPlugin(\n  dispatchConfig: DispatchConfig,\n  pluginModule: LegacyPluginModule<AnyNativeEvent>,\n  eventName: string,\n): boolean {\n  invariant(\n    !eventNameDispatchConfigs.hasOwnProperty(eventName),\n    'EventPluginRegistry: More than one plugin attempted to publish the same ' +\n      'event name, `%s`.',\n    eventName,\n  );\n  eventNameDispatchConfigs[eventName] = dispatchConfig;\n\n  const phasedRegistrationNames = dispatchConfig.phasedRegistrationNames;\n  if (phasedRegistrationNames) {\n    for (const phaseName in phasedRegistrationNames) {\n      if (phasedRegistrationNames.hasOwnProperty(phaseName)) {\n        const phasedRegistrationName = phasedRegistrationNames[phaseName];\n        publishRegistrationName(\n          phasedRegistrationName,\n          pluginModule,\n          eventName,\n        );\n      }\n    }\n    return true;\n  } else if (dispatchConfig.registrationName) {\n    publishRegistrationName(\n      dispatchConfig.registrationName,\n      pluginModule,\n      eventName,\n    );\n    return true;\n  }\n  return false;\n}\n\n/**\n * Publishes a registration name that is used to identify dispatched events.\n *\n * @param {string} registrationName Registration name to add.\n * @param {object} PluginModule Plugin publishing the event.\n * @private\n */\nfunction publishRegistrationName(\n  registrationName: string,\n  pluginModule: LegacyPluginModule<AnyNativeEvent>,\n  eventName: string,\n): void {\n  invariant(\n    !registrationNameModules[registrationName],\n    'EventPluginRegistry: More than one plugin attempted to publish the same ' +\n      'registration name, `%s`.',\n    registrationName,\n  );\n  registrationNameModules[registrationName] = pluginModule;\n  registrationNameDependencies[registrationName] =\n    pluginModule.eventTypes[eventName].dependencies;\n\n  if (__DEV__) {\n    const lowerCasedName = registrationName.toLowerCase();\n    possibleRegistrationNames[lowerCasedName] = registrationName;\n\n    if (registrationName === 'onDoubleClick') {\n      possibleRegistrationNames.ondblclick = registrationName;\n    }\n  }\n}\n\n/**\n * Registers plugins so that they can extract and dispatch events.\n */\n\n/**\n * Ordered list of injected plugins.\n */\nexport const plugins = [];\n\n/**\n * Mapping from event name to dispatch config\n */\nexport const eventNameDispatchConfigs = {};\n\n/**\n * Mapping from registration name to plugin module\n */\nexport const registrationNameModules = {};\n\n/**\n * Mapping from registration name to event name\n */\nexport const registrationNameDependencies = {};\n\n/**\n * Mapping from lowercase registration names to the properly cased version,\n * used to warn in the case of missing event handlers. Available\n * only in __DEV__.\n * @type {Object}\n */\nexport const possibleRegistrationNames = __DEV__ ? {} : (null: any);\n// Trust the developer to only use possibleRegistrationNames in __DEV__\n\n/**\n * Injects an ordering of plugins (by plugin name). This allows the ordering\n * to be decoupled from injection of the actual plugins so that ordering is\n * always deterministic regardless of packaging, on-the-fly injection, etc.\n *\n * @param {array} InjectedEventPluginOrder\n * @internal\n */\nexport function injectEventPluginOrder(\n  injectedEventPluginOrder: EventPluginOrder,\n): void {\n  invariant(\n    !eventPluginOrder,\n    'EventPluginRegistry: Cannot inject event plugin ordering more than ' +\n      'once. You are likely trying to load more than one copy of React.',\n  );\n  // Clone the ordering so it cannot be dynamically mutated.\n  eventPluginOrder = Array.prototype.slice.call(injectedEventPluginOrder);\n  recomputePluginOrdering();\n}\n\n/**\n * Injects plugins to be used by plugin event system. The plugin names must be\n * in the ordering injected by `injectEventPluginOrder`.\n *\n * Plugins can be injected as part of page initialization or on-the-fly.\n *\n * @param {object} injectedNamesToPlugins Map from names to plugin modules.\n * @internal\n */\nexport function injectEventPluginsByName(\n  injectedNamesToPlugins: NamesToPlugins,\n): void {\n  let isOrderingDirty = false;\n  for (const pluginName in injectedNamesToPlugins) {\n    if (!injectedNamesToPlugins.hasOwnProperty(pluginName)) {\n      continue;\n    }\n    const pluginModule = injectedNamesToPlugins[pluginName];\n    if (\n      !namesToPlugins.hasOwnProperty(pluginName) ||\n      namesToPlugins[pluginName] !== pluginModule\n    ) {\n      invariant(\n        !namesToPlugins[pluginName],\n        'EventPluginRegistry: Cannot inject two different event plugins ' +\n          'using the same name, `%s`.',\n        pluginName,\n      );\n      namesToPlugins[pluginName] = pluginModule;\n      isOrderingDirty = true;\n    }\n  }\n  if (isOrderingDirty) {\n    recomputePluginOrdering();\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\n\nimport invariant from 'shared/invariant';\nimport {getFiberCurrentPropsFromNode} from './legacy-events/EventPluginUtils';\n\nexport default function getListener(\n  inst: Fiber,\n  registrationName: string,\n): Function | null {\n  const stateNode = inst.stateNode;\n  if (stateNode === null) {\n    // Work in progress (ex: onload events in incremental mode).\n    return null;\n  }\n  const props = getFiberCurrentPropsFromNode(stateNode);\n  if (props === null) {\n    // Work in progress.\n    return null;\n  }\n  const listener = props[registrationName];\n  invariant(\n    !listener || typeof listener === 'function',\n    'Expected `%s` listener to be a function, instead got a value of `%s` type.',\n    registrationName,\n    typeof listener,\n  );\n  return listener;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from './legacy-events/PluginModuleType';\nimport type {TopLevelType} from './legacy-events/TopLevelEventTypes';\nimport SyntheticEvent from './legacy-events/SyntheticEvent';\nimport invariant from 'shared/invariant';\n\n// Module provided by RN:\nimport {ReactNativeViewConfigRegistry} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport accumulateInto from './legacy-events/accumulateInto';\nimport getListener from './ReactNativeGetListener';\nimport forEachAccumulated from './legacy-events/forEachAccumulated';\nimport {HostComponent} from 'react-reconciler/src/ReactWorkTags';\n\nconst {\n  customBubblingEventTypes,\n  customDirectEventTypes,\n} = ReactNativeViewConfigRegistry;\n\n// Start of inline: the below functions were inlined from\n// EventPropagator.js, as they deviated from ReactDOM's newer\n// implementations.\nfunction listenerAtPhase(inst, event, propagationPhase: PropagationPhases) {\n  const registrationName =\n    event.dispatchConfig.phasedRegistrationNames[propagationPhase];\n  return getListener(inst, registrationName);\n}\n\nfunction accumulateDirectionalDispatches(inst, phase, event) {\n  if (__DEV__) {\n    if (!inst) {\n      console.error('Dispatching inst must not be null');\n    }\n  }\n  const listener = listenerAtPhase(inst, event, phase);\n  if (listener) {\n    event._dispatchListeners = accumulateInto(\n      event._dispatchListeners,\n      listener,\n    );\n    event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n  }\n}\n\nfunction getParent(inst) {\n  do {\n    inst = inst.return;\n    // TODO: If this is a HostRoot we might want to bail out.\n    // That is depending on if we want nested subtrees (layers) to bubble\n    // events to their parent. We could also go through parentNode on the\n    // host node but that wouldn't work for React Native and doesn't let us\n    // do the portal feature.\n  } while (inst && inst.tag !== HostComponent);\n  if (inst) {\n    return inst;\n  }\n  return null;\n}\n\n/**\n * Simulates the traversal of a two-phase, capture/bubble event dispatch.\n */\nexport function traverseTwoPhase(inst: Object, fn: Function, arg: Function) {\n  const path = [];\n  while (inst) {\n    path.push(inst);\n    inst = getParent(inst);\n  }\n  let i;\n  for (i = path.length; i-- > 0; ) {\n    fn(path[i], 'captured', arg);\n  }\n  for (i = 0; i < path.length; i++) {\n    fn(path[i], 'bubbled', arg);\n  }\n}\n\nfunction accumulateTwoPhaseDispatchesSingle(event) {\n  if (event && event.dispatchConfig.phasedRegistrationNames) {\n    traverseTwoPhase(event._targetInst, accumulateDirectionalDispatches, event);\n  }\n}\n\nfunction accumulateTwoPhaseDispatches(events) {\n  forEachAccumulated(events, accumulateTwoPhaseDispatchesSingle);\n}\n\n/**\n * Accumulates without regard to direction, does not look for phased\n * registration names. Same as `accumulateDirectDispatchesSingle` but without\n * requiring that the `dispatchMarker` be the same as the dispatched ID.\n */\nfunction accumulateDispatches(\n  inst: Object,\n  ignoredDirection: ?boolean,\n  event: Object,\n): void {\n  if (inst && event && event.dispatchConfig.registrationName) {\n    const registrationName = event.dispatchConfig.registrationName;\n    const listener = getListener(inst, registrationName);\n    if (listener) {\n      event._dispatchListeners = accumulateInto(\n        event._dispatchListeners,\n        listener,\n      );\n      event._dispatchInstances = accumulateInto(event._dispatchInstances, inst);\n    }\n  }\n}\n\n/**\n * Accumulates dispatches on an `SyntheticEvent`, but only for the\n * `dispatchMarker`.\n * @param {SyntheticEvent} event\n */\nfunction accumulateDirectDispatchesSingle(event: Object) {\n  if (event && event.dispatchConfig.registrationName) {\n    accumulateDispatches(event._targetInst, null, event);\n  }\n}\n\nfunction accumulateDirectDispatches(events: ?(Array<Object> | Object)) {\n  forEachAccumulated(events, accumulateDirectDispatchesSingle);\n}\n\n// End of inline\ntype PropagationPhases = 'bubbled' | 'captured';\n\nconst ReactNativeBridgeEventPlugin = {\n  eventTypes: {},\n\n  extractEvents: function(\n    topLevelType: TopLevelType,\n    targetInst: null | Object,\n    nativeEvent: AnyNativeEvent,\n    nativeEventTarget: null | Object,\n  ): ?Object {\n    if (targetInst == null) {\n      // Probably a node belonging to another renderer's tree.\n      return null;\n    }\n    const bubbleDispatchConfig = customBubblingEventTypes[topLevelType];\n    const directDispatchConfig = customDirectEventTypes[topLevelType];\n    invariant(\n      bubbleDispatchConfig || directDispatchConfig,\n      'Unsupported top level event type \"%s\" dispatched',\n      topLevelType,\n    );\n    const event = SyntheticEvent.getPooled(\n      bubbleDispatchConfig || directDispatchConfig,\n      targetInst,\n      nativeEvent,\n      nativeEventTarget,\n    );\n    if (bubbleDispatchConfig) {\n      accumulateTwoPhaseDispatches(event);\n    } else if (directDispatchConfig) {\n      accumulateDirectDispatches(event);\n    } else {\n      return null;\n    }\n    return event;\n  },\n};\n\nexport default ReactNativeBridgeEventPlugin;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst ReactNativeEventPluginOrder = [\n  'ResponderEventPlugin',\n  'ReactNativeBridgeEventPlugin',\n];\n\nexport default ReactNativeEventPluginOrder;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * Make sure essential globals are available and are patched correctly. Please don't remove this\n * line. Bundles created by react-packager `require` it before executing any application code. This\n * ensures it exists in the dependency graph and can be `require`d.\n * TODO: require this in packager, not in React #10932517\n */\n// Module provided by RN:\nimport 'react-native/Libraries/ReactPrivate/ReactNativePrivateInitializeCore';\n\nimport ResponderEventPlugin from './legacy-events/ResponderEventPlugin';\nimport {\n  injectEventPluginOrder,\n  injectEventPluginsByName,\n} from './legacy-events/EventPluginRegistry';\n\nimport ReactNativeBridgeEventPlugin from './ReactNativeBridgeEventPlugin';\nimport ReactNativeEventPluginOrder from './ReactNativeEventPluginOrder';\n\n/**\n * Inject module for resolving DOM hierarchy and plugin ordering.\n */\ninjectEventPluginOrder(ReactNativeEventPluginOrder);\n\n/**\n * Some important event plugins included by default (without having to require\n * them).\n */\ninjectEventPluginsByName({\n  ResponderEventPlugin: ResponderEventPlugin,\n  ReactNativeBridgeEventPlugin: ReactNativeBridgeEventPlugin,\n});\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nimport invariant from 'shared/invariant';\n\nconst instanceCache = new Map();\nconst instanceProps = new Map();\n\nexport function precacheFiberNode(hostInst, tag) {\n  instanceCache.set(tag, hostInst);\n}\n\nexport function uncacheFiberNode(tag) {\n  instanceCache.delete(tag);\n  instanceProps.delete(tag);\n}\n\nfunction getInstanceFromTag(tag) {\n  return instanceCache.get(tag) || null;\n}\n\nfunction getTagFromInstance(inst) {\n  let nativeInstance = inst.stateNode;\n  let tag = nativeInstance._nativeTag;\n  if (tag === undefined) {\n    nativeInstance = nativeInstance.canonical;\n    tag = nativeInstance._nativeTag;\n  }\n  invariant(tag, 'All native instances should have a tag.');\n  return nativeInstance;\n}\n\nexport {\n  getInstanceFromTag as getClosestInstanceFromNode,\n  getInstanceFromTag as getInstanceFromNode,\n  getTagFromInstance as getNodeFromInstance,\n};\n\nexport function getFiberCurrentPropsFromNode(stateNode) {\n  return instanceProps.get(stateNode._nativeTag) || null;\n}\n\nexport function updateFiberProps(tag, props) {\n  instanceProps.set(tag, props);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Used as a way to call batchedUpdates when we don't have a reference to\n// the renderer. Such as when we're dispatching events or if third party\n// libraries need to call batchedUpdates. Eventually, this API will go away when\n// everything is batched by default. We'll then have a similar API to opt-out of\n// scheduled work and instead do synchronous work.\n\n// Defaults\nlet batchedUpdatesImpl = function(fn, bookkeeping) {\n  return fn(bookkeeping);\n};\nlet discreteUpdatesImpl = function(fn, a, b, c, d) {\n  return fn(a, b, c, d);\n};\n\nlet isInsideEventHandler = false;\n\nexport function batchedUpdates(fn, bookkeeping) {\n  if (isInsideEventHandler) {\n    // If we are currently inside another batch, we need to wait until it\n    // fully completes before restoring state.\n    return fn(bookkeeping);\n  }\n  isInsideEventHandler = true;\n  try {\n    return batchedUpdatesImpl(fn, bookkeeping);\n  } finally {\n    isInsideEventHandler = false;\n  }\n}\n\nexport function discreteUpdates(fn, a, b, c, d) {\n  const prevIsInsideEventHandler = isInsideEventHandler;\n  isInsideEventHandler = true;\n  try {\n    return discreteUpdatesImpl(fn, a, b, c, d);\n  } finally {\n    isInsideEventHandler = prevIsInsideEventHandler;\n  }\n}\n\nexport function setBatchingImplementation(\n  _batchedUpdatesImpl,\n  _discreteUpdatesImpl,\n) {\n  batchedUpdatesImpl = _batchedUpdatesImpl;\n  discreteUpdatesImpl = _discreteUpdatesImpl;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n * @flow\n */\n\nimport invariant from 'shared/invariant';\nimport {rethrowCaughtError} from 'shared/ReactErrorUtils';\n\nimport type {ReactSyntheticEvent} from './ReactSyntheticEventType';\nimport accumulateInto from './accumulateInto';\nimport forEachAccumulated from './forEachAccumulated';\nimport {executeDispatchesInOrder} from './EventPluginUtils';\n\n/**\n * Internal queue of events that have accumulated their dispatches and are\n * waiting to have their dispatches executed.\n */\nlet eventQueue: ?(Array<ReactSyntheticEvent> | ReactSyntheticEvent) = null;\n\n/**\n * Dispatches an event and releases it back into the pool, unless persistent.\n *\n * @param {?object} event Synthetic event to be dispatched.\n * @private\n */\nconst executeDispatchesAndRelease = function(event: ReactSyntheticEvent) {\n  if (event) {\n    executeDispatchesInOrder(event);\n\n    if (!event.isPersistent()) {\n      event.constructor.release(event);\n    }\n  }\n};\nconst executeDispatchesAndReleaseTopLevel = function(e) {\n  return executeDispatchesAndRelease(e);\n};\n\nexport function runEventsInBatch(\n  events: Array<ReactSyntheticEvent> | ReactSyntheticEvent | null,\n) {\n  if (events !== null) {\n    eventQueue = accumulateInto(eventQueue, events);\n  }\n\n  // Set `eventQueue` to null before processing it so that we can tell if more\n  // events get enqueued while processing.\n  const processingEventQueue = eventQueue;\n  eventQueue = null;\n\n  if (!processingEventQueue) {\n    return;\n  }\n\n  forEachAccumulated(processingEventQueue, executeDispatchesAndReleaseTopLevel);\n  invariant(\n    !eventQueue,\n    'processEventQueue(): Additional events were enqueued while processing ' +\n      'an event queue. Support for this has not yet been implemented.',\n  );\n  // This would be a good time to rethrow if any of the event handlers threw.\n  rethrowCaughtError();\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {AnyNativeEvent} from './legacy-events/PluginModuleType';\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {LegacyPluginModule} from './legacy-events/PluginModuleType';\nimport type {ReactSyntheticEvent} from './legacy-events/ReactSyntheticEventType';\nimport type {TopLevelType} from './legacy-events/TopLevelEventTypes';\n\nimport {registrationNameModules} from './legacy-events/EventPluginRegistry';\nimport {batchedUpdates} from './legacy-events/ReactGenericBatching';\nimport {runEventsInBatch} from './legacy-events/EventBatching';\nimport {plugins} from './legacy-events/EventPluginRegistry';\nimport getListener from './ReactNativeGetListener';\nimport accumulateInto from './legacy-events/accumulateInto';\n\nimport {getInstanceFromNode} from './ReactNativeComponentTree';\n\nexport {getListener, registrationNameModules as registrationNames};\n\n/**\n * Version of `ReactBrowserEventEmitter` that works on the receiving side of a\n * serialized worker boundary.\n */\n\n// Shared default empty native event - conserve memory.\nconst EMPTY_NATIVE_EVENT = (({}: any): AnyNativeEvent);\n\n/**\n * Selects a subsequence of `Touch`es, without destroying `touches`.\n *\n * @param {Array<Touch>} touches Deserialized touch objects.\n * @param {Array<number>} indices Indices by which to pull subsequence.\n * @return {Array<Touch>} Subsequence of touch objects.\n */\nconst touchSubsequence = function(touches, indices) {\n  const ret = [];\n  for (let i = 0; i < indices.length; i++) {\n    ret.push(touches[indices[i]]);\n  }\n  return ret;\n};\n\n/**\n * TODO: Pool all of this.\n *\n * Destroys `touches` by removing touch objects at indices `indices`. This is\n * to maintain compatibility with W3C touch \"end\" events, where the active\n * touches don't include the set that has just been \"ended\".\n *\n * @param {Array<Touch>} touches Deserialized touch objects.\n * @param {Array<number>} indices Indices to remove from `touches`.\n * @return {Array<Touch>} Subsequence of removed touch objects.\n */\nconst removeTouchesAtIndices = function(\n  touches: Array<Object>,\n  indices: Array<number>,\n): Array<Object> {\n  const rippedOut = [];\n  // use an unsafe downcast to alias to nullable elements,\n  // so we can delete and then compact.\n  const temp: Array<?Object> = (touches: Array<any>);\n  for (let i = 0; i < indices.length; i++) {\n    const index = indices[i];\n    rippedOut.push(touches[index]);\n    temp[index] = null;\n  }\n  let fillAt = 0;\n  for (let j = 0; j < temp.length; j++) {\n    const cur = temp[j];\n    if (cur !== null) {\n      temp[fillAt++] = cur;\n    }\n  }\n  temp.length = fillAt;\n  return rippedOut;\n};\n\n/**\n * Internal version of `receiveEvent` in terms of normalized (non-tag)\n * `rootNodeID`.\n *\n * @see receiveEvent.\n *\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\n * @param {TopLevelType} topLevelType Top level type of event.\n * @param {?object} nativeEventParam Object passed from native.\n */\nfunction _receiveRootNodeIDEvent(\n  rootNodeID: number,\n  topLevelType: TopLevelType,\n  nativeEventParam: ?AnyNativeEvent,\n) {\n  const nativeEvent = nativeEventParam || EMPTY_NATIVE_EVENT;\n  const inst = getInstanceFromNode(rootNodeID);\n\n  let target = null;\n  if (inst != null) {\n    target = inst.stateNode;\n  }\n\n  batchedUpdates(function() {\n    runExtractedPluginEventsInBatch(topLevelType, inst, nativeEvent, target);\n  });\n  // React Native doesn't use ReactControlledComponent but if it did, here's\n  // where it would do it.\n}\n\n/**\n * Allows registered plugins an opportunity to extract events from top-level\n * native browser events.\n *\n * @return {*} An accumulation of synthetic events.\n * @internal\n */\nfunction extractPluginEvents(\n  topLevelType: TopLevelType,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n): Array<ReactSyntheticEvent> | ReactSyntheticEvent | null {\n  let events = null;\n  const legacyPlugins = ((plugins: any): Array<LegacyPluginModule<Event>>);\n  for (let i = 0; i < legacyPlugins.length; i++) {\n    // Not every plugin in the ordering may be loaded at runtime.\n    const possiblePlugin: LegacyPluginModule<AnyNativeEvent> = legacyPlugins[i];\n    if (possiblePlugin) {\n      const extractedEvents = possiblePlugin.extractEvents(\n        topLevelType,\n        targetInst,\n        nativeEvent,\n        nativeEventTarget,\n      );\n      if (extractedEvents) {\n        events = accumulateInto(events, extractedEvents);\n      }\n    }\n  }\n  return events;\n}\n\nfunction runExtractedPluginEventsInBatch(\n  topLevelType: TopLevelType,\n  targetInst: null | Fiber,\n  nativeEvent: AnyNativeEvent,\n  nativeEventTarget: null | EventTarget,\n) {\n  const events = extractPluginEvents(\n    topLevelType,\n    targetInst,\n    nativeEvent,\n    nativeEventTarget,\n  );\n  runEventsInBatch(events);\n}\n\n/**\n * Publicly exposed method on module for native objc to invoke when a top\n * level event is extracted.\n * @param {rootNodeID} rootNodeID React root node ID that event occurred on.\n * @param {TopLevelType} topLevelType Top level type of event.\n * @param {object} nativeEventParam Object passed from native.\n */\nexport function receiveEvent(\n  rootNodeID: number,\n  topLevelType: TopLevelType,\n  nativeEventParam: AnyNativeEvent,\n) {\n  _receiveRootNodeIDEvent(rootNodeID, topLevelType, nativeEventParam);\n}\n\n/**\n * Simple multi-wrapper around `receiveEvent` that is intended to receive an\n * efficient representation of `Touch` objects, and other information that\n * can be used to construct W3C compliant `Event` and `Touch` lists.\n *\n * This may create dispatch behavior that differs than web touch handling. We\n * loop through each of the changed touches and receive it as a single event.\n * So two `touchStart`/`touchMove`s that occur simultaneously are received as\n * two separate touch event dispatches - when they arguably should be one.\n *\n * This implementation reuses the `Touch` objects themselves as the `Event`s\n * since we dispatch an event for each touch (though that might not be spec\n * compliant). The main purpose of reusing them is to save allocations.\n *\n * TODO: Dispatch multiple changed touches in one event. The bubble path\n * could be the first common ancestor of all the `changedTouches`.\n *\n * One difference between this behavior and W3C spec: cancelled touches will\n * not appear in `.touches`, or in any future `.touches`, though they may\n * still be \"actively touching the surface\".\n *\n * Web desktop polyfills only need to construct a fake touch event with\n * identifier 0, also abandoning traditional click handlers.\n */\nexport function receiveTouches(\n  eventTopLevelType: TopLevelType,\n  touches: Array<Object>,\n  changedIndices: Array<number>,\n) {\n  const changedTouches =\n    eventTopLevelType === 'topTouchEnd' ||\n    eventTopLevelType === 'topTouchCancel'\n      ? removeTouchesAtIndices(touches, changedIndices)\n      : touchSubsequence(touches, changedIndices);\n\n  for (let jj = 0; jj < changedTouches.length; jj++) {\n    const touch = changedTouches[jj];\n    // Touch objects can fulfill the role of `DOM` `Event` objects if we set\n    // the `changedTouches`/`touches`. This saves allocations.\n    touch.changedTouches = changedTouches;\n    touch.touches = touches;\n    const nativeEvent = touch;\n    let rootNodeID = null;\n    const target = nativeEvent.target;\n    if (target !== null && target !== undefined) {\n      if (target < 1) {\n        if (__DEV__) {\n          console.error(\n            'A view is reporting that a touch occurred on tag zero.',\n          );\n        }\n      } else {\n        rootNodeID = target;\n      }\n    }\n    // $FlowFixMe Shouldn't we *not* call it if rootNodeID is null?\n    _receiveRootNodeIDEvent(rootNodeID, eventTopLevelType, nativeEvent);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Module provided by RN:\nimport {UIManager} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nconst ReactNativeGlobalResponderHandler = {\n  onChange: function(from: any, to: any, blockNativeResponder: boolean) {\n    if (to !== null) {\n      const tag = to.stateNode._nativeTag;\n      UIManager.setJSResponder(tag, blockNativeResponder);\n    } else {\n      UIManager.clearJSResponder();\n    }\n  },\n};\n\nexport default ReactNativeGlobalResponderHandler;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport './ReactNativeInjectionShared';\n\nimport {\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n} from './ReactNativeComponentTree';\nimport {setComponentTree} from './legacy-events/EventPluginUtils';\nimport {receiveEvent, receiveTouches} from './ReactNativeEventEmitter';\nimport ReactNativeGlobalResponderHandler from './ReactNativeGlobalResponderHandler';\nimport ResponderEventPlugin from './legacy-events/ResponderEventPlugin';\n\n// Module provided by RN:\nimport {RCTEventEmitter} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\n/**\n * Register the event emitter with the native bridge\n */\nRCTEventEmitter.register({\n  receiveEvent,\n  receiveTouches,\n});\n\nsetComponentTree(\n  getFiberCurrentPropsFromNode,\n  getInstanceFromNode,\n  getNodeFromInstance,\n);\n\nResponderEventPlugin.injection.injectGlobalResponderHandler(\n  ReactNativeGlobalResponderHandler,\n);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n/**\n * `ReactInstanceMap` maintains a mapping from a public facing stateful\n * instance (key) and the internal representation (value). This allows public\n * methods to accept the user facing instance as an argument and map them back\n * to internal methods.\n *\n * Note that this module is currently shared and assumed to be stateless.\n * If this becomes an actual Map, that will break.\n */\n\n/**\n * This API should be called `delete` but we'd have to make sure to always\n * transform these to strings for IE support. When this transform is fully\n * supported we can rename it.\n */\nexport function remove(key) {\n  key._reactInternals = undefined;\n}\n\nexport function get(key) {\n  return key._reactInternals;\n}\n\nexport function has(key) {\n  return key._reactInternals !== undefined;\n}\n\nexport function set(key, value) {\n  key._reactInternals = value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// ATTENTION\n// When adding new symbols to this file,\n// Please consider also adding to 'react-devtools-shared/src/backend/ReactSymbols'\n\n// The Symbol used to tag the ReactElement-like types. If there is no native Symbol\n// nor polyfill, then a plain number is used for performance.\nexport let REACT_ELEMENT_TYPE = 0xeac7;\nexport let REACT_PORTAL_TYPE = 0xeaca;\nexport let REACT_FRAGMENT_TYPE = 0xeacb;\nexport let REACT_STRICT_MODE_TYPE = 0xeacc;\nexport let REACT_PROFILER_TYPE = 0xead2;\nexport let REACT_PROVIDER_TYPE = 0xeacd;\nexport let REACT_CONTEXT_TYPE = 0xeace;\nexport let REACT_FORWARD_REF_TYPE = 0xead0;\nexport let REACT_SUSPENSE_TYPE = 0xead1;\nexport let REACT_SUSPENSE_LIST_TYPE = 0xead8;\nexport let REACT_MEMO_TYPE = 0xead3;\nexport let REACT_LAZY_TYPE = 0xead4;\nexport let REACT_SCOPE_TYPE = 0xead7;\nexport let REACT_OPAQUE_ID_TYPE = 0xeae0;\nexport let REACT_DEBUG_TRACING_MODE_TYPE = 0xeae1;\nexport let REACT_OFFSCREEN_TYPE = 0xeae2;\nexport let REACT_LEGACY_HIDDEN_TYPE = 0xeae3;\nexport let REACT_CACHE_TYPE = 0xeae4;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  REACT_ELEMENT_TYPE = symbolFor('react.element');\n  REACT_PORTAL_TYPE = symbolFor('react.portal');\n  REACT_FRAGMENT_TYPE = symbolFor('react.fragment');\n  REACT_STRICT_MODE_TYPE = symbolFor('react.strict_mode');\n  REACT_PROFILER_TYPE = symbolFor('react.profiler');\n  REACT_PROVIDER_TYPE = symbolFor('react.provider');\n  REACT_CONTEXT_TYPE = symbolFor('react.context');\n  REACT_FORWARD_REF_TYPE = symbolFor('react.forward_ref');\n  REACT_SUSPENSE_TYPE = symbolFor('react.suspense');\n  REACT_SUSPENSE_LIST_TYPE = symbolFor('react.suspense_list');\n  REACT_MEMO_TYPE = symbolFor('react.memo');\n  REACT_LAZY_TYPE = symbolFor('react.lazy');\n  REACT_SCOPE_TYPE = symbolFor('react.scope');\n  REACT_OPAQUE_ID_TYPE = symbolFor('react.opaque.id');\n  REACT_DEBUG_TRACING_MODE_TYPE = symbolFor('react.debug_trace_mode');\n  REACT_OFFSCREEN_TYPE = symbolFor('react.offscreen');\n  REACT_LEGACY_HIDDEN_TYPE = symbolFor('react.legacy_hidden');\n  REACT_CACHE_TYPE = symbolFor('react.cache');\n}\n\nconst MAYBE_ITERATOR_SYMBOL = typeof Symbol === 'function' && Symbol.iterator;\nconst FAUX_ITERATOR_SYMBOL = '@@iterator';\n\nexport function getIteratorFn(maybeIterable: ?any): ?() => ?Iterator<*> {\n  if (maybeIterable === null || typeof maybeIterable !== 'object') {\n    return null;\n  }\n  const maybeIterator =\n    (MAYBE_ITERATOR_SYMBOL && maybeIterable[MAYBE_ITERATOR_SYMBOL]) ||\n    maybeIterable[FAUX_ITERATOR_SYMBOL];\n  if (typeof maybeIterator === 'function') {\n    return maybeIterator;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {LazyComponent} from 'react/src/ReactLazy';\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {\n  REACT_CONTEXT_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_CACHE_TYPE,\n} from 'shared/ReactSymbols';\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const displayName = (outerType: any).displayName;\n  if (displayName) {\n    return displayName;\n  }\n  const functionName = innerType.displayName || innerType.name || '';\n  return functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName;\n}\n\n// Keep in sync with react-reconciler/getComponentNameFromFiber\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\n// Note that the reconciler package should generally prefer to use getComponentNameFromFiber() instead.\nexport default function getComponentNameFromType(type: mixed): string | null {\n  if (type == null) {\n    // Host root, text node or just invalid type.\n    return null;\n  }\n  if (__DEV__) {\n    if (typeof (type: any).tag === 'number') {\n      console.error(\n        'Received an unexpected object in getComponentNameFromType(). ' +\n          'This is likely a bug in React. Please file an issue.',\n      );\n    }\n  }\n  if (typeof type === 'function') {\n    return (type: any).displayName || type.name || null;\n  }\n  if (typeof type === 'string') {\n    return type;\n  }\n  switch (type) {\n    case REACT_FRAGMENT_TYPE:\n      return 'Fragment';\n    case REACT_PORTAL_TYPE:\n      return 'Portal';\n    case REACT_PROFILER_TYPE:\n      return 'Profiler';\n    case REACT_STRICT_MODE_TYPE:\n      return 'StrictMode';\n    case REACT_SUSPENSE_TYPE:\n      return 'Suspense';\n    case REACT_SUSPENSE_LIST_TYPE:\n      return 'SuspenseList';\n    case REACT_CACHE_TYPE:\n      return 'Cache';\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_CONTEXT_TYPE:\n        const context: ReactContext<any> = (type: any);\n        return getContextName(context) + '.Consumer';\n      case REACT_PROVIDER_TYPE:\n        const provider: ReactProviderType<any> = (type: any);\n        return getContextName(provider._context) + '.Provider';\n      case REACT_FORWARD_REF_TYPE:\n        return getWrappedName(type, type.render, 'ForwardRef');\n      case REACT_MEMO_TYPE:\n        const outerName = (type: any).displayName || null;\n        if (outerName !== null) {\n          return outerName;\n        }\n        return getComponentNameFromType(type.type) || 'Memo';\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          return getComponentNameFromType(init(payload));\n        } catch (x) {\n          return null;\n        }\n      }\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\n\nimport {\n  FunctionComponent,\n  ClassComponent,\n  IndeterminateComponent,\n  HostRoot,\n  HostPortal,\n  HostComponent,\n  HostText,\n  Fragment,\n  Mode,\n  ContextConsumer,\n  ContextProvider,\n  ForwardRef,\n  Profiler,\n  SuspenseComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  DehydratedFragment,\n  SuspenseListComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {REACT_STRICT_MODE_TYPE} from 'shared/ReactSymbols';\n\n// Keep in sync with shared/getComponentNameFromType\nfunction getWrappedName(\n  outerType: mixed,\n  innerType: any,\n  wrapperName: string,\n): string {\n  const functionName = innerType.displayName || innerType.name || '';\n  return (\n    (outerType: any).displayName ||\n    (functionName !== '' ? `${wrapperName}(${functionName})` : wrapperName)\n  );\n}\n\n// Keep in sync with shared/getComponentNameFromType\nfunction getContextName(type: ReactContext<any>) {\n  return type.displayName || 'Context';\n}\n\nexport default function getComponentNameFromFiber(fiber: Fiber): string | null {\n  const {tag, type} = fiber;\n  switch (tag) {\n    case CacheComponent:\n      return 'Cache';\n    case ContextConsumer:\n      const context: ReactContext<any> = (type: any);\n      return getContextName(context) + '.Consumer';\n    case ContextProvider:\n      const provider: ReactProviderType<any> = (type: any);\n      return getContextName(provider._context) + '.Provider';\n    case DehydratedFragment:\n      return 'DehydratedFragment';\n    case ForwardRef:\n      return getWrappedName(type, type.render, 'ForwardRef');\n    case Fragment:\n      return 'Fragment';\n    case HostComponent:\n      // Host component type is the display name (e.g. \"div\", \"View\")\n      return type;\n    case HostPortal:\n      return 'Portal';\n    case HostRoot:\n      return 'Root';\n    case HostText:\n      return 'Text';\n    case LazyComponent:\n      // Name comes from the type in this case; we don't have a tag.\n      return getComponentNameFromType(type);\n    case LegacyHiddenComponent:\n      return 'LegacyHidden';\n    case Mode:\n      if (type === REACT_STRICT_MODE_TYPE) {\n        // Don't be less specific than shared/getComponentNameFromType\n        return 'StrictMode';\n      }\n      return 'Mode';\n    case OffscreenComponent:\n      return 'Offscreen';\n    case Profiler:\n      return 'Profiler';\n    case ScopeComponent:\n      return 'Scope';\n    case SuspenseComponent:\n      return 'Suspense';\n    case SuspenseListComponent:\n      return 'SuspenseList';\n\n    // The display name for this tags come from the user-provided type:\n    case ClassComponent:\n    case FunctionComponent:\n    case IncompleteClassComponent:\n    case IndeterminateComponent:\n    case MemoComponent:\n    case SimpleMemoComponent:\n      if (typeof type === 'function') {\n        return (type: any).displayName || type.name || null;\n      }\n      if (typeof type === 'string') {\n        return type;\n      }\n      break;\n  }\n\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport typeof * as FeatureFlagsType from 'shared/ReactFeatureFlags';\nimport typeof * as ExportsType from './ReactFeatureFlags.native-oss';\n\nexport const debugRenderPhaseSideEffectsForStrictMode = false;\nexport const enableDebugTracing = false;\nexport const enableSchedulingProfiler = false;\nexport const replayFailedUnitOfWorkWithInvokeGuardedCallback = __DEV__;\nexport const warnAboutDeprecatedLifecycles = true;\nexport const enableProfilerTimer = __PROFILE__;\nexport const enableProfilerCommitHooks = __PROFILE__;\nexport const enableProfilerNestedUpdatePhase = __PROFILE__;\nexport const enableProfilerNestedUpdateScheduledHook = false;\nexport const enableUpdaterTracking = __PROFILE__;\nexport const enableSuspenseServerRenderer = false;\nexport const enableSelectiveHydration = false;\nexport const enableLazyElements = false;\nexport const enableCache = false;\nexport const disableJavaScriptURLs = false;\nexport const disableInputAttributeSyncing = false;\nexport const enableSchedulerDebugging = false;\nexport const enableScopeAPI = false;\nexport const enableCreateEventHandleAPI = false;\nexport const enableSuspenseCallback = false;\nexport const warnAboutDefaultPropsOnFunctionComponents = false;\nexport const warnAboutStringRefs = false;\nexport const disableLegacyContext = false;\nexport const disableSchedulerTimeoutBasedOnReactExpirationTime = false;\nexport const enableTrustedTypesIntegration = false;\nexport const disableTextareaChildren = false;\nexport const disableModulePatternComponents = false;\nexport const warnUnstableRenderSubtreeIntoContainer = false;\nexport const warnAboutSpreadingKeyToJSX = false;\nexport const warnOnSubscriptionInsideStartTransition = false;\nexport const enableComponentStackLocations = false;\nexport const enableLegacyFBSupport = false;\nexport const enableFilterEmptyStringAttributesDOM = false;\nexport const disableNativeComponentFrames = false;\nexport const skipUnmountedBoundaries = false;\nexport const deletedTreeCleanUpLevel = 3;\nexport const enableSuspenseLayoutEffectSemantics = false;\nexport const enableGetInspectorDataForInstanceInProduction = false;\nexport const enableNewReconciler = false;\nexport const deferRenderPhaseUpdateToNextBatch = false;\n\nexport const enableStrictEffects = false;\nexport const createRootStrictEffectsByDefault = false;\nexport const enableUseRefAccessWarning = false;\n\nexport const enableRecursiveCommitTraversal = false;\nexport const disableSchedulerTimeoutInWorkLoop = false;\nexport const enableLazyContextPropagation = false;\nexport const enableSyncDefaultUpdates = true;\nexport const allowConcurrentByDefault = false;\nexport const enablePersistentOffscreenHostContainer = false;\n\nexport const consoleManagedByDevToolsDuringStrictMode = false;\n\n// Flow magic to verify the exports of this file match the original version.\n// eslint-disable-next-line no-unused-vars\ntype Check<_X, Y: _X, X: Y = _X> = null;\n// eslint-disable-next-line no-unused-expressions\n(null: Check<ExportsType, FeatureFlagsType>);\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableCreateEventHandleAPI} from 'shared/ReactFeatureFlags';\n\nexport type Flags = number;\n\n// Don't change these two values. They're used by React Dev Tools.\nexport const NoFlags = /*                      */ 0b00000000000000000000000;\nexport const PerformedWork = /*                */ 0b00000000000000000000001;\n\n// You can change the rest (and add more).\nexport const Placement = /*                    */ 0b00000000000000000000010;\nexport const Update = /*                       */ 0b00000000000000000000100;\nexport const PlacementAndUpdate = /*           */ Placement | Update;\nexport const Deletion = /*                     */ 0b00000000000000000001000;\nexport const ChildDeletion = /*                */ 0b00000000000000000010000;\nexport const ContentReset = /*                 */ 0b00000000000000000100000;\nexport const Callback = /*                     */ 0b00000000000000001000000;\nexport const DidCapture = /*                   */ 0b00000000000000010000000;\nexport const Ref = /*                          */ 0b00000000000000100000000;\nexport const Snapshot = /*                     */ 0b00000000000001000000000;\nexport const Passive = /*                      */ 0b00000000000010000000000;\nexport const Hydrating = /*                    */ 0b00000000000100000000000;\nexport const HydratingAndUpdate = /*           */ Hydrating | Update;\nexport const Visibility = /*                   */ 0b00000000001000000000000;\n\nexport const LifecycleEffectMask = Passive | Update | Callback | Ref | Snapshot;\n\n// Union of all commit flags (flags with the lifetime of a particular commit)\nexport const HostEffectMask = /*               */ 0b00000000001111111111111;\n\n// These are not really side effects, but we still reuse this field.\nexport const Incomplete = /*                   */ 0b00000000010000000000000;\nexport const ShouldCapture = /*                */ 0b00000000100000000000000;\nexport const ForceUpdateForLegacySuspense = /* */ 0b00000001000000000000000;\nexport const DidPropagateContext = /*          */ 0b00000010000000000000000;\nexport const NeedsPropagation = /*             */ 0b00000100000000000000000;\n\n// Static tags describe aspects of a fiber that are not specific to a render,\n// e.g. a fiber uses a passive effect (even if there are no updates on this particular render).\n// This enables us to defer more work in the unmount case,\n// since we can defer traversing the tree during layout to look for Passive effects,\n// and instead rely on the static flag as a signal that there may be cleanup work.\nexport const RefStatic = /*                    */ 0b00001000000000000000000;\nexport const LayoutStatic = /*                 */ 0b00010000000000000000000;\nexport const PassiveStatic = /*                */ 0b00100000000000000000000;\n\n// These flags allow us to traverse to fibers that have effects on mount\n// without traversing the entire tree after every commit for\n// double invoking\nexport const MountLayoutDev = /*               */ 0b01000000000000000000000;\nexport const MountPassiveDev = /*              */ 0b10000000000000000000000;\n\n// Groups of flags that are used in the commit phase to skip over trees that\n// don't contain effects, by checking subtreeFlags.\n\nexport const BeforeMutationMask =\n  // TODO: Remove Update flag from before mutation phase by re-landing Visibility\n  // flag logic (see #20043)\n  Update |\n  Snapshot |\n  (enableCreateEventHandleAPI\n    ? // createEventHandle needs to visit deleted and hidden trees to\n      // fire beforeblur\n      // TODO: Only need to visit Deletions during BeforeMutation phase if an\n      // element is focused.\n      ChildDeletion | Visibility\n    : 0);\n\nexport const MutationMask =\n  Placement |\n  Update |\n  ChildDeletion |\n  ContentReset |\n  Ref |\n  Hydrating |\n  Visibility;\nexport const LayoutMask = Update | Callback | Ref | Visibility;\n\n// TODO: Split into PassiveMountMask and PassiveUnmountMask\nexport const PassiveMask = Passive | ChildDeletion;\n\n// Union of tags that don't get reset on clones.\n// This allows certain concepts to persist without recalculating them,\n// e.g. whether a subtree contains passive effects or portals.\nexport const StaticMask = LayoutStatic | PassiveStatic | RefStatic;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Container, SuspenseInstance} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport invariant from 'shared/invariant';\n\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostComponent,\n  HostRoot,\n  HostPortal,\n  HostText,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {NoFlags, Placement, Hydrating} from './ReactFiberFlags';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nexport function getNearestMountedFiber(fiber: Fiber): null | Fiber {\n  let node = fiber;\n  let nearestMounted = fiber;\n  if (!fiber.alternate) {\n    // If there is no alternate, this might be a new tree that isn't inserted\n    // yet. If it is, then it will have a pending insertion effect on it.\n    let nextNode = node;\n    do {\n      node = nextNode;\n      if ((node.flags & (Placement | Hydrating)) !== NoFlags) {\n        // This is an insertion or in-progress hydration. The nearest possible\n        // mounted fiber is the parent but we need to continue to figure out\n        // if that one is still mounted.\n        nearestMounted = node.return;\n      }\n      nextNode = node.return;\n    } while (nextNode);\n  } else {\n    while (node.return) {\n      node = node.return;\n    }\n  }\n  if (node.tag === HostRoot) {\n    // TODO: Check if this was a nested HostRoot when used with\n    // renderContainerIntoSubtree.\n    return nearestMounted;\n  }\n  // If we didn't hit the root, that means that we're in an disconnected tree\n  // that has been unmounted.\n  return null;\n}\n\nexport function getSuspenseInstanceFromFiber(\n  fiber: Fiber,\n): null | SuspenseInstance {\n  if (fiber.tag === SuspenseComponent) {\n    let suspenseState: SuspenseState | null = fiber.memoizedState;\n    if (suspenseState === null) {\n      const current = fiber.alternate;\n      if (current !== null) {\n        suspenseState = current.memoizedState;\n      }\n    }\n    if (suspenseState !== null) {\n      return suspenseState.dehydrated;\n    }\n  }\n  return null;\n}\n\nexport function getContainerFromFiber(fiber: Fiber): null | Container {\n  return fiber.tag === HostRoot\n    ? (fiber.stateNode.containerInfo: Container)\n    : null;\n}\n\nexport function isFiberMounted(fiber: Fiber): boolean {\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nexport function isMounted(component: React$Component<any, any>): boolean {\n  if (__DEV__) {\n    const owner = (ReactCurrentOwner.current: any);\n    if (owner !== null && owner.tag === ClassComponent) {\n      const ownerFiber: Fiber = owner;\n      const instance = ownerFiber.stateNode;\n      if (!instance._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing isMounted inside its render() function. ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentNameFromFiber(ownerFiber) || 'A component',\n        );\n      }\n      instance._warnedAboutRefsInRender = true;\n    }\n  }\n\n  const fiber: ?Fiber = getInstance(component);\n  if (!fiber) {\n    return false;\n  }\n  return getNearestMountedFiber(fiber) === fiber;\n}\n\nfunction assertIsMounted(fiber) {\n  invariant(\n    getNearestMountedFiber(fiber) === fiber,\n    'Unable to find node on an unmounted component.',\n  );\n}\n\nexport function findCurrentFiberUsingSlowPath(fiber: Fiber): Fiber | null {\n  const alternate = fiber.alternate;\n  if (!alternate) {\n    // If there is no alternate, then we only need to check if it is mounted.\n    const nearestMounted = getNearestMountedFiber(fiber);\n    invariant(\n      nearestMounted !== null,\n      'Unable to find node on an unmounted component.',\n    );\n    if (nearestMounted !== fiber) {\n      return null;\n    }\n    return fiber;\n  }\n  // If we have two possible branches, we'll walk backwards up to the root\n  // to see what path the root points to. On the way we may hit one of the\n  // special cases and we'll deal with them.\n  let a: Fiber = fiber;\n  let b: Fiber = alternate;\n  while (true) {\n    const parentA = a.return;\n    if (parentA === null) {\n      // We're at the root.\n      break;\n    }\n    const parentB = parentA.alternate;\n    if (parentB === null) {\n      // There is no alternate. This is an unusual case. Currently, it only\n      // happens when a Suspense component is hidden. An extra fragment fiber\n      // is inserted in between the Suspense fiber and its children. Skip\n      // over this extra fragment fiber and proceed to the next parent.\n      const nextParent = parentA.return;\n      if (nextParent !== null) {\n        a = b = nextParent;\n        continue;\n      }\n      // If there's no parent, we're at the root.\n      break;\n    }\n\n    // If both copies of the parent fiber point to the same child, we can\n    // assume that the child is current. This happens when we bailout on low\n    // priority: the bailed out fiber's child reuses the current child.\n    if (parentA.child === parentB.child) {\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          // We've determined that A is the current branch.\n          assertIsMounted(parentA);\n          return fiber;\n        }\n        if (child === b) {\n          // We've determined that B is the current branch.\n          assertIsMounted(parentA);\n          return alternate;\n        }\n        child = child.sibling;\n      }\n      // We should never have an alternate for any mounting node. So the only\n      // way this could possibly happen is if this was unmounted, if at all.\n      invariant(false, 'Unable to find node on an unmounted component.');\n    }\n\n    if (a.return !== b.return) {\n      // The return pointer of A and the return pointer of B point to different\n      // fibers. We assume that return pointers never criss-cross, so A must\n      // belong to the child set of A.return, and B must belong to the child\n      // set of B.return.\n      a = parentA;\n      b = parentB;\n    } else {\n      // The return pointers point to the same fiber. We'll have to use the\n      // default, slow path: scan the child sets of each parent alternate to see\n      // which child belongs to which set.\n      //\n      // Search parent A's child set\n      let didFindChild = false;\n      let child = parentA.child;\n      while (child) {\n        if (child === a) {\n          didFindChild = true;\n          a = parentA;\n          b = parentB;\n          break;\n        }\n        if (child === b) {\n          didFindChild = true;\n          b = parentA;\n          a = parentB;\n          break;\n        }\n        child = child.sibling;\n      }\n      if (!didFindChild) {\n        // Search parent B's child set\n        child = parentB.child;\n        while (child) {\n          if (child === a) {\n            didFindChild = true;\n            a = parentB;\n            b = parentA;\n            break;\n          }\n          if (child === b) {\n            didFindChild = true;\n            b = parentB;\n            a = parentA;\n            break;\n          }\n          child = child.sibling;\n        }\n        invariant(\n          didFindChild,\n          'Child was not found in either parent set. This indicates a bug ' +\n            'in React related to the return pointer. Please file an issue.',\n        );\n      }\n    }\n\n    invariant(\n      a.alternate === b,\n      \"Return fibers should always be each others' alternates. \" +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  // If the root is not a host container, we're in a disconnected tree. I.e.\n  // unmounted.\n  invariant(\n    a.tag === HostRoot,\n    'Unable to find node on an unmounted component.',\n  );\n  if (a.stateNode.current === a) {\n    // We've determined that A is the current branch.\n    return fiber;\n  }\n  // Otherwise B has to be current branch.\n  return alternate;\n}\n\nexport function findCurrentHostFiber(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    const match = findCurrentHostFiberImpl(child);\n    if (match !== null) {\n      return match;\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function findCurrentHostFiberWithNoPortals(parent: Fiber): Fiber | null {\n  const currentParent = findCurrentFiberUsingSlowPath(parent);\n  return currentParent !== null\n    ? findCurrentHostFiberWithNoPortalsImpl(currentParent)\n    : null;\n}\n\nfunction findCurrentHostFiberWithNoPortalsImpl(node: Fiber) {\n  // Next we'll drill down this component to find the first HostComponent/Text.\n  if (node.tag === HostComponent || node.tag === HostText) {\n    return node;\n  }\n\n  let child = node.child;\n  while (child !== null) {\n    if (child.tag !== HostPortal) {\n      const match = findCurrentHostFiberWithNoPortalsImpl(child);\n      if (match !== null) {\n        return match;\n      }\n    }\n    child = child.sibling;\n  }\n\n  return null;\n}\n\nexport function isFiberSuspenseAndTimedOut(fiber: Fiber): boolean {\n  const memoizedState = fiber.memoizedState;\n  return (\n    fiber.tag === SuspenseComponent &&\n    memoizedState !== null &&\n    memoizedState.dehydrated === null\n  );\n}\n\nexport function doesFiberContain(\n  parentFiber: Fiber,\n  childFiber: Fiber,\n): boolean {\n  let node = childFiber;\n  const parentFiberAlternate = parentFiber.alternate;\n  while (node !== null) {\n    if (node === parentFiber || node === parentFiberAlternate) {\n      return true;\n    }\n    node = node.return;\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// Modules provided by RN:\nimport {\n  deepDiffer,\n  flattenStyle,\n} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport isArray from 'shared/isArray';\n\nimport type {AttributeConfiguration} from './ReactNativeTypes';\n\nconst emptyObject = {};\n\n/**\n * Create a payload that contains all the updates between two sets of props.\n *\n * These helpers are all encapsulated into a single module, because they use\n * mutation as a performance optimization which leads to subtle shared\n * dependencies between the code paths. To avoid this mutable state leaking\n * across modules, I've kept them isolated to this module.\n */\n\ntype NestedNode = Array<NestedNode> | Object;\n\n// Tracks removed keys\nlet removedKeys = null;\nlet removedKeyCount = 0;\n\nconst deepDifferOptions = {\n  unsafelyIgnoreFunctions: true,\n};\n\nfunction defaultDiffer(prevProp: mixed, nextProp: mixed): boolean {\n  if (typeof nextProp !== 'object' || nextProp === null) {\n    // Scalars have already been checked for equality\n    return true;\n  } else {\n    // For objects and arrays, the default diffing algorithm is a deep compare\n    return deepDiffer(prevProp, nextProp, deepDifferOptions);\n  }\n}\n\nfunction restoreDeletedValuesInNestedArray(\n  updatePayload: Object,\n  node: NestedNode,\n  validAttributes: AttributeConfiguration,\n) {\n  if (isArray(node)) {\n    let i = node.length;\n    while (i-- && removedKeyCount > 0) {\n      restoreDeletedValuesInNestedArray(\n        updatePayload,\n        node[i],\n        validAttributes,\n      );\n    }\n  } else if (node && removedKeyCount > 0) {\n    const obj = node;\n    for (const propKey in removedKeys) {\n      if (!removedKeys[propKey]) {\n        continue;\n      }\n      let nextProp = obj[propKey];\n      if (nextProp === undefined) {\n        continue;\n      }\n\n      const attributeConfig = validAttributes[propKey];\n      if (!attributeConfig) {\n        continue; // not a valid native prop\n      }\n\n      if (typeof nextProp === 'function') {\n        nextProp = true;\n      }\n      if (typeof nextProp === 'undefined') {\n        nextProp = null;\n      }\n\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      removedKeys[propKey] = false;\n      removedKeyCount--;\n    }\n  }\n}\n\nfunction diffNestedArrayProperty(\n  updatePayload: null | Object,\n  prevArray: Array<NestedNode>,\n  nextArray: Array<NestedNode>,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  const minLength =\n    prevArray.length < nextArray.length ? prevArray.length : nextArray.length;\n  let i;\n  for (i = 0; i < minLength; i++) {\n    // Diff any items in the array in the forward direction. Repeated keys\n    // will be overwritten by later values.\n    updatePayload = diffNestedProperty(\n      updatePayload,\n      prevArray[i],\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < prevArray.length; i++) {\n    // Clear out all remaining properties.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevArray[i],\n      validAttributes,\n    );\n  }\n  for (; i < nextArray.length; i++) {\n    // Add all remaining properties.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextArray[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\nfunction diffNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  if (!updatePayload && prevProp === nextProp) {\n    // If no properties have been added, then we can bail out quickly on object\n    // equality.\n    return updatePayload;\n  }\n\n  if (!prevProp || !nextProp) {\n    if (nextProp) {\n      return addNestedProperty(updatePayload, nextProp, validAttributes);\n    }\n    if (prevProp) {\n      return clearNestedProperty(updatePayload, prevProp, validAttributes);\n    }\n    return updatePayload;\n  }\n\n  if (!isArray(prevProp) && !isArray(nextProp)) {\n    // Both are leaves, we can diff the leaves.\n    return diffProperties(updatePayload, prevProp, nextProp, validAttributes);\n  }\n\n  if (isArray(prevProp) && isArray(nextProp)) {\n    // Both are arrays, we can diff the arrays.\n    return diffNestedArrayProperty(\n      updatePayload,\n      prevProp,\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  if (isArray(prevProp)) {\n    return diffProperties(\n      updatePayload,\n      // $FlowFixMe - We know that this is always an object when the input is.\n      flattenStyle(prevProp),\n      // $FlowFixMe - We know that this isn't an array because of above flow.\n      nextProp,\n      validAttributes,\n    );\n  }\n\n  return diffProperties(\n    updatePayload,\n    prevProp,\n    // $FlowFixMe - We know that this is always an object when the input is.\n    flattenStyle(nextProp),\n    validAttributes,\n  );\n}\n\n/**\n * addNestedProperty takes a single set of props and valid attribute\n * attribute configurations. It processes each prop and adds it to the\n * updatePayload.\n */\nfunction addNestedProperty(\n  updatePayload: null | Object,\n  nextProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n) {\n  if (!nextProp) {\n    return updatePayload;\n  }\n\n  if (!isArray(nextProp)) {\n    // Add each property of the leaf.\n    return addProperties(updatePayload, nextProp, validAttributes);\n  }\n\n  for (let i = 0; i < nextProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = addNestedProperty(\n      updatePayload,\n      nextProp[i],\n      validAttributes,\n    );\n  }\n\n  return updatePayload;\n}\n\n/**\n * clearNestedProperty takes a single set of props and valid attributes. It\n * adds a null sentinel to the updatePayload, for each prop key.\n */\nfunction clearNestedProperty(\n  updatePayload: null | Object,\n  prevProp: NestedNode,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  if (!prevProp) {\n    return updatePayload;\n  }\n\n  if (!isArray(prevProp)) {\n    // Add each property of the leaf.\n    return clearProperties(updatePayload, prevProp, validAttributes);\n  }\n\n  for (let i = 0; i < prevProp.length; i++) {\n    // Add all the properties of the array.\n    updatePayload = clearNestedProperty(\n      updatePayload,\n      prevProp[i],\n      validAttributes,\n    );\n  }\n  return updatePayload;\n}\n\n/**\n * diffProperties takes two sets of props and a set of valid attributes\n * and write to updatePayload the values that changed or were deleted.\n * If no updatePayload is provided, a new one is created and returned if\n * anything changed.\n */\nfunction diffProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  let attributeConfig;\n  let nextProp;\n  let prevProp;\n\n  for (const propKey in nextProps) {\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    prevProp = prevProps[propKey];\n    nextProp = nextProps[propKey];\n\n    // functions are converted to booleans as markers that the associated\n    // events should be sent from native.\n    if (typeof nextProp === 'function') {\n      nextProp = (true: any);\n      // If nextProp is not a function, then don't bother changing prevProp\n      // since nextProp will win and go into the updatePayload regardless.\n      if (typeof prevProp === 'function') {\n        prevProp = (true: any);\n      }\n    }\n\n    // An explicit value of undefined is treated as a null because it overrides\n    // any other preceding value.\n    if (typeof nextProp === 'undefined') {\n      nextProp = (null: any);\n      if (typeof prevProp === 'undefined') {\n        prevProp = (null: any);\n      }\n    }\n\n    if (removedKeys) {\n      removedKeys[propKey] = false;\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // Something else already triggered an update to this key because another\n      // value diffed. Since we're now later in the nested arrays our value is\n      // more important so we need to calculate it and override the existing\n      // value. It doesn't matter if nothing changed, we'll set it anyway.\n\n      // Pattern match on: attributeConfig\n      if (typeof attributeConfig !== 'object') {\n        // case: !Object is the default case\n        updatePayload[propKey] = nextProp;\n      } else if (\n        typeof attributeConfig.diff === 'function' ||\n        typeof attributeConfig.process === 'function'\n      ) {\n        // case: CustomAttributeConfiguration\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        updatePayload[propKey] = nextValue;\n      }\n      continue;\n    }\n\n    if (prevProp === nextProp) {\n      continue; // nothing changed\n    }\n\n    // Pattern match on: attributeConfig\n    if (typeof attributeConfig !== 'object') {\n      // case: !Object is the default case\n      if (defaultDiffer(prevProp, nextProp)) {\n        // a normal leaf has changed\n        (updatePayload || (updatePayload = {}))[propKey] = nextProp;\n      }\n    } else if (\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration\n      const shouldUpdate =\n        prevProp === undefined ||\n        (typeof attributeConfig.diff === 'function'\n          ? attributeConfig.diff(prevProp, nextProp)\n          : defaultDiffer(prevProp, nextProp));\n      if (shouldUpdate) {\n        const nextValue =\n          typeof attributeConfig.process === 'function'\n            ? attributeConfig.process(nextProp)\n            : nextProp;\n        (updatePayload || (updatePayload = {}))[propKey] = nextValue;\n      }\n    } else {\n      // default: fallthrough case when nested properties are defined\n      removedKeys = null;\n      removedKeyCount = 0;\n      // We think that attributeConfig is not CustomAttributeConfiguration at\n      // this point so we assume it must be AttributeConfiguration.\n      updatePayload = diffNestedProperty(\n        updatePayload,\n        prevProp,\n        nextProp,\n        ((attributeConfig: any): AttributeConfiguration),\n      );\n      if (removedKeyCount > 0 && updatePayload) {\n        restoreDeletedValuesInNestedArray(\n          updatePayload,\n          nextProp,\n          ((attributeConfig: any): AttributeConfiguration),\n        );\n        removedKeys = null;\n      }\n    }\n  }\n\n  // Also iterate through all the previous props to catch any that have been\n  // removed and make sure native gets the signal so it can reset them to the\n  // default.\n  for (const propKey in prevProps) {\n    if (nextProps[propKey] !== undefined) {\n      continue; // we've already covered this key in the previous pass\n    }\n    attributeConfig = validAttributes[propKey];\n    if (!attributeConfig) {\n      continue; // not a valid native prop\n    }\n\n    if (updatePayload && updatePayload[propKey] !== undefined) {\n      // This was already updated to a diff result earlier.\n      continue;\n    }\n\n    prevProp = prevProps[propKey];\n    if (prevProp === undefined) {\n      continue; // was already empty anyway\n    }\n    // Pattern match on: attributeConfig\n    if (\n      typeof attributeConfig !== 'object' ||\n      typeof attributeConfig.diff === 'function' ||\n      typeof attributeConfig.process === 'function'\n    ) {\n      // case: CustomAttributeConfiguration | !Object\n      // Flag the leaf property for removal by sending a sentinel.\n      (updatePayload || (updatePayload = {}))[propKey] = null;\n      if (!removedKeys) {\n        removedKeys = {};\n      }\n      if (!removedKeys[propKey]) {\n        removedKeys[propKey] = true;\n        removedKeyCount++;\n      }\n    } else {\n      // default:\n      // This is a nested attribute configuration where all the properties\n      // were removed so we need to go through and clear out all of them.\n      updatePayload = clearNestedProperty(\n        updatePayload,\n        prevProp,\n        ((attributeConfig: any): AttributeConfiguration),\n      );\n    }\n  }\n  return updatePayload;\n}\n\n/**\n * addProperties adds all the valid props to the payload after being processed.\n */\nfunction addProperties(\n  updatePayload: null | Object,\n  props: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, emptyObject, props, validAttributes);\n}\n\n/**\n * clearProperties clears all the previous props by adding a null sentinel\n * to the payload for each valid key.\n */\nfunction clearProperties(\n  updatePayload: null | Object,\n  prevProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  // TODO: Fast path\n  return diffProperties(updatePayload, prevProps, emptyObject, validAttributes);\n}\n\nexport function create(\n  props: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  return addProperties(\n    null, // updatePayload\n    props,\n    validAttributes,\n  );\n}\n\nexport function diff(\n  prevProps: Object,\n  nextProps: Object,\n  validAttributes: AttributeConfiguration,\n): null | Object {\n  return diffProperties(\n    null, // updatePayload\n    prevProps,\n    nextProps,\n    validAttributes,\n  );\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * In the future, we should cleanup callbacks by cancelling them instead of\n * using this.\n */\nexport function mountSafeCallback_NOT_REALLY_SAFE(\n  context: any,\n  callback: ?Function,\n): any {\n  return function() {\n    if (!callback) {\n      return undefined;\n    }\n    // This protects against createClass() components.\n    // We don't know if there is code depending on it.\n    // We intentionally don't use isMounted() because even accessing\n    // isMounted property on a React ES6 class will trigger a warning.\n    if (typeof context.__isMounted === 'boolean') {\n      if (!context.__isMounted) {\n        return undefined;\n      }\n    }\n\n    // FIXME: there used to be other branches that protected\n    // against unmounted host components. But RN host components don't\n    // define isMounted() anymore, so those checks didn't do anything.\n\n    // They caused false positive warning noise so we removed them:\n    // https://github.com/facebook/react-native/issues/18868#issuecomment-413579095\n\n    // However, this means that the callback is NOT guaranteed to be safe\n    // for host components. The solution we should implement is to make\n    // UIManager.measure() and similar calls truly cancelable. Then we\n    // can change our own code calling them to cancel when something unmounts.\n\n    return callback.apply(context, arguments);\n  };\n}\n\nexport function throwOnStylesProp(component: any, props: any) {\n  if (props.styles !== undefined) {\n    const owner = component._owner || null;\n    const name = component.constructor.displayName;\n    let msg =\n      '`styles` is not a supported property of `' +\n      name +\n      '`, did ' +\n      'you mean `style` (singular)?';\n    if (owner && owner.constructor && owner.constructor.displayName) {\n      msg +=\n        '\\n\\nCheck the `' +\n        owner.constructor.displayName +\n        '` parent ' +\n        ' component.';\n    }\n    throw new Error(msg);\n  }\n}\n\nexport function warnForStyleProps(props: any, validAttributes: any) {\n  if (__DEV__) {\n    for (const key in validAttributes.style) {\n      if (!(validAttributes[key] || props[key] === undefined)) {\n        console.error(\n          'You are setting the style `{ %s' +\n            ': ... }` as a prop. You ' +\n            'should nest it in a style object. ' +\n            'E.g. `{ style: { %s' +\n            ': ... } }`',\n          key,\n          key,\n        );\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ElementRef} from 'react';\nimport type {\n  HostComponent,\n  MeasureInWindowOnSuccessCallback,\n  MeasureLayoutOnSuccessCallback,\n  MeasureOnSuccessCallback,\n  NativeMethods,\n  ViewConfig,\n} from './ReactNativeTypes';\nimport type {Instance} from './ReactNativeHostConfig';\n\n// Modules provided by RN:\nimport {\n  TextInputState,\n  UIManager,\n} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport {create} from './ReactNativeAttributePayload';\nimport {\n  mountSafeCallback_NOT_REALLY_SAFE,\n  warnForStyleProps,\n} from './NativeMethodsMixinUtils';\n\nclass ReactNativeFiberHostComponent {\n  _children: Array<Instance | number>;\n  _nativeTag: number;\n  _internalFiberInstanceHandleDEV: Object;\n  viewConfig: ViewConfig;\n\n  constructor(\n    tag: number,\n    viewConfig: ViewConfig,\n    internalInstanceHandleDEV: Object,\n  ) {\n    this._nativeTag = tag;\n    this._children = [];\n    this.viewConfig = viewConfig;\n    if (__DEV__) {\n      this._internalFiberInstanceHandleDEV = internalInstanceHandleDEV;\n    }\n  }\n\n  blur() {\n    TextInputState.blurTextInput(this);\n  }\n\n  focus() {\n    TextInputState.focusTextInput(this);\n  }\n\n  measure(callback: MeasureOnSuccessCallback) {\n    UIManager.measure(\n      this._nativeTag,\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback),\n    );\n  }\n\n  measureInWindow(callback: MeasureInWindowOnSuccessCallback) {\n    UIManager.measureInWindow(\n      this._nativeTag,\n      mountSafeCallback_NOT_REALLY_SAFE(this, callback),\n    );\n  }\n\n  measureLayout(\n    relativeToNativeNode: number | ElementRef<HostComponent<mixed>>,\n    onSuccess: MeasureLayoutOnSuccessCallback,\n    onFail?: () => void /* currently unused */,\n  ) {\n    let relativeNode: ?number;\n\n    if (typeof relativeToNativeNode === 'number') {\n      // Already a node handle\n      relativeNode = relativeToNativeNode;\n    } else {\n      const nativeNode: ReactNativeFiberHostComponent = (relativeToNativeNode: any);\n      if (nativeNode._nativeTag) {\n        relativeNode = nativeNode._nativeTag;\n      }\n    }\n\n    if (relativeNode == null) {\n      if (__DEV__) {\n        console.error(\n          'Warning: ref.measureLayout must be called with a node handle or a ref to a native component.',\n        );\n      }\n\n      return;\n    }\n\n    UIManager.measureLayout(\n      this._nativeTag,\n      relativeNode,\n      mountSafeCallback_NOT_REALLY_SAFE(this, onFail),\n      mountSafeCallback_NOT_REALLY_SAFE(this, onSuccess),\n    );\n  }\n\n  setNativeProps(nativeProps: Object) {\n    if (__DEV__) {\n      warnForStyleProps(nativeProps, this.viewConfig.validAttributes);\n    }\n\n    const updatePayload = create(nativeProps, this.viewConfig.validAttributes);\n\n    // Avoid the overhead of bridge calls if there's no update.\n    // This is an expensive no-op for Android, and causes an unnecessary\n    // view invalidation for certain components (eg RCTTextInput) on iOS.\n    if (updatePayload != null) {\n      UIManager.updateView(\n        this._nativeTag,\n        this.viewConfig.uiViewClassName,\n        updatePayload,\n      );\n    }\n  }\n}\n\n// eslint-disable-next-line no-unused-expressions\n(ReactNativeFiberHostComponent.prototype: $ReadOnly<{...NativeMethods, ...}>);\n\nexport default ReactNativeFiberHostComponent;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// This module only exists as an ESM wrapper around the external CommonJS\n// Scheduler dependency. Notice that we're intentionally not using named imports\n// because Rollup would use dynamic dispatch for CommonJS interop named imports.\n// When we switch to ESM, we can delete this module.\nimport * as Scheduler from 'scheduler';\n\nexport const scheduleCallback = Scheduler.unstable_scheduleCallback;\nexport const cancelCallback = Scheduler.unstable_cancelCallback;\nexport const shouldYield = Scheduler.unstable_shouldYield;\nexport const requestPaint = Scheduler.unstable_requestPaint;\nexport const now = Scheduler.unstable_now;\nexport const getCurrentPriorityLevel =\n  Scheduler.unstable_getCurrentPriorityLevel;\nexport const ImmediatePriority = Scheduler.unstable_ImmediatePriority;\nexport const UserBlockingPriority = Scheduler.unstable_UserBlockingPriority;\nexport const NormalPriority = Scheduler.unstable_NormalPriority;\nexport const LowPriority = Scheduler.unstable_LowPriority;\nexport const IdlePriority = Scheduler.unstable_IdlePriority;\nexport type SchedulerCallback = (isSync: boolean) => SchedulerCallback | null;\n\n// this doesn't actually exist on the scheduler, but it *does*\n// on scheduler/unstable_mock, which we'll need for internal testing\nexport const unstable_yieldValue = Scheduler.unstable_yieldValue;\nexport const unstable_setDisableYieldValue =\n  Scheduler.unstable_setDisableYieldValue;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {enableProfilerTimer} from 'shared/ReactFeatureFlags';\n\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {EventPriority} from './ReactEventPriorities.old';\n\nimport {DidCapture} from './ReactFiberFlags';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n} from './ReactEventPriorities.old';\nimport {\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n} from './Scheduler';\n\ndeclare var __REACT_DEVTOOLS_GLOBAL_HOOK__: Object | void;\n\nlet rendererID = null;\nlet injectedHook = null;\nlet hasLoggedError = false;\n\nexport const isDevToolsPresent =\n  typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ !== 'undefined';\n\nexport function injectInternals(internals: Object): boolean {\n  if (typeof __REACT_DEVTOOLS_GLOBAL_HOOK__ === 'undefined') {\n    // No DevTools\n    return false;\n  }\n  const hook = __REACT_DEVTOOLS_GLOBAL_HOOK__;\n  if (hook.isDisabled) {\n    // This isn't a real property on the hook, but it can be set to opt out\n    // of DevTools integration and associated warnings and logs.\n    // https://github.com/facebook/react/issues/3877\n    return true;\n  }\n  if (!hook.supportsFiber) {\n    if (__DEV__) {\n      console.error(\n        'The installed version of React DevTools is too old and will not work ' +\n          'with the current version of React. Please update React DevTools. ' +\n          'https://reactjs.org/link/react-devtools',\n      );\n    }\n    // DevTools exists, even though it doesn't support Fiber.\n    return true;\n  }\n  try {\n    rendererID = hook.inject(internals);\n    // We have successfully injected, so now it is safe to set up hooks.\n    injectedHook = hook;\n  } catch (err) {\n    // Catch all errors because it is unsafe to throw during initialization.\n    if (__DEV__) {\n      console.error('React instrumentation encountered an error: %s.', err);\n    }\n  }\n  if (hook.checkDCE) {\n    // This is the real DevTools.\n    return true;\n  } else {\n    // This is likely a hook installed by Fast Refresh runtime.\n    return false;\n  }\n}\n\nexport function onScheduleRoot(root: FiberRoot, children: ReactNodeList) {\n  if (__DEV__) {\n    if (\n      injectedHook &&\n      typeof injectedHook.onScheduleFiberRoot === 'function'\n    ) {\n      try {\n        injectedHook.onScheduleFiberRoot(rendererID, root, children);\n      } catch (err) {\n        if (__DEV__ && !hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitRoot(root: FiberRoot, eventPriority: EventPriority) {\n  if (injectedHook && typeof injectedHook.onCommitFiberRoot === 'function') {\n    try {\n      const didError = (root.current.flags & DidCapture) === DidCapture;\n      if (enableProfilerTimer) {\n        let schedulerPriority;\n        switch (eventPriority) {\n          case DiscreteEventPriority:\n            schedulerPriority = ImmediateSchedulerPriority;\n            break;\n          case ContinuousEventPriority:\n            schedulerPriority = UserBlockingSchedulerPriority;\n            break;\n          case DefaultEventPriority:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n          case IdleEventPriority:\n            schedulerPriority = IdleSchedulerPriority;\n            break;\n          default:\n            schedulerPriority = NormalSchedulerPriority;\n            break;\n        }\n        injectedHook.onCommitFiberRoot(\n          rendererID,\n          root,\n          schedulerPriority,\n          didError,\n        );\n      } else {\n        injectedHook.onCommitFiberRoot(rendererID, root, undefined, didError);\n      }\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onPostCommitRoot(root: FiberRoot) {\n  if (\n    injectedHook &&\n    typeof injectedHook.onPostCommitFiberRoot === 'function'\n  ) {\n    try {\n      injectedHook.onPostCommitFiberRoot(rendererID, root);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n\nexport function onCommitUnmount(fiber: Fiber) {\n  if (injectedHook && typeof injectedHook.onCommitFiberUnmount === 'function') {\n    try {\n      injectedHook.onCommitFiberUnmount(rendererID, fiber);\n    } catch (err) {\n      if (__DEV__) {\n        if (!hasLoggedError) {\n          hasLoggedError = true;\n          console.error('React instrumentation encountered an error: %s', err);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type TypeOfMode = number;\n\nexport const NoMode = /*                         */ 0b000000;\n// TODO: Remove ConcurrentMode by reading from the root tag instead\nexport const ConcurrentMode = /*                 */ 0b000001;\nexport const ProfileMode = /*                    */ 0b000010;\nexport const DebugTracingMode = /*               */ 0b000100;\nexport const StrictLegacyMode = /*               */ 0b001000;\nexport const StrictEffectsMode = /*              */ 0b010000;\nexport const ConcurrentUpdatesByDefaultMode = /* */ 0b100000;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot} from './ReactInternalTypes';\n\n// TODO: Ideally these types would be opaque but that doesn't work well with\n// our reconciler fork infra, since these leak into non-reconciler packages.\n\nexport type Lanes = number;\nexport type Lane = number;\nexport type LaneMap<T> = Array<T>;\n\nimport {\n  enableCache,\n  enableSchedulingProfiler,\n  enableUpdaterTracking,\n  allowConcurrentByDefault,\n} from 'shared/ReactFeatureFlags';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {ConcurrentUpdatesByDefaultMode, NoMode} from './ReactTypeOfMode';\n\n// Lane values below should be kept in sync with getLabelForLane(), used by react-devtools-scheduling-profiler.\n// If those values are changed that package should be rebuilt and redeployed.\n\nexport const TotalLanes = 31;\n\nexport const NoLanes: Lanes = /*                        */ 0b0000000000000000000000000000000;\nexport const NoLane: Lane = /*                          */ 0b0000000000000000000000000000000;\n\nexport const SyncLane: Lane = /*                        */ 0b0000000000000000000000000000001;\n\nexport const InputContinuousHydrationLane: Lane = /*    */ 0b0000000000000000000000000000010;\nexport const InputContinuousLane: Lanes = /*            */ 0b0000000000000000000000000000100;\n\nexport const DefaultHydrationLane: Lane = /*            */ 0b0000000000000000000000000001000;\nexport const DefaultLane: Lanes = /*                    */ 0b0000000000000000000000000010000;\n\nconst TransitionHydrationLane: Lane = /*                */ 0b0000000000000000000000000100000;\nconst TransitionLanes: Lanes = /*                       */ 0b0000000001111111111111111000000;\nconst TransitionLane1: Lane = /*                        */ 0b0000000000000000000000001000000;\nconst TransitionLane2: Lane = /*                        */ 0b0000000000000000000000010000000;\nconst TransitionLane3: Lane = /*                        */ 0b0000000000000000000000100000000;\nconst TransitionLane4: Lane = /*                        */ 0b0000000000000000000001000000000;\nconst TransitionLane5: Lane = /*                        */ 0b0000000000000000000010000000000;\nconst TransitionLane6: Lane = /*                        */ 0b0000000000000000000100000000000;\nconst TransitionLane7: Lane = /*                        */ 0b0000000000000000001000000000000;\nconst TransitionLane8: Lane = /*                        */ 0b0000000000000000010000000000000;\nconst TransitionLane9: Lane = /*                        */ 0b0000000000000000100000000000000;\nconst TransitionLane10: Lane = /*                       */ 0b0000000000000001000000000000000;\nconst TransitionLane11: Lane = /*                       */ 0b0000000000000010000000000000000;\nconst TransitionLane12: Lane = /*                       */ 0b0000000000000100000000000000000;\nconst TransitionLane13: Lane = /*                       */ 0b0000000000001000000000000000000;\nconst TransitionLane14: Lane = /*                       */ 0b0000000000010000000000000000000;\nconst TransitionLane15: Lane = /*                       */ 0b0000000000100000000000000000000;\nconst TransitionLane16: Lane = /*                       */ 0b0000000001000000000000000000000;\n\nconst RetryLanes: Lanes = /*                            */ 0b0000111110000000000000000000000;\nconst RetryLane1: Lane = /*                             */ 0b0000000010000000000000000000000;\nconst RetryLane2: Lane = /*                             */ 0b0000000100000000000000000000000;\nconst RetryLane3: Lane = /*                             */ 0b0000001000000000000000000000000;\nconst RetryLane4: Lane = /*                             */ 0b0000010000000000000000000000000;\nconst RetryLane5: Lane = /*                             */ 0b0000100000000000000000000000000;\n\nexport const SomeRetryLane: Lane = RetryLane1;\n\nexport const SelectiveHydrationLane: Lane = /*          */ 0b0001000000000000000000000000000;\n\nconst NonIdleLanes = /*                                 */ 0b0001111111111111111111111111111;\n\nexport const IdleHydrationLane: Lane = /*               */ 0b0010000000000000000000000000000;\nexport const IdleLane: Lanes = /*                       */ 0b0100000000000000000000000000000;\n\nexport const OffscreenLane: Lane = /*                   */ 0b1000000000000000000000000000000;\n\n// This function is used for the experimental scheduling profiler (react-devtools-scheduling-profiler)\n// It should be kept in sync with the Lanes values above.\nexport function getLabelForLane(lane: Lane): string | void {\n  if (enableSchedulingProfiler) {\n    if (lane & SyncLane) {\n      return 'Sync';\n    }\n    if (lane & InputContinuousHydrationLane) {\n      return 'InputContinuousHydration';\n    }\n    if (lane & InputContinuousLane) {\n      return 'InputContinuous';\n    }\n    if (lane & DefaultHydrationLane) {\n      return 'DefaultHydration';\n    }\n    if (lane & DefaultLane) {\n      return 'Default';\n    }\n    if (lane & TransitionHydrationLane) {\n      return 'TransitionHydration';\n    }\n    if (lane & TransitionLanes) {\n      return 'Transition';\n    }\n    if (lane & RetryLanes) {\n      return 'Retry';\n    }\n    if (lane & SelectiveHydrationLane) {\n      return 'SelectiveHydration';\n    }\n    if (lane & IdleHydrationLane) {\n      return 'IdleHydration';\n    }\n    if (lane & IdleLane) {\n      return 'Idle';\n    }\n    if (lane & OffscreenLane) {\n      return 'Offscreen';\n    }\n  }\n}\n\nexport const NoTimestamp = -1;\n\nlet nextTransitionLane: Lane = TransitionLane1;\nlet nextRetryLane: Lane = RetryLane1;\n\nfunction getHighestPriorityLanes(lanes: Lanes | Lane): Lanes {\n  switch (getHighestPriorityLane(lanes)) {\n    case SyncLane:\n      return SyncLane;\n    case InputContinuousHydrationLane:\n      return InputContinuousHydrationLane;\n    case InputContinuousLane:\n      return InputContinuousLane;\n    case DefaultHydrationLane:\n      return DefaultHydrationLane;\n    case DefaultLane:\n      return DefaultLane;\n    case TransitionHydrationLane:\n      return TransitionHydrationLane;\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return lanes & TransitionLanes;\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      return lanes & RetryLanes;\n    case SelectiveHydrationLane:\n      return SelectiveHydrationLane;\n    case IdleHydrationLane:\n      return IdleHydrationLane;\n    case IdleLane:\n      return IdleLane;\n    case OffscreenLane:\n      return OffscreenLane;\n    default:\n      if (__DEV__) {\n        console.error(\n          'Should have found matching lanes. This is a bug in React.',\n        );\n      }\n      // This shouldn't be reachable, but as a fallback, return the entire bitmask.\n      return lanes;\n  }\n}\n\nexport function getNextLanes(root: FiberRoot, wipLanes: Lanes): Lanes {\n  // Early bailout if there's no pending work left.\n  const pendingLanes = root.pendingLanes;\n  if (pendingLanes === NoLanes) {\n    return NoLanes;\n  }\n\n  let nextLanes = NoLanes;\n\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n\n  // Do not work on any idle work until all the non-idle work has finished,\n  // even if the work is suspended.\n  const nonIdlePendingLanes = pendingLanes & NonIdleLanes;\n  if (nonIdlePendingLanes !== NoLanes) {\n    const nonIdleUnblockedLanes = nonIdlePendingLanes & ~suspendedLanes;\n    if (nonIdleUnblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(nonIdleUnblockedLanes);\n    } else {\n      const nonIdlePingedLanes = nonIdlePendingLanes & pingedLanes;\n      if (nonIdlePingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(nonIdlePingedLanes);\n      }\n    }\n  } else {\n    // The only remaining work is Idle.\n    const unblockedLanes = pendingLanes & ~suspendedLanes;\n    if (unblockedLanes !== NoLanes) {\n      nextLanes = getHighestPriorityLanes(unblockedLanes);\n    } else {\n      if (pingedLanes !== NoLanes) {\n        nextLanes = getHighestPriorityLanes(pingedLanes);\n      }\n    }\n  }\n\n  if (nextLanes === NoLanes) {\n    // This should only be reachable if we're suspended\n    // TODO: Consider warning in this path if a fallback timer is not scheduled.\n    return NoLanes;\n  }\n\n  // If we're already in the middle of a render, switching lanes will interrupt\n  // it and we'll lose our progress. We should only do this if the new lanes are\n  // higher priority.\n  if (\n    wipLanes !== NoLanes &&\n    wipLanes !== nextLanes &&\n    // If we already suspended with a delay, then interrupting is fine. Don't\n    // bother waiting until the root is complete.\n    (wipLanes & suspendedLanes) === NoLanes\n  ) {\n    const nextLane = getHighestPriorityLane(nextLanes);\n    const wipLane = getHighestPriorityLane(wipLanes);\n    if (\n      // Tests whether the next lane is equal or lower priority than the wip\n      // one. This works because the bits decrease in priority as you go left.\n      nextLane >= wipLane ||\n      // Default priority updates should not interrupt transition updates. The\n      // only difference between default updates and transition updates is that\n      // default updates do not support refresh transitions.\n      (nextLane === DefaultLane && (wipLane & TransitionLanes) !== NoLanes)\n    ) {\n      // Keep working on the existing in-progress tree. Do not interrupt.\n      return wipLanes;\n    }\n  }\n\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Do nothing, use the lanes as they were assigned.\n  } else if ((nextLanes & InputContinuousLane) !== NoLanes) {\n    // When updates are sync by default, we entangle continuous priority updates\n    // and default updates, so they render in the same batch. The only reason\n    // they use separate lanes is because continuous updates should interrupt\n    // transitions, but default updates should not.\n    nextLanes |= pendingLanes & DefaultLane;\n  }\n\n  // Check for entangled lanes and add them to the batch.\n  //\n  // A lane is said to be entangled with another when it's not allowed to render\n  // in a batch that does not also include the other lane. Typically we do this\n  // when multiple updates have the same source, and we only want to respond to\n  // the most recent event from that source.\n  //\n  // Note that we apply entanglements *after* checking for partial work above.\n  // This means that if a lane is entangled during an interleaved event while\n  // it's already rendering, we won't interrupt it. This is intentional, since\n  // entanglement is usually \"best effort\": we'll try our best to render the\n  // lanes in the same batch, but it's not worth throwing out partially\n  // completed work in order to do it.\n  // TODO: Reconsider this. The counter-argument is that the partial work\n  // represents an intermediate state, which we don't want to show to the user.\n  // And by spending extra time finishing it, we're increasing the amount of\n  // time it takes to show the final state, which is what they are actually\n  // waiting for.\n  //\n  // For those exceptions where entanglement is semantically important, like\n  // useMutableSource, we should ensure that there is no partial work at the\n  // time we apply the entanglement.\n  const entangledLanes = root.entangledLanes;\n  if (entangledLanes !== NoLanes) {\n    const entanglements = root.entanglements;\n    let lanes = nextLanes & entangledLanes;\n    while (lanes > 0) {\n      const index = pickArbitraryLaneIndex(lanes);\n      const lane = 1 << index;\n\n      nextLanes |= entanglements[index];\n\n      lanes &= ~lane;\n    }\n  }\n\n  return nextLanes;\n}\n\nexport function getMostRecentEventTime(root: FiberRoot, lanes: Lanes): number {\n  const eventTimes = root.eventTimes;\n\n  let mostRecentEventTime = NoTimestamp;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const eventTime = eventTimes[index];\n    if (eventTime > mostRecentEventTime) {\n      mostRecentEventTime = eventTime;\n    }\n\n    lanes &= ~lane;\n  }\n\n  return mostRecentEventTime;\n}\n\nfunction computeExpirationTime(lane: Lane, currentTime: number) {\n  switch (lane) {\n    case SyncLane:\n    case InputContinuousHydrationLane:\n    case InputContinuousLane:\n      // User interactions should expire slightly more quickly.\n      //\n      // NOTE: This is set to the corresponding constant as in Scheduler.js.\n      // When we made it larger, a product metric in www regressed, suggesting\n      // there's a user interaction that's being starved by a series of\n      // synchronous updates. If that theory is correct, the proper solution is\n      // to fix the starvation. However, this scenario supports the idea that\n      // expiration times are an important safeguard when starvation\n      // does happen.\n      return currentTime + 250;\n    case DefaultHydrationLane:\n    case DefaultLane:\n    case TransitionHydrationLane:\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n      return currentTime + 5000;\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      // TODO: Retries should be allowed to expire if they are CPU bound for\n      // too long, but when I made this change it caused a spike in browser\n      // crashes. There must be some other underlying bug; not super urgent but\n      // ideally should figure out why and fix it. Unfortunately we don't have\n      // a repro for the crashes, only detected via production metrics.\n      return NoTimestamp;\n    case SelectiveHydrationLane:\n    case IdleHydrationLane:\n    case IdleLane:\n    case OffscreenLane:\n      // Anything idle priority or lower should never expire.\n      return NoTimestamp;\n    default:\n      if (__DEV__) {\n        console.error(\n          'Should have found matching lanes. This is a bug in React.',\n        );\n      }\n      return NoTimestamp;\n  }\n}\n\nexport function markStarvedLanesAsExpired(\n  root: FiberRoot,\n  currentTime: number,\n): void {\n  // TODO: This gets called every time we yield. We can optimize by storing\n  // the earliest expiration time on the root. Then use that to quickly bail out\n  // of this function.\n\n  const pendingLanes = root.pendingLanes;\n  const suspendedLanes = root.suspendedLanes;\n  const pingedLanes = root.pingedLanes;\n  const expirationTimes = root.expirationTimes;\n\n  // Iterate through the pending lanes and check if we've reached their\n  // expiration time. If so, we'll assume the update is being starved and mark\n  // it as expired to force it to finish.\n  let lanes = pendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    const expirationTime = expirationTimes[index];\n    if (expirationTime === NoTimestamp) {\n      // Found a pending lane with no expiration time. If it's not suspended, or\n      // if it's pinged, assume it's CPU-bound. Compute a new expiration time\n      // using the current time.\n      if (\n        (lane & suspendedLanes) === NoLanes ||\n        (lane & pingedLanes) !== NoLanes\n      ) {\n        // Assumes timestamps are monotonically increasing.\n        expirationTimes[index] = computeExpirationTime(lane, currentTime);\n      }\n    } else if (expirationTime <= currentTime) {\n      // This lane expired\n      root.expiredLanes |= lane;\n    }\n\n    lanes &= ~lane;\n  }\n}\n\n// This returns the highest priority pending lanes regardless of whether they\n// are suspended.\nexport function getHighestPriorityPendingLanes(root: FiberRoot) {\n  return getHighestPriorityLanes(root.pendingLanes);\n}\n\nexport function getLanesToRetrySynchronouslyOnError(root: FiberRoot): Lanes {\n  const everythingButOffscreen = root.pendingLanes & ~OffscreenLane;\n  if (everythingButOffscreen !== NoLanes) {\n    return everythingButOffscreen;\n  }\n  if (everythingButOffscreen & OffscreenLane) {\n    return OffscreenLane;\n  }\n  return NoLanes;\n}\n\nexport function includesNonIdleWork(lanes: Lanes) {\n  return (lanes & NonIdleLanes) !== NoLanes;\n}\nexport function includesOnlyRetries(lanes: Lanes) {\n  return (lanes & RetryLanes) === lanes;\n}\nexport function includesOnlyTransitions(lanes: Lanes) {\n  return (lanes & TransitionLanes) === lanes;\n}\n\nexport function shouldTimeSlice(root: FiberRoot, lanes: Lanes) {\n  if ((lanes & root.expiredLanes) !== NoLanes) {\n    // At least one of these lanes expired. To prevent additional starvation,\n    // finish rendering without yielding execution.\n    return false;\n  }\n\n  if (\n    allowConcurrentByDefault &&\n    (root.current.mode & ConcurrentUpdatesByDefaultMode) !== NoMode\n  ) {\n    // Concurrent updates by default always use time slicing.\n    return true;\n  }\n\n  const SyncDefaultLanes =\n    InputContinuousHydrationLane |\n    InputContinuousLane |\n    DefaultHydrationLane |\n    DefaultLane;\n  return (lanes & SyncDefaultLanes) === NoLanes;\n}\n\nexport function isTransitionLane(lane: Lane) {\n  return (lane & TransitionLanes) !== 0;\n}\n\nexport function claimNextTransitionLane(): Lane {\n  // Cycle through the lanes, assigning each new transition to the next lane.\n  // In most cases, this means every transition gets its own lane, until we\n  // run out of lanes and cycle back to the beginning.\n  const lane = nextTransitionLane;\n  nextTransitionLane <<= 1;\n  if ((nextTransitionLane & TransitionLanes) === 0) {\n    nextTransitionLane = TransitionLane1;\n  }\n  return lane;\n}\n\nexport function claimNextRetryLane(): Lane {\n  const lane = nextRetryLane;\n  nextRetryLane <<= 1;\n  if ((nextRetryLane & RetryLanes) === 0) {\n    nextRetryLane = RetryLane1;\n  }\n  return lane;\n}\n\nexport function getHighestPriorityLane(lanes: Lanes): Lane {\n  return lanes & -lanes;\n}\n\nexport function pickArbitraryLane(lanes: Lanes): Lane {\n  // This wrapper function gets inlined. Only exists so to communicate that it\n  // doesn't matter which bit is selected; you can pick any bit without\n  // affecting the algorithms where its used. Here I'm using\n  // getHighestPriorityLane because it requires the fewest operations.\n  return getHighestPriorityLane(lanes);\n}\n\nfunction pickArbitraryLaneIndex(lanes: Lanes) {\n  return 31 - clz32(lanes);\n}\n\nfunction laneToIndex(lane: Lane) {\n  return pickArbitraryLaneIndex(lane);\n}\n\nexport function includesSomeLane(a: Lanes | Lane, b: Lanes | Lane) {\n  return (a & b) !== NoLanes;\n}\n\nexport function isSubsetOfLanes(set: Lanes, subset: Lanes | Lane) {\n  return (set & subset) === subset;\n}\n\nexport function mergeLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a | b;\n}\n\nexport function removeLanes(set: Lanes, subset: Lanes | Lane): Lanes {\n  return set & ~subset;\n}\n\nexport function intersectLanes(a: Lanes | Lane, b: Lanes | Lane): Lanes {\n  return a & b;\n}\n\n// Seems redundant, but it changes the type from a single lane (used for\n// updates) to a group of lanes (used for flushing work).\nexport function laneToLanes(lane: Lane): Lanes {\n  return lane;\n}\n\nexport function higherPriorityLane(a: Lane, b: Lane) {\n  // This works because the bit ranges decrease in priority as you go left.\n  return a !== NoLane && a < b ? a : b;\n}\n\nexport function createLaneMap<T>(initial: T): LaneMap<T> {\n  // Intentionally pushing one by one.\n  // https://v8.dev/blog/elements-kinds#avoid-creating-holes\n  const laneMap = [];\n  for (let i = 0; i < TotalLanes; i++) {\n    laneMap.push(initial);\n  }\n  return laneMap;\n}\n\nexport function markRootUpdated(\n  root: FiberRoot,\n  updateLane: Lane,\n  eventTime: number,\n) {\n  root.pendingLanes |= updateLane;\n\n  // If there are any suspended transitions, it's possible this new update\n  // could unblock them. Clear the suspended lanes so that we can try rendering\n  // them again.\n  //\n  // TODO: We really only need to unsuspend only lanes that are in the\n  // `subtreeLanes` of the updated fiber, or the update lanes of the return\n  // path. This would exclude suspended updates in an unrelated sibling tree,\n  // since there's no way for this update to unblock it.\n  //\n  // We don't do this if the incoming update is idle, because we never process\n  // idle updates until after all the regular updates have finished; there's no\n  // way it could unblock a transition.\n  if (updateLane !== IdleLane) {\n    root.suspendedLanes = NoLanes;\n    root.pingedLanes = NoLanes;\n  }\n\n  const eventTimes = root.eventTimes;\n  const index = laneToIndex(updateLane);\n  // We can always overwrite an existing timestamp because we prefer the most\n  // recent event, and we assume time is monotonically increasing.\n  eventTimes[index] = eventTime;\n}\n\nexport function markRootSuspended(root: FiberRoot, suspendedLanes: Lanes) {\n  root.suspendedLanes |= suspendedLanes;\n  root.pingedLanes &= ~suspendedLanes;\n\n  // The suspended lanes are no longer CPU-bound. Clear their expiration times.\n  const expirationTimes = root.expirationTimes;\n  let lanes = suspendedLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootPinged(\n  root: FiberRoot,\n  pingedLanes: Lanes,\n  eventTime: number,\n) {\n  root.pingedLanes |= root.suspendedLanes & pingedLanes;\n}\n\nexport function markRootMutableRead(root: FiberRoot, updateLane: Lane) {\n  root.mutableReadLanes |= updateLane & root.pendingLanes;\n}\n\nexport function markRootFinished(root: FiberRoot, remainingLanes: Lanes) {\n  const noLongerPendingLanes = root.pendingLanes & ~remainingLanes;\n\n  root.pendingLanes = remainingLanes;\n\n  // Let's try everything again\n  root.suspendedLanes = 0;\n  root.pingedLanes = 0;\n\n  root.expiredLanes &= remainingLanes;\n  root.mutableReadLanes &= remainingLanes;\n\n  root.entangledLanes &= remainingLanes;\n\n  if (enableCache) {\n    const pooledCacheLanes = (root.pooledCacheLanes &= remainingLanes);\n    if (pooledCacheLanes === NoLanes) {\n      // None of the remaining work relies on the cache pool. Clear it so\n      // subsequent requests get a new cache.\n      root.pooledCache = null;\n    }\n  }\n\n  const entanglements = root.entanglements;\n  const eventTimes = root.eventTimes;\n  const expirationTimes = root.expirationTimes;\n\n  // Clear the lanes that no longer have pending work\n  let lanes = noLongerPendingLanes;\n  while (lanes > 0) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n\n    entanglements[index] = NoLanes;\n    eventTimes[index] = NoTimestamp;\n    expirationTimes[index] = NoTimestamp;\n\n    lanes &= ~lane;\n  }\n}\n\nexport function markRootEntangled(root: FiberRoot, entangledLanes: Lanes) {\n  // In addition to entangling each of the given lanes with each other, we also\n  // have to consider _transitive_ entanglements. For each lane that is already\n  // entangled with *any* of the given lanes, that lane is now transitively\n  // entangled with *all* the given lanes.\n  //\n  // Translated: If C is entangled with A, then entangling A with B also\n  // entangles C with B.\n  //\n  // If this is hard to grasp, it might help to intentionally break this\n  // function and look at the tests that fail in ReactTransition-test.js. Try\n  // commenting out one of the conditions below.\n\n  const rootEntangledLanes = (root.entangledLanes |= entangledLanes);\n  const entanglements = root.entanglements;\n  let lanes = rootEntangledLanes;\n  while (lanes) {\n    const index = pickArbitraryLaneIndex(lanes);\n    const lane = 1 << index;\n    if (\n      // Is this one of the newly entangled lanes?\n      (lane & entangledLanes) |\n      // Is this lane transitively entangled with the newly entangled lanes?\n      (entanglements[index] & entangledLanes)\n    ) {\n      entanglements[index] |= entangledLanes;\n    }\n    lanes &= ~lane;\n  }\n}\n\nexport function getBumpedLaneForHydration(\n  root: FiberRoot,\n  renderLanes: Lanes,\n): Lane {\n  const renderLane = getHighestPriorityLane(renderLanes);\n\n  let lane;\n  switch (renderLane) {\n    case InputContinuousLane:\n      lane = InputContinuousHydrationLane;\n      break;\n    case DefaultLane:\n      lane = DefaultHydrationLane;\n      break;\n    case TransitionLane1:\n    case TransitionLane2:\n    case TransitionLane3:\n    case TransitionLane4:\n    case TransitionLane5:\n    case TransitionLane6:\n    case TransitionLane7:\n    case TransitionLane8:\n    case TransitionLane9:\n    case TransitionLane10:\n    case TransitionLane11:\n    case TransitionLane12:\n    case TransitionLane13:\n    case TransitionLane14:\n    case TransitionLane15:\n    case TransitionLane16:\n    case RetryLane1:\n    case RetryLane2:\n    case RetryLane3:\n    case RetryLane4:\n    case RetryLane5:\n      lane = TransitionHydrationLane;\n      break;\n    case IdleLane:\n      lane = IdleHydrationLane;\n      break;\n    default:\n      // Everything else is already either a hydration lane, or shouldn't\n      // be retried at a hydration lane.\n      lane = NoLane;\n      break;\n  }\n\n  // Check if the lane we chose is suspended. If so, that indicates that we\n  // already attempted and failed to hydrate at that level. Also check if we're\n  // already rendering that lane, which is rare but could happen.\n  if ((lane & (root.suspendedLanes | renderLanes)) !== NoLane) {\n    // Give up trying to hydrate and fall back to client render.\n    return NoLane;\n  }\n\n  return lane;\n}\n\nexport function addFiberToLanesMap(\n  root: FiberRoot,\n  fiber: Fiber,\n  lanes: Lanes | Lane,\n) {\n  if (!enableUpdaterTracking) {\n    return;\n  }\n  if (!isDevToolsPresent) {\n    return;\n  }\n  const pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const updaters = pendingUpdatersLaneMap[index];\n    updaters.add(fiber);\n\n    lanes &= ~lane;\n  }\n}\n\nexport function movePendingFibersToMemoized(root: FiberRoot, lanes: Lanes) {\n  if (!enableUpdaterTracking) {\n    return;\n  }\n  if (!isDevToolsPresent) {\n    return;\n  }\n  const pendingUpdatersLaneMap = root.pendingUpdatersLaneMap;\n  const memoizedUpdaters = root.memoizedUpdaters;\n  while (lanes > 0) {\n    const index = laneToIndex(lanes);\n    const lane = 1 << index;\n\n    const updaters = pendingUpdatersLaneMap[index];\n    if (updaters.size > 0) {\n      updaters.forEach(fiber => {\n        const alternate = fiber.alternate;\n        if (alternate === null || !memoizedUpdaters.has(alternate)) {\n          memoizedUpdaters.add(fiber);\n        }\n      });\n      updaters.clear();\n    }\n\n    lanes &= ~lane;\n  }\n}\n\nconst clz32 = Math.clz32 ? Math.clz32 : clz32Fallback;\n\n// Count leading zeros. Only used on lanes, so assume input is an integer.\n// Based on:\n// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/clz32\nconst log = Math.log;\nconst LN2 = Math.LN2;\nfunction clz32Fallback(lanes: Lanes | Lane) {\n  if (lanes === 0) {\n    return 32;\n  }\n  return (31 - ((log(lanes) / LN2) | 0)) | 0;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Lane, Lanes} from './ReactFiberLane.old';\n\nimport {\n  NoLane,\n  SyncLane,\n  InputContinuousLane,\n  DefaultLane,\n  IdleLane,\n  getHighestPriorityLane,\n  includesNonIdleWork,\n} from './ReactFiberLane.old';\n\nexport opaque type EventPriority = Lane;\n\nexport const DiscreteEventPriority: EventPriority = SyncLane;\nexport const ContinuousEventPriority: EventPriority = InputContinuousLane;\nexport const DefaultEventPriority: EventPriority = DefaultLane;\nexport const IdleEventPriority: EventPriority = IdleLane;\n\nlet currentUpdatePriority: EventPriority = NoLane;\n\nexport function getCurrentUpdatePriority(): EventPriority {\n  return currentUpdatePriority;\n}\n\nexport function setCurrentUpdatePriority(newPriority: EventPriority) {\n  currentUpdatePriority = newPriority;\n}\n\nexport function runWithPriority<T>(priority: EventPriority, fn: () => T): T {\n  const previousPriority = currentUpdatePriority;\n  try {\n    currentUpdatePriority = priority;\n    return fn();\n  } finally {\n    currentUpdatePriority = previousPriority;\n  }\n}\n\nexport function higherEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): EventPriority {\n  return a !== 0 && a < b ? a : b;\n}\n\nexport function lowerEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): EventPriority {\n  return a === 0 || a > b ? a : b;\n}\n\nexport function isHigherEventPriority(\n  a: EventPriority,\n  b: EventPriority,\n): boolean {\n  return a !== 0 && a < b;\n}\n\nexport function lanesToEventPriority(lanes: Lanes): EventPriority {\n  const lane = getHighestPriorityLane(lanes);\n  if (!isHigherEventPriority(DiscreteEventPriority, lane)) {\n    return DiscreteEventPriority;\n  }\n  if (!isHigherEventPriority(ContinuousEventPriority, lane)) {\n    return ContinuousEventPriority;\n  }\n  if (includesNonIdleWork(lane)) {\n    return DefaultEventPriority;\n  }\n  return IdleEventPriority;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport invariant from 'shared/invariant';\n\n// Renderers that don't support hydration\n// can re-export everything from this module.\n\nfunction shim(...args: any) {\n  invariant(\n    false,\n    'The current renderer does not support hydration. ' +\n      'This error is likely caused by a bug in React. ' +\n      'Please file an issue.',\n  );\n}\n\n// Hydration (when unsupported)\nexport type SuspenseInstance = mixed;\nexport const supportsHydration = false;\nexport const canHydrateInstance = shim;\nexport const canHydrateTextInstance = shim;\nexport const canHydrateSuspenseInstance = shim;\nexport const isSuspenseInstancePending = shim;\nexport const isSuspenseInstanceFallback = shim;\nexport const registerSuspenseInstanceRetry = shim;\nexport const getNextHydratableSibling = shim;\nexport const getFirstHydratableChild = shim;\nexport const hydrateInstance = shim;\nexport const hydrateTextInstance = shim;\nexport const hydrateSuspenseInstance = shim;\nexport const getNextHydratableInstanceAfterSuspenseInstance = shim;\nexport const commitHydratedContainer = shim;\nexport const commitHydratedSuspenseInstance = shim;\nexport const clearSuspenseBoundary = shim;\nexport const clearSuspenseBoundaryFromContainer = shim;\nexport const shouldDeleteUnhydratedTailInstances = shim;\nexport const didNotMatchHydratedContainerTextInstance = shim;\nexport const didNotMatchHydratedTextInstance = shim;\nexport const didNotHydrateContainerInstance = shim;\nexport const didNotHydrateInstance = shim;\nexport const didNotFindHydratableContainerInstance = shim;\nexport const didNotFindHydratableContainerTextInstance = shim;\nexport const didNotFindHydratableContainerSuspenseInstance = shim;\nexport const didNotFindHydratableInstance = shim;\nexport const didNotFindHydratableTextInstance = shim;\nexport const didNotFindHydratableSuspenseInstance = shim;\nexport const errorHydratingContainer = shim;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {TouchedViewDataAtPoint} from './ReactNativeTypes';\n\nimport invariant from 'shared/invariant';\n\n// Modules provided by RN:\nimport {\n  ReactNativeViewConfigRegistry,\n  UIManager,\n  deepFreezeAndThrowOnMutationInDev,\n} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport {create, diff} from './ReactNativeAttributePayload';\nimport {\n  precacheFiberNode,\n  uncacheFiberNode,\n  updateFiberProps,\n} from './ReactNativeComponentTree';\nimport ReactNativeFiberHostComponent from './ReactNativeFiberHostComponent';\n\nimport {DefaultEventPriority} from 'react-reconciler/src/ReactEventPriorities';\n\nconst {get: getViewConfigForType} = ReactNativeViewConfigRegistry;\n\nexport type Type = string;\nexport type Props = Object;\nexport type Container = number;\nexport type Instance = ReactNativeFiberHostComponent;\nexport type TextInstance = number;\nexport type HydratableInstance = Instance | TextInstance;\nexport type PublicInstance = Instance;\nexport type HostContext = $ReadOnly<{|\n  isInAParentText: boolean,\n|}>;\nexport type UpdatePayload = Object; // Unused\nexport type ChildSet = void; // Unused\n\nexport type TimeoutHandle = TimeoutID;\nexport type NoTimeout = -1;\nexport type OpaqueIDType = void;\n\nexport type RendererInspectionConfig = $ReadOnly<{|\n  // Deprecated. Replaced with getInspectorDataForViewAtPoint.\n  getInspectorDataForViewTag?: (tag: number) => Object,\n  getInspectorDataForViewAtPoint?: (\n    inspectedView: Object,\n    locationX: number,\n    locationY: number,\n    callback: (viewData: TouchedViewDataAtPoint) => mixed,\n  ) => void,\n|}>;\n\nconst UPDATE_SIGNAL = {};\nif (__DEV__) {\n  Object.freeze(UPDATE_SIGNAL);\n}\n\n// Counter for uniquely identifying views.\n// % 10 === 1 means it is a rootTag.\n// % 2 === 0 means it is a Fabric tag.\nlet nextReactTag = 3;\nfunction allocateTag() {\n  let tag = nextReactTag;\n  if (tag % 10 === 1) {\n    tag += 2;\n  }\n  nextReactTag = tag + 2;\n  return tag;\n}\n\nfunction recursivelyUncacheFiberNode(node: Instance | TextInstance) {\n  if (typeof node === 'number') {\n    // Leaf node (eg text)\n    uncacheFiberNode(node);\n  } else {\n    uncacheFiberNode((node: any)._nativeTag);\n\n    (node: any)._children.forEach(recursivelyUncacheFiberNode);\n  }\n}\n\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoPersistence';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoHydration';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoScopes';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoTestSelectors';\nexport * from 'react-reconciler/src/ReactFiberHostConfigWithNoMicrotasks';\n\nexport function appendInitialChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  parentInstance._children.push(child);\n}\n\nexport function createInstance(\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): Instance {\n  const tag = allocateTag();\n  const viewConfig = getViewConfigForType(type);\n\n  if (__DEV__) {\n    for (const key in viewConfig.validAttributes) {\n      if (props.hasOwnProperty(key)) {\n        deepFreezeAndThrowOnMutationInDev(props[key]);\n      }\n    }\n  }\n\n  const updatePayload = create(props, viewConfig.validAttributes);\n\n  UIManager.createView(\n    tag, // reactTag\n    viewConfig.uiViewClassName, // viewName\n    rootContainerInstance, // rootTag\n    updatePayload, // props\n  );\n\n  const component = new ReactNativeFiberHostComponent(\n    tag,\n    viewConfig,\n    internalInstanceHandle,\n  );\n\n  precacheFiberNode(internalInstanceHandle, tag);\n  updateFiberProps(tag, props);\n\n  // Not sure how to avoid this cast. Flow is okay if the component is defined\n  // in the same file but if it's external it can't see the types.\n  return ((component: any): Instance);\n}\n\nexport function createTextInstance(\n  text: string,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n  internalInstanceHandle: Object,\n): TextInstance {\n  invariant(\n    hostContext.isInAParentText,\n    'Text strings must be rendered within a <Text> component.',\n  );\n\n  const tag = allocateTag();\n\n  UIManager.createView(\n    tag, // reactTag\n    'RCTRawText', // viewName\n    rootContainerInstance, // rootTag\n    {text: text}, // props\n  );\n\n  precacheFiberNode(internalInstanceHandle, tag);\n\n  return tag;\n}\n\nexport function finalizeInitialChildren(\n  parentInstance: Instance,\n  type: string,\n  props: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  // Don't send a no-op message over the bridge.\n  if (parentInstance._children.length === 0) {\n    return false;\n  }\n\n  // Map from child objects to native tags.\n  // Either way we need to pass a copy of the Array to prevent it from being frozen.\n  const nativeTags = parentInstance._children.map(child =>\n    typeof child === 'number'\n      ? child // Leaf node (eg text)\n      : child._nativeTag,\n  );\n\n  UIManager.setChildren(\n    parentInstance._nativeTag, // containerTag\n    nativeTags, // reactTags\n  );\n\n  return false;\n}\n\nexport function getRootHostContext(\n  rootContainerInstance: Container,\n): HostContext {\n  return {isInAParentText: false};\n}\n\nexport function getChildHostContext(\n  parentHostContext: HostContext,\n  type: string,\n  rootContainerInstance: Container,\n): HostContext {\n  const prevIsInAParentText = parentHostContext.isInAParentText;\n  const isInAParentText =\n    type === 'AndroidTextInput' || // Android\n    type === 'RCTMultilineTextInputView' || // iOS\n    type === 'RCTSinglelineTextInputView' || // iOS\n    type === 'RCTText' ||\n    type === 'RCTVirtualText';\n\n  if (prevIsInAParentText !== isInAParentText) {\n    return {isInAParentText};\n  } else {\n    return parentHostContext;\n  }\n}\n\nexport function getPublicInstance(instance: Instance): * {\n  return instance;\n}\n\nexport function prepareForCommit(containerInfo: Container): null | Object {\n  // Noop\n  return null;\n}\n\nexport function prepareUpdate(\n  instance: Instance,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): null | Object {\n  return UPDATE_SIGNAL;\n}\n\nexport function resetAfterCommit(containerInfo: Container): void {\n  // Noop\n}\n\nexport const isPrimaryRenderer = true;\nexport const warnsIfNotActing = true;\n\nexport const scheduleTimeout = setTimeout;\nexport const cancelTimeout = clearTimeout;\nexport const noTimeout = -1;\n\nexport function shouldSetTextContent(type: string, props: Props): boolean {\n  // TODO (bvaughn) Revisit this decision.\n  // Always returning false simplifies the createInstance() implementation,\n  // But creates an additional child Fiber for raw text children.\n  // No additional native views are created though.\n  // It's not clear to me which is better so I'm deferring for now.\n  // More context @ github.com/facebook/react/pull/8560#discussion_r92111303\n  return false;\n}\n\nexport function getCurrentEventPriority(): * {\n  return DefaultEventPriority;\n}\n\n// -------------------\n//     Mutation\n// -------------------\n\nexport const supportsMutation = true;\n\nexport function appendChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  const childTag = typeof child === 'number' ? child : child._nativeTag;\n  const children = parentInstance._children;\n  const index = children.indexOf(child);\n\n  if (index >= 0) {\n    children.splice(index, 1);\n    children.push(child);\n\n    UIManager.manageChildren(\n      parentInstance._nativeTag, // containerTag\n      [index], // moveFromIndices\n      [children.length - 1], // moveToIndices\n      [], // addChildReactTags\n      [], // addAtIndices\n      [], // removeAtIndices\n    );\n  } else {\n    children.push(child);\n\n    UIManager.manageChildren(\n      parentInstance._nativeTag, // containerTag\n      [], // moveFromIndices\n      [], // moveToIndices\n      [childTag], // addChildReactTags\n      [children.length - 1], // addAtIndices\n      [], // removeAtIndices\n    );\n  }\n}\n\nexport function appendChildToContainer(\n  parentInstance: Container,\n  child: Instance | TextInstance,\n): void {\n  const childTag = typeof child === 'number' ? child : child._nativeTag;\n  UIManager.setChildren(\n    parentInstance, // containerTag\n    [childTag], // reactTags\n  );\n}\n\nexport function commitTextUpdate(\n  textInstance: TextInstance,\n  oldText: string,\n  newText: string,\n): void {\n  UIManager.updateView(\n    textInstance, // reactTag\n    'RCTRawText', // viewName\n    {text: newText}, // props\n  );\n}\n\nexport function commitMount(\n  instance: Instance,\n  type: string,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  // Noop\n}\n\nexport function commitUpdate(\n  instance: Instance,\n  updatePayloadTODO: Object,\n  type: string,\n  oldProps: Props,\n  newProps: Props,\n  internalInstanceHandle: Object,\n): void {\n  const viewConfig = instance.viewConfig;\n\n  updateFiberProps(instance._nativeTag, newProps);\n\n  const updatePayload = diff(oldProps, newProps, viewConfig.validAttributes);\n\n  // Avoid the overhead of bridge calls if there's no update.\n  // This is an expensive no-op for Android, and causes an unnecessary\n  // view invalidation for certain components (eg RCTTextInput) on iOS.\n  if (updatePayload != null) {\n    UIManager.updateView(\n      instance._nativeTag, // reactTag\n      viewConfig.uiViewClassName, // viewName\n      updatePayload, // props\n    );\n  }\n}\n\nexport function insertBefore(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance,\n): void {\n  const children = (parentInstance: any)._children;\n  const index = children.indexOf(child);\n\n  // Move existing child or add new child?\n  if (index >= 0) {\n    children.splice(index, 1);\n    const beforeChildIndex = children.indexOf(beforeChild);\n    children.splice(beforeChildIndex, 0, child);\n\n    UIManager.manageChildren(\n      (parentInstance: any)._nativeTag, // containerID\n      [index], // moveFromIndices\n      [beforeChildIndex], // moveToIndices\n      [], // addChildReactTags\n      [], // addAtIndices\n      [], // removeAtIndices\n    );\n  } else {\n    const beforeChildIndex = children.indexOf(beforeChild);\n    children.splice(beforeChildIndex, 0, child);\n\n    const childTag = typeof child === 'number' ? child : child._nativeTag;\n\n    UIManager.manageChildren(\n      (parentInstance: any)._nativeTag, // containerID\n      [], // moveFromIndices\n      [], // moveToIndices\n      [childTag], // addChildReactTags\n      [beforeChildIndex], // addAtIndices\n      [], // removeAtIndices\n    );\n  }\n}\n\nexport function insertInContainerBefore(\n  parentInstance: Container,\n  child: Instance | TextInstance,\n  beforeChild: Instance | TextInstance,\n): void {\n  // TODO (bvaughn): Remove this check when...\n  // We create a wrapper object for the container in ReactNative render()\n  // Or we refactor to remove wrapper objects entirely.\n  // For more info on pros/cons see PR #8560 description.\n  invariant(\n    typeof parentInstance !== 'number',\n    'Container does not support insertBefore operation',\n  );\n}\n\nexport function removeChild(\n  parentInstance: Instance,\n  child: Instance | TextInstance,\n): void {\n  recursivelyUncacheFiberNode(child);\n  const children = parentInstance._children;\n  const index = children.indexOf(child);\n\n  children.splice(index, 1);\n\n  UIManager.manageChildren(\n    parentInstance._nativeTag, // containerID\n    [], // moveFromIndices\n    [], // moveToIndices\n    [], // addChildReactTags\n    [], // addAtIndices\n    [index], // removeAtIndices\n  );\n}\n\nexport function removeChildFromContainer(\n  parentInstance: Container,\n  child: Instance | TextInstance,\n): void {\n  recursivelyUncacheFiberNode(child);\n  UIManager.manageChildren(\n    parentInstance, // containerID\n    [], // moveFromIndices\n    [], // moveToIndices\n    [], // addChildReactTags\n    [], // addAtIndices\n    [0], // removeAtIndices\n  );\n}\n\nexport function resetTextContent(instance: Instance): void {\n  // Noop\n}\n\nexport function hideInstance(instance: Instance): void {\n  const viewConfig = instance.viewConfig;\n  const updatePayload = create(\n    {style: {display: 'none'}},\n    viewConfig.validAttributes,\n  );\n  UIManager.updateView(\n    instance._nativeTag,\n    viewConfig.uiViewClassName,\n    updatePayload,\n  );\n}\n\nexport function hideTextInstance(textInstance: TextInstance): void {\n  throw new Error('Not yet implemented.');\n}\n\nexport function unhideInstance(instance: Instance, props: Props): void {\n  const viewConfig = instance.viewConfig;\n  const updatePayload = diff(\n    {...props, style: [props.style, {display: 'none'}]},\n    props,\n    viewConfig.validAttributes,\n  );\n  UIManager.updateView(\n    instance._nativeTag,\n    viewConfig.uiViewClassName,\n    updatePayload,\n  );\n}\n\nexport function clearContainer(container: Container): void {\n  // TODO Implement this for React Native\n  // UIManager does not expose a \"remove all\" type method.\n}\n\nexport function unhideTextInstance(\n  textInstance: TextInstance,\n  text: string,\n): void {\n  throw new Error('Not yet implemented.');\n}\n\nexport function getInstanceFromNode(node: any) {\n  throw new Error('Not yet implemented.');\n}\n\nexport function isOpaqueHydratingObject(value: mixed): boolean {\n  throw new Error('Not yet implemented');\n}\n\nexport function makeOpaqueHydratingObject(\n  attemptToReadValue: () => void,\n): OpaqueIDType {\n  throw new Error('Not yet implemented.');\n}\n\nexport function makeClientId(): OpaqueIDType {\n  throw new Error('Not yet implemented');\n}\n\nexport function makeClientIdInDEV(warnOnAccessInDEV: () => void): OpaqueIDType {\n  throw new Error('Not yet implemented');\n}\n\nexport function beforeActiveInstanceBlur(internalInstanceHandle: Object) {\n  // noop\n}\n\nexport function afterActiveInstanceBlur() {\n  // noop\n}\n\nexport function preparePortalMount(portalInstance: Instance): void {\n  // noop\n}\n\nexport function detachDeletedInstance(node: Instance): void {\n  // noop\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Source} from 'shared/ReactElementType';\nimport type {LazyComponent} from 'react/src/ReactLazy';\n\nimport {\n  enableComponentStackLocations,\n  disableNativeComponentFrames,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentDispatcher} = ReactSharedInternals;\n\nlet prefix;\nexport function describeBuiltInComponentFrame(\n  name: string,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    if (prefix === undefined) {\n      // Extract the VM specific prefix used by each line.\n      try {\n        throw Error();\n      } catch (x) {\n        const match = x.stack.trim().match(/\\n( *(at )?)/);\n        prefix = (match && match[1]) || '';\n      }\n    }\n    // We use the prefix to ensure our stacks line up with native stack frames.\n    return '\\n' + prefix + name;\n  } else {\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nlet reentry = false;\nlet componentFrameCache;\nif (__DEV__) {\n  const PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n  componentFrameCache = new PossiblyWeakMap();\n}\n\nexport function describeNativeComponentFrame(\n  fn: Function,\n  construct: boolean,\n): string {\n  // If something asked for a stack inside a fake render, it should get ignored.\n  if (disableNativeComponentFrames || !fn || reentry) {\n    return '';\n  }\n\n  if (__DEV__) {\n    const frame = componentFrameCache.get(fn);\n    if (frame !== undefined) {\n      return frame;\n    }\n  }\n\n  let control;\n\n  reentry = true;\n  const previousPrepareStackTrace = Error.prepareStackTrace;\n  // $FlowFixMe It does accept undefined.\n  Error.prepareStackTrace = undefined;\n  let previousDispatcher;\n  if (__DEV__) {\n    previousDispatcher = ReactCurrentDispatcher.current;\n    // Set the dispatcher in DEV because this might be call in the render function\n    // for warnings.\n    ReactCurrentDispatcher.current = null;\n    disableLogs();\n  }\n  try {\n    // This should throw.\n    if (construct) {\n      // Something should be setting the props in the constructor.\n      const Fake = function() {\n        throw Error();\n      };\n      // $FlowFixMe\n      Object.defineProperty(Fake.prototype, 'props', {\n        set: function() {\n          // We use a throwing setter instead of frozen or non-writable props\n          // because that won't throw in a non-strict mode function.\n          throw Error();\n        },\n      });\n      if (typeof Reflect === 'object' && Reflect.construct) {\n        // We construct a different control for this case to include any extra\n        // frames added by the construct call.\n        try {\n          Reflect.construct(Fake, []);\n        } catch (x) {\n          control = x;\n        }\n        Reflect.construct(fn, [], Fake);\n      } else {\n        try {\n          Fake.call();\n        } catch (x) {\n          control = x;\n        }\n        fn.call(Fake.prototype);\n      }\n    } else {\n      try {\n        throw Error();\n      } catch (x) {\n        control = x;\n      }\n      fn();\n    }\n  } catch (sample) {\n    // This is inlined manually because closure doesn't do it for us.\n    if (sample && control && typeof sample.stack === 'string') {\n      // This extracts the first frame from the sample that isn't also in the control.\n      // Skipping one frame that we assume is the frame that calls the two.\n      const sampleLines = sample.stack.split('\\n');\n      const controlLines = control.stack.split('\\n');\n      let s = sampleLines.length - 1;\n      let c = controlLines.length - 1;\n      while (s >= 1 && c >= 0 && sampleLines[s] !== controlLines[c]) {\n        // We expect at least one stack frame to be shared.\n        // Typically this will be the root most one. However, stack frames may be\n        // cut off due to maximum stack limits. In this case, one maybe cut off\n        // earlier than the other. We assume that the sample is longer or the same\n        // and there for cut off earlier. So we should find the root most frame in\n        // the sample somewhere in the control.\n        c--;\n      }\n      for (; s >= 1 && c >= 0; s--, c--) {\n        // Next we find the first one that isn't the same which should be the\n        // frame that called our sample function and the control.\n        if (sampleLines[s] !== controlLines[c]) {\n          // In V8, the first line is describing the message but other VMs don't.\n          // If we're about to return the first line, and the control is also on the same\n          // line, that's a pretty good indicator that our sample threw at same line as\n          // the control. I.e. before we entered the sample frame. So we ignore this result.\n          // This can happen if you passed a class to function component, or non-function.\n          if (s !== 1 || c !== 1) {\n            do {\n              s--;\n              c--;\n              // We may still have similar intermediate frames from the construct call.\n              // The next one that isn't the same should be our match though.\n              if (c < 0 || sampleLines[s] !== controlLines[c]) {\n                // V8 adds a \"new\" prefix for native classes. Let's remove it to make it prettier.\n                const frame = '\\n' + sampleLines[s].replace(' at new ', ' at ');\n                if (__DEV__) {\n                  if (typeof fn === 'function') {\n                    componentFrameCache.set(fn, frame);\n                  }\n                }\n                // Return the line we found.\n                return frame;\n              }\n            } while (s >= 1 && c >= 0);\n          }\n          break;\n        }\n      }\n    }\n  } finally {\n    reentry = false;\n    if (__DEV__) {\n      ReactCurrentDispatcher.current = previousDispatcher;\n      reenableLogs();\n    }\n    Error.prepareStackTrace = previousPrepareStackTrace;\n  }\n  // Fallback to just using the name if we couldn't make it throw.\n  const name = fn ? fn.displayName || fn.name : '';\n  const syntheticFrame = name ? describeBuiltInComponentFrame(name) : '';\n  if (__DEV__) {\n    if (typeof fn === 'function') {\n      componentFrameCache.set(fn, syntheticFrame);\n    }\n  }\n  return syntheticFrame;\n}\n\nconst BEFORE_SLASH_RE = /^(.*)[\\\\\\/]/;\n\nfunction describeComponentFrame(\n  name: null | string,\n  source: void | null | Source,\n  ownerName: null | string,\n) {\n  let sourceInfo = '';\n  if (__DEV__ && source) {\n    const path = source.fileName;\n    let fileName = path.replace(BEFORE_SLASH_RE, '');\n    // In DEV, include code for a common special case:\n    // prefer \"folder/index.js\" instead of just \"index.js\".\n    if (/^index\\./.test(fileName)) {\n      const match = path.match(BEFORE_SLASH_RE);\n      if (match) {\n        const pathBeforeSlash = match[1];\n        if (pathBeforeSlash) {\n          const folderName = pathBeforeSlash.replace(BEFORE_SLASH_RE, '');\n          fileName = folderName + '/' + fileName;\n        }\n      }\n    }\n    sourceInfo = ' (at ' + fileName + ':' + source.lineNumber + ')';\n  } else if (ownerName) {\n    sourceInfo = ' (created by ' + ownerName + ')';\n  }\n  return '\\n    in ' + (name || 'Unknown') + sourceInfo;\n}\n\nexport function describeClassComponentFrame(\n  ctor: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(ctor, true);\n  } else {\n    return describeFunctionComponentFrame(ctor, source, ownerFn);\n  }\n}\n\nexport function describeFunctionComponentFrame(\n  fn: Function,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (enableComponentStackLocations) {\n    return describeNativeComponentFrame(fn, false);\n  } else {\n    if (!fn) {\n      return '';\n    }\n    const name = fn.displayName || fn.name || null;\n    let ownerName = null;\n    if (__DEV__ && ownerFn) {\n      ownerName = ownerFn.displayName || ownerFn.name || null;\n    }\n    return describeComponentFrame(name, source, ownerName);\n  }\n}\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function describeUnknownElementTypeFrameInDEV(\n  type: any,\n  source: void | null | Source,\n  ownerFn: void | null | Function,\n): string {\n  if (!__DEV__) {\n    return '';\n  }\n  if (type == null) {\n    return '';\n  }\n  if (typeof type === 'function') {\n    if (enableComponentStackLocations) {\n      return describeNativeComponentFrame(type, shouldConstruct(type));\n    } else {\n      return describeFunctionComponentFrame(type, source, ownerFn);\n    }\n  }\n  if (typeof type === 'string') {\n    return describeBuiltInComponentFrame(type, source, ownerFn);\n  }\n  switch (type) {\n    case REACT_SUSPENSE_TYPE:\n      return describeBuiltInComponentFrame('Suspense', source, ownerFn);\n    case REACT_SUSPENSE_LIST_TYPE:\n      return describeBuiltInComponentFrame('SuspenseList', source, ownerFn);\n  }\n  if (typeof type === 'object') {\n    switch (type.$$typeof) {\n      case REACT_FORWARD_REF_TYPE:\n        return describeFunctionComponentFrame(type.render, source, ownerFn);\n      case REACT_MEMO_TYPE:\n        // Memo may contain any component type so we recursively resolve it.\n        return describeUnknownElementTypeFrameInDEV(type.type, source, ownerFn);\n      case REACT_LAZY_TYPE: {\n        const lazyComponent: LazyComponent<any, any> = (type: any);\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          // Lazy may contain any component type so we recursively resolve it.\n          return describeUnknownElementTypeFrameInDEV(\n            init(payload),\n            source,\n            ownerFn,\n          );\n        } catch (x) {}\n      }\n    }\n  }\n  return '';\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\n\nexport default hasOwnProperty;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nconst loggedTypeFailures = {};\n\nimport {describeUnknownElementTypeFrameInDEV} from 'shared/ReactComponentStackFrame';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport hasOwnProperty from 'shared/hasOwnProperty';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nfunction setCurrentlyValidatingElement(element) {\n  if (__DEV__) {\n    if (element) {\n      const owner = element._owner;\n      const stack = describeUnknownElementTypeFrameInDEV(\n        element.type,\n        element._source,\n        owner ? owner.type : null,\n      );\n      ReactDebugCurrentFrame.setExtraStackFrame(stack);\n    } else {\n      ReactDebugCurrentFrame.setExtraStackFrame(null);\n    }\n  }\n}\n\nexport default function checkPropTypes(\n  typeSpecs: Object,\n  values: Object,\n  location: string,\n  componentName: ?string,\n  element?: any,\n): void {\n  if (__DEV__) {\n    // $FlowFixMe This is okay but Flow doesn't know it.\n    const has = Function.call.bind(hasOwnProperty);\n    for (const typeSpecName in typeSpecs) {\n      if (has(typeSpecs, typeSpecName)) {\n        let error;\n        // Prop type validation may throw. In case they do, we don't want to\n        // fail the render phase where it didn't fail before. So we log it.\n        // After these have been cleaned up, we'll let them throw.\n        try {\n          // This is intentionally an invariant that gets caught. It's the same\n          // behavior as without this statement except with a better message.\n          if (typeof typeSpecs[typeSpecName] !== 'function') {\n            const err = Error(\n              (componentName || 'React class') +\n                ': ' +\n                location +\n                ' type `' +\n                typeSpecName +\n                '` is invalid; ' +\n                'it must be a function, usually from the `prop-types` package, but received `' +\n                typeof typeSpecs[typeSpecName] +\n                '`.' +\n                'This often happens because of typos such as `PropTypes.function` instead of `PropTypes.func`.',\n            );\n            err.name = 'Invariant Violation';\n            throw err;\n          }\n          error = typeSpecs[typeSpecName](\n            values,\n            typeSpecName,\n            componentName,\n            location,\n            null,\n            'SECRET_DO_NOT_PASS_THIS_OR_YOU_WILL_BE_FIRED',\n          );\n        } catch (ex) {\n          error = ex;\n        }\n        if (error && !(error instanceof Error)) {\n          setCurrentlyValidatingElement(element);\n          console.error(\n            '%s: type specification of %s' +\n              ' `%s` is invalid; the type checker ' +\n              'function must return `null` or an `Error` but returned a %s. ' +\n              'You may have forgotten to pass an argument to the type checker ' +\n              'creator (arrayOf, instanceOf, objectOf, oneOf, oneOfType, and ' +\n              'shape all require an argument).',\n            componentName || 'React class',\n            location,\n            typeSpecName,\n            typeof error,\n          );\n          setCurrentlyValidatingElement(null);\n        }\n        if (error instanceof Error && !(error.message in loggedTypeFailures)) {\n          // Only monitor this failure once because there tends to be a lot of the\n          // same error.\n          loggedTypeFailures[error.message] = true;\n          setCurrentlyValidatingElement(element);\n          console.error('Failed %s type: %s', location, error.message);\n          setCurrentlyValidatingElement(null);\n        }\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nexport type StackCursor<T> = {|current: T|};\n\nconst valueStack: Array<any> = [];\n\nlet fiberStack: Array<Fiber | null>;\n\nif (__DEV__) {\n  fiberStack = [];\n}\n\nlet index = -1;\n\nfunction createCursor<T>(defaultValue: T): StackCursor<T> {\n  return {\n    current: defaultValue,\n  };\n}\n\nfunction isEmpty(): boolean {\n  return index === -1;\n}\n\nfunction pop<T>(cursor: StackCursor<T>, fiber: Fiber): void {\n  if (index < 0) {\n    if (__DEV__) {\n      console.error('Unexpected pop.');\n    }\n    return;\n  }\n\n  if (__DEV__) {\n    if (fiber !== fiberStack[index]) {\n      console.error('Unexpected Fiber popped.');\n    }\n  }\n\n  cursor.current = valueStack[index];\n\n  valueStack[index] = null;\n\n  if (__DEV__) {\n    fiberStack[index] = null;\n  }\n\n  index--;\n}\n\nfunction push<T>(cursor: StackCursor<T>, value: T, fiber: Fiber): void {\n  index++;\n\n  valueStack[index] = cursor.current;\n\n  if (__DEV__) {\n    fiberStack[index] = fiber;\n  }\n\n  cursor.current = value;\n}\n\nfunction checkThatStackIsEmpty() {\n  if (__DEV__) {\n    if (index !== -1) {\n      console.error(\n        'Expected an empty stack. Something was not reset properly.',\n      );\n    }\n  }\n}\n\nfunction resetStackAfterFatalErrorInDev() {\n  if (__DEV__) {\n    index = -1;\n    valueStack.length = 0;\n    fiberStack.length = 0;\n  }\n}\n\nexport {\n  createCursor,\n  isEmpty,\n  pop,\n  push,\n  // DEV only:\n  checkThatStackIsEmpty,\n  resetStackAfterFatalErrorInDev,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {isFiberMounted} from './ReactFiberTreeReflection';\nimport {disableLegacyContext} from 'shared/ReactFeatureFlags';\nimport {ClassComponent, HostRoot} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport invariant from 'shared/invariant';\nimport checkPropTypes from 'shared/checkPropTypes';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nlet warnedAboutMissingGetChildContext;\n\nif (__DEV__) {\n  warnedAboutMissingGetChildContext = {};\n}\n\nexport const emptyContextObject = {};\nif (__DEV__) {\n  Object.freeze(emptyContextObject);\n}\n\n// A cursor to the current merged context object on the stack.\nconst contextStackCursor: StackCursor<Object> = createCursor(\n  emptyContextObject,\n);\n// A cursor to a boolean indicating whether the context has changed.\nconst didPerformWorkStackCursor: StackCursor<boolean> = createCursor(false);\n// Keep track of the previous context object that was on the stack.\n// We use this to get access to the parent context after we have already\n// pushed the next context provider, and now need to merge their contexts.\nlet previousContext: Object = emptyContextObject;\n\nfunction getUnmaskedContext(\n  workInProgress: Fiber,\n  Component: Function,\n  didPushOwnContextIfProvider: boolean,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    if (didPushOwnContextIfProvider && isContextProvider(Component)) {\n      // If the fiber is a context provider itself, when we read its context\n      // we may have already pushed its own child context on the stack. A context\n      // provider should not \"see\" its own child context. Therefore we read the\n      // previous (parent) context instead for a context provider.\n      return previousContext;\n    }\n    return contextStackCursor.current;\n  }\n}\n\nfunction cacheContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n  maskedContext: Object,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    instance.__reactInternalMemoizedUnmaskedChildContext = unmaskedContext;\n    instance.__reactInternalMemoizedMaskedChildContext = maskedContext;\n  }\n}\n\nfunction getMaskedContext(\n  workInProgress: Fiber,\n  unmaskedContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    const type = workInProgress.type;\n    const contextTypes = type.contextTypes;\n    if (!contextTypes) {\n      return emptyContextObject;\n    }\n\n    // Avoid recreating masked context unless unmasked context has changed.\n    // Failing to do this will result in unnecessary calls to componentWillReceiveProps.\n    // This may trigger infinite loops if componentWillReceiveProps calls setState.\n    const instance = workInProgress.stateNode;\n    if (\n      instance &&\n      instance.__reactInternalMemoizedUnmaskedChildContext === unmaskedContext\n    ) {\n      return instance.__reactInternalMemoizedMaskedChildContext;\n    }\n\n    const context = {};\n    for (const key in contextTypes) {\n      context[key] = unmaskedContext[key];\n    }\n\n    if (__DEV__) {\n      const name = getComponentNameFromFiber(workInProgress) || 'Unknown';\n      checkPropTypes(contextTypes, context, 'context', name);\n    }\n\n    // Cache unmasked context so we can avoid recreating masked context unless necessary.\n    // Context is created before the class component is instantiated so check for instance.\n    if (instance) {\n      cacheContext(workInProgress, unmaskedContext, context);\n    }\n\n    return context;\n  }\n}\n\nfunction hasContextChanged(): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    return didPerformWorkStackCursor.current;\n  }\n}\n\nfunction isContextProvider(type: Function): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const childContextTypes = type.childContextTypes;\n    return childContextTypes !== null && childContextTypes !== undefined;\n  }\n}\n\nfunction popContext(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction popTopLevelContextObject(fiber: Fiber): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    pop(didPerformWorkStackCursor, fiber);\n    pop(contextStackCursor, fiber);\n  }\n}\n\nfunction pushTopLevelContextObject(\n  fiber: Fiber,\n  context: Object,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    invariant(\n      contextStackCursor.current === emptyContextObject,\n      'Unexpected context found on stack. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    push(contextStackCursor, context, fiber);\n    push(didPerformWorkStackCursor, didChange, fiber);\n  }\n}\n\nfunction processChildContext(\n  fiber: Fiber,\n  type: any,\n  parentContext: Object,\n): Object {\n  if (disableLegacyContext) {\n    return parentContext;\n  } else {\n    const instance = fiber.stateNode;\n    const childContextTypes = type.childContextTypes;\n\n    // TODO (bvaughn) Replace this behavior with an invariant() in the future.\n    // It has only been added in Fiber to match the (unintentional) behavior in Stack.\n    if (typeof instance.getChildContext !== 'function') {\n      if (__DEV__) {\n        const componentName = getComponentNameFromFiber(fiber) || 'Unknown';\n\n        if (!warnedAboutMissingGetChildContext[componentName]) {\n          warnedAboutMissingGetChildContext[componentName] = true;\n          console.error(\n            '%s.childContextTypes is specified but there is no getChildContext() method ' +\n              'on the instance. You can either define getChildContext() on %s or remove ' +\n              'childContextTypes from it.',\n            componentName,\n            componentName,\n          );\n        }\n      }\n      return parentContext;\n    }\n\n    const childContext = instance.getChildContext();\n    for (const contextKey in childContext) {\n      invariant(\n        contextKey in childContextTypes,\n        '%s.getChildContext(): key \"%s\" is not defined in childContextTypes.',\n        getComponentNameFromFiber(fiber) || 'Unknown',\n        contextKey,\n      );\n    }\n    if (__DEV__) {\n      const name = getComponentNameFromFiber(fiber) || 'Unknown';\n      checkPropTypes(childContextTypes, childContext, 'child context', name);\n    }\n\n    return {...parentContext, ...childContext};\n  }\n}\n\nfunction pushContextProvider(workInProgress: Fiber): boolean {\n  if (disableLegacyContext) {\n    return false;\n  } else {\n    const instance = workInProgress.stateNode;\n    // We push the context as early as possible to ensure stack integrity.\n    // If the instance does not exist yet, we will push null at first,\n    // and replace it on the stack later when invalidating the context.\n    const memoizedMergedChildContext =\n      (instance && instance.__reactInternalMemoizedMergedChildContext) ||\n      emptyContextObject;\n\n    // Remember the parent context so we can merge with it later.\n    // Inherit the parent's did-perform-work value to avoid inadvertently blocking updates.\n    previousContext = contextStackCursor.current;\n    push(contextStackCursor, memoizedMergedChildContext, workInProgress);\n    push(\n      didPerformWorkStackCursor,\n      didPerformWorkStackCursor.current,\n      workInProgress,\n    );\n\n    return true;\n  }\n}\n\nfunction invalidateContextProvider(\n  workInProgress: Fiber,\n  type: any,\n  didChange: boolean,\n): void {\n  if (disableLegacyContext) {\n    return;\n  } else {\n    const instance = workInProgress.stateNode;\n    invariant(\n      instance,\n      'Expected to have an instance by this point. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    if (didChange) {\n      // Merge parent and own context.\n      // Skip this if we're not updating due to sCU.\n      // This avoids unnecessarily recomputing memoized values.\n      const mergedContext = processChildContext(\n        workInProgress,\n        type,\n        previousContext,\n      );\n      instance.__reactInternalMemoizedMergedChildContext = mergedContext;\n\n      // Replace the old (or empty) context with the new one.\n      // It is important to unwind the context in the reverse order.\n      pop(didPerformWorkStackCursor, workInProgress);\n      pop(contextStackCursor, workInProgress);\n      // Now push the new context and mark that it has changed.\n      push(contextStackCursor, mergedContext, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    } else {\n      pop(didPerformWorkStackCursor, workInProgress);\n      push(didPerformWorkStackCursor, didChange, workInProgress);\n    }\n  }\n}\n\nfunction findCurrentUnmaskedContext(fiber: Fiber): Object {\n  if (disableLegacyContext) {\n    return emptyContextObject;\n  } else {\n    // Currently this is only used with renderSubtreeIntoContainer; not sure if it\n    // makes sense elsewhere\n    invariant(\n      isFiberMounted(fiber) && fiber.tag === ClassComponent,\n      'Expected subtree parent to be a mounted class component. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n\n    let node = fiber;\n    do {\n      switch (node.tag) {\n        case HostRoot:\n          return node.stateNode.context;\n        case ClassComponent: {\n          const Component = node.type;\n          if (isContextProvider(Component)) {\n            return node.stateNode.__reactInternalMemoizedMergedChildContext;\n          }\n          break;\n        }\n      }\n      node = node.return;\n    } while (node !== null);\n    invariant(\n      false,\n      'Found unexpected detached subtree parent. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n}\n\nexport {\n  getUnmaskedContext,\n  cacheContext,\n  getMaskedContext,\n  hasContextChanged,\n  popContext,\n  popTopLevelContextObject,\n  pushTopLevelContextObject,\n  processChildContext,\n  isContextProvider,\n  pushContextProvider,\n  invalidateContextProvider,\n  findCurrentUnmaskedContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type RootTag = 0 | 1;\n\nexport const LegacyRoot = 0;\nexport const ConcurrentRoot = 1;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {SchedulerCallback} from './Scheduler';\n\nimport {\n  DiscreteEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n} from './ReactEventPriorities.old';\nimport {ImmediatePriority, scheduleCallback} from './Scheduler';\n\nlet syncQueue: Array<SchedulerCallback> | null = null;\nlet includesLegacySyncCallbacks: boolean = false;\nlet isFlushingSyncQueue: boolean = false;\n\nexport function scheduleSyncCallback(callback: SchedulerCallback) {\n  // Push this callback into an internal queue. We'll flush these either in\n  // the next tick, or earlier if something calls `flushSyncCallbackQueue`.\n  if (syncQueue === null) {\n    syncQueue = [callback];\n  } else {\n    // Push onto existing queue. Don't need to schedule a callback because\n    // we already scheduled one when we created the queue.\n    syncQueue.push(callback);\n  }\n}\n\nexport function scheduleLegacySyncCallback(callback: SchedulerCallback) {\n  includesLegacySyncCallbacks = true;\n  scheduleSyncCallback(callback);\n}\n\nexport function flushSyncCallbacksOnlyInLegacyMode() {\n  // Only flushes the queue if there's a legacy sync callback scheduled.\n  // TODO: There's only a single type of callback: performSyncOnWorkOnRoot. So\n  // it might make more sense for the queue to be a list of roots instead of a\n  // list of generic callbacks. Then we can have two: one for legacy roots, one\n  // for concurrent roots. And this method would only flush the legacy ones.\n  if (includesLegacySyncCallbacks) {\n    flushSyncCallbacks();\n  }\n}\n\nexport function flushSyncCallbacks() {\n  if (!isFlushingSyncQueue && syncQueue !== null) {\n    // Prevent re-entrance.\n    isFlushingSyncQueue = true;\n    let i = 0;\n    const previousUpdatePriority = getCurrentUpdatePriority();\n    try {\n      const isSync = true;\n      const queue = syncQueue;\n      // TODO: Is this necessary anymore? The only user code that runs in this\n      // queue is in the render or commit phases.\n      setCurrentUpdatePriority(DiscreteEventPriority);\n      for (; i < queue.length; i++) {\n        let callback = queue[i];\n        do {\n          callback = callback(isSync);\n        } while (callback !== null);\n      }\n      syncQueue = null;\n      includesLegacySyncCallbacks = false;\n    } catch (error) {\n      // If something throws, leave the remaining callbacks on the queue.\n      if (syncQueue !== null) {\n        syncQueue = syncQueue.slice(i + 1);\n      }\n      // Resume flushing in the next tick\n      scheduleCallback(ImmediatePriority, flushSyncCallbacks);\n      throw error;\n    } finally {\n      setCurrentUpdatePriority(previousUpdatePriority);\n      isFlushingSyncQueue = false;\n    }\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// TODO: this is special because it gets imported during build.\n//\n// TODO: 17.0.3 has not been released to NPM;\n// It exists as a placeholder so that DevTools can support work tag changes between releases.\n// When we next publish a release (either 17.0.3 or 17.1.0), update the matching TODO in backend/renderer.js\n// TODO: This module is used both by the release scripts and to expose a version\n// at runtime. We should instead inject the version number as part of the build\n// process, and use the ReactVersions.js module as the single source of truth.\nexport default '17.0.3';\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\n\nconst {ReactCurrentBatchConfig} = ReactSharedInternals;\n\nexport const NoTransition = 0;\n\nexport function requestCurrentTransition(): number {\n  return ReactCurrentBatchConfig.transition;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n/**\n * inlined Object.is polyfill to avoid requiring consumers ship their own\n * https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/is\n */\nfunction is(x: any, y: any) {\n  return (\n    (x === y && (x !== 0 || 1 / x === 1 / y)) || (x !== x && y !== y) // eslint-disable-line no-self-compare\n  );\n}\n\nconst objectIs: (x: any, y: any) => boolean =\n  typeof Object.is === 'function' ? Object.is : is;\n\nexport default objectIs;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport is from './objectIs';\nimport hasOwnProperty from './hasOwnProperty';\n\n/**\n * Performs equality by iterating through keys on an object and returning false\n * when any key has values which are not strictly equal between the arguments.\n * Returns true when the values of all keys are strictly equal.\n */\nfunction shallowEqual(objA: mixed, objB: mixed): boolean {\n  if (is(objA, objB)) {\n    return true;\n  }\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false;\n  }\n\n  const keysA = Object.keys(objA);\n  const keysB = Object.keys(objB);\n\n  if (keysA.length !== keysB.length) {\n    return false;\n  }\n\n  // Test for A's keys different from B.\n  for (let i = 0; i < keysA.length; i++) {\n    if (\n      !hasOwnProperty.call(objB, keysA[i]) ||\n      !is(objA[keysA[i]], objB[keysA[i]])\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default shallowEqual;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  HostComponent,\n  LazyComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  IndeterminateComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n  ClassComponent,\n} from './ReactWorkTags';\nimport {\n  describeBuiltInComponentFrame,\n  describeFunctionComponentFrame,\n  describeClassComponentFrame,\n} from 'shared/ReactComponentStackFrame';\n\nfunction describeFiber(fiber: Fiber): string {\n  const owner: null | Function = __DEV__\n    ? fiber._debugOwner\n      ? fiber._debugOwner.type\n      : null\n    : null;\n  const source = __DEV__ ? fiber._debugSource : null;\n  switch (fiber.tag) {\n    case HostComponent:\n      return describeBuiltInComponentFrame(fiber.type, source, owner);\n    case LazyComponent:\n      return describeBuiltInComponentFrame('Lazy', source, owner);\n    case SuspenseComponent:\n      return describeBuiltInComponentFrame('Suspense', source, owner);\n    case SuspenseListComponent:\n      return describeBuiltInComponentFrame('SuspenseList', source, owner);\n    case FunctionComponent:\n    case IndeterminateComponent:\n    case SimpleMemoComponent:\n      return describeFunctionComponentFrame(fiber.type, source, owner);\n    case ForwardRef:\n      return describeFunctionComponentFrame(fiber.type.render, source, owner);\n    case ClassComponent:\n      return describeClassComponentFrame(fiber.type, source, owner);\n    default:\n      return '';\n  }\n}\n\nexport function getStackByFiberInDevAndProd(workInProgress: Fiber): string {\n  try {\n    let info = '';\n    let node = workInProgress;\n    do {\n      info += describeFiber(node);\n      node = node.return;\n    } while (node);\n    return info;\n  } catch (x) {\n    return '\\nError generating stack: ' + x.message + '\\n' + x.stack;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n\nconst ReactDebugCurrentFrame = ReactSharedInternals.ReactDebugCurrentFrame;\n\nexport let current: Fiber | null = null;\nexport let isRendering: boolean = false;\n\nexport function getCurrentFiberOwnerNameInDevOrNull(): string | null {\n  if (__DEV__) {\n    if (current === null) {\n      return null;\n    }\n    const owner = current._debugOwner;\n    if (owner !== null && typeof owner !== 'undefined') {\n      return getComponentNameFromFiber(owner);\n    }\n  }\n  return null;\n}\n\nfunction getCurrentFiberStackInDev(): string {\n  if (__DEV__) {\n    if (current === null) {\n      return '';\n    }\n    // Safe because if current fiber exists, we are reconciling,\n    // and it is guaranteed to be the work-in-progress version.\n    return getStackByFiberInDevAndProd(current);\n  }\n  return '';\n}\n\nexport function resetCurrentFiber() {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = null;\n    current = null;\n    isRendering = false;\n  }\n}\n\nexport function setCurrentFiber(fiber: Fiber) {\n  if (__DEV__) {\n    ReactDebugCurrentFrame.getCurrentStack = getCurrentFiberStackInDev;\n    current = fiber;\n    isRendering = false;\n  }\n}\n\nexport function setIsRendering(rendering: boolean) {\n  if (__DEV__) {\n    isRendering = rendering;\n  }\n}\n\nexport function getIsRendering() {\n  if (__DEV__) {\n    return isRendering;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\n\ntype FiberArray = Array<Fiber>;\ntype FiberToFiberComponentsMap = Map<Fiber, FiberArray>;\n\nconst ReactStrictModeWarnings = {\n  recordUnsafeLifecycleWarnings(fiber: Fiber, instance: any): void {},\n  flushPendingUnsafeLifecycleWarnings(): void {},\n  recordLegacyContextWarning(fiber: Fiber, instance: any): void {},\n  flushLegacyContextWarning(): void {},\n  discardPendingWarnings(): void {},\n};\n\nif (__DEV__) {\n  const findStrictRoot = (fiber: Fiber): Fiber | null => {\n    let maybeStrictRoot = null;\n\n    let node = fiber;\n    while (node !== null) {\n      if (node.mode & StrictLegacyMode) {\n        maybeStrictRoot = node;\n      }\n      node = node.return;\n    }\n\n    return maybeStrictRoot;\n  };\n\n  const setToSortedString = set => {\n    const array = [];\n    set.forEach(value => {\n      array.push(value);\n    });\n    return array.sort().join(', ');\n  };\n\n  let pendingComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillMountWarnings: Array<Fiber> = [];\n  let pendingComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillReceivePropsWarnings: Array<Fiber> = [];\n  let pendingComponentWillUpdateWarnings: Array<Fiber> = [];\n  let pendingUNSAFE_ComponentWillUpdateWarnings: Array<Fiber> = [];\n\n  // Tracks components we have already warned about.\n  const didWarnAboutUnsafeLifecycles = new Set();\n\n  ReactStrictModeWarnings.recordUnsafeLifecycleWarnings = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    // Dedupe strategy: Warn once per component.\n    if (didWarnAboutUnsafeLifecycles.has(fiber.type)) {\n      return;\n    }\n\n    if (\n      typeof instance.componentWillMount === 'function' &&\n      // Don't warn about react-lifecycles-compat polyfilled components.\n      instance.componentWillMount.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillMount === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillMountWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillReceiveProps === 'function' &&\n      instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.push(fiber);\n    }\n\n    if (\n      typeof instance.componentWillUpdate === 'function' &&\n      instance.componentWillUpdate.__suppressDeprecationWarning !== true\n    ) {\n      pendingComponentWillUpdateWarnings.push(fiber);\n    }\n\n    if (\n      fiber.mode & StrictLegacyMode &&\n      typeof instance.UNSAFE_componentWillUpdate === 'function'\n    ) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings = () => {\n    // We do an initial pass to gather component names\n    const componentWillMountUniqueNames = new Set();\n    if (pendingComponentWillMountWarnings.length > 0) {\n      pendingComponentWillMountWarnings.forEach(fiber => {\n        componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingComponentWillMountWarnings = [];\n    }\n\n    const UNSAFE_componentWillMountUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillMountWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillMountWarnings.forEach(fiber => {\n        UNSAFE_componentWillMountUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n      pendingUNSAFE_ComponentWillMountWarnings = [];\n    }\n\n    const componentWillReceivePropsUniqueNames = new Set();\n    if (pendingComponentWillReceivePropsWarnings.length > 0) {\n      pendingComponentWillReceivePropsWarnings.forEach(fiber => {\n        componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillReceivePropsWarnings = [];\n    }\n\n    const UNSAFE_componentWillReceivePropsUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillReceivePropsWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillReceivePropsWarnings.forEach(fiber => {\n        UNSAFE_componentWillReceivePropsUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    }\n\n    const componentWillUpdateUniqueNames = new Set();\n    if (pendingComponentWillUpdateWarnings.length > 0) {\n      pendingComponentWillUpdateWarnings.forEach(fiber => {\n        componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingComponentWillUpdateWarnings = [];\n    }\n\n    const UNSAFE_componentWillUpdateUniqueNames = new Set();\n    if (pendingUNSAFE_ComponentWillUpdateWarnings.length > 0) {\n      pendingUNSAFE_ComponentWillUpdateWarnings.forEach(fiber => {\n        UNSAFE_componentWillUpdateUniqueNames.add(\n          getComponentNameFromFiber(fiber) || 'Component',\n        );\n        didWarnAboutUnsafeLifecycles.add(fiber.type);\n      });\n\n      pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    }\n\n    // Finally, we flush all the warnings\n    // UNSAFE_ ones before the deprecated ones, since they'll be 'louder'\n    if (UNSAFE_componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillMountUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillMount in strict mode is not recommended and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillReceivePropsUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillReceiveProps in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, \" +\n          'refactor your code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (UNSAFE_componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        UNSAFE_componentWillUpdateUniqueNames,\n      );\n      console.error(\n        'Using UNSAFE_componentWillUpdate in strict mode is not recommended ' +\n          'and may indicate bugs in your code. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillMountUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillMountUniqueNames);\n\n      console.warn(\n        'componentWillMount has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move code with side effects to componentDidMount, and set initial state in the constructor.\\n' +\n          '* Rename componentWillMount to UNSAFE_componentWillMount to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillReceivePropsUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(\n        componentWillReceivePropsUniqueNames,\n      );\n\n      console.warn(\n        'componentWillReceiveProps has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          \"* If you're updating state whenever props change, refactor your \" +\n          'code to use memoization techniques or move it to ' +\n          'static getDerivedStateFromProps. Learn more at: https://reactjs.org/link/derived-state\\n' +\n          '* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n\n    if (componentWillUpdateUniqueNames.size > 0) {\n      const sortedNames = setToSortedString(componentWillUpdateUniqueNames);\n\n      console.warn(\n        'componentWillUpdate has been renamed, and is not recommended for use. ' +\n          'See https://reactjs.org/link/unsafe-component-lifecycles for details.\\n\\n' +\n          '* Move data fetching code or side effects to componentDidUpdate.\\n' +\n          '* Rename componentWillUpdate to UNSAFE_componentWillUpdate to suppress ' +\n          'this warning in non-strict mode. In React 18.x, only the UNSAFE_ name will work. ' +\n          'To rename all deprecated lifecycles to their new names, you can run ' +\n          '`npx react-codemod rename-unsafe-lifecycles` in your project source folder.\\n' +\n          '\\nPlease update the following components: %s',\n        sortedNames,\n      );\n    }\n  };\n\n  let pendingLegacyContextWarning: FiberToFiberComponentsMap = new Map();\n\n  // Tracks components we have already warned about.\n  const didWarnAboutLegacyContext = new Set();\n\n  ReactStrictModeWarnings.recordLegacyContextWarning = (\n    fiber: Fiber,\n    instance: any,\n  ) => {\n    const strictRoot = findStrictRoot(fiber);\n    if (strictRoot === null) {\n      console.error(\n        'Expected to find a StrictMode component in a strict mode tree. ' +\n          'This error is likely caused by a bug in React. Please file an issue.',\n      );\n      return;\n    }\n\n    // Dedup strategy: Warn once per component.\n    if (didWarnAboutLegacyContext.has(fiber.type)) {\n      return;\n    }\n\n    let warningsForRoot = pendingLegacyContextWarning.get(strictRoot);\n\n    if (\n      fiber.type.contextTypes != null ||\n      fiber.type.childContextTypes != null ||\n      (instance !== null && typeof instance.getChildContext === 'function')\n    ) {\n      if (warningsForRoot === undefined) {\n        warningsForRoot = [];\n        pendingLegacyContextWarning.set(strictRoot, warningsForRoot);\n      }\n      warningsForRoot.push(fiber);\n    }\n  };\n\n  ReactStrictModeWarnings.flushLegacyContextWarning = () => {\n    ((pendingLegacyContextWarning: any): FiberToFiberComponentsMap).forEach(\n      (fiberArray: FiberArray, strictRoot) => {\n        if (fiberArray.length === 0) {\n          return;\n        }\n        const firstFiber = fiberArray[0];\n\n        const uniqueNames = new Set();\n        fiberArray.forEach(fiber => {\n          uniqueNames.add(getComponentNameFromFiber(fiber) || 'Component');\n          didWarnAboutLegacyContext.add(fiber.type);\n        });\n\n        const sortedNames = setToSortedString(uniqueNames);\n\n        try {\n          setCurrentDebugFiberInDEV(firstFiber);\n          console.error(\n            'Legacy context API has been detected within a strict-mode tree.' +\n              '\\n\\nThe old API will be supported in all 16.x releases, but applications ' +\n              'using it should migrate to the new version.' +\n              '\\n\\nPlease update the following components: %s' +\n              '\\n\\nLearn more about this warning here: https://reactjs.org/link/legacy-context',\n            sortedNames,\n          );\n        } finally {\n          resetCurrentDebugFiberInDEV();\n        }\n      },\n    );\n  };\n\n  ReactStrictModeWarnings.discardPendingWarnings = () => {\n    pendingComponentWillMountWarnings = [];\n    pendingUNSAFE_ComponentWillMountWarnings = [];\n    pendingComponentWillReceivePropsWarnings = [];\n    pendingUNSAFE_ComponentWillReceivePropsWarnings = [];\n    pendingComponentWillUpdateWarnings = [];\n    pendingUNSAFE_ComponentWillUpdateWarnings = [];\n    pendingLegacyContextWarning = new Map();\n  };\n}\n\nexport default ReactStrictModeWarnings;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport function resolveDefaultProps(Component: any, baseProps: Object): Object {\n  if (Component && Component.defaultProps) {\n    // Resolve default props. Taken from ReactElement\n    const props = Object.assign({}, baseProps);\n    const defaultProps = Component.defaultProps;\n    for (const propName in defaultProps) {\n      if (props[propName] === undefined) {\n        props[propName] = defaultProps[propName];\n      }\n    }\n    return props;\n  }\n  return baseProps;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext, ReactProviderType} from 'shared/ReactTypes';\nimport type {\n  Fiber,\n  ContextDependency,\n  Dependencies,\n} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SharedQueue} from './ReactUpdateQueue.old';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {\n  ContextProvider,\n  ClassComponent,\n  DehydratedFragment,\n} from './ReactWorkTags';\nimport {\n  NoLanes,\n  NoTimestamp,\n  isSubsetOfLanes,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\nimport {\n  NoFlags,\n  DidPropagateContext,\n  NeedsPropagation,\n} from './ReactFiberFlags';\n\nimport invariant from 'shared/invariant';\nimport is from 'shared/objectIs';\nimport {createUpdate, ForceUpdate} from './ReactUpdateQueue.old';\nimport {markWorkInProgressReceivedUpdate} from './ReactFiberBeginWork.old';\nimport {\n  enableSuspenseServerRenderer,\n  enableLazyContextPropagation,\n} from 'shared/ReactFeatureFlags';\n\nconst valueCursor: StackCursor<mixed> = createCursor(null);\n\nlet rendererSigil;\nif (__DEV__) {\n  // Use this to detect multiple renderers using the same context\n  rendererSigil = {};\n}\n\nlet currentlyRenderingFiber: Fiber | null = null;\nlet lastContextDependency: ContextDependency<mixed> | null = null;\nlet lastFullyObservedContext: ReactContext<any> | null = null;\n\nlet isDisallowedContextReadInDEV: boolean = false;\n\nexport function resetContextDependencies(): void {\n  // This is called right before React yields execution, to ensure `readContext`\n  // cannot be called outside the render phase.\n  currentlyRenderingFiber = null;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function enterDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = true;\n  }\n}\n\nexport function exitDisallowedContextReadInDEV(): void {\n  if (__DEV__) {\n    isDisallowedContextReadInDEV = false;\n  }\n}\n\nexport function pushProvider<T>(\n  providerFiber: Fiber,\n  context: ReactContext<T>,\n  nextValue: T,\n): void {\n  if (isPrimaryRenderer) {\n    push(valueCursor, context._currentValue, providerFiber);\n\n    context._currentValue = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer !== undefined &&\n        context._currentRenderer !== null &&\n        context._currentRenderer !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer = rendererSigil;\n    }\n  } else {\n    push(valueCursor, context._currentValue2, providerFiber);\n\n    context._currentValue2 = nextValue;\n    if (__DEV__) {\n      if (\n        context._currentRenderer2 !== undefined &&\n        context._currentRenderer2 !== null &&\n        context._currentRenderer2 !== rendererSigil\n      ) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same context provider. This is currently unsupported.',\n        );\n      }\n      context._currentRenderer2 = rendererSigil;\n    }\n  }\n}\n\nexport function popProvider(\n  context: ReactContext<any>,\n  providerFiber: Fiber,\n): void {\n  const currentValue = valueCursor.current;\n  pop(valueCursor, providerFiber);\n  if (isPrimaryRenderer) {\n    context._currentValue = currentValue;\n  } else {\n    context._currentValue2 = currentValue;\n  }\n}\n\nexport function scheduleWorkOnParentPath(\n  parent: Fiber | null,\n  renderLanes: Lanes,\n) {\n  // Update the child lanes of all the ancestors, including the alternates.\n  let node = parent;\n  while (node !== null) {\n    const alternate = node.alternate;\n    if (!isSubsetOfLanes(node.childLanes, renderLanes)) {\n      node.childLanes = mergeLanes(node.childLanes, renderLanes);\n      if (alternate !== null) {\n        alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n      }\n    } else if (\n      alternate !== null &&\n      !isSubsetOfLanes(alternate.childLanes, renderLanes)\n    ) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, renderLanes);\n    } else {\n      // Neither alternate was updated, which means the rest of the\n      // ancestor path already has sufficient priority.\n      break;\n    }\n    node = node.return;\n  }\n}\n\nexport function propagateContextChange<T>(\n  workInProgress: Fiber,\n  context: ReactContext<T>,\n  renderLanes: Lanes,\n): void {\n  if (enableLazyContextPropagation) {\n    // TODO: This path is only used by Cache components. Update\n    // lazilyPropagateParentContextChanges to look for Cache components so they\n    // can take advantage of lazy propagation.\n    const forcePropagateEntireTree = true;\n    propagateContextChanges(\n      workInProgress,\n      [context],\n      renderLanes,\n      forcePropagateEntireTree,\n    );\n  } else {\n    propagateContextChange_eager(workInProgress, context, renderLanes);\n  }\n}\n\nfunction propagateContextChange_eager<T>(\n  workInProgress: Fiber,\n  context: ReactContext<T>,\n  renderLanes: Lanes,\n): void {\n  // Only used by eager implementation\n  if (enableLazyContextPropagation) {\n    return;\n  }\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dependency = list.firstContext;\n      while (dependency !== null) {\n        // Check if the context matches.\n        if (dependency.context === context) {\n          // Match! Schedule an update on this fiber.\n          if (fiber.tag === ClassComponent) {\n            // Schedule a force update on the work-in-progress.\n            const lane = pickArbitraryLane(renderLanes);\n            const update = createUpdate(NoTimestamp, lane);\n            update.tag = ForceUpdate;\n            // TODO: Because we don't have a work-in-progress, this will add the\n            // update to the current fiber, too, which means it will persist even if\n            // this render is thrown away. Since it's a race condition, not sure it's\n            // worth fixing.\n\n            // Inlined `enqueueUpdate` to remove interleaved update check\n            const updateQueue = fiber.updateQueue;\n            if (updateQueue === null) {\n              // Only occurs if the fiber has been unmounted.\n            } else {\n              const sharedQueue: SharedQueue<any> = (updateQueue: any).shared;\n              const pending = sharedQueue.pending;\n              if (pending === null) {\n                // This is the first update. Create a circular list.\n                update.next = update;\n              } else {\n                update.next = pending.next;\n                pending.next = update;\n              }\n              sharedQueue.pending = update;\n            }\n          }\n\n          fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n          const alternate = fiber.alternate;\n          if (alternate !== null) {\n            alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n          }\n          scheduleWorkOnParentPath(fiber.return, renderLanes);\n\n          // Mark the updated lanes on the list, too.\n          list.lanes = mergeLanes(list.lanes, renderLanes);\n\n          // Since we already found a match, we can stop traversing the\n          // dependency list.\n          break;\n        }\n        dependency = dependency.next;\n      }\n    } else if (fiber.tag === ContextProvider) {\n      // Don't scan deeper if this is a matching provider\n      nextFiber = fiber.type === workInProgress.type ? null : fiber.child;\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedFragment\n    ) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n      invariant(\n        parentSuspense !== null,\n        'We just came from a parent so we must have had a parent. This is a bug in React.',\n      );\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(parentSuspense, renderLanes);\n      nextFiber = fiber.sibling;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nfunction propagateContextChanges<T>(\n  workInProgress: Fiber,\n  contexts: Array<any>,\n  renderLanes: Lanes,\n  forcePropagateEntireTree: boolean,\n): void {\n  // Only used by lazy implementation\n  if (!enableLazyContextPropagation) {\n    return;\n  }\n  let fiber = workInProgress.child;\n  if (fiber !== null) {\n    // Set the return pointer of the child to the work-in-progress fiber.\n    fiber.return = workInProgress;\n  }\n  while (fiber !== null) {\n    let nextFiber;\n\n    // Visit this fiber.\n    const list = fiber.dependencies;\n    if (list !== null) {\n      nextFiber = fiber.child;\n\n      let dep = list.firstContext;\n      findChangedDep: while (dep !== null) {\n        // Assigning these to constants to help Flow\n        const dependency = dep;\n        const consumer = fiber;\n        findContext: for (let i = 0; i < contexts.length; i++) {\n          const context: ReactContext<T> = contexts[i];\n          // Check if the context matches.\n          // TODO: Compare selected values to bail out early.\n          if (dependency.context === context) {\n            // Match! Schedule an update on this fiber.\n\n            // In the lazy implementation, don't mark a dirty flag on the\n            // dependency itself. Not all changes are propagated, so we can't\n            // rely on the propagation function alone to determine whether\n            // something has changed; the consumer will check. In the future, we\n            // could add back a dirty flag as an optimization to avoid double\n            // checking, but until we have selectors it's not really worth\n            // the trouble.\n            consumer.lanes = mergeLanes(consumer.lanes, renderLanes);\n            const alternate = consumer.alternate;\n            if (alternate !== null) {\n              alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n            }\n            scheduleWorkOnParentPath(consumer.return, renderLanes);\n\n            if (!forcePropagateEntireTree) {\n              // During lazy propagation, when we find a match, we can defer\n              // propagating changes to the children, because we're going to\n              // visit them during render. We should continue propagating the\n              // siblings, though\n              nextFiber = null;\n            }\n\n            // Since we already found a match, we can stop traversing the\n            // dependency list.\n            break findChangedDep;\n          }\n        }\n        dep = dependency.next;\n      }\n    } else if (\n      enableSuspenseServerRenderer &&\n      fiber.tag === DehydratedFragment\n    ) {\n      // If a dehydrated suspense boundary is in this subtree, we don't know\n      // if it will have any context consumers in it. The best we can do is\n      // mark it as having updates.\n      const parentSuspense = fiber.return;\n      invariant(\n        parentSuspense !== null,\n        'We just came from a parent so we must have had a parent. This is a bug in React.',\n      );\n      parentSuspense.lanes = mergeLanes(parentSuspense.lanes, renderLanes);\n      const alternate = parentSuspense.alternate;\n      if (alternate !== null) {\n        alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n      }\n      // This is intentionally passing this fiber as the parent\n      // because we want to schedule this fiber as having work\n      // on its children. We'll use the childLanes on\n      // this fiber to indicate that a context has changed.\n      scheduleWorkOnParentPath(parentSuspense, renderLanes);\n      nextFiber = null;\n    } else {\n      // Traverse down.\n      nextFiber = fiber.child;\n    }\n\n    if (nextFiber !== null) {\n      // Set the return pointer of the child to the work-in-progress fiber.\n      nextFiber.return = fiber;\n    } else {\n      // No child. Traverse to next sibling.\n      nextFiber = fiber;\n      while (nextFiber !== null) {\n        if (nextFiber === workInProgress) {\n          // We're back to the root of this subtree. Exit.\n          nextFiber = null;\n          break;\n        }\n        const sibling = nextFiber.sibling;\n        if (sibling !== null) {\n          // Set the return pointer of the sibling to the work-in-progress fiber.\n          sibling.return = nextFiber.return;\n          nextFiber = sibling;\n          break;\n        }\n        // No more siblings. Traverse up.\n        nextFiber = nextFiber.return;\n      }\n    }\n    fiber = nextFiber;\n  }\n}\n\nexport function lazilyPropagateParentContextChanges(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const forcePropagateEntireTree = false;\n  propagateParentContextChanges(\n    current,\n    workInProgress,\n    renderLanes,\n    forcePropagateEntireTree,\n  );\n}\n\n// Used for propagating a deferred tree (Suspense, Offscreen). We must propagate\n// to the entire subtree, because we won't revisit it until after the current\n// render has completed, at which point we'll have lost track of which providers\n// have changed.\nexport function propagateParentContextChangesToDeferredTree(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const forcePropagateEntireTree = true;\n  propagateParentContextChanges(\n    current,\n    workInProgress,\n    renderLanes,\n    forcePropagateEntireTree,\n  );\n}\n\nfunction propagateParentContextChanges(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n  forcePropagateEntireTree: boolean,\n) {\n  if (!enableLazyContextPropagation) {\n    return;\n  }\n\n  // Collect all the parent providers that changed. Since this is usually small\n  // number, we use an Array instead of Set.\n  let contexts = null;\n  let parent = workInProgress;\n  let isInsidePropagationBailout = false;\n  while (parent !== null) {\n    if (!isInsidePropagationBailout) {\n      if ((parent.flags & NeedsPropagation) !== NoFlags) {\n        isInsidePropagationBailout = true;\n      } else if ((parent.flags & DidPropagateContext) !== NoFlags) {\n        break;\n      }\n    }\n\n    if (parent.tag === ContextProvider) {\n      const currentParent = parent.alternate;\n      invariant(\n        currentParent !== null,\n        'Should have a current fiber. This is a bug in React.',\n      );\n      const oldProps = currentParent.memoizedProps;\n      if (oldProps !== null) {\n        const providerType: ReactProviderType<any> = parent.type;\n        const context: ReactContext<any> = providerType._context;\n\n        const newProps = parent.pendingProps;\n        const newValue = newProps.value;\n\n        const oldValue = oldProps.value;\n\n        if (!is(newValue, oldValue)) {\n          if (contexts !== null) {\n            contexts.push(context);\n          } else {\n            contexts = [context];\n          }\n        }\n      }\n    }\n    parent = parent.return;\n  }\n\n  if (contexts !== null) {\n    // If there were any changed providers, search through the children and\n    // propagate their changes.\n    propagateContextChanges(\n      workInProgress,\n      contexts,\n      renderLanes,\n      forcePropagateEntireTree,\n    );\n  }\n\n  // This is an optimization so that we only propagate once per subtree. If a\n  // deeply nested child bails out, and it calls this propagation function, it\n  // uses this flag to know that the remaining ancestor providers have already\n  // been propagated.\n  //\n  // NOTE: This optimization is only necessary because we sometimes enter the\n  // begin phase of nodes that don't have any work scheduled on them —\n  // specifically, the siblings of a node that _does_ have scheduled work. The\n  // siblings will bail out and call this function again, even though we already\n  // propagated content changes to it and its subtree. So we use this flag to\n  // mark that the parent providers already propagated.\n  //\n  // Unfortunately, though, we need to ignore this flag when we're inside a\n  // tree whose context propagation was deferred — that's what the\n  // `NeedsPropagation` flag is for.\n  //\n  // If we could instead bail out before entering the siblings' begin phase,\n  // then we could remove both `DidPropagateContext` and `NeedsPropagation`.\n  // Consider this as part of the next refactor to the fiber tree structure.\n  workInProgress.flags |= DidPropagateContext;\n}\n\nexport function checkIfContextChanged(currentDependencies: Dependencies) {\n  if (!enableLazyContextPropagation) {\n    return false;\n  }\n  // Iterate over the current dependencies to see if something changed. This\n  // only gets called if props and state has already bailed out, so it's a\n  // relatively uncommon path, except at the root of a changed subtree.\n  // Alternatively, we could move these comparisons into `readContext`, but\n  // that's a much hotter path, so I think this is an appropriate trade off.\n  let dependency = currentDependencies.firstContext;\n  while (dependency !== null) {\n    const context = dependency.context;\n    const newValue = isPrimaryRenderer\n      ? context._currentValue\n      : context._currentValue2;\n    const oldValue = dependency.memoizedValue;\n    if (!is(newValue, oldValue)) {\n      return true;\n    }\n    dependency = dependency.next;\n  }\n  return false;\n}\n\nexport function prepareToReadContext(\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): void {\n  currentlyRenderingFiber = workInProgress;\n  lastContextDependency = null;\n  lastFullyObservedContext = null;\n\n  const dependencies = workInProgress.dependencies;\n  if (dependencies !== null) {\n    if (enableLazyContextPropagation) {\n      // Reset the work-in-progress list\n      dependencies.firstContext = null;\n    } else {\n      const firstContext = dependencies.firstContext;\n      if (firstContext !== null) {\n        if (includesSomeLane(dependencies.lanes, renderLanes)) {\n          // Context list has a pending update. Mark that this fiber performed work.\n          markWorkInProgressReceivedUpdate();\n        }\n        // Reset the work-in-progress list\n        dependencies.firstContext = null;\n      }\n    }\n  }\n}\n\nexport function readContext<T>(context: ReactContext<T>): T {\n  if (__DEV__) {\n    // This warning would fire if you read context inside a Hook like useMemo.\n    // Unlike the class check below, it's not enforced in production for perf.\n    if (isDisallowedContextReadInDEV) {\n      console.error(\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n    }\n  }\n\n  const value = isPrimaryRenderer\n    ? context._currentValue\n    : context._currentValue2;\n\n  if (lastFullyObservedContext === context) {\n    // Nothing to do. We already observe everything in this context.\n  } else {\n    const contextItem = {\n      context: ((context: any): ReactContext<mixed>),\n      memoizedValue: value,\n      next: null,\n    };\n\n    if (lastContextDependency === null) {\n      invariant(\n        currentlyRenderingFiber !== null,\n        'Context can only be read while React is rendering. ' +\n          'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n          'In function components, you can read it directly in the function body, but not ' +\n          'inside Hooks like useReducer() or useMemo().',\n      );\n\n      // This is the first dependency for this component. Create a new list.\n      lastContextDependency = contextItem;\n      currentlyRenderingFiber.dependencies = {\n        lanes: NoLanes,\n        firstContext: contextItem,\n      };\n      if (enableLazyContextPropagation) {\n        currentlyRenderingFiber.flags |= NeedsPropagation;\n      }\n    } else {\n      // Append a new context item.\n      lastContextDependency = lastContextDependency.next = contextItem;\n    }\n  }\n  return value;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {UpdateQueue as HookQueue} from './ReactFiberHooks.old';\nimport type {SharedQueue as ClassQueue} from './ReactUpdateQueue.old';\n\n// An array of all update queues that received updates during the current\n// render. When this render exits, either because it finishes or because it is\n// interrupted, the interleaved updates will be transferred onto the main part\n// of the queue.\nlet interleavedQueues: Array<\n  HookQueue<any, any> | ClassQueue<any>,\n> | null = null;\n\nexport function pushInterleavedQueue(\n  queue: HookQueue<any, any> | ClassQueue<any>,\n) {\n  if (interleavedQueues === null) {\n    interleavedQueues = [queue];\n  } else {\n    interleavedQueues.push(queue);\n  }\n}\n\nexport function enqueueInterleavedUpdates() {\n  // Transfer the interleaved updates onto the main queue. Each queue has a\n  // `pending` field and an `interleaved` field. When they are not null, they\n  // point to the last node in a circular linked list. We need to append the\n  // interleaved list to the end of the pending list by joining them into a\n  // single, circular list.\n  if (interleavedQueues !== null) {\n    for (let i = 0; i < interleavedQueues.length; i++) {\n      const queue = interleavedQueues[i];\n      const lastInterleavedUpdate = queue.interleaved;\n      if (lastInterleavedUpdate !== null) {\n        queue.interleaved = null;\n        const firstInterleavedUpdate = lastInterleavedUpdate.next;\n        const lastPendingUpdate = queue.pending;\n        if (lastPendingUpdate !== null) {\n          const firstPendingUpdate = lastPendingUpdate.next;\n          lastPendingUpdate.next = (firstInterleavedUpdate: any);\n          lastInterleavedUpdate.next = (firstPendingUpdate: any);\n        }\n        queue.pending = (lastInterleavedUpdate: any);\n      }\n    }\n    interleavedQueues = null;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\n// UpdateQueue is a linked list of prioritized updates.\n//\n// Like fibers, update queues come in pairs: a current queue, which represents\n// the visible state of the screen, and a work-in-progress queue, which can be\n// mutated and processed asynchronously before it is committed — a form of\n// double buffering. If a work-in-progress render is discarded before finishing,\n// we create a new work-in-progress by cloning the current queue.\n//\n// Both queues share a persistent, singly-linked list structure. To schedule an\n// update, we append it to the end of both queues. Each queue maintains a\n// pointer to first update in the persistent list that hasn't been processed.\n// The work-in-progress pointer always has a position equal to or greater than\n// the current queue, since we always work on that one. The current queue's\n// pointer is only updated during the commit phase, when we swap in the\n// work-in-progress.\n//\n// For example:\n//\n//   Current pointer:           A - B - C - D - E - F\n//   Work-in-progress pointer:              D - E - F\n//                                          ^\n//                                          The work-in-progress queue has\n//                                          processed more updates than current.\n//\n// The reason we append to both queues is because otherwise we might drop\n// updates without ever processing them. For example, if we only add updates to\n// the work-in-progress queue, some updates could be lost whenever a work-in\n// -progress render restarts by cloning from current. Similarly, if we only add\n// updates to the current queue, the updates will be lost whenever an already\n// in-progress queue commits and swaps with the current queue. However, by\n// adding to both queues, we guarantee that the update will be part of the next\n// work-in-progress. (And because the work-in-progress queue becomes the\n// current queue once it commits, there's no danger of applying the same\n// update twice.)\n//\n// Prioritization\n// --------------\n//\n// Updates are not sorted by priority, but by insertion; new updates are always\n// appended to the end of the list.\n//\n// The priority is still important, though. When processing the update queue\n// during the render phase, only the updates with sufficient priority are\n// included in the result. If we skip an update because it has insufficient\n// priority, it remains in the queue to be processed later, during a lower\n// priority render. Crucially, all updates subsequent to a skipped update also\n// remain in the queue *regardless of their priority*. That means high priority\n// updates are sometimes processed twice, at two separate priorities. We also\n// keep track of a base state, that represents the state before the first\n// update in the queue is applied.\n//\n// For example:\n//\n//   Given a base state of '', and the following queue of updates\n//\n//     A1 - B2 - C1 - D2\n//\n//   where the number indicates the priority, and the update is applied to the\n//   previous state by appending a letter, React will process these updates as\n//   two separate renders, one per distinct priority level:\n//\n//   First render, at priority 1:\n//     Base state: ''\n//     Updates: [A1, C1]\n//     Result state: 'AC'\n//\n//   Second render, at priority 2:\n//     Base state: 'A'            <-  The base state does not include C1,\n//                                    because B2 was skipped.\n//     Updates: [B2, C1, D2]      <-  C1 was rebased on top of B2\n//     Result state: 'ABCD'\n//\n// Because we process updates in insertion order, and rebase high priority\n// updates when preceding updates are skipped, the final result is deterministic\n// regardless of priority. Intermediate state may vary according to system\n// resources, but the final state is always the same.\n\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\n\nimport {\n  NoLane,\n  NoLanes,\n  isSubsetOfLanes,\n  mergeLanes,\n  isTransitionLane,\n  intersectLanes,\n  markRootEntangled,\n} from './ReactFiberLane.old';\nimport {\n  enterDisallowedContextReadInDEV,\n  exitDisallowedContextReadInDEV,\n} from './ReactFiberNewContext.old';\nimport {Callback, ShouldCapture, DidCapture} from './ReactFiberFlags';\n\nimport {debugRenderPhaseSideEffectsForStrictMode} from 'shared/ReactFeatureFlags';\n\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {\n  markSkippedUpdateLanes,\n  isInterleavedUpdate,\n} from './ReactFiberWorkLoop.old';\nimport {pushInterleavedQueue} from './ReactFiberInterleavedUpdates.old';\nimport {setIsStrictModeForDevtools} from './ReactFiberReconciler';\n\nimport invariant from 'shared/invariant';\n\nexport type Update<State> = {|\n  // TODO: Temporary field. Will remove this by storing a map of\n  // transition -> event time on the root.\n  eventTime: number,\n  lane: Lane,\n\n  tag: 0 | 1 | 2 | 3,\n  payload: any,\n  callback: (() => mixed) | null,\n\n  next: Update<State> | null,\n|};\n\nexport type SharedQueue<State> = {|\n  pending: Update<State> | null,\n  interleaved: Update<State> | null,\n  lanes: Lanes,\n|};\n\nexport type UpdateQueue<State> = {|\n  baseState: State,\n  firstBaseUpdate: Update<State> | null,\n  lastBaseUpdate: Update<State> | null,\n  shared: SharedQueue<State>,\n  effects: Array<Update<State>> | null,\n|};\n\nexport const UpdateState = 0;\nexport const ReplaceState = 1;\nexport const ForceUpdate = 2;\nexport const CaptureUpdate = 3;\n\n// Global state that is reset at the beginning of calling `processUpdateQueue`.\n// It should only be read right after calling `processUpdateQueue`, via\n// `checkHasForceUpdateAfterProcessing`.\nlet hasForceUpdate = false;\n\nlet didWarnUpdateInsideUpdate;\nlet currentlyProcessingQueue;\nexport let resetCurrentlyProcessingQueue;\nif (__DEV__) {\n  didWarnUpdateInsideUpdate = false;\n  currentlyProcessingQueue = null;\n  resetCurrentlyProcessingQueue = () => {\n    currentlyProcessingQueue = null;\n  };\n}\n\nexport function initializeUpdateQueue<State>(fiber: Fiber): void {\n  const queue: UpdateQueue<State> = {\n    baseState: fiber.memoizedState,\n    firstBaseUpdate: null,\n    lastBaseUpdate: null,\n    shared: {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes,\n    },\n    effects: null,\n  };\n  fiber.updateQueue = queue;\n}\n\nexport function cloneUpdateQueue<State>(\n  current: Fiber,\n  workInProgress: Fiber,\n): void {\n  // Clone the update queue from current. Unless it's already a clone.\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n  const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n  if (queue === currentQueue) {\n    const clone: UpdateQueue<State> = {\n      baseState: currentQueue.baseState,\n      firstBaseUpdate: currentQueue.firstBaseUpdate,\n      lastBaseUpdate: currentQueue.lastBaseUpdate,\n      shared: currentQueue.shared,\n      effects: currentQueue.effects,\n    };\n    workInProgress.updateQueue = clone;\n  }\n}\n\nexport function createUpdate(eventTime: number, lane: Lane): Update<*> {\n  const update: Update<*> = {\n    eventTime,\n    lane,\n\n    tag: UpdateState,\n    payload: null,\n    callback: null,\n\n    next: null,\n  };\n  return update;\n}\n\nexport function enqueueUpdate<State>(\n  fiber: Fiber,\n  update: Update<State>,\n  lane: Lane,\n) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<State> = (updateQueue: any).shared;\n\n  if (isInterleavedUpdate(fiber, lane)) {\n    const interleaved = sharedQueue.interleaved;\n    if (interleaved === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n      // At the end of the current render, this queue's interleaved updates will\n      // be transferred to the pending queue.\n      pushInterleavedQueue(sharedQueue);\n    } else {\n      update.next = interleaved.next;\n      interleaved.next = update;\n    }\n    sharedQueue.interleaved = update;\n  } else {\n    const pending = sharedQueue.pending;\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n    sharedQueue.pending = update;\n  }\n\n  if (__DEV__) {\n    if (\n      currentlyProcessingQueue === sharedQueue &&\n      !didWarnUpdateInsideUpdate\n    ) {\n      console.error(\n        'An update (setState, replaceState, or forceUpdate) was scheduled ' +\n          'from inside an update function. Update functions should be pure, ' +\n          'with zero side-effects. Consider using componentDidUpdate or a ' +\n          'callback.',\n      );\n      didWarnUpdateInsideUpdate = true;\n    }\n  }\n}\n\nexport function entangleTransitions(root: FiberRoot, fiber: Fiber, lane: Lane) {\n  const updateQueue = fiber.updateQueue;\n  if (updateQueue === null) {\n    // Only occurs if the fiber has been unmounted.\n    return;\n  }\n\n  const sharedQueue: SharedQueue<mixed> = (updateQueue: any).shared;\n  if (isTransitionLane(lane)) {\n    let queueLanes = sharedQueue.lanes;\n\n    // If any entangled lanes are no longer pending on the root, then they must\n    // have finished. We can remove them from the shared queue, which represents\n    // a superset of the actually pending lanes. In some cases we may entangle\n    // more than we need to, but that's OK. In fact it's worse if we *don't*\n    // entangle when we should.\n    queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n\n    // Entangle the new transition lane with the other transition lanes.\n    const newQueueLanes = mergeLanes(queueLanes, lane);\n    sharedQueue.lanes = newQueueLanes;\n    // Even if queue.lanes already include lane, we don't know for certain if\n    // the lane finished since the last time we entangled it. So we need to\n    // entangle it again, just to be sure.\n    markRootEntangled(root, newQueueLanes);\n  }\n}\n\nexport function enqueueCapturedUpdate<State>(\n  workInProgress: Fiber,\n  capturedUpdate: Update<State>,\n) {\n  // Captured updates are updates that are thrown by a child during the render\n  // phase. They should be discarded if the render is aborted. Therefore,\n  // we should only put them on the work-in-progress queue, not the current one.\n  let queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  // Check if the work-in-progress queue is a clone.\n  const current = workInProgress.alternate;\n  if (current !== null) {\n    const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n    if (queue === currentQueue) {\n      // The work-in-progress queue is the same as current. This happens when\n      // we bail out on a parent fiber that then captures an error thrown by\n      // a child. Since we want to append the update only to the work-in\n      // -progress queue, we need to clone the updates. We usually clone during\n      // processUpdateQueue, but that didn't happen in this case because we\n      // skipped over the parent when we bailed out.\n      let newFirst = null;\n      let newLast = null;\n      const firstBaseUpdate = queue.firstBaseUpdate;\n      if (firstBaseUpdate !== null) {\n        // Loop through the updates and clone them.\n        let update = firstBaseUpdate;\n        do {\n          const clone: Update<State> = {\n            eventTime: update.eventTime,\n            lane: update.lane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          if (newLast === null) {\n            newFirst = newLast = clone;\n          } else {\n            newLast.next = clone;\n            newLast = clone;\n          }\n          update = update.next;\n        } while (update !== null);\n\n        // Append the captured update the end of the cloned list.\n        if (newLast === null) {\n          newFirst = newLast = capturedUpdate;\n        } else {\n          newLast.next = capturedUpdate;\n          newLast = capturedUpdate;\n        }\n      } else {\n        // There are no base updates.\n        newFirst = newLast = capturedUpdate;\n      }\n      queue = {\n        baseState: currentQueue.baseState,\n        firstBaseUpdate: newFirst,\n        lastBaseUpdate: newLast,\n        shared: currentQueue.shared,\n        effects: currentQueue.effects,\n      };\n      workInProgress.updateQueue = queue;\n      return;\n    }\n  }\n\n  // Append the update to the end of the list.\n  const lastBaseUpdate = queue.lastBaseUpdate;\n  if (lastBaseUpdate === null) {\n    queue.firstBaseUpdate = capturedUpdate;\n  } else {\n    lastBaseUpdate.next = capturedUpdate;\n  }\n  queue.lastBaseUpdate = capturedUpdate;\n}\n\nfunction getStateFromUpdate<State>(\n  workInProgress: Fiber,\n  queue: UpdateQueue<State>,\n  update: Update<State>,\n  prevState: State,\n  nextProps: any,\n  instance: any,\n): any {\n  switch (update.tag) {\n    case ReplaceState: {\n      const payload = update.payload;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        const nextState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictLegacyMode\n          ) {\n            setIsStrictModeForDevtools(true);\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              setIsStrictModeForDevtools(false);\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n        return nextState;\n      }\n      // State object\n      return payload;\n    }\n    case CaptureUpdate: {\n      workInProgress.flags =\n        (workInProgress.flags & ~ShouldCapture) | DidCapture;\n    }\n    // Intentional fallthrough\n    case UpdateState: {\n      const payload = update.payload;\n      let partialState;\n      if (typeof payload === 'function') {\n        // Updater function\n        if (__DEV__) {\n          enterDisallowedContextReadInDEV();\n        }\n        partialState = payload.call(instance, prevState, nextProps);\n        if (__DEV__) {\n          if (\n            debugRenderPhaseSideEffectsForStrictMode &&\n            workInProgress.mode & StrictLegacyMode\n          ) {\n            setIsStrictModeForDevtools(true);\n            try {\n              payload.call(instance, prevState, nextProps);\n            } finally {\n              setIsStrictModeForDevtools(false);\n            }\n          }\n          exitDisallowedContextReadInDEV();\n        }\n      } else {\n        // Partial state object\n        partialState = payload;\n      }\n      if (partialState === null || partialState === undefined) {\n        // Null and undefined are treated as no-ops.\n        return prevState;\n      }\n      // Merge the partial state and the previous state.\n      return Object.assign({}, prevState, partialState);\n    }\n    case ForceUpdate: {\n      hasForceUpdate = true;\n      return prevState;\n    }\n  }\n  return prevState;\n}\n\nexport function processUpdateQueue<State>(\n  workInProgress: Fiber,\n  props: any,\n  instance: any,\n  renderLanes: Lanes,\n): void {\n  // This is always non-null on a ClassComponent or HostRoot\n  const queue: UpdateQueue<State> = (workInProgress.updateQueue: any);\n\n  hasForceUpdate = false;\n\n  if (__DEV__) {\n    currentlyProcessingQueue = queue.shared;\n  }\n\n  let firstBaseUpdate = queue.firstBaseUpdate;\n  let lastBaseUpdate = queue.lastBaseUpdate;\n\n  // Check if there are pending updates. If so, transfer them to the base queue.\n  let pendingQueue = queue.shared.pending;\n  if (pendingQueue !== null) {\n    queue.shared.pending = null;\n\n    // The pending queue is circular. Disconnect the pointer between first\n    // and last so that it's non-circular.\n    const lastPendingUpdate = pendingQueue;\n    const firstPendingUpdate = lastPendingUpdate.next;\n    lastPendingUpdate.next = null;\n    // Append pending updates to base queue\n    if (lastBaseUpdate === null) {\n      firstBaseUpdate = firstPendingUpdate;\n    } else {\n      lastBaseUpdate.next = firstPendingUpdate;\n    }\n    lastBaseUpdate = lastPendingUpdate;\n\n    // If there's a current queue, and it's different from the base queue, then\n    // we need to transfer the updates to that queue, too. Because the base\n    // queue is a singly-linked list with no cycles, we can append to both\n    // lists and take advantage of structural sharing.\n    // TODO: Pass `current` as argument\n    const current = workInProgress.alternate;\n    if (current !== null) {\n      // This is always non-null on a ClassComponent or HostRoot\n      const currentQueue: UpdateQueue<State> = (current.updateQueue: any);\n      const currentLastBaseUpdate = currentQueue.lastBaseUpdate;\n      if (currentLastBaseUpdate !== lastBaseUpdate) {\n        if (currentLastBaseUpdate === null) {\n          currentQueue.firstBaseUpdate = firstPendingUpdate;\n        } else {\n          currentLastBaseUpdate.next = firstPendingUpdate;\n        }\n        currentQueue.lastBaseUpdate = lastPendingUpdate;\n      }\n    }\n  }\n\n  // These values may change as we process the queue.\n  if (firstBaseUpdate !== null) {\n    // Iterate through the list of updates to compute the result.\n    let newState = queue.baseState;\n    // TODO: Don't need to accumulate this. Instead, we can remove renderLanes\n    // from the original lanes.\n    let newLanes = NoLanes;\n\n    let newBaseState = null;\n    let newFirstBaseUpdate = null;\n    let newLastBaseUpdate = null;\n\n    let update = firstBaseUpdate;\n    do {\n      const updateLane = update.lane;\n      const updateEventTime = update.eventTime;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<State> = {\n          eventTime: updateEventTime,\n          lane: updateLane,\n\n          tag: update.tag,\n          payload: update.payload,\n          callback: update.callback,\n\n          next: null,\n        };\n        if (newLastBaseUpdate === null) {\n          newFirstBaseUpdate = newLastBaseUpdate = clone;\n          newBaseState = newState;\n        } else {\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        newLanes = mergeLanes(newLanes, updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newLastBaseUpdate !== null) {\n          const clone: Update<State> = {\n            eventTime: updateEventTime,\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n\n            tag: update.tag,\n            payload: update.payload,\n            callback: update.callback,\n\n            next: null,\n          };\n          newLastBaseUpdate = newLastBaseUpdate.next = clone;\n        }\n\n        // Process this update.\n        newState = getStateFromUpdate(\n          workInProgress,\n          queue,\n          update,\n          newState,\n          props,\n          instance,\n        );\n        const callback = update.callback;\n        if (\n          callback !== null &&\n          // If the update was already committed, we should not queue its\n          // callback again.\n          update.lane !== NoLane\n        ) {\n          workInProgress.flags |= Callback;\n          const effects = queue.effects;\n          if (effects === null) {\n            queue.effects = [update];\n          } else {\n            effects.push(update);\n          }\n        }\n      }\n      update = update.next;\n      if (update === null) {\n        pendingQueue = queue.shared.pending;\n        if (pendingQueue === null) {\n          break;\n        } else {\n          // An update was scheduled from inside a reducer. Add the new\n          // pending updates to the end of the list and keep processing.\n          const lastPendingUpdate = pendingQueue;\n          // Intentionally unsound. Pending updates form a circular list, but we\n          // unravel them when transferring them to the base queue.\n          const firstPendingUpdate = ((lastPendingUpdate.next: any): Update<State>);\n          lastPendingUpdate.next = null;\n          update = firstPendingUpdate;\n          queue.lastBaseUpdate = lastPendingUpdate;\n          queue.shared.pending = null;\n        }\n      }\n    } while (true);\n\n    if (newLastBaseUpdate === null) {\n      newBaseState = newState;\n    }\n\n    queue.baseState = ((newBaseState: any): State);\n    queue.firstBaseUpdate = newFirstBaseUpdate;\n    queue.lastBaseUpdate = newLastBaseUpdate;\n\n    // Interleaved updates are stored on a separate queue. We aren't going to\n    // process them during this render, but we do need to track which lanes\n    // are remaining.\n    const lastInterleaved = queue.shared.interleaved;\n    if (lastInterleaved !== null) {\n      let interleaved = lastInterleaved;\n      do {\n        newLanes = mergeLanes(newLanes, interleaved.lane);\n        interleaved = ((interleaved: any).next: Update<State>);\n      } while (interleaved !== lastInterleaved);\n    } else if (firstBaseUpdate === null) {\n      // `queue.lanes` is used for entangling transitions. We can set it back to\n      // zero once the queue is empty.\n      queue.shared.lanes = NoLanes;\n    }\n\n    // Set the remaining expiration time to be whatever is remaining in the queue.\n    // This should be fine because the only two other things that contribute to\n    // expiration time are props and context. We're already in the middle of the\n    // begin phase by the time we start processing the queue, so we've already\n    // dealt with the props. Context in components that specify\n    // shouldComponentUpdate is tricky; but we'll have to account for\n    // that regardless.\n    markSkippedUpdateLanes(newLanes);\n    workInProgress.lanes = newLanes;\n    workInProgress.memoizedState = newState;\n  }\n\n  if (__DEV__) {\n    currentlyProcessingQueue = null;\n  }\n}\n\nfunction callCallback(callback, context) {\n  invariant(\n    typeof callback === 'function',\n    'Invalid argument passed as callback. Expected a function. Instead ' +\n      'received: %s',\n    callback,\n  );\n  callback.call(context);\n}\n\nexport function resetHasForceUpdateBeforeProcessing() {\n  hasForceUpdate = false;\n}\n\nexport function checkHasForceUpdateAfterProcessing(): boolean {\n  return hasForceUpdate;\n}\n\nexport function commitUpdateQueue<State>(\n  finishedWork: Fiber,\n  finishedQueue: UpdateQueue<State>,\n  instance: any,\n): void {\n  // Commit the effects\n  const effects = finishedQueue.effects;\n  finishedQueue.effects = null;\n  if (effects !== null) {\n    for (let i = 0; i < effects.length; i++) {\n      const effect = effects[i];\n      const callback = effect.callback;\n      if (callback !== null) {\n        effect.callback = null;\n        callCallback(callback, instance);\n      }\n    }\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport * as React from 'react';\nimport {\n  LayoutStatic,\n  MountLayoutDev,\n  Update,\n  Snapshot,\n} from './ReactFiberFlags';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  warnAboutDeprecatedLifecycles,\n  enableStrictEffects,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n} from 'shared/ReactFeatureFlags';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {isMounted} from './ReactFiberTreeReflection';\nimport {get as getInstance, set as setInstance} from 'shared/ReactInstanceMap';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\nimport {REACT_CONTEXT_TYPE, REACT_PROVIDER_TYPE} from 'shared/ReactSymbols';\nimport {setIsStrictModeForDevtools} from './ReactFiberReconciler';\n\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  DebugTracingMode,\n  NoMode,\n  StrictLegacyMode,\n  StrictEffectsMode,\n} from './ReactTypeOfMode';\n\nimport {\n  enqueueUpdate,\n  entangleTransitions,\n  processUpdateQueue,\n  checkHasForceUpdateAfterProcessing,\n  resetHasForceUpdateBeforeProcessing,\n  createUpdate,\n  ReplaceState,\n  ForceUpdate,\n  initializeUpdateQueue,\n  cloneUpdateQueue,\n} from './ReactUpdateQueue.old';\nimport {NoLanes} from './ReactFiberLane.old';\nimport {\n  cacheContext,\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged,\n  emptyContextObject,\n} from './ReactFiberContext.old';\nimport {readContext, checkIfContextChanged} from './ReactFiberNewContext.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n} from './ReactFiberWorkLoop.old';\nimport {logForceUpdateScheduled, logStateUpdateScheduled} from './DebugTracing';\n\nimport {\n  markForceUpdateScheduled,\n  markStateUpdateScheduled,\n} from './SchedulingProfiler';\n\nconst fakeInternalInstance = {};\n\n// React.Component uses a shared frozen object by default.\n// We'll use it to determine whether we need to initialize legacy refs.\nexport const emptyRefsObject = new React.Component().refs;\n\nlet didWarnAboutStateAssignmentForComponent;\nlet didWarnAboutUninitializedState;\nlet didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate;\nlet didWarnAboutLegacyLifecyclesAndDerivedState;\nlet didWarnAboutUndefinedDerivedState;\nlet warnOnUndefinedDerivedState;\nlet warnOnInvalidCallback;\nlet didWarnAboutDirectlyAssigningPropsToState;\nlet didWarnAboutContextTypeAndContextTypes;\nlet didWarnAboutInvalidateContextType;\n\nif (__DEV__) {\n  didWarnAboutStateAssignmentForComponent = new Set();\n  didWarnAboutUninitializedState = new Set();\n  didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate = new Set();\n  didWarnAboutLegacyLifecyclesAndDerivedState = new Set();\n  didWarnAboutDirectlyAssigningPropsToState = new Set();\n  didWarnAboutUndefinedDerivedState = new Set();\n  didWarnAboutContextTypeAndContextTypes = new Set();\n  didWarnAboutInvalidateContextType = new Set();\n\n  const didWarnOnInvalidCallback = new Set();\n\n  warnOnInvalidCallback = function(callback: mixed, callerName: string) {\n    if (callback === null || typeof callback === 'function') {\n      return;\n    }\n    const key = callerName + '_' + (callback: any);\n    if (!didWarnOnInvalidCallback.has(key)) {\n      didWarnOnInvalidCallback.add(key);\n      console.error(\n        '%s(...): Expected the last optional `callback` argument to be a ' +\n          'function. Instead received: %s.',\n        callerName,\n        callback,\n      );\n    }\n  };\n\n  warnOnUndefinedDerivedState = function(type, partialState) {\n    if (partialState === undefined) {\n      const componentName = getComponentNameFromType(type) || 'Component';\n      if (!didWarnAboutUndefinedDerivedState.has(componentName)) {\n        didWarnAboutUndefinedDerivedState.add(componentName);\n        console.error(\n          '%s.getDerivedStateFromProps(): A valid state object (or null) must be returned. ' +\n            'You have returned undefined.',\n          componentName,\n        );\n      }\n    }\n  };\n\n  // This is so gross but it's at least non-critical and can be removed if\n  // it causes problems. This is meant to give a nicer error message for\n  // ReactDOM15.unstable_renderSubtreeIntoContainer(reactDOM16Component,\n  // ...)) which otherwise throws a \"_processChildContext is not a function\"\n  // exception.\n  Object.defineProperty(fakeInternalInstance, '_processChildContext', {\n    enumerable: false,\n    value: function() {\n      invariant(\n        false,\n        '_processChildContext is not available in React 16+. This likely ' +\n          'means you have multiple copies of React and are attempting to nest ' +\n          'a React 15 tree inside a React 16 tree using ' +\n          \"unstable_renderSubtreeIntoContainer, which isn't supported. Try \" +\n          'to make sure you have only one copy of React (and ideally, switch ' +\n          'to ReactDOM.createPortal).',\n      );\n    },\n  });\n  Object.freeze(fakeInternalInstance);\n}\n\nfunction applyDerivedStateFromProps(\n  workInProgress: Fiber,\n  ctor: any,\n  getDerivedStateFromProps: (props: any, state: any) => any,\n  nextProps: any,\n) {\n  const prevState = workInProgress.memoizedState;\n  let partialState = getDerivedStateFromProps(nextProps, prevState);\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        // Invoke the function an extra time to help detect side-effects.\n        partialState = getDerivedStateFromProps(nextProps, prevState);\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    warnOnUndefinedDerivedState(ctor, partialState);\n  }\n  // Merge the partial state and the previous state.\n  const memoizedState =\n    partialState === null || partialState === undefined\n      ? prevState\n      : Object.assign({}, prevState, partialState);\n  workInProgress.memoizedState = memoizedState;\n\n  // Once the update queue is empty, persist the derived state onto the\n  // base state.\n  if (workInProgress.lanes === NoLanes) {\n    // Queue is always non-null for classes\n    const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n    updateQueue.baseState = memoizedState;\n  }\n}\n\nconst classComponentUpdater = {\n  isMounted,\n  enqueueSetState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.payload = payload;\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'setState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update, lane);\n    const root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueReplaceState(inst, payload, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ReplaceState;\n    update.payload = payload;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'replaceState');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update, lane);\n    const root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logStateUpdateScheduled(name, lane, payload);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markStateUpdateScheduled(fiber, lane);\n    }\n  },\n  enqueueForceUpdate(inst, callback) {\n    const fiber = getInstance(inst);\n    const eventTime = requestEventTime();\n    const lane = requestUpdateLane(fiber);\n\n    const update = createUpdate(eventTime, lane);\n    update.tag = ForceUpdate;\n\n    if (callback !== undefined && callback !== null) {\n      if (__DEV__) {\n        warnOnInvalidCallback(callback, 'forceUpdate');\n      }\n      update.callback = callback;\n    }\n\n    enqueueUpdate(fiber, update, lane);\n    const root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n    if (root !== null) {\n      entangleTransitions(root, fiber, lane);\n    }\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (fiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(fiber) || 'Unknown';\n          logForceUpdateScheduled(name, lane);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markForceUpdateScheduled(fiber, lane);\n    }\n  },\n};\n\nfunction checkShouldComponentUpdate(\n  workInProgress,\n  ctor,\n  oldProps,\n  newProps,\n  oldState,\n  newState,\n  nextContext,\n) {\n  const instance = workInProgress.stateNode;\n  if (typeof instance.shouldComponentUpdate === 'function') {\n    let shouldUpdate = instance.shouldComponentUpdate(\n      newProps,\n      newState,\n      nextContext,\n    );\n    if (__DEV__) {\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          // Invoke the function an extra time to help detect side-effects.\n          shouldUpdate = instance.shouldComponentUpdate(\n            newProps,\n            newState,\n            nextContext,\n          );\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n      if (shouldUpdate === undefined) {\n        console.error(\n          '%s.shouldComponentUpdate(): Returned undefined instead of a ' +\n            'boolean value. Make sure to return true or false.',\n          getComponentNameFromType(ctor) || 'Component',\n        );\n      }\n    }\n\n    return shouldUpdate;\n  }\n\n  if (ctor.prototype && ctor.prototype.isPureReactComponent) {\n    return (\n      !shallowEqual(oldProps, newProps) || !shallowEqual(oldState, newState)\n    );\n  }\n\n  return true;\n}\n\nfunction checkClassInstance(workInProgress: Fiber, ctor: any, newProps: any) {\n  const instance = workInProgress.stateNode;\n  if (__DEV__) {\n    const name = getComponentNameFromType(ctor) || 'Component';\n    const renderPresent = instance.render;\n\n    if (!renderPresent) {\n      if (ctor.prototype && typeof ctor.prototype.render === 'function') {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: did you accidentally return an object from the constructor?',\n          name,\n        );\n      } else {\n        console.error(\n          '%s(...): No `render` method found on the returned component ' +\n            'instance: you may have forgotten to define `render`.',\n          name,\n        );\n      }\n    }\n\n    if (\n      instance.getInitialState &&\n      !instance.getInitialState.isReactClassApproved &&\n      !instance.state\n    ) {\n      console.error(\n        'getInitialState was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Did you mean to define a state property instead?',\n        name,\n      );\n    }\n    if (\n      instance.getDefaultProps &&\n      !instance.getDefaultProps.isReactClassApproved\n    ) {\n      console.error(\n        'getDefaultProps was defined on %s, a plain JavaScript class. ' +\n          'This is only supported for classes created using React.createClass. ' +\n          'Use a static property to define defaultProps instead.',\n        name,\n      );\n    }\n    if (instance.propTypes) {\n      console.error(\n        'propTypes was defined as an instance property on %s. Use a static ' +\n          'property to define propTypes instead.',\n        name,\n      );\n    }\n    if (instance.contextType) {\n      console.error(\n        'contextType was defined as an instance property on %s. Use a static ' +\n          'property to define contextType instead.',\n        name,\n      );\n    }\n\n    if (disableLegacyContext) {\n      if (ctor.childContextTypes) {\n        console.error(\n          '%s uses the legacy childContextTypes API which is no longer supported. ' +\n            'Use React.createContext() instead.',\n          name,\n        );\n      }\n      if (ctor.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with static contextType instead.',\n          name,\n        );\n      }\n    } else {\n      if (instance.contextTypes) {\n        console.error(\n          'contextTypes was defined as an instance property on %s. Use a static ' +\n            'property to define contextTypes instead.',\n          name,\n        );\n      }\n\n      if (\n        ctor.contextType &&\n        ctor.contextTypes &&\n        !didWarnAboutContextTypeAndContextTypes.has(ctor)\n      ) {\n        didWarnAboutContextTypeAndContextTypes.add(ctor);\n        console.error(\n          '%s declares both contextTypes and contextType static properties. ' +\n            'The legacy contextTypes property will be ignored.',\n          name,\n        );\n      }\n    }\n\n    if (typeof instance.componentShouldUpdate === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentShouldUpdate(). Did you mean shouldComponentUpdate()? ' +\n          'The name is phrased as a question because the function is ' +\n          'expected to return a value.',\n        name,\n      );\n    }\n    if (\n      ctor.prototype &&\n      ctor.prototype.isPureReactComponent &&\n      typeof instance.shouldComponentUpdate !== 'undefined'\n    ) {\n      console.error(\n        '%s has a method called shouldComponentUpdate(). ' +\n          'shouldComponentUpdate should not be used when extending React.PureComponent. ' +\n          'Please extend React.Component if shouldComponentUpdate is used.',\n        getComponentNameFromType(ctor) || 'A pure component',\n      );\n    }\n    if (typeof instance.componentDidUnmount === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidUnmount(). But there is no such lifecycle method. ' +\n          'Did you mean componentWillUnmount()?',\n        name,\n      );\n    }\n    if (typeof instance.componentDidReceiveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentDidReceiveProps(). But there is no such lifecycle method. ' +\n          'If you meant to update the state in response to changing props, ' +\n          'use componentWillReceiveProps(). If you meant to fetch data or ' +\n          'run side-effects or mutations after React has updated the UI, use componentDidUpdate().',\n        name,\n      );\n    }\n    if (typeof instance.componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'componentWillRecieveProps(). Did you mean componentWillReceiveProps()?',\n        name,\n      );\n    }\n    if (typeof instance.UNSAFE_componentWillRecieveProps === 'function') {\n      console.error(\n        '%s has a method called ' +\n          'UNSAFE_componentWillRecieveProps(). Did you mean UNSAFE_componentWillReceiveProps()?',\n        name,\n      );\n    }\n    const hasMutatedProps = instance.props !== newProps;\n    if (instance.props !== undefined && hasMutatedProps) {\n      console.error(\n        '%s(...): When calling super() in `%s`, make sure to pass ' +\n          \"up the same props that your component's constructor was passed.\",\n        name,\n        name,\n      );\n    }\n    if (instance.defaultProps) {\n      console.error(\n        'Setting defaultProps as an instance property on %s is not supported and will be ignored.' +\n          ' Instead, define defaultProps as a static property on %s.',\n        name,\n        name,\n      );\n    }\n\n    if (\n      typeof instance.getSnapshotBeforeUpdate === 'function' &&\n      typeof instance.componentDidUpdate !== 'function' &&\n      !didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.has(ctor)\n    ) {\n      didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate.add(ctor);\n      console.error(\n        '%s: getSnapshotBeforeUpdate() should be used with componentDidUpdate(). ' +\n          'This component defines getSnapshotBeforeUpdate() only.',\n        getComponentNameFromType(ctor),\n      );\n    }\n\n    if (typeof instance.getDerivedStateFromProps === 'function') {\n      console.error(\n        '%s: getDerivedStateFromProps() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof instance.getDerivedStateFromError === 'function') {\n      console.error(\n        '%s: getDerivedStateFromError() is defined as an instance method ' +\n          'and will be ignored. Instead, declare it as a static method.',\n        name,\n      );\n    }\n    if (typeof ctor.getSnapshotBeforeUpdate === 'function') {\n      console.error(\n        '%s: getSnapshotBeforeUpdate() is defined as a static method ' +\n          'and will be ignored. Instead, declare it as an instance method.',\n        name,\n      );\n    }\n    const state = instance.state;\n    if (state && (typeof state !== 'object' || isArray(state))) {\n      console.error('%s.state: must be set to an object or null', name);\n    }\n    if (\n      typeof instance.getChildContext === 'function' &&\n      typeof ctor.childContextTypes !== 'object'\n    ) {\n      console.error(\n        '%s.getChildContext(): childContextTypes must be defined in order to ' +\n          'use getChildContext().',\n        name,\n      );\n    }\n  }\n}\n\nfunction adoptClassInstance(workInProgress: Fiber, instance: any): void {\n  instance.updater = classComponentUpdater;\n  workInProgress.stateNode = instance;\n  // The instance needs access to the fiber so that it can schedule updates\n  setInstance(instance, workInProgress);\n  if (__DEV__) {\n    instance._reactInternalInstance = fakeInternalInstance;\n  }\n}\n\nfunction constructClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  props: any,\n): any {\n  let isLegacyContextConsumer = false;\n  let unmaskedContext = emptyContextObject;\n  let context = emptyContextObject;\n  const contextType = ctor.contextType;\n\n  if (__DEV__) {\n    if ('contextType' in ctor) {\n      const isValid =\n        // Allow null for conditional declaration\n        contextType === null ||\n        (contextType !== undefined &&\n          contextType.$$typeof === REACT_CONTEXT_TYPE &&\n          contextType._context === undefined); // Not a <Context.Consumer>\n\n      if (!isValid && !didWarnAboutInvalidateContextType.has(ctor)) {\n        didWarnAboutInvalidateContextType.add(ctor);\n\n        let addendum = '';\n        if (contextType === undefined) {\n          addendum =\n            ' However, it is set to undefined. ' +\n            'This can be caused by a typo or by mixing up named and default imports. ' +\n            'This can also happen due to a circular dependency, so ' +\n            'try moving the createContext() call to a separate file.';\n        } else if (typeof contextType !== 'object') {\n          addendum = ' However, it is set to a ' + typeof contextType + '.';\n        } else if (contextType.$$typeof === REACT_PROVIDER_TYPE) {\n          addendum = ' Did you accidentally pass the Context.Provider instead?';\n        } else if (contextType._context !== undefined) {\n          // <Context.Consumer>\n          addendum = ' Did you accidentally pass the Context.Consumer instead?';\n        } else {\n          addendum =\n            ' However, it is set to an object with keys {' +\n            Object.keys(contextType).join(', ') +\n            '}.';\n        }\n        console.error(\n          '%s defines an invalid contextType. ' +\n            'contextType should point to the Context object returned by React.createContext().%s',\n          getComponentNameFromType(ctor) || 'Component',\n          addendum,\n        );\n      }\n    }\n  }\n\n  if (typeof contextType === 'object' && contextType !== null) {\n    context = readContext((contextType: any));\n  } else if (!disableLegacyContext) {\n    unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    const contextTypes = ctor.contextTypes;\n    isLegacyContextConsumer =\n      contextTypes !== null && contextTypes !== undefined;\n    context = isLegacyContextConsumer\n      ? getMaskedContext(workInProgress, unmaskedContext)\n      : emptyContextObject;\n  }\n\n  let instance = new ctor(props, context);\n  // Instantiate twice to help detect side-effects.\n  if (__DEV__) {\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        instance = new ctor(props, context); // eslint-disable-line no-new\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n  }\n\n  const state = (workInProgress.memoizedState =\n    instance.state !== null && instance.state !== undefined\n      ? instance.state\n      : null);\n  adoptClassInstance(workInProgress, instance);\n\n  if (__DEV__) {\n    if (typeof ctor.getDerivedStateFromProps === 'function' && state === null) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutUninitializedState.has(componentName)) {\n        didWarnAboutUninitializedState.add(componentName);\n        console.error(\n          '`%s` uses `getDerivedStateFromProps` but its initial state is ' +\n            '%s. This is not recommended. Instead, define the initial state by ' +\n            'assigning an object to `this.state` in the constructor of `%s`. ' +\n            'This ensures that `getDerivedStateFromProps` arguments have a consistent shape.',\n          componentName,\n          instance.state === null ? 'null' : 'undefined',\n          componentName,\n        );\n      }\n    }\n\n    // If new component APIs are defined, \"unsafe\" lifecycles won't be called.\n    // Warn about these lifecycles if they are present.\n    // Don't warn about react-lifecycles-compat polyfilled methods though.\n    if (\n      typeof ctor.getDerivedStateFromProps === 'function' ||\n      typeof instance.getSnapshotBeforeUpdate === 'function'\n    ) {\n      let foundWillMountName = null;\n      let foundWillReceivePropsName = null;\n      let foundWillUpdateName = null;\n      if (\n        typeof instance.componentWillMount === 'function' &&\n        instance.componentWillMount.__suppressDeprecationWarning !== true\n      ) {\n        foundWillMountName = 'componentWillMount';\n      } else if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        foundWillMountName = 'UNSAFE_componentWillMount';\n      }\n      if (\n        typeof instance.componentWillReceiveProps === 'function' &&\n        instance.componentWillReceiveProps.__suppressDeprecationWarning !== true\n      ) {\n        foundWillReceivePropsName = 'componentWillReceiveProps';\n      } else if (\n        typeof instance.UNSAFE_componentWillReceiveProps === 'function'\n      ) {\n        foundWillReceivePropsName = 'UNSAFE_componentWillReceiveProps';\n      }\n      if (\n        typeof instance.componentWillUpdate === 'function' &&\n        instance.componentWillUpdate.__suppressDeprecationWarning !== true\n      ) {\n        foundWillUpdateName = 'componentWillUpdate';\n      } else if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        foundWillUpdateName = 'UNSAFE_componentWillUpdate';\n      }\n      if (\n        foundWillMountName !== null ||\n        foundWillReceivePropsName !== null ||\n        foundWillUpdateName !== null\n      ) {\n        const componentName = getComponentNameFromType(ctor) || 'Component';\n        const newApiName =\n          typeof ctor.getDerivedStateFromProps === 'function'\n            ? 'getDerivedStateFromProps()'\n            : 'getSnapshotBeforeUpdate()';\n        if (!didWarnAboutLegacyLifecyclesAndDerivedState.has(componentName)) {\n          didWarnAboutLegacyLifecyclesAndDerivedState.add(componentName);\n          console.error(\n            'Unsafe legacy lifecycles will not be called for components using new component APIs.\\n\\n' +\n              '%s uses %s but also contains the following legacy lifecycles:%s%s%s\\n\\n' +\n              'The above lifecycles should be removed. Learn more about this warning here:\\n' +\n              'https://reactjs.org/link/unsafe-component-lifecycles',\n            componentName,\n            newApiName,\n            foundWillMountName !== null ? `\\n  ${foundWillMountName}` : '',\n            foundWillReceivePropsName !== null\n              ? `\\n  ${foundWillReceivePropsName}`\n              : '',\n            foundWillUpdateName !== null ? `\\n  ${foundWillUpdateName}` : '',\n          );\n        }\n      }\n    }\n  }\n\n  // Cache unmasked context so we can avoid recreating masked context unless necessary.\n  // ReactFiberContext usually updates this cache but can't for newly-created instances.\n  if (isLegacyContextConsumer) {\n    cacheContext(workInProgress, unmaskedContext, context);\n  }\n\n  return instance;\n}\n\nfunction callComponentWillMount(workInProgress, instance) {\n  const oldState = instance.state;\n\n  if (typeof instance.componentWillMount === 'function') {\n    instance.componentWillMount();\n  }\n  if (typeof instance.UNSAFE_componentWillMount === 'function') {\n    instance.UNSAFE_componentWillMount();\n  }\n\n  if (oldState !== instance.state) {\n    if (__DEV__) {\n      console.error(\n        '%s.componentWillMount(): Assigning directly to this.state is ' +\n          \"deprecated (except inside a component's \" +\n          'constructor). Use setState instead.',\n        getComponentNameFromFiber(workInProgress) || 'Component',\n      );\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\nfunction callComponentWillReceiveProps(\n  workInProgress,\n  instance,\n  newProps,\n  nextContext,\n) {\n  const oldState = instance.state;\n  if (typeof instance.componentWillReceiveProps === 'function') {\n    instance.componentWillReceiveProps(newProps, nextContext);\n  }\n  if (typeof instance.UNSAFE_componentWillReceiveProps === 'function') {\n    instance.UNSAFE_componentWillReceiveProps(newProps, nextContext);\n  }\n\n  if (instance.state !== oldState) {\n    if (__DEV__) {\n      const componentName =\n        getComponentNameFromFiber(workInProgress) || 'Component';\n      if (!didWarnAboutStateAssignmentForComponent.has(componentName)) {\n        didWarnAboutStateAssignmentForComponent.add(componentName);\n        console.error(\n          '%s.componentWillReceiveProps(): Assigning directly to ' +\n            \"this.state is deprecated (except inside a component's \" +\n            'constructor). Use setState instead.',\n          componentName,\n        );\n      }\n    }\n    classComponentUpdater.enqueueReplaceState(instance, instance.state, null);\n  }\n}\n\n// Invokes the mount life-cycles on a previously never rendered instance.\nfunction mountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): void {\n  if (__DEV__) {\n    checkClassInstance(workInProgress, ctor, newProps);\n  }\n\n  const instance = workInProgress.stateNode;\n  instance.props = newProps;\n  instance.state = workInProgress.memoizedState;\n  instance.refs = emptyRefsObject;\n\n  initializeUpdateQueue(workInProgress);\n\n  const contextType = ctor.contextType;\n  if (typeof contextType === 'object' && contextType !== null) {\n    instance.context = readContext(contextType);\n  } else if (disableLegacyContext) {\n    instance.context = emptyContextObject;\n  } else {\n    const unmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    instance.context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  if (__DEV__) {\n    if (instance.state === newProps) {\n      const componentName = getComponentNameFromType(ctor) || 'Component';\n      if (!didWarnAboutDirectlyAssigningPropsToState.has(componentName)) {\n        didWarnAboutDirectlyAssigningPropsToState.add(componentName);\n        console.error(\n          '%s: It is not recommended to assign props directly to state ' +\n            \"because updates to props won't be reflected in state. \" +\n            'In most cases, it is better to use props directly.',\n          componentName,\n        );\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(\n        workInProgress,\n        instance,\n      );\n    }\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.recordUnsafeLifecycleWarnings(\n        workInProgress,\n        instance,\n      );\n    }\n  }\n\n  instance.state = workInProgress.memoizedState;\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    instance.state = workInProgress.memoizedState;\n  }\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    typeof ctor.getDerivedStateFromProps !== 'function' &&\n    typeof instance.getSnapshotBeforeUpdate !== 'function' &&\n    (typeof instance.UNSAFE_componentWillMount === 'function' ||\n      typeof instance.componentWillMount === 'function')\n  ) {\n    callComponentWillMount(workInProgress, instance);\n    // If we had additional state updates during this life-cycle, let's\n    // process them now.\n    processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n    instance.state = workInProgress.memoizedState;\n  }\n\n  if (typeof instance.componentDidMount === 'function') {\n    let fiberFlags: Flags = Update;\n    if (enableSuspenseLayoutEffectSemantics) {\n      fiberFlags |= LayoutStatic;\n    }\n    if (\n      __DEV__ &&\n      enableStrictEffects &&\n      (workInProgress.mode & StrictEffectsMode) !== NoMode\n    ) {\n      fiberFlags |= MountLayoutDev;\n    }\n    workInProgress.flags |= fiberFlags;\n  }\n}\n\nfunction resumeMountClassInstance(\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  const oldProps = workInProgress.memoizedProps;\n  instance.props = oldProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextLegacyUnmaskedContext = getUnmaskedContext(\n      workInProgress,\n      ctor,\n      true,\n    );\n    nextContext = getMaskedContext(workInProgress, nextLegacyUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (oldProps !== newProps || oldContext !== nextContext) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n  if (\n    oldProps === newProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing()\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    );\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillMount === 'function' ||\n        typeof instance.componentWillMount === 'function')\n    ) {\n      if (typeof instance.componentWillMount === 'function') {\n        instance.componentWillMount();\n      }\n      if (typeof instance.UNSAFE_componentWillMount === 'function') {\n        instance.UNSAFE_componentWillMount();\n      }\n    }\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidMount === 'function') {\n      let fiberFlags: Flags = Update;\n      if (enableSuspenseLayoutEffectSemantics) {\n        fiberFlags |= LayoutStatic;\n      }\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (workInProgress.mode & StrictEffectsMode) !== NoMode\n      ) {\n        fiberFlags |= MountLayoutDev;\n      }\n      workInProgress.flags |= fiberFlags;\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\n// Invokes the update life-cycles and returns false if it shouldn't rerender.\nfunction updateClassInstance(\n  current: Fiber,\n  workInProgress: Fiber,\n  ctor: any,\n  newProps: any,\n  renderLanes: Lanes,\n): boolean {\n  const instance = workInProgress.stateNode;\n\n  cloneUpdateQueue(current, workInProgress);\n\n  const unresolvedOldProps = workInProgress.memoizedProps;\n  const oldProps =\n    workInProgress.type === workInProgress.elementType\n      ? unresolvedOldProps\n      : resolveDefaultProps(workInProgress.type, unresolvedOldProps);\n  instance.props = oldProps;\n  const unresolvedNewProps = workInProgress.pendingProps;\n\n  const oldContext = instance.context;\n  const contextType = ctor.contextType;\n  let nextContext = emptyContextObject;\n  if (typeof contextType === 'object' && contextType !== null) {\n    nextContext = readContext(contextType);\n  } else if (!disableLegacyContext) {\n    const nextUnmaskedContext = getUnmaskedContext(workInProgress, ctor, true);\n    nextContext = getMaskedContext(workInProgress, nextUnmaskedContext);\n  }\n\n  const getDerivedStateFromProps = ctor.getDerivedStateFromProps;\n  const hasNewLifecycles =\n    typeof getDerivedStateFromProps === 'function' ||\n    typeof instance.getSnapshotBeforeUpdate === 'function';\n\n  // Note: During these life-cycles, instance.props/instance.state are what\n  // ever the previously attempted to render - not the \"current\". However,\n  // during componentDidUpdate we pass the \"current\" props.\n\n  // In order to support react-lifecycles-compat polyfilled components,\n  // Unsafe lifecycles should not be invoked for components using the new APIs.\n  if (\n    !hasNewLifecycles &&\n    (typeof instance.UNSAFE_componentWillReceiveProps === 'function' ||\n      typeof instance.componentWillReceiveProps === 'function')\n  ) {\n    if (\n      unresolvedOldProps !== unresolvedNewProps ||\n      oldContext !== nextContext\n    ) {\n      callComponentWillReceiveProps(\n        workInProgress,\n        instance,\n        newProps,\n        nextContext,\n      );\n    }\n  }\n\n  resetHasForceUpdateBeforeProcessing();\n\n  const oldState = workInProgress.memoizedState;\n  let newState = (instance.state = oldState);\n  processUpdateQueue(workInProgress, newProps, instance, renderLanes);\n  newState = workInProgress.memoizedState;\n\n  if (\n    unresolvedOldProps === unresolvedNewProps &&\n    oldState === newState &&\n    !hasContextChanged() &&\n    !checkHasForceUpdateAfterProcessing() &&\n    !(\n      enableLazyContextPropagation &&\n      current !== null &&\n      current.dependencies !== null &&\n      checkIfContextChanged(current.dependencies)\n    )\n  ) {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n    return false;\n  }\n\n  if (typeof getDerivedStateFromProps === 'function') {\n    applyDerivedStateFromProps(\n      workInProgress,\n      ctor,\n      getDerivedStateFromProps,\n      newProps,\n    );\n    newState = workInProgress.memoizedState;\n  }\n\n  const shouldUpdate =\n    checkHasForceUpdateAfterProcessing() ||\n    checkShouldComponentUpdate(\n      workInProgress,\n      ctor,\n      oldProps,\n      newProps,\n      oldState,\n      newState,\n      nextContext,\n    ) ||\n    // TODO: In some cases, we'll end up checking if context has changed twice,\n    // both before and after `shouldComponentUpdate` has been called. Not ideal,\n    // but I'm loath to refactor this function. This only happens for memoized\n    // components so it's not that common.\n    (enableLazyContextPropagation &&\n      current !== null &&\n      current.dependencies !== null &&\n      checkIfContextChanged(current.dependencies));\n\n  if (shouldUpdate) {\n    // In order to support react-lifecycles-compat polyfilled components,\n    // Unsafe lifecycles should not be invoked for components using the new APIs.\n    if (\n      !hasNewLifecycles &&\n      (typeof instance.UNSAFE_componentWillUpdate === 'function' ||\n        typeof instance.componentWillUpdate === 'function')\n    ) {\n      if (typeof instance.componentWillUpdate === 'function') {\n        instance.componentWillUpdate(newProps, newState, nextContext);\n      }\n      if (typeof instance.UNSAFE_componentWillUpdate === 'function') {\n        instance.UNSAFE_componentWillUpdate(newProps, newState, nextContext);\n      }\n    }\n    if (typeof instance.componentDidUpdate === 'function') {\n      workInProgress.flags |= Update;\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      workInProgress.flags |= Snapshot;\n    }\n  } else {\n    // If an update was already in progress, we should schedule an Update\n    // effect even though we're bailing out, so that cWU/cDU are called.\n    if (typeof instance.componentDidUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Update;\n      }\n    }\n    if (typeof instance.getSnapshotBeforeUpdate === 'function') {\n      if (\n        unresolvedOldProps !== current.memoizedProps ||\n        oldState !== current.memoizedState\n      ) {\n        workInProgress.flags |= Snapshot;\n      }\n    }\n\n    // If shouldComponentUpdate returned false, we should still update the\n    // memoized props/state to indicate that this work can be reused.\n    workInProgress.memoizedProps = newProps;\n    workInProgress.memoizedState = newState;\n  }\n\n  // Update the existing instance's state, props, and context pointers even\n  // if shouldComponentUpdate returns false.\n  instance.props = newProps;\n  instance.state = newState;\n  instance.context = nextContext;\n\n  return shouldUpdate;\n}\n\nexport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactPortal} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {Placement, ChildDeletion} from './ReactFiberFlags';\nimport {\n  getIteratorFn,\n  REACT_ELEMENT_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_PORTAL_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\nimport {ClassComponent, HostText, HostPortal, Fragment} from './ReactWorkTags';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\nimport {\n  warnAboutStringRefs,\n  enableLazyElements,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  createWorkInProgress,\n  resetWorkInProgress,\n  createFiberFromElement,\n  createFiberFromFragment,\n  createFiberFromText,\n  createFiberFromPortal,\n} from './ReactFiber.old';\nimport {emptyRefsObject} from './ReactFiberClassComponent.old';\nimport {isCompatibleFamilyForHotReloading} from './ReactFiberHotReloading.old';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\n\nlet didWarnAboutMaps;\nlet didWarnAboutGenerators;\nlet didWarnAboutStringRefs;\nlet ownerHasKeyUseWarning;\nlet ownerHasFunctionTypeWarning;\nlet warnForMissingKey = (child: mixed, returnFiber: Fiber) => {};\n\nif (__DEV__) {\n  didWarnAboutMaps = false;\n  didWarnAboutGenerators = false;\n  didWarnAboutStringRefs = {};\n\n  /**\n   * Warn if there's no key explicitly set on dynamic arrays of children or\n   * object keys are not valid. This allows us to keep track of children between\n   * updates.\n   */\n  ownerHasKeyUseWarning = {};\n  ownerHasFunctionTypeWarning = {};\n\n  warnForMissingKey = (child: mixed, returnFiber: Fiber) => {\n    if (child === null || typeof child !== 'object') {\n      return;\n    }\n    if (!child._store || child._store.validated || child.key != null) {\n      return;\n    }\n    invariant(\n      typeof child._store === 'object',\n      'React Component in warnForMissingKey should have a _store. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n    child._store.validated = true;\n\n    const componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasKeyUseWarning[componentName]) {\n      return;\n    }\n    ownerHasKeyUseWarning[componentName] = true;\n\n    console.error(\n      'Each child in a list should have a unique ' +\n        '\"key\" prop. See https://reactjs.org/link/warning-keys for ' +\n        'more information.',\n    );\n  };\n}\n\nfunction coerceRef(\n  returnFiber: Fiber,\n  current: Fiber | null,\n  element: ReactElement,\n) {\n  const mixedRef = element.ref;\n  if (\n    mixedRef !== null &&\n    typeof mixedRef !== 'function' &&\n    typeof mixedRef !== 'object'\n  ) {\n    if (__DEV__) {\n      // TODO: Clean this up once we turn on the string ref warning for\n      // everyone, because the strict mode case will no longer be relevant\n      if (\n        (returnFiber.mode & StrictLegacyMode || warnAboutStringRefs) &&\n        // We warn in ReactElement.js if owner and self are equal for string refs\n        // because these cannot be automatically converted to an arrow function\n        // using a codemod. Therefore, we don't have to warn about string refs again.\n        !(\n          element._owner &&\n          element._self &&\n          element._owner.stateNode !== element._self\n        )\n      ) {\n        const componentName =\n          getComponentNameFromFiber(returnFiber) || 'Component';\n        if (!didWarnAboutStringRefs[componentName]) {\n          if (warnAboutStringRefs) {\n            console.error(\n              'Component \"%s\" contains the string ref \"%s\". Support for string refs ' +\n                'will be removed in a future major release. We recommend using ' +\n                'useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              componentName,\n              mixedRef,\n            );\n          } else {\n            console.error(\n              'A string ref, \"%s\", has been found within a strict mode tree. ' +\n                'String refs are a source of potential bugs and should be avoided. ' +\n                'We recommend using useRef() or createRef() instead. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-string-ref',\n              mixedRef,\n            );\n          }\n          didWarnAboutStringRefs[componentName] = true;\n        }\n      }\n    }\n\n    if (element._owner) {\n      const owner: ?Fiber = (element._owner: any);\n      let inst;\n      if (owner) {\n        const ownerFiber = ((owner: any): Fiber);\n        invariant(\n          ownerFiber.tag === ClassComponent,\n          'Function components cannot have string refs. ' +\n            'We recommend using useRef() instead. ' +\n            'Learn more about using refs safely here: ' +\n            'https://reactjs.org/link/strict-mode-string-ref',\n        );\n        inst = ownerFiber.stateNode;\n      }\n      invariant(\n        inst,\n        'Missing owner for string ref %s. This error is likely caused by a ' +\n          'bug in React. Please file an issue.',\n        mixedRef,\n      );\n      const stringRef = '' + mixedRef;\n      // Check if previous string ref matches new string ref\n      if (\n        current !== null &&\n        current.ref !== null &&\n        typeof current.ref === 'function' &&\n        current.ref._stringRef === stringRef\n      ) {\n        return current.ref;\n      }\n      const ref = function(value) {\n        let refs = inst.refs;\n        if (refs === emptyRefsObject) {\n          // This is a lazy pooled frozen object, so we need to initialize.\n          refs = inst.refs = {};\n        }\n        if (value === null) {\n          delete refs[stringRef];\n        } else {\n          refs[stringRef] = value;\n        }\n      };\n      ref._stringRef = stringRef;\n      return ref;\n    } else {\n      invariant(\n        typeof mixedRef === 'string',\n        'Expected ref to be a function, a string, an object returned by React.createRef(), or null.',\n      );\n      invariant(\n        element._owner,\n        'Element ref was specified as a string (%s) but no owner was set. This could happen for one of' +\n          ' the following reasons:\\n' +\n          '1. You may be adding a ref to a function component\\n' +\n          \"2. You may be adding a ref to a component that was not created inside a component's render method\\n\" +\n          '3. You have multiple copies of React loaded\\n' +\n          'See https://reactjs.org/link/refs-must-have-owner for more information.',\n        mixedRef,\n      );\n    }\n  }\n  return mixedRef;\n}\n\nfunction throwOnInvalidObjectType(returnFiber: Fiber, newChild: Object) {\n  const childString = Object.prototype.toString.call(newChild);\n  invariant(\n    false,\n    'Objects are not valid as a React child (found: %s). ' +\n      'If you meant to render a collection of children, use an array ' +\n      'instead.',\n    childString === '[object Object]'\n      ? 'object with keys {' + Object.keys(newChild).join(', ') + '}'\n      : childString,\n  );\n}\n\nfunction warnOnFunctionType(returnFiber: Fiber) {\n  if (__DEV__) {\n    const componentName = getComponentNameFromFiber(returnFiber) || 'Component';\n\n    if (ownerHasFunctionTypeWarning[componentName]) {\n      return;\n    }\n    ownerHasFunctionTypeWarning[componentName] = true;\n\n    console.error(\n      'Functions are not valid as a React child. This may happen if ' +\n        'you return a Component instead of <Component /> from render. ' +\n        'Or maybe you meant to call this function rather than return it.',\n    );\n  }\n}\n\nfunction resolveLazy(lazyType) {\n  const payload = lazyType._payload;\n  const init = lazyType._init;\n  return init(payload);\n}\n\n// This wrapper function exists because I expect to clone the code in each path\n// to be able to optimize each path individually by branching early. This needs\n// a compiler or we can do it manually. Helpers that don't need this branching\n// live outside of this function.\nfunction ChildReconciler(shouldTrackSideEffects) {\n  function deleteChild(returnFiber: Fiber, childToDelete: Fiber): void {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return;\n    }\n    const deletions = returnFiber.deletions;\n    if (deletions === null) {\n      returnFiber.deletions = [childToDelete];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(childToDelete);\n    }\n  }\n\n  function deleteRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n  ): null {\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return null;\n    }\n\n    // TODO: For the shouldClone case, this could be micro-optimized a bit by\n    // assuming that after the first child we've already added everything.\n    let childToDelete = currentFirstChild;\n    while (childToDelete !== null) {\n      deleteChild(returnFiber, childToDelete);\n      childToDelete = childToDelete.sibling;\n    }\n    return null;\n  }\n\n  function mapRemainingChildren(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber,\n  ): Map<string | number, Fiber> {\n    // Add the remaining children to a temporary map so that we can find them by\n    // keys quickly. Implicit (null) keys get added to this set with their index\n    // instead.\n    const existingChildren: Map<string | number, Fiber> = new Map();\n\n    let existingChild = currentFirstChild;\n    while (existingChild !== null) {\n      if (existingChild.key !== null) {\n        existingChildren.set(existingChild.key, existingChild);\n      } else {\n        existingChildren.set(existingChild.index, existingChild);\n      }\n      existingChild = existingChild.sibling;\n    }\n    return existingChildren;\n  }\n\n  function useFiber(fiber: Fiber, pendingProps: mixed): Fiber {\n    // We currently set sibling to null and index to 0 here because it is easy\n    // to forget to do before returning it. E.g. for the single child case.\n    const clone = createWorkInProgress(fiber, pendingProps);\n    clone.index = 0;\n    clone.sibling = null;\n    return clone;\n  }\n\n  function placeChild(\n    newFiber: Fiber,\n    lastPlacedIndex: number,\n    newIndex: number,\n  ): number {\n    newFiber.index = newIndex;\n    if (!shouldTrackSideEffects) {\n      // Noop.\n      return lastPlacedIndex;\n    }\n    const current = newFiber.alternate;\n    if (current !== null) {\n      const oldIndex = current.index;\n      if (oldIndex < lastPlacedIndex) {\n        // This is a move.\n        newFiber.flags |= Placement;\n        return lastPlacedIndex;\n      } else {\n        // This item can stay in place.\n        return oldIndex;\n      }\n    } else {\n      // This is an insertion.\n      newFiber.flags |= Placement;\n      return lastPlacedIndex;\n    }\n  }\n\n  function placeSingleChild(newFiber: Fiber): Fiber {\n    // This is simpler for the single child case. We only need to do a\n    // placement for inserting new children.\n    if (shouldTrackSideEffects && newFiber.alternate === null) {\n      newFiber.flags |= Placement;\n    }\n    return newFiber;\n  }\n\n  function updateTextNode(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ) {\n    if (current === null || current.tag !== HostText) {\n      // Insert\n      const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateElement(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const elementType = element.type;\n    if (elementType === REACT_FRAGMENT_TYPE) {\n      return updateFragment(\n        returnFiber,\n        current,\n        element.props.children,\n        lanes,\n        element.key,\n      );\n    }\n    if (current !== null) {\n      if (\n        current.elementType === elementType ||\n        // Keep this check inline so it only runs on the false path:\n        (__DEV__\n          ? isCompatibleFamilyForHotReloading(current, element)\n          : false) ||\n        // Lazy types should reconcile their resolved type.\n        // We need to do this after the Hot Reloading check above,\n        // because hot reloading has different semantics than prod because\n        // it doesn't resuspend. So we can't let the call below suspend.\n        (enableLazyElements &&\n          typeof elementType === 'object' &&\n          elementType !== null &&\n          elementType.$$typeof === REACT_LAZY_TYPE &&\n          resolveLazy(elementType) === current.type)\n      ) {\n        // Move based on index\n        const existing = useFiber(current, element.props);\n        existing.ref = coerceRef(returnFiber, current, element);\n        existing.return = returnFiber;\n        if (__DEV__) {\n          existing._debugSource = element._source;\n          existing._debugOwner = element._owner;\n        }\n        return existing;\n      }\n    }\n    // Insert\n    const created = createFiberFromElement(element, returnFiber.mode, lanes);\n    created.ref = coerceRef(returnFiber, current, element);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function updatePortal(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    if (\n      current === null ||\n      current.tag !== HostPortal ||\n      current.stateNode.containerInfo !== portal.containerInfo ||\n      current.stateNode.implementation !== portal.implementation\n    ) {\n      // Insert\n      const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, portal.children || []);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function updateFragment(\n    returnFiber: Fiber,\n    current: Fiber | null,\n    fragment: Iterable<*>,\n    lanes: Lanes,\n    key: null | string,\n  ): Fiber {\n    if (current === null || current.tag !== Fragment) {\n      // Insert\n      const created = createFiberFromFragment(\n        fragment,\n        returnFiber.mode,\n        lanes,\n        key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      // Update\n      const existing = useFiber(current, fragment);\n      existing.return = returnFiber;\n      return existing;\n    }\n  }\n\n  function createChild(\n    returnFiber: Fiber,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      const created = createFiberFromText(\n        '' + newChild,\n        returnFiber.mode,\n        lanes,\n      );\n      created.return = returnFiber;\n      return created;\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const created = createFiberFromElement(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.ref = coerceRef(returnFiber, null, newChild);\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_PORTAL_TYPE: {\n          const created = createFiberFromPortal(\n            newChild,\n            returnFiber.mode,\n            lanes,\n          );\n          created.return = returnFiber;\n          return created;\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return createChild(returnFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const created = createFiberFromFragment(\n          newChild,\n          returnFiber.mode,\n          lanes,\n          null,\n        );\n        created.return = returnFiber;\n        return created;\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateSlot(\n    returnFiber: Fiber,\n    oldFiber: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // Update the fiber if the keys match, otherwise return null.\n\n    const key = oldFiber !== null ? oldFiber.key : null;\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys. If the previous node is implicitly keyed\n      // we can continue to replace it without aborting even if it is not a text\n      // node.\n      if (key !== null) {\n        return null;\n      }\n      return updateTextNode(returnFiber, oldFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          if (newChild.key === key) {\n            return updateElement(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_PORTAL_TYPE: {\n          if (newChild.key === key) {\n            return updatePortal(returnFiber, oldFiber, newChild, lanes);\n          } else {\n            return null;\n          }\n        }\n        case REACT_LAZY_TYPE: {\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateSlot(returnFiber, oldFiber, init(payload), lanes);\n          }\n        }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        if (key !== null) {\n          return null;\n        }\n\n        return updateFragment(returnFiber, oldFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  function updateFromMap(\n    existingChildren: Map<string | number, Fiber>,\n    returnFiber: Fiber,\n    newIdx: number,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      // Text nodes don't have keys, so we neither have to check the old nor\n      // new node for the key. If both are text nodes, they match.\n      const matchedFiber = existingChildren.get(newIdx) || null;\n      return updateTextNode(returnFiber, matchedFiber, '' + newChild, lanes);\n    }\n\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updateElement(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_PORTAL_TYPE: {\n          const matchedFiber =\n            existingChildren.get(\n              newChild.key === null ? newIdx : newChild.key,\n            ) || null;\n          return updatePortal(returnFiber, matchedFiber, newChild, lanes);\n        }\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            return updateFromMap(\n              existingChildren,\n              returnFiber,\n              newIdx,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n\n      if (isArray(newChild) || getIteratorFn(newChild)) {\n        const matchedFiber = existingChildren.get(newIdx) || null;\n        return updateFragment(returnFiber, matchedFiber, newChild, lanes, null);\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    return null;\n  }\n\n  /**\n   * Warns if there is a duplicate or missing key\n   */\n  function warnOnInvalidKey(\n    child: mixed,\n    knownKeys: Set<string> | null,\n    returnFiber: Fiber,\n  ): Set<string> | null {\n    if (__DEV__) {\n      if (typeof child !== 'object' || child === null) {\n        return knownKeys;\n      }\n      switch (child.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n        case REACT_PORTAL_TYPE:\n          warnForMissingKey(child, returnFiber);\n          const key = child.key;\n          if (typeof key !== 'string') {\n            break;\n          }\n          if (knownKeys === null) {\n            knownKeys = new Set();\n            knownKeys.add(key);\n            break;\n          }\n          if (!knownKeys.has(key)) {\n            knownKeys.add(key);\n            break;\n          }\n          console.error(\n            'Encountered two children with the same key, `%s`. ' +\n              'Keys should be unique so that components maintain their identity ' +\n              'across updates. Non-unique keys may cause children to be ' +\n              'duplicated and/or omitted — the behavior is unsupported and ' +\n              'could change in a future version.',\n            key,\n          );\n          break;\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = child._payload;\n            const init = (child._init: any);\n            warnOnInvalidKey(init(payload), knownKeys, returnFiber);\n            break;\n          }\n        // We intentionally fallthrough here if enableLazyElements is not on.\n        // eslint-disable-next-lined no-fallthrough\n        default:\n          break;\n      }\n    }\n    return knownKeys;\n  }\n\n  function reconcileChildrenArray(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildren: Array<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This algorithm can't optimize by searching from both ends since we\n    // don't have backpointers on fibers. I'm trying to see how far we can get\n    // with that model. If it ends up not being worth the tradeoffs, we can\n    // add it later.\n\n    // Even with a two ended optimization, we'd want to optimize for the case\n    // where there are few changes and brute force the comparison instead of\n    // going for the Map. It'd like to explore hitting that path first in\n    // forward-only mode and only go for the Map once we notice that we need\n    // lots of look ahead. This doesn't handle reversal as well as two ended\n    // search but that's unusual. Besides, for the two ended optimization to\n    // work on Iterables, we'd need to copy the whole set.\n\n    // In this first iteration, we'll just live with hitting the bad case\n    // (adding everything to a Map) in for every insert/move.\n\n    // If you change this code, also update reconcileChildrenIterator() which\n    // uses the same algorithm.\n\n    if (__DEV__) {\n      // First, validate keys.\n      let knownKeys = null;\n      for (let i = 0; i < newChildren.length; i++) {\n        const child = newChildren[i];\n        knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n      }\n    }\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n    for (; oldFiber !== null && newIdx < newChildren.length; newIdx++) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(\n        returnFiber,\n        oldFiber,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (newIdx === newChildren.length) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; newIdx < newChildren.length; newIdx++) {\n        const newFiber = createChild(returnFiber, newChildren[newIdx], lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; newIdx < newChildren.length; newIdx++) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        newChildren[newIdx],\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileChildrenIterator(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChildrenIterable: Iterable<*>,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This is the same implementation as reconcileChildrenArray(),\n    // but using the iterator instead.\n\n    const iteratorFn = getIteratorFn(newChildrenIterable);\n    invariant(\n      typeof iteratorFn === 'function',\n      'An object is not an iterable. This error is likely caused by a bug in ' +\n        'React. Please file an issue.',\n    );\n\n    if (__DEV__) {\n      // We don't support rendering Generators because it's a mutation.\n      // See https://github.com/facebook/react/issues/12995\n      if (\n        typeof Symbol === 'function' &&\n        // $FlowFixMe Flow doesn't know about toStringTag\n        newChildrenIterable[Symbol.toStringTag] === 'Generator'\n      ) {\n        if (!didWarnAboutGenerators) {\n          console.error(\n            'Using Generators as children is unsupported and will likely yield ' +\n              'unexpected results because enumerating a generator mutates it. ' +\n              'You may convert it to an array with `Array.from()` or the ' +\n              '`[...spread]` operator before rendering. Keep in mind ' +\n              'you might need to polyfill these features for older browsers.',\n          );\n        }\n        didWarnAboutGenerators = true;\n      }\n\n      // Warn about using Maps as children\n      if ((newChildrenIterable: any).entries === iteratorFn) {\n        if (!didWarnAboutMaps) {\n          console.error(\n            'Using Maps as children is not supported. ' +\n              'Use an array of keyed ReactElements instead.',\n          );\n        }\n        didWarnAboutMaps = true;\n      }\n\n      // First, validate keys.\n      // We'll get a different iterator later for the main pass.\n      const newChildren = iteratorFn.call(newChildrenIterable);\n      if (newChildren) {\n        let knownKeys = null;\n        let step = newChildren.next();\n        for (; !step.done; step = newChildren.next()) {\n          const child = step.value;\n          knownKeys = warnOnInvalidKey(child, knownKeys, returnFiber);\n        }\n      }\n    }\n\n    const newChildren = iteratorFn.call(newChildrenIterable);\n    invariant(newChildren != null, 'An iterable object provided no iterator.');\n\n    let resultingFirstChild: Fiber | null = null;\n    let previousNewFiber: Fiber | null = null;\n\n    let oldFiber = currentFirstChild;\n    let lastPlacedIndex = 0;\n    let newIdx = 0;\n    let nextOldFiber = null;\n\n    let step = newChildren.next();\n    for (\n      ;\n      oldFiber !== null && !step.done;\n      newIdx++, step = newChildren.next()\n    ) {\n      if (oldFiber.index > newIdx) {\n        nextOldFiber = oldFiber;\n        oldFiber = null;\n      } else {\n        nextOldFiber = oldFiber.sibling;\n      }\n      const newFiber = updateSlot(returnFiber, oldFiber, step.value, lanes);\n      if (newFiber === null) {\n        // TODO: This breaks on empty slots like null children. That's\n        // unfortunate because it triggers the slow path all the time. We need\n        // a better way to communicate whether this was a miss or null,\n        // boolean, undefined, etc.\n        if (oldFiber === null) {\n          oldFiber = nextOldFiber;\n        }\n        break;\n      }\n      if (shouldTrackSideEffects) {\n        if (oldFiber && newFiber.alternate === null) {\n          // We matched the slot, but we didn't reuse the existing fiber, so we\n          // need to delete the existing child.\n          deleteChild(returnFiber, oldFiber);\n        }\n      }\n      lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n      if (previousNewFiber === null) {\n        // TODO: Move out of the loop. This only happens for the first run.\n        resultingFirstChild = newFiber;\n      } else {\n        // TODO: Defer siblings if we're not at the right index for this slot.\n        // I.e. if we had null values before, then we want to defer this\n        // for each null value. However, we also don't want to call updateSlot\n        // with the previous one.\n        previousNewFiber.sibling = newFiber;\n      }\n      previousNewFiber = newFiber;\n      oldFiber = nextOldFiber;\n    }\n\n    if (step.done) {\n      // We've reached the end of the new children. We can delete the rest.\n      deleteRemainingChildren(returnFiber, oldFiber);\n      return resultingFirstChild;\n    }\n\n    if (oldFiber === null) {\n      // If we don't have any more existing children we can choose a fast path\n      // since the rest will all be insertions.\n      for (; !step.done; newIdx++, step = newChildren.next()) {\n        const newFiber = createChild(returnFiber, step.value, lanes);\n        if (newFiber === null) {\n          continue;\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          // TODO: Move out of the loop. This only happens for the first run.\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n      return resultingFirstChild;\n    }\n\n    // Add all children to a key map for quick lookups.\n    const existingChildren = mapRemainingChildren(returnFiber, oldFiber);\n\n    // Keep scanning and use the map to restore deleted items as moves.\n    for (; !step.done; newIdx++, step = newChildren.next()) {\n      const newFiber = updateFromMap(\n        existingChildren,\n        returnFiber,\n        newIdx,\n        step.value,\n        lanes,\n      );\n      if (newFiber !== null) {\n        if (shouldTrackSideEffects) {\n          if (newFiber.alternate !== null) {\n            // The new fiber is a work in progress, but if there exists a\n            // current, that means that we reused the fiber. We need to delete\n            // it from the child list so that we don't add it to the deletion\n            // list.\n            existingChildren.delete(\n              newFiber.key === null ? newIdx : newFiber.key,\n            );\n          }\n        }\n        lastPlacedIndex = placeChild(newFiber, lastPlacedIndex, newIdx);\n        if (previousNewFiber === null) {\n          resultingFirstChild = newFiber;\n        } else {\n          previousNewFiber.sibling = newFiber;\n        }\n        previousNewFiber = newFiber;\n      }\n    }\n\n    if (shouldTrackSideEffects) {\n      // Any existing children that weren't consumed above were deleted. We need\n      // to add them to the deletion list.\n      existingChildren.forEach(child => deleteChild(returnFiber, child));\n    }\n\n    return resultingFirstChild;\n  }\n\n  function reconcileSingleTextNode(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    textContent: string,\n    lanes: Lanes,\n  ): Fiber {\n    // There's no need to check for keys on text nodes since we don't have a\n    // way to define them.\n    if (currentFirstChild !== null && currentFirstChild.tag === HostText) {\n      // We already have an existing node so let's just update it and delete\n      // the rest.\n      deleteRemainingChildren(returnFiber, currentFirstChild.sibling);\n      const existing = useFiber(currentFirstChild, textContent);\n      existing.return = returnFiber;\n      return existing;\n    }\n    // The existing first child is not a text node so we need to create one\n    // and delete the existing ones.\n    deleteRemainingChildren(returnFiber, currentFirstChild);\n    const created = createFiberFromText(textContent, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  function reconcileSingleElement(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    element: ReactElement,\n    lanes: Lanes,\n  ): Fiber {\n    const key = element.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        const elementType = element.type;\n        if (elementType === REACT_FRAGMENT_TYPE) {\n          if (child.tag === Fragment) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            const existing = useFiber(child, element.props.children);\n            existing.return = returnFiber;\n            if (__DEV__) {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        } else {\n          if (\n            child.elementType === elementType ||\n            // Keep this check inline so it only runs on the false path:\n            (__DEV__\n              ? isCompatibleFamilyForHotReloading(child, element)\n              : false) ||\n            // Lazy types should reconcile their resolved type.\n            // We need to do this after the Hot Reloading check above,\n            // because hot reloading has different semantics than prod because\n            // it doesn't resuspend. So we can't let the call below suspend.\n            (enableLazyElements &&\n              typeof elementType === 'object' &&\n              elementType !== null &&\n              elementType.$$typeof === REACT_LAZY_TYPE &&\n              resolveLazy(elementType) === child.type)\n          ) {\n            deleteRemainingChildren(returnFiber, child.sibling);\n            const existing = useFiber(child, element.props);\n            existing.ref = coerceRef(returnFiber, child, element);\n            existing.return = returnFiber;\n            if (__DEV__) {\n              existing._debugSource = element._source;\n              existing._debugOwner = element._owner;\n            }\n            return existing;\n          }\n        }\n        // Didn't match.\n        deleteRemainingChildren(returnFiber, child);\n        break;\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    if (element.type === REACT_FRAGMENT_TYPE) {\n      const created = createFiberFromFragment(\n        element.props.children,\n        returnFiber.mode,\n        lanes,\n        element.key,\n      );\n      created.return = returnFiber;\n      return created;\n    } else {\n      const created = createFiberFromElement(element, returnFiber.mode, lanes);\n      created.ref = coerceRef(returnFiber, currentFirstChild, element);\n      created.return = returnFiber;\n      return created;\n    }\n  }\n\n  function reconcileSinglePortal(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    portal: ReactPortal,\n    lanes: Lanes,\n  ): Fiber {\n    const key = portal.key;\n    let child = currentFirstChild;\n    while (child !== null) {\n      // TODO: If key === null and child.key === null, then this only applies to\n      // the first item in the list.\n      if (child.key === key) {\n        if (\n          child.tag === HostPortal &&\n          child.stateNode.containerInfo === portal.containerInfo &&\n          child.stateNode.implementation === portal.implementation\n        ) {\n          deleteRemainingChildren(returnFiber, child.sibling);\n          const existing = useFiber(child, portal.children || []);\n          existing.return = returnFiber;\n          return existing;\n        } else {\n          deleteRemainingChildren(returnFiber, child);\n          break;\n        }\n      } else {\n        deleteChild(returnFiber, child);\n      }\n      child = child.sibling;\n    }\n\n    const created = createFiberFromPortal(portal, returnFiber.mode, lanes);\n    created.return = returnFiber;\n    return created;\n  }\n\n  // This API will tag the children with the side-effect of the reconciliation\n  // itself. They will be added to the side-effect list as we pass through the\n  // children and the parent.\n  function reconcileChildFibers(\n    returnFiber: Fiber,\n    currentFirstChild: Fiber | null,\n    newChild: any,\n    lanes: Lanes,\n  ): Fiber | null {\n    // This function is not recursive.\n    // If the top level item is an array, we treat it as a set of children,\n    // not as a fragment. Nested arrays on the other hand will be treated as\n    // fragment nodes. Recursion happens at the normal flow.\n\n    // Handle top level unkeyed fragments as if they were arrays.\n    // This leads to an ambiguity between <>{[...]}</> and <>...</>.\n    // We treat the ambiguous cases above the same.\n    const isUnkeyedTopLevelFragment =\n      typeof newChild === 'object' &&\n      newChild !== null &&\n      newChild.type === REACT_FRAGMENT_TYPE &&\n      newChild.key === null;\n    if (isUnkeyedTopLevelFragment) {\n      newChild = newChild.props.children;\n    }\n\n    // Handle object types\n    if (typeof newChild === 'object' && newChild !== null) {\n      switch (newChild.$$typeof) {\n        case REACT_ELEMENT_TYPE:\n          return placeSingleChild(\n            reconcileSingleElement(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_PORTAL_TYPE:\n          return placeSingleChild(\n            reconcileSinglePortal(\n              returnFiber,\n              currentFirstChild,\n              newChild,\n              lanes,\n            ),\n          );\n        case REACT_LAZY_TYPE:\n          if (enableLazyElements) {\n            const payload = newChild._payload;\n            const init = newChild._init;\n            // TODO: This function is supposed to be non-recursive.\n            return reconcileChildFibers(\n              returnFiber,\n              currentFirstChild,\n              init(payload),\n              lanes,\n            );\n          }\n      }\n\n      if (isArray(newChild)) {\n        return reconcileChildrenArray(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes,\n        );\n      }\n\n      if (getIteratorFn(newChild)) {\n        return reconcileChildrenIterator(\n          returnFiber,\n          currentFirstChild,\n          newChild,\n          lanes,\n        );\n      }\n\n      throwOnInvalidObjectType(returnFiber, newChild);\n    }\n\n    if (typeof newChild === 'string' || typeof newChild === 'number') {\n      return placeSingleChild(\n        reconcileSingleTextNode(\n          returnFiber,\n          currentFirstChild,\n          '' + newChild,\n          lanes,\n        ),\n      );\n    }\n\n    if (__DEV__) {\n      if (typeof newChild === 'function') {\n        warnOnFunctionType(returnFiber);\n      }\n    }\n\n    // Remaining cases are all treated as empty.\n    return deleteRemainingChildren(returnFiber, currentFirstChild);\n  }\n\n  return reconcileChildFibers;\n}\n\nexport const reconcileChildFibers = ChildReconciler(true);\nexport const mountChildFibers = ChildReconciler(false);\n\nexport function cloneChildFibers(\n  current: Fiber | null,\n  workInProgress: Fiber,\n): void {\n  invariant(\n    current === null || workInProgress.child === current.child,\n    'Resuming work not yet implemented.',\n  );\n\n  if (workInProgress.child === null) {\n    return;\n  }\n\n  let currentChild = workInProgress.child;\n  let newChild = createWorkInProgress(currentChild, currentChild.pendingProps);\n  workInProgress.child = newChild;\n\n  newChild.return = workInProgress;\n  while (currentChild.sibling !== null) {\n    currentChild = currentChild.sibling;\n    newChild = newChild.sibling = createWorkInProgress(\n      currentChild,\n      currentChild.pendingProps,\n    );\n    newChild.return = workInProgress;\n  }\n  newChild.sibling = null;\n}\n\n// Reset a workInProgress child set to prepare it for a second pass.\nexport function resetChildFibers(workInProgress: Fiber, lanes: Lanes): void {\n  let child = workInProgress.child;\n  while (child !== null) {\n    resetWorkInProgress(child, lanes);\n    child = child.sibling;\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Container, HostContext} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\n\nimport {getChildHostContext, getRootHostContext} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\ndeclare class NoContextT {}\nconst NO_CONTEXT: NoContextT = ({}: any);\n\nconst contextStackCursor: StackCursor<HostContext | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst contextFiberStackCursor: StackCursor<Fiber | NoContextT> = createCursor(\n  NO_CONTEXT,\n);\nconst rootInstanceStackCursor: StackCursor<\n  Container | NoContextT,\n> = createCursor(NO_CONTEXT);\n\nfunction requiredContext<Value>(c: Value | NoContextT): Value {\n  invariant(\n    c !== NO_CONTEXT,\n    'Expected host context to exist. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n  return (c: any);\n}\n\nfunction getRootHostContainer(): Container {\n  const rootInstance = requiredContext(rootInstanceStackCursor.current);\n  return rootInstance;\n}\n\nfunction pushHostContainer(fiber: Fiber, nextRootInstance: Container) {\n  // Push current root instance onto the stack;\n  // This allows us to reset root when portals are popped.\n  push(rootInstanceStackCursor, nextRootInstance, fiber);\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n\n  // Finally, we need to push the host context to the stack.\n  // However, we can't just call getRootHostContext() and push it because\n  // we'd have a different number of entries on the stack depending on\n  // whether getRootHostContext() throws somewhere in renderer code or not.\n  // So we push an empty value first. This lets us safely unwind on errors.\n  push(contextStackCursor, NO_CONTEXT, fiber);\n  const nextRootContext = getRootHostContext(nextRootInstance);\n  // Now that we know this function doesn't throw, replace it.\n  pop(contextStackCursor, fiber);\n  push(contextStackCursor, nextRootContext, fiber);\n}\n\nfunction popHostContainer(fiber: Fiber) {\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n  pop(rootInstanceStackCursor, fiber);\n}\n\nfunction getHostContext(): HostContext {\n  const context = requiredContext(contextStackCursor.current);\n  return context;\n}\n\nfunction pushHostContext(fiber: Fiber): void {\n  const rootInstance: Container = requiredContext(\n    rootInstanceStackCursor.current,\n  );\n  const context: HostContext = requiredContext(contextStackCursor.current);\n  const nextContext = getChildHostContext(context, fiber.type, rootInstance);\n\n  // Don't push this Fiber's context unless it's unique.\n  if (context === nextContext) {\n    return;\n  }\n\n  // Track the context and the Fiber that provided it.\n  // This enables us to pop only Fibers that provide unique contexts.\n  push(contextFiberStackCursor, fiber, fiber);\n  push(contextStackCursor, nextContext, fiber);\n}\n\nfunction popHostContext(fiber: Fiber): void {\n  // Do not pop unless this Fiber provided the current context.\n  // pushHostContext() only pushes Fibers that provide unique contexts.\n  if (contextFiberStackCursor.current !== fiber) {\n    return;\n  }\n\n  pop(contextStackCursor, fiber);\n  pop(contextFiberStackCursor, fiber);\n}\n\nexport {\n  getHostContext,\n  getRootHostContainer,\n  popHostContainer,\n  popHostContext,\n  pushHostContainer,\n  pushHostContext,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {createCursor, push, pop} from './ReactFiberStack.old';\n\nexport opaque type SuspenseContext = number;\nexport opaque type SubtreeSuspenseContext: SuspenseContext = number;\nexport opaque type ShallowSuspenseContext: SuspenseContext = number;\n\nconst DefaultSuspenseContext: SuspenseContext = 0b00;\n\n// The Suspense Context is split into two parts. The lower bits is\n// inherited deeply down the subtree. The upper bits only affect\n// this immediate suspense boundary and gets reset each new\n// boundary or suspense list.\nconst SubtreeSuspenseContextMask: SuspenseContext = 0b01;\n\n// Subtree Flags:\n\n// InvisibleParentSuspenseContext indicates that one of our parent Suspense\n// boundaries is not currently showing visible main content.\n// Either because it is already showing a fallback or is not mounted at all.\n// We can use this to determine if it is desirable to trigger a fallback at\n// the parent. If not, then we might need to trigger undesirable boundaries\n// and/or suspend the commit to avoid hiding the parent content.\nexport const InvisibleParentSuspenseContext: SubtreeSuspenseContext = 0b01;\n\n// Shallow Flags:\n\n// ForceSuspenseFallback can be used by SuspenseList to force newly added\n// items into their fallback state during one of the render passes.\nexport const ForceSuspenseFallback: ShallowSuspenseContext = 0b10;\n\nexport const suspenseStackCursor: StackCursor<SuspenseContext> = createCursor(\n  DefaultSuspenseContext,\n);\n\nexport function hasSuspenseContext(\n  parentContext: SuspenseContext,\n  flag: SuspenseContext,\n): boolean {\n  return (parentContext & flag) !== 0;\n}\n\nexport function setDefaultShallowSuspenseContext(\n  parentContext: SuspenseContext,\n): SuspenseContext {\n  return parentContext & SubtreeSuspenseContextMask;\n}\n\nexport function setShallowSuspenseContext(\n  parentContext: SuspenseContext,\n  shallowContext: ShallowSuspenseContext,\n): SuspenseContext {\n  return (parentContext & SubtreeSuspenseContextMask) | shallowContext;\n}\n\nexport function addSubtreeSuspenseContext(\n  parentContext: SuspenseContext,\n  subtreeContext: SubtreeSuspenseContext,\n): SuspenseContext {\n  return parentContext | subtreeContext;\n}\n\nexport function pushSuspenseContext(\n  fiber: Fiber,\n  newContext: SuspenseContext,\n): void {\n  push(suspenseStackCursor, newContext, fiber);\n}\n\nexport function popSuspenseContext(fiber: Fiber): void {\n  pop(suspenseStackCursor, fiber);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactNodeList, Wakeable} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport type {Lane} from './ReactFiberLane.old';\nimport {SuspenseComponent, SuspenseListComponent} from './ReactWorkTags';\nimport {NoFlags, DidCapture} from './ReactFiberFlags';\nimport {\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n} from './ReactFiberHostConfig';\n\nexport type SuspenseProps = {|\n  children?: ReactNodeList,\n  fallback?: ReactNodeList,\n\n  // TODO: Add \"unstable_\" prefix?\n  suspenseCallback?: (Set<Wakeable> | null) => mixed,\n\n  unstable_expectedLoadTime?: number,\n|};\n\n// A null SuspenseState represents an unsuspended normal Suspense boundary.\n// A non-null SuspenseState means that it is blocked for one reason or another.\n// - A non-null dehydrated field means it's blocked pending hydration.\n//   - A non-null dehydrated field can use isSuspenseInstancePending or\n//     isSuspenseInstanceFallback to query the reason for being dehydrated.\n// - A null dehydrated field means it's blocked by something suspending and\n//   we're currently showing a fallback instead.\nexport type SuspenseState = {|\n  // If this boundary is still dehydrated, we store the SuspenseInstance\n  // here to indicate that it is dehydrated (flag) and for quick access\n  // to check things like isSuspenseInstancePending.\n  dehydrated: null | SuspenseInstance,\n  // Represents the lane we should attempt to hydrate a dehydrated boundary at.\n  // OffscreenLane is the default for dehydrated boundaries.\n  // NoLane is the default for normal boundaries, which turns into \"normal\" pri.\n  retryLane: Lane,\n|};\n\nexport type SuspenseListTailMode = 'collapsed' | 'hidden' | void;\n\nexport type SuspenseListRenderState = {|\n  isBackwards: boolean,\n  // The currently rendering tail row.\n  rendering: null | Fiber,\n  // The absolute time when we started rendering the most recent tail row.\n  renderingStartTime: number,\n  // The last of the already rendered children.\n  last: null | Fiber,\n  // Remaining rows on the tail of the list.\n  tail: null | Fiber,\n  // Tail insertions setting.\n  tailMode: SuspenseListTailMode,\n|};\n\nexport function shouldCaptureSuspense(\n  workInProgress: Fiber,\n  hasInvisibleParent: boolean,\n): boolean {\n  // If it was the primary children that just suspended, capture and render the\n  // fallback. Otherwise, don't capture and bubble to the next boundary.\n  const nextState: SuspenseState | null = workInProgress.memoizedState;\n  if (nextState !== null) {\n    if (nextState.dehydrated !== null) {\n      // A dehydrated boundary always captures.\n      return true;\n    }\n    return false;\n  }\n  const props = workInProgress.memoizedProps;\n  // Regular boundaries always capture.\n  if (props.unstable_avoidThisFallback !== true) {\n    return true;\n  }\n  // If it's a boundary we should avoid, then we prefer to bubble up to the\n  // parent boundary if it is currently invisible.\n  if (hasInvisibleParent) {\n    return false;\n  }\n  // If the parent is not able to handle it, we must handle it.\n  return true;\n}\n\nexport function findFirstSuspended(row: Fiber): null | Fiber {\n  let node = row;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        const dehydrated: null | SuspenseInstance = state.dehydrated;\n        if (\n          dehydrated === null ||\n          isSuspenseInstancePending(dehydrated) ||\n          isSuspenseInstanceFallback(dehydrated)\n        ) {\n          return node;\n        }\n      }\n    } else if (\n      node.tag === SuspenseListComponent &&\n      // revealOrder undefined can't be trusted because it don't\n      // keep track of whether it suspended or not.\n      node.memoizedProps.revealOrder !== undefined\n    ) {\n      const didSuspend = (node.flags & DidCapture) !== NoFlags;\n      if (didSuspend) {\n        return node;\n      }\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === row) {\n      return null;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === row) {\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n  return null;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nexport type HookFlags = number;\n\nexport const NoFlags = /*  */ 0b000;\n\n// Represents whether effect should fire.\nexport const HasEffect = /* */ 0b001;\n\n// Represents the phase in which the effect (not the clean-up) fires.\nexport const Layout = /*    */ 0b010;\nexport const Passive = /*   */ 0b100;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {\n  Instance,\n  TextInstance,\n  HydratableInstance,\n  SuspenseInstance,\n  Container,\n  HostContext,\n} from './ReactFiberHostConfig';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  HostComponent,\n  HostText,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport {ChildDeletion, Placement, Hydrating} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createFiberFromHostInstanceForDeletion,\n  createFiberFromDehydratedFragment,\n} from './ReactFiber.old';\nimport {\n  shouldSetTextContent,\n  supportsHydration,\n  canHydrateInstance,\n  canHydrateTextInstance,\n  canHydrateSuspenseInstance,\n  getNextHydratableSibling,\n  getFirstHydratableChild,\n  hydrateInstance,\n  hydrateTextInstance,\n  hydrateSuspenseInstance,\n  getNextHydratableInstanceAfterSuspenseInstance,\n  shouldDeleteUnhydratedTailInstances,\n  didNotMatchHydratedContainerTextInstance,\n  didNotMatchHydratedTextInstance,\n  didNotHydrateContainerInstance,\n  didNotHydrateInstance,\n  didNotFindHydratableContainerInstance,\n  didNotFindHydratableContainerTextInstance,\n  didNotFindHydratableContainerSuspenseInstance,\n  didNotFindHydratableInstance,\n  didNotFindHydratableTextInstance,\n  didNotFindHydratableSuspenseInstance,\n} from './ReactFiberHostConfig';\nimport {enableSuspenseServerRenderer} from 'shared/ReactFeatureFlags';\nimport {OffscreenLane} from './ReactFiberLane.old';\n\n// The deepest Fiber on the stack involved in a hydration context.\n// This may have been an insertion or a hydration.\nlet hydrationParentFiber: null | Fiber = null;\nlet nextHydratableInstance: null | HydratableInstance = null;\nlet isHydrating: boolean = false;\n\nfunction warnIfHydrating() {\n  if (__DEV__) {\n    if (isHydrating) {\n      console.error(\n        'We should not be hydrating here. This is a bug in React. Please file a bug.',\n      );\n    }\n  }\n}\n\nfunction enterHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n\n  const parentInstance = fiber.stateNode.containerInfo;\n  nextHydratableInstance = getFirstHydratableChild(parentInstance);\n  hydrationParentFiber = fiber;\n  isHydrating = true;\n  return true;\n}\n\nfunction reenterHydrationStateFromDehydratedSuspenseInstance(\n  fiber: Fiber,\n  suspenseInstance: SuspenseInstance,\n): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  nextHydratableInstance = getNextHydratableSibling(suspenseInstance);\n  popToNextHostParent(fiber);\n  isHydrating = true;\n  return true;\n}\n\nfunction deleteHydratableInstance(\n  returnFiber: Fiber,\n  instance: HydratableInstance,\n) {\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot:\n        didNotHydrateContainerInstance(\n          returnFiber.stateNode.containerInfo,\n          instance,\n        );\n        break;\n      case HostComponent:\n        didNotHydrateInstance(\n          returnFiber.type,\n          returnFiber.memoizedProps,\n          returnFiber.stateNode,\n          instance,\n        );\n        break;\n    }\n  }\n\n  const childToDelete = createFiberFromHostInstanceForDeletion();\n  childToDelete.stateNode = instance;\n  childToDelete.return = returnFiber;\n\n  const deletions = returnFiber.deletions;\n  if (deletions === null) {\n    returnFiber.deletions = [childToDelete];\n    returnFiber.flags |= ChildDeletion;\n  } else {\n    deletions.push(childToDelete);\n  }\n}\n\nfunction insertNonHydratedInstance(returnFiber: Fiber, fiber: Fiber) {\n  fiber.flags = (fiber.flags & ~Hydrating) | Placement;\n  if (__DEV__) {\n    switch (returnFiber.tag) {\n      case HostRoot: {\n        const parentContainer = returnFiber.stateNode.containerInfo;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableContainerInstance(parentContainer, type, props);\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableContainerTextInstance(parentContainer, text);\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableContainerSuspenseInstance(parentContainer);\n            break;\n        }\n        break;\n      }\n      case HostComponent: {\n        const parentType = returnFiber.type;\n        const parentProps = returnFiber.memoizedProps;\n        const parentInstance = returnFiber.stateNode;\n        switch (fiber.tag) {\n          case HostComponent:\n            const type = fiber.type;\n            const props = fiber.pendingProps;\n            didNotFindHydratableInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              type,\n              props,\n            );\n            break;\n          case HostText:\n            const text = fiber.pendingProps;\n            didNotFindHydratableTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              text,\n            );\n            break;\n          case SuspenseComponent:\n            didNotFindHydratableSuspenseInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n            );\n            break;\n        }\n        break;\n      }\n      default:\n        return;\n    }\n  }\n}\n\nfunction tryHydrate(fiber, nextInstance) {\n  switch (fiber.tag) {\n    case HostComponent: {\n      const type = fiber.type;\n      const props = fiber.pendingProps;\n      const instance = canHydrateInstance(nextInstance, type, props);\n      if (instance !== null) {\n        fiber.stateNode = (instance: Instance);\n        return true;\n      }\n      return false;\n    }\n    case HostText: {\n      const text = fiber.pendingProps;\n      const textInstance = canHydrateTextInstance(nextInstance, text);\n      if (textInstance !== null) {\n        fiber.stateNode = (textInstance: TextInstance);\n        return true;\n      }\n      return false;\n    }\n    case SuspenseComponent: {\n      if (enableSuspenseServerRenderer) {\n        const suspenseInstance: null | SuspenseInstance = canHydrateSuspenseInstance(\n          nextInstance,\n        );\n        if (suspenseInstance !== null) {\n          const suspenseState: SuspenseState = {\n            dehydrated: suspenseInstance,\n            retryLane: OffscreenLane,\n          };\n          fiber.memoizedState = suspenseState;\n          // Store the dehydrated fragment as a child fiber.\n          // This simplifies the code for getHostSibling and deleting nodes,\n          // since it doesn't have to consider all Suspense boundaries and\n          // check if they're dehydrated ones or not.\n          const dehydratedFragment = createFiberFromDehydratedFragment(\n            suspenseInstance,\n          );\n          dehydratedFragment.return = fiber;\n          fiber.child = dehydratedFragment;\n          return true;\n        }\n      }\n      return false;\n    }\n    default:\n      return false;\n  }\n}\n\nfunction tryToClaimNextHydratableInstance(fiber: Fiber): void {\n  if (!isHydrating) {\n    return;\n  }\n  let nextInstance = nextHydratableInstance;\n  if (!nextInstance) {\n    // Nothing to hydrate. Make it an insertion.\n    insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n    isHydrating = false;\n    hydrationParentFiber = fiber;\n    return;\n  }\n  const firstAttemptedInstance = nextInstance;\n  if (!tryHydrate(fiber, nextInstance)) {\n    // If we can't hydrate this instance let's try the next one.\n    // We use this as a heuristic. It's based on intuition and not data so it\n    // might be flawed or unnecessary.\n    nextInstance = getNextHydratableSibling(firstAttemptedInstance);\n    if (!nextInstance || !tryHydrate(fiber, nextInstance)) {\n      // Nothing to hydrate. Make it an insertion.\n      insertNonHydratedInstance((hydrationParentFiber: any), fiber);\n      isHydrating = false;\n      hydrationParentFiber = fiber;\n      return;\n    }\n    // We matched the next one, we'll now assume that the first one was\n    // superfluous and we'll delete it. Since we can't eagerly delete it\n    // we'll have to schedule a deletion. To do that, this node needs a dummy\n    // fiber associated with it.\n    deleteHydratableInstance(\n      (hydrationParentFiber: any),\n      firstAttemptedInstance,\n    );\n  }\n  hydrationParentFiber = fiber;\n  nextHydratableInstance = getFirstHydratableChild((nextInstance: any));\n}\n\nfunction prepareToHydrateHostInstance(\n  fiber: Fiber,\n  rootContainerInstance: Container,\n  hostContext: HostContext,\n): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const instance: Instance = fiber.stateNode;\n  const updatePayload = hydrateInstance(\n    instance,\n    fiber.type,\n    fiber.memoizedProps,\n    rootContainerInstance,\n    hostContext,\n    fiber,\n  );\n  // TODO: Type this specific to this type of component.\n  fiber.updateQueue = (updatePayload: any);\n  // If the update payload indicates that there is a change or if there\n  // is a new ref we mark this as an update.\n  if (updatePayload !== null) {\n    return true;\n  }\n  return false;\n}\n\nfunction prepareToHydrateHostTextInstance(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostTextInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const textInstance: TextInstance = fiber.stateNode;\n  const textContent: string = fiber.memoizedProps;\n  const shouldUpdate = hydrateTextInstance(textInstance, textContent, fiber);\n  if (__DEV__) {\n    if (shouldUpdate) {\n      // We assume that prepareToHydrateHostTextInstance is called in a context where the\n      // hydration parent is the parent host component of this host text.\n      const returnFiber = hydrationParentFiber;\n      if (returnFiber !== null) {\n        switch (returnFiber.tag) {\n          case HostRoot: {\n            const parentContainer = returnFiber.stateNode.containerInfo;\n            didNotMatchHydratedContainerTextInstance(\n              parentContainer,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n          case HostComponent: {\n            const parentType = returnFiber.type;\n            const parentProps = returnFiber.memoizedProps;\n            const parentInstance = returnFiber.stateNode;\n            didNotMatchHydratedTextInstance(\n              parentType,\n              parentProps,\n              parentInstance,\n              textInstance,\n              textContent,\n            );\n            break;\n          }\n        }\n      }\n    }\n  }\n  return shouldUpdate;\n}\n\nfunction prepareToHydrateHostSuspenseInstance(fiber: Fiber): void {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected prepareToHydrateHostSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  hydrateSuspenseInstance(suspenseInstance, fiber);\n}\n\nfunction skipPastDehydratedSuspenseInstance(\n  fiber: Fiber,\n): null | HydratableInstance {\n  if (!supportsHydration) {\n    invariant(\n      false,\n      'Expected skipPastDehydratedSuspenseInstance() to never be called. ' +\n        'This error is likely caused by a bug in React. Please file an issue.',\n    );\n  }\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  const suspenseInstance: null | SuspenseInstance =\n    suspenseState !== null ? suspenseState.dehydrated : null;\n  invariant(\n    suspenseInstance,\n    'Expected to have a hydrated suspense instance. ' +\n      'This error is likely caused by a bug in React. Please file an issue.',\n  );\n  return getNextHydratableInstanceAfterSuspenseInstance(suspenseInstance);\n}\n\nfunction popToNextHostParent(fiber: Fiber): void {\n  let parent = fiber.return;\n  while (\n    parent !== null &&\n    parent.tag !== HostComponent &&\n    parent.tag !== HostRoot &&\n    parent.tag !== SuspenseComponent\n  ) {\n    parent = parent.return;\n  }\n  hydrationParentFiber = parent;\n}\n\nfunction popHydrationState(fiber: Fiber): boolean {\n  if (!supportsHydration) {\n    return false;\n  }\n  if (fiber !== hydrationParentFiber) {\n    // We're deeper than the current hydration context, inside an inserted\n    // tree.\n    return false;\n  }\n  if (!isHydrating) {\n    // If we're not currently hydrating but we're in a hydration context, then\n    // we were an insertion and now need to pop up reenter hydration of our\n    // siblings.\n    popToNextHostParent(fiber);\n    isHydrating = true;\n    return false;\n  }\n\n  // If we have any remaining hydratable nodes, we need to delete them now.\n  // We only do this deeper than head and body since they tend to have random\n  // other nodes in them. We also ignore components with pure text content in\n  // side of them. We also don't delete anything inside the root container.\n  if (\n    fiber.tag !== HostRoot &&\n    (fiber.tag !== HostComponent ||\n      (shouldDeleteUnhydratedTailInstances(fiber.type) &&\n        !shouldSetTextContent(fiber.type, fiber.memoizedProps)))\n  ) {\n    let nextInstance = nextHydratableInstance;\n    while (nextInstance) {\n      deleteHydratableInstance(fiber, nextInstance);\n      nextInstance = getNextHydratableSibling(nextInstance);\n    }\n  }\n\n  popToNextHostParent(fiber);\n  if (fiber.tag === SuspenseComponent) {\n    nextHydratableInstance = skipPastDehydratedSuspenseInstance(fiber);\n  } else {\n    nextHydratableInstance = hydrationParentFiber\n      ? getNextHydratableSibling(fiber.stateNode)\n      : null;\n  }\n  return true;\n}\n\nfunction resetHydrationState(): void {\n  if (!supportsHydration) {\n    return;\n  }\n\n  hydrationParentFiber = null;\n  nextHydratableInstance = null;\n  isHydrating = false;\n}\n\nfunction getIsHydrating(): boolean {\n  return isHydrating;\n}\n\nexport {\n  warnIfHydrating,\n  enterHydrationState,\n  getIsHydrating,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {MutableSource, MutableSourceVersion} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\n\n// Work in progress version numbers only apply to a single render,\n// and should be reset before starting a new render.\n// This tracks which mutable sources need to be reset after a render.\nconst workInProgressSources: Array<MutableSource<any>> = [];\n\nlet rendererSigil;\nif (__DEV__) {\n  // Used to detect multiple renderers using the same mutable source.\n  rendererSigil = {};\n}\n\nexport function markSourceAsDirty(mutableSource: MutableSource<any>): void {\n  workInProgressSources.push(mutableSource);\n}\n\nexport function resetWorkInProgressVersions(): void {\n  for (let i = 0; i < workInProgressSources.length; i++) {\n    const mutableSource = workInProgressSources[i];\n    if (isPrimaryRenderer) {\n      mutableSource._workInProgressVersionPrimary = null;\n    } else {\n      mutableSource._workInProgressVersionSecondary = null;\n    }\n  }\n  workInProgressSources.length = 0;\n}\n\nexport function getWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n): null | MutableSourceVersion {\n  if (isPrimaryRenderer) {\n    return mutableSource._workInProgressVersionPrimary;\n  } else {\n    return mutableSource._workInProgressVersionSecondary;\n  }\n}\n\nexport function setWorkInProgressVersion(\n  mutableSource: MutableSource<any>,\n  version: MutableSourceVersion,\n): void {\n  if (isPrimaryRenderer) {\n    mutableSource._workInProgressVersionPrimary = version;\n  } else {\n    mutableSource._workInProgressVersionSecondary = version;\n  }\n  workInProgressSources.push(mutableSource);\n}\n\nexport function warnAboutMultipleRenderersDEV(\n  mutableSource: MutableSource<any>,\n): void {\n  if (__DEV__) {\n    if (isPrimaryRenderer) {\n      if (mutableSource._currentPrimaryRenderer == null) {\n        mutableSource._currentPrimaryRenderer = rendererSigil;\n      } else if (mutableSource._currentPrimaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    } else {\n      if (mutableSource._currentSecondaryRenderer == null) {\n        mutableSource._currentSecondaryRenderer = rendererSigil;\n      } else if (mutableSource._currentSecondaryRenderer !== rendererSigil) {\n        console.error(\n          'Detected multiple renderers concurrently rendering the ' +\n            'same mutable source. This is currently unsupported.',\n        );\n      }\n    }\n  }\n}\n\n// Eager reads the version of a mutable source and stores it on the root.\n// This ensures that the version used for server rendering matches the one\n// that is eventually read during hydration.\n// If they don't match there's a potential tear and a full deopt render is required.\nexport function registerMutableSourceForHydration(\n  root: FiberRoot,\n  mutableSource: MutableSource<any>,\n): void {\n  const getVersion = mutableSource._getVersion;\n  const version = getVersion(mutableSource._source);\n\n  // TODO Clear this data once all pending hydration work is finished.\n  // Retaining it forever may interfere with GC.\n  if (root.mutableSourceEagerHydrationData == null) {\n    root.mutableSourceEagerHydrationData = [mutableSource, version];\n  } else {\n    root.mutableSourceEagerHydrationData.push(mutableSource, version);\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {StackCursor} from './ReactFiberStack.old';\n\nimport {enableCache} from 'shared/ReactFeatureFlags';\nimport {REACT_CONTEXT_TYPE} from 'shared/ReactSymbols';\n\nimport {isPrimaryRenderer} from './ReactFiberHostConfig';\nimport {createCursor, push, pop} from './ReactFiberStack.old';\nimport {pushProvider, popProvider} from './ReactFiberNewContext.old';\n\nexport type Cache = Map<() => mixed, mixed>;\n\nexport type CacheComponentState = {|\n  +parent: Cache,\n  +cache: Cache,\n|};\n\nexport type SpawnedCachePool = {|\n  +parent: Cache,\n  +pool: Cache,\n|};\n\nexport const CacheContext: ReactContext<Cache> = enableCache\n  ? {\n      $$typeof: REACT_CONTEXT_TYPE,\n      // We don't use Consumer/Provider for Cache components. So we'll cheat.\n      Consumer: (null: any),\n      Provider: (null: any),\n      // We'll initialize these at the root.\n      _currentValue: (null: any),\n      _currentValue2: (null: any),\n      _threadCount: 0,\n    }\n  : (null: any);\n\nif (__DEV__ && enableCache) {\n  CacheContext._currentRenderer = null;\n  CacheContext._currentRenderer2 = null;\n}\n\n// The cache that newly mounted Cache boundaries should use. It's either\n// retrieved from the cache pool, or the result of a refresh.\nlet pooledCache: Cache | null = null;\n\n// When retrying a Suspense/Offscreen boundary, we override pooledCache with the\n// cache from the render that suspended.\nconst prevFreshCacheOnStack: StackCursor<Cache | null> = createCursor(null);\n\nexport function pushCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  pushProvider(workInProgress, CacheContext, cache);\n}\n\nexport function popCacheProvider(workInProgress: Fiber, cache: Cache) {\n  if (!enableCache) {\n    return;\n  }\n  popProvider(CacheContext, workInProgress);\n}\n\nexport function requestCacheFromPool(renderLanes: Lanes): Cache {\n  if (!enableCache) {\n    return (null: any);\n  }\n  if (pooledCache !== null) {\n    return pooledCache;\n  }\n  // Create a fresh cache.\n  pooledCache = new Map();\n  return pooledCache;\n}\n\nexport function pushRootCachePool(root: FiberRoot) {\n  if (!enableCache) {\n    return;\n  }\n  // When we start rendering a tree, read the pooled cache for this render\n  // from `root.pooledCache`. If it's currently `null`, we will lazily\n  // initialize it the first type it's requested. However, we only mutate\n  // the root itself during the complete/unwind phase of the HostRoot.\n  pooledCache = root.pooledCache;\n}\n\nexport function popRootCachePool(root: FiberRoot, renderLanes: Lanes) {\n  if (!enableCache) {\n    return;\n  }\n  // The `pooledCache` variable points to the cache that was used for new\n  // cache boundaries during this render, if any. Stash it on the root so that\n  // parallel transitions may share the same cache. We will clear this field\n  // once all the transitions that depend on it (which we track with\n  // `pooledCacheLanes`) have committed.\n  root.pooledCache = pooledCache;\n  if (pooledCache !== null) {\n    root.pooledCacheLanes |= renderLanes;\n  }\n}\n\nexport function restoreSpawnedCachePool(\n  offscreenWorkInProgress: Fiber,\n  prevCachePool: SpawnedCachePool,\n): SpawnedCachePool | null {\n  if (!enableCache) {\n    return (null: any);\n  }\n  const nextParentCache = isPrimaryRenderer\n    ? CacheContext._currentValue\n    : CacheContext._currentValue2;\n  if (nextParentCache !== prevCachePool.parent) {\n    // There was a refresh. Don't bother restoring anything since the refresh\n    // will override it.\n    return null;\n  } else {\n    // No refresh. Resume with the previous cache. This will override the cache\n    // pool so that any new Cache boundaries in the subtree use this one instead\n    // of requesting a fresh one.\n    push(prevFreshCacheOnStack, pooledCache, offscreenWorkInProgress);\n    pooledCache = prevCachePool.pool;\n\n    // Return the cache pool to signal that we did in fact push it. We will\n    // assign this to the field on the fiber so we know to pop the context.\n    return prevCachePool;\n  }\n}\n\n// Note: Ideally, `popCachePool` would return this value, and then we would pass\n// it to `getSuspendedCachePool`. But factoring reasons, those two functions are\n// in different phases/files. They are always called in sequence, though, so we\n// can stash the value here temporarily.\nlet _suspendedPooledCache: Cache | null = null;\n\nexport function popCachePool(workInProgress: Fiber) {\n  if (!enableCache) {\n    return;\n  }\n  _suspendedPooledCache = pooledCache;\n  pooledCache = prevFreshCacheOnStack.current;\n  pop(prevFreshCacheOnStack, workInProgress);\n}\n\nexport function getSuspendedCachePool(): SpawnedCachePool | null {\n  if (!enableCache) {\n    return null;\n  }\n\n  // We check the cache on the stack first, since that's the one any new Caches\n  // would have accessed.\n  let pool = pooledCache;\n  if (pool === null) {\n    // There's no pooled cache above us in the stack. However, a child in the\n    // suspended tree may have requested a fresh cache pool. If so, we would\n    // have unwound it with `popCachePool`.\n    if (_suspendedPooledCache !== null) {\n      pool = _suspendedPooledCache;\n      _suspendedPooledCache = null;\n    } else {\n      // There's no suspended cache pool.\n      return null;\n    }\n  }\n\n  return {\n    // We must also save the parent, so that when we resume we can detect\n    // a refresh.\n    parent: isPrimaryRenderer\n      ? CacheContext._currentValue\n      : CacheContext._currentValue2,\n    pool,\n  };\n}\n\nexport function getOffscreenDeferredCachePool(): SpawnedCachePool | null {\n  if (!enableCache) {\n    return null;\n  }\n\n  if (pooledCache === null) {\n    // There's no deferred cache pool.\n    return null;\n  }\n\n  return {\n    // We must also store the parent, so that when we resume we can detect\n    // a refresh.\n    parent: isPrimaryRenderer\n      ? CacheContext._currentValue\n      : CacheContext._currentValue2,\n    pool: pooledCache,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  MutableSource,\n  MutableSourceGetSnapshotFn,\n  MutableSourceSubscribeFn,\n  ReactContext,\n} from 'shared/ReactTypes';\nimport type {Fiber, Dispatcher, HookType} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {HookFlags} from './ReactHookEffectTags';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {OpaqueIDType} from './ReactFiberHostConfig';\nimport type {Cache} from './ReactFiberCacheComponent.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableNewReconciler,\n  enableCache,\n  enableUseRefAccessWarning,\n  enableStrictEffects,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n} from 'shared/ReactFeatureFlags';\n\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  StrictEffectsMode,\n} from './ReactTypeOfMode';\nimport {\n  NoLane,\n  SyncLane,\n  NoLanes,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  intersectLanes,\n  isTransitionLane,\n  markRootEntangled,\n  markRootMutableRead,\n  NoTimestamp,\n} from './ReactFiberLane.old';\nimport {\n  ContinuousEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n  higherEventPriority,\n} from './ReactEventPriorities.old';\nimport {readContext, checkIfContextChanged} from './ReactFiberNewContext.old';\nimport {HostRoot, CacheComponent} from './ReactWorkTags';\nimport {\n  LayoutStatic as LayoutStaticEffect,\n  MountLayoutDev as MountLayoutDevEffect,\n  MountPassiveDev as MountPassiveDevEffect,\n  Passive as PassiveEffect,\n  PassiveStatic as PassiveStaticEffect,\n  StaticMask as StaticMaskEffect,\n  Update as UpdateEffect,\n} from './ReactFiberFlags';\nimport {\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {\n  getWorkInProgressRoot,\n  scheduleUpdateOnFiber,\n  requestUpdateLane,\n  requestEventTime,\n  warnIfNotCurrentlyActingEffectsInDEV,\n  warnIfNotCurrentlyActingUpdatesInDev,\n  markSkippedUpdateLanes,\n  isInterleavedUpdate,\n} from './ReactFiberWorkLoop.old';\n\nimport invariant from 'shared/invariant';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport is from 'shared/objectIs';\nimport isArray from 'shared/isArray';\nimport {\n  markWorkInProgressReceivedUpdate,\n  checkIfWorkInProgressReceivedUpdate,\n} from './ReactFiberBeginWork.old';\nimport {getIsHydrating} from './ReactFiberHydrationContext.old';\nimport {\n  makeClientId,\n  makeClientIdInDEV,\n  makeOpaqueHydratingObject,\n} from './ReactFiberHostConfig';\nimport {\n  getWorkInProgressVersion,\n  markSourceAsDirty,\n  setWorkInProgressVersion,\n  warnAboutMultipleRenderersDEV,\n} from './ReactMutableSource.old';\nimport {getIsRendering} from './ReactCurrentFiber';\nimport {logStateUpdateScheduled} from './DebugTracing';\nimport {markStateUpdateScheduled} from './SchedulingProfiler';\nimport {CacheContext} from './ReactFiberCacheComponent.old';\nimport {\n  createUpdate,\n  enqueueUpdate,\n  entangleTransitions,\n} from './ReactUpdateQueue.old';\nimport {pushInterleavedQueue} from './ReactFiberInterleavedUpdates.old';\nimport {getIsStrictModeForDevtools} from './ReactFiberReconciler.old';\nimport {warnOnSubscriptionInsideStartTransition} from 'shared/ReactFeatureFlags';\n\nconst {ReactCurrentDispatcher, ReactCurrentBatchConfig} = ReactSharedInternals;\n\ntype Update<S, A> = {|\n  lane: Lane,\n  action: A,\n  eagerReducer: ((S, A) => S) | null,\n  eagerState: S | null,\n  next: Update<S, A>,\n|};\n\nexport type UpdateQueue<S, A> = {|\n  pending: Update<S, A> | null,\n  interleaved: Update<S, A> | null,\n  lanes: Lanes,\n  dispatch: (A => mixed) | null,\n  lastRenderedReducer: ((S, A) => S) | null,\n  lastRenderedState: S | null,\n|};\n\nlet didWarnAboutMismatchedHooksForComponent;\nlet didWarnAboutUseOpaqueIdentifier;\nlet didWarnUncachedGetSnapshot;\nif (__DEV__) {\n  didWarnAboutUseOpaqueIdentifier = {};\n  didWarnAboutMismatchedHooksForComponent = new Set();\n}\n\nexport type Hook = {|\n  memoizedState: any,\n  baseState: any,\n  baseQueue: Update<any, any> | null,\n  queue: any,\n  next: Hook | null,\n|};\n\nexport type Effect = {|\n  tag: HookFlags,\n  create: () => (() => void) | void,\n  destroy: (() => void) | void,\n  deps: Array<mixed> | null,\n  next: Effect,\n|};\n\ntype StoreInstance<T> = {|\n  value: T,\n  getSnapshot: () => T,\n|};\n\nexport type FunctionComponentUpdateQueue = {|lastEffect: Effect | null|};\n\ntype BasicStateAction<S> = (S => S) | S;\n\ntype Dispatch<A> = A => void;\n\n// These are set right before calling the component.\nlet renderLanes: Lanes = NoLanes;\n// The work-in-progress fiber. I've named it differently to distinguish it from\n// the work-in-progress hook.\nlet currentlyRenderingFiber: Fiber = (null: any);\n\n// Hooks are stored as a linked list on the fiber's memoizedState field. The\n// current hook list is the list that belongs to the current fiber. The\n// work-in-progress hook list is a new list that will be added to the\n// work-in-progress fiber.\nlet currentHook: Hook | null = null;\nlet workInProgressHook: Hook | null = null;\n\n// Whether an update was scheduled at any point during the render phase. This\n// does not get reset if we do another render pass; only when we're completely\n// finished evaluating this component. This is an optimization so we know\n// whether we need to clear render phase updates after a throw.\nlet didScheduleRenderPhaseUpdate: boolean = false;\n// Where an update was scheduled only during the current render pass. This\n// gets reset after each attempt.\n// TODO: Maybe there's some way to consolidate this with\n// `didScheduleRenderPhaseUpdate`. Or with `numberOfReRenders`.\nlet didScheduleRenderPhaseUpdateDuringThisPass: boolean = false;\n\nconst RE_RENDER_LIMIT = 25;\n\n// In DEV, this is the name of the currently executing primitive hook\nlet currentHookNameInDev: ?HookType = null;\n\n// In DEV, this list ensures that hooks are called in the same order between renders.\n// The list stores the order of hooks used during the initial render (mount).\n// Subsequent renders (updates) reference this list.\nlet hookTypesDev: Array<HookType> | null = null;\nlet hookTypesUpdateIndexDev: number = -1;\n\n// In DEV, this tracks whether currently rendering component needs to ignore\n// the dependencies for Hooks that need them (e.g. useEffect or useMemo).\n// When true, such Hooks will always be \"remounted\". Only used during hot reload.\nlet ignorePreviousDependencies: boolean = false;\n\nfunction mountHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev === null) {\n      hookTypesDev = [hookName];\n    } else {\n      hookTypesDev.push(hookName);\n    }\n  }\n}\n\nfunction updateHookTypesDev() {\n  if (__DEV__) {\n    const hookName = ((currentHookNameInDev: any): HookType);\n\n    if (hookTypesDev !== null) {\n      hookTypesUpdateIndexDev++;\n      if (hookTypesDev[hookTypesUpdateIndexDev] !== hookName) {\n        warnOnHookMismatchInDev(hookName);\n      }\n    }\n  }\n}\n\nfunction checkDepsAreArrayDev(deps: mixed) {\n  if (__DEV__) {\n    if (deps !== undefined && deps !== null && !isArray(deps)) {\n      // Verify deps, but only on mount to avoid extra checks.\n      // It's unlikely their type would change as usually you define them inline.\n      console.error(\n        '%s received a final argument that is not an array (instead, received `%s`). When ' +\n          'specified, the final argument must be an array.',\n        currentHookNameInDev,\n        typeof deps,\n      );\n    }\n  }\n}\n\nfunction warnOnHookMismatchInDev(currentHookName: HookType) {\n  if (__DEV__) {\n    const componentName = getComponentNameFromFiber(currentlyRenderingFiber);\n    if (!didWarnAboutMismatchedHooksForComponent.has(componentName)) {\n      didWarnAboutMismatchedHooksForComponent.add(componentName);\n\n      if (hookTypesDev !== null) {\n        let table = '';\n\n        const secondColumnStart = 30;\n\n        for (let i = 0; i <= ((hookTypesUpdateIndexDev: any): number); i++) {\n          const oldHookName = hookTypesDev[i];\n          const newHookName =\n            i === ((hookTypesUpdateIndexDev: any): number)\n              ? currentHookName\n              : oldHookName;\n\n          let row = `${i + 1}. ${oldHookName}`;\n\n          // Extra space so second column lines up\n          // lol @ IE not supporting String#repeat\n          while (row.length < secondColumnStart) {\n            row += ' ';\n          }\n\n          row += newHookName + '\\n';\n\n          table += row;\n        }\n\n        console.error(\n          'React has detected a change in the order of Hooks called by %s. ' +\n            'This will lead to bugs and errors if not fixed. ' +\n            'For more information, read the Rules of Hooks: https://reactjs.org/link/rules-of-hooks\\n\\n' +\n            '   Previous render            Next render\\n' +\n            '   ------------------------------------------------------\\n' +\n            '%s' +\n            '   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n',\n          componentName,\n          table,\n        );\n      }\n    }\n  }\n}\n\nfunction throwInvalidHookError() {\n  invariant(\n    false,\n    'Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for' +\n      ' one of the following reasons:\\n' +\n      '1. You might have mismatching versions of React and the renderer (such as React DOM)\\n' +\n      '2. You might be breaking the Rules of Hooks\\n' +\n      '3. You might have more than one copy of React in the same app\\n' +\n      'See https://reactjs.org/link/invalid-hook-call for tips about how to debug and fix this problem.',\n  );\n}\n\nfunction areHookInputsEqual(\n  nextDeps: Array<mixed>,\n  prevDeps: Array<mixed> | null,\n) {\n  if (__DEV__) {\n    if (ignorePreviousDependencies) {\n      // Only true when this component is being hot reloaded.\n      return false;\n    }\n  }\n\n  if (prevDeps === null) {\n    if (__DEV__) {\n      console.error(\n        '%s received a final argument during this render, but not during ' +\n          'the previous render. Even though the final argument is optional, ' +\n          'its type cannot change between renders.',\n        currentHookNameInDev,\n      );\n    }\n    return false;\n  }\n\n  if (__DEV__) {\n    // Don't bother comparing lengths in prod because these arrays should be\n    // passed inline.\n    if (nextDeps.length !== prevDeps.length) {\n      console.error(\n        'The final argument passed to %s changed size between renders. The ' +\n          'order and size of this array must remain constant.\\n\\n' +\n          'Previous: %s\\n' +\n          'Incoming: %s',\n        currentHookNameInDev,\n        `[${prevDeps.join(', ')}]`,\n        `[${nextDeps.join(', ')}]`,\n      );\n    }\n  }\n  for (let i = 0; i < prevDeps.length && i < nextDeps.length; i++) {\n    if (is(nextDeps[i], prevDeps[i])) {\n      continue;\n    }\n    return false;\n  }\n  return true;\n}\n\nexport function renderWithHooks<Props, SecondArg>(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: (p: Props, arg: SecondArg) => any,\n  props: Props,\n  secondArg: SecondArg,\n  nextRenderLanes: Lanes,\n): any {\n  renderLanes = nextRenderLanes;\n  currentlyRenderingFiber = workInProgress;\n\n  if (__DEV__) {\n    hookTypesDev =\n      current !== null\n        ? ((current._debugHookTypes: any): Array<HookType>)\n        : null;\n    hookTypesUpdateIndexDev = -1;\n    // Used for hot reloading:\n    ignorePreviousDependencies =\n      current !== null && current.type !== workInProgress.type;\n  }\n\n  workInProgress.memoizedState = null;\n  workInProgress.updateQueue = null;\n  workInProgress.lanes = NoLanes;\n\n  // The following should have already been reset\n  // currentHook = null;\n  // workInProgressHook = null;\n\n  // didScheduleRenderPhaseUpdate = false;\n\n  // TODO Warn if no hooks are used at all during mount, then some are used during update.\n  // Currently we will identify the update render as a mount because memoizedState === null.\n  // This is tricky because it's valid for certain types of components (e.g. React.lazy)\n\n  // Using memoizedState to differentiate between mount/update only works if at least one stateful hook is used.\n  // Non-stateful hooks (e.g. context) don't get added to memoizedState,\n  // so memoizedState would be null during updates and mounts.\n  if (__DEV__) {\n    if (current !== null && current.memoizedState !== null) {\n      ReactCurrentDispatcher.current = HooksDispatcherOnUpdateInDEV;\n    } else if (hookTypesDev !== null) {\n      // This dispatcher handles an edge case where a component is updating,\n      // but no stateful hooks have been used.\n      // We want to match the production code behavior (which will use HooksDispatcherOnMount),\n      // but with the extra DEV validation to ensure hooks ordering hasn't changed.\n      // This dispatcher does that.\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountWithHookTypesInDEV;\n    } else {\n      ReactCurrentDispatcher.current = HooksDispatcherOnMountInDEV;\n    }\n  } else {\n    ReactCurrentDispatcher.current =\n      current === null || current.memoizedState === null\n        ? HooksDispatcherOnMount\n        : HooksDispatcherOnUpdate;\n  }\n\n  let children = Component(props, secondArg);\n\n  // Check if there was a render phase update\n  if (didScheduleRenderPhaseUpdateDuringThisPass) {\n    // Keep rendering in a loop for as long as render phase updates continue to\n    // be scheduled. Use a counter to prevent infinite loops.\n    let numberOfReRenders: number = 0;\n    do {\n      didScheduleRenderPhaseUpdateDuringThisPass = false;\n      invariant(\n        numberOfReRenders < RE_RENDER_LIMIT,\n        'Too many re-renders. React limits the number of renders to prevent ' +\n          'an infinite loop.',\n      );\n\n      numberOfReRenders += 1;\n      if (__DEV__) {\n        // Even when hot reloading, allow dependencies to stabilize\n        // after first render to prevent infinite render phase updates.\n        ignorePreviousDependencies = false;\n      }\n\n      // Start over from the beginning of the list\n      currentHook = null;\n      workInProgressHook = null;\n\n      workInProgress.updateQueue = null;\n\n      if (__DEV__) {\n        // Also validate hook order for cascading updates.\n        hookTypesUpdateIndexDev = -1;\n      }\n\n      ReactCurrentDispatcher.current = __DEV__\n        ? HooksDispatcherOnRerenderInDEV\n        : HooksDispatcherOnRerender;\n\n      children = Component(props, secondArg);\n    } while (didScheduleRenderPhaseUpdateDuringThisPass);\n  }\n\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (__DEV__) {\n    workInProgress._debugHookTypes = hookTypesDev;\n  }\n\n  // This check uses currentHook so that it works the same in DEV and prod bundles.\n  // hookTypesDev could catch more cases (e.g. context) but only in DEV bundles.\n  const didRenderTooFewHooks =\n    currentHook !== null && currentHook.next !== null;\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    currentHookNameInDev = null;\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    // Confirm that a static flag was not added or removed since the last\n    // render. If this fires, it suggests that we incorrectly reset the static\n    // flags in some other part of the codebase. This has happened before, for\n    // example, in the SuspenseList implementation.\n    if (\n      current !== null &&\n      (current.flags & StaticMaskEffect) !==\n        (workInProgress.flags & StaticMaskEffect) &&\n      // Disable this warning in legacy mode, because legacy Suspense is weird\n      // and creates false positives. To make this work in legacy mode, we'd\n      // need to mark fibers that commit in an incomplete state, somehow. For\n      // now I'll disable the warning that most of the bugs that would trigger\n      // it are either exclusive to concurrent mode or exist in both.\n      (current.mode & ConcurrentMode) !== NoMode\n    ) {\n      console.error(\n        'Internal React error: Expected static flag was missing. Please ' +\n          'notify the React team.',\n      );\n    }\n  }\n\n  didScheduleRenderPhaseUpdate = false;\n\n  invariant(\n    !didRenderTooFewHooks,\n    'Rendered fewer hooks than expected. This may be caused by an accidental ' +\n      'early return statement.',\n  );\n\n  if (enableLazyContextPropagation) {\n    if (current !== null) {\n      if (!checkIfWorkInProgressReceivedUpdate()) {\n        // If there were no changes to props or state, we need to check if there\n        // was a context change. We didn't already do this because there's no\n        // 1:1 correspondence between dependencies and hooks. Although, because\n        // there almost always is in the common case (`readContext` is an\n        // internal API), we could compare in there. OTOH, we only hit this case\n        // if everything else bails out, so on the whole it might be better to\n        // keep the comparison out of the common path.\n        const currentDependencies = current.dependencies;\n        if (\n          currentDependencies !== null &&\n          checkIfContextChanged(currentDependencies)\n        ) {\n          markWorkInProgressReceivedUpdate();\n        }\n      }\n    }\n  }\n\n  return children;\n}\n\nexport function bailoutHooks(\n  current: Fiber,\n  workInProgress: Fiber,\n  lanes: Lanes,\n) {\n  workInProgress.updateQueue = current.updateQueue;\n  // TODO: Don't need to reset the flags here, because they're reset in the\n  // complete phase (bubbleProperties).\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (workInProgress.mode & StrictEffectsMode) !== NoMode\n  ) {\n    workInProgress.flags &= ~(\n      MountPassiveDevEffect |\n      MountLayoutDevEffect |\n      PassiveEffect |\n      UpdateEffect\n    );\n  } else {\n    workInProgress.flags &= ~(PassiveEffect | UpdateEffect);\n  }\n  current.lanes = removeLanes(current.lanes, lanes);\n}\n\nexport function resetHooksAfterThrow(): void {\n  // We can assume the previous dispatcher is always this one, since we set it\n  // at the beginning of the render phase and there's no re-entrance.\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n\n  if (didScheduleRenderPhaseUpdate) {\n    // There were render phase updates. These are only valid for this render\n    // phase, which we are now aborting. Remove the updates from the queues so\n    // they do not persist to the next render. Do not remove updates from hooks\n    // that weren't processed.\n    //\n    // Only reset the updates from the queue if it has a clone. If it does\n    // not have a clone, that means it wasn't processed, and the updates were\n    // scheduled before we entered the render phase.\n    let hook: Hook | null = currentlyRenderingFiber.memoizedState;\n    while (hook !== null) {\n      const queue = hook.queue;\n      if (queue !== null) {\n        queue.pending = null;\n      }\n      hook = hook.next;\n    }\n    didScheduleRenderPhaseUpdate = false;\n  }\n\n  renderLanes = NoLanes;\n  currentlyRenderingFiber = (null: any);\n\n  currentHook = null;\n  workInProgressHook = null;\n\n  if (__DEV__) {\n    hookTypesDev = null;\n    hookTypesUpdateIndexDev = -1;\n\n    currentHookNameInDev = null;\n\n    isUpdatingOpaqueValueInRenderPhase = false;\n  }\n\n  didScheduleRenderPhaseUpdateDuringThisPass = false;\n}\n\nfunction mountWorkInProgressHook(): Hook {\n  const hook: Hook = {\n    memoizedState: null,\n\n    baseState: null,\n    baseQueue: null,\n    queue: null,\n\n    next: null,\n  };\n\n  if (workInProgressHook === null) {\n    // This is the first hook in the list\n    currentlyRenderingFiber.memoizedState = workInProgressHook = hook;\n  } else {\n    // Append to the end of the list\n    workInProgressHook = workInProgressHook.next = hook;\n  }\n  return workInProgressHook;\n}\n\nfunction updateWorkInProgressHook(): Hook {\n  // This function is used both for updates and for re-renders triggered by a\n  // render phase update. It assumes there is either a current hook we can\n  // clone, or a work-in-progress hook from a previous render pass that we can\n  // use as a base. When we reach the end of the base list, we must switch to\n  // the dispatcher used for mounts.\n  let nextCurrentHook: null | Hook;\n  if (currentHook === null) {\n    const current = currentlyRenderingFiber.alternate;\n    if (current !== null) {\n      nextCurrentHook = current.memoizedState;\n    } else {\n      nextCurrentHook = null;\n    }\n  } else {\n    nextCurrentHook = currentHook.next;\n  }\n\n  let nextWorkInProgressHook: null | Hook;\n  if (workInProgressHook === null) {\n    nextWorkInProgressHook = currentlyRenderingFiber.memoizedState;\n  } else {\n    nextWorkInProgressHook = workInProgressHook.next;\n  }\n\n  if (nextWorkInProgressHook !== null) {\n    // There's already a work-in-progress. Reuse it.\n    workInProgressHook = nextWorkInProgressHook;\n    nextWorkInProgressHook = workInProgressHook.next;\n\n    currentHook = nextCurrentHook;\n  } else {\n    // Clone from the current hook.\n\n    invariant(\n      nextCurrentHook !== null,\n      'Rendered more hooks than during the previous render.',\n    );\n    currentHook = nextCurrentHook;\n\n    const newHook: Hook = {\n      memoizedState: currentHook.memoizedState,\n\n      baseState: currentHook.baseState,\n      baseQueue: currentHook.baseQueue,\n      queue: currentHook.queue,\n\n      next: null,\n    };\n\n    if (workInProgressHook === null) {\n      // This is the first hook in the list.\n      currentlyRenderingFiber.memoizedState = workInProgressHook = newHook;\n    } else {\n      // Append to the end of the list.\n      workInProgressHook = workInProgressHook.next = newHook;\n    }\n  }\n  return workInProgressHook;\n}\n\nfunction createFunctionComponentUpdateQueue(): FunctionComponentUpdateQueue {\n  return {\n    lastEffect: null,\n  };\n}\n\nfunction basicStateReducer<S>(state: S, action: BasicStateAction<S>): S {\n  // $FlowFixMe: Flow doesn't like mixed types\n  return typeof action === 'function' ? action(state) : action;\n}\n\nfunction mountReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = mountWorkInProgressHook();\n  let initialState;\n  if (init !== undefined) {\n    initialState = init(initialArg);\n  } else {\n    initialState = ((initialArg: any): S);\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue: UpdateQueue<S, A> = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: reducer,\n    lastRenderedState: (initialState: any),\n  };\n  hook.queue = queue;\n  const dispatch: Dispatch<A> = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  const current: Hook = (currentHook: any);\n\n  // The last rebase update that is NOT part of the base state.\n  let baseQueue = current.baseQueue;\n\n  // The last pending update that hasn't been processed yet.\n  const pendingQueue = queue.pending;\n  if (pendingQueue !== null) {\n    // We have new updates that haven't been processed yet.\n    // We'll add them to the base queue.\n    if (baseQueue !== null) {\n      // Merge the pending queue and the base queue.\n      const baseFirst = baseQueue.next;\n      const pendingFirst = pendingQueue.next;\n      baseQueue.next = pendingFirst;\n      pendingQueue.next = baseFirst;\n    }\n    if (__DEV__) {\n      if (current.baseQueue !== baseQueue) {\n        // Internal invariant that should never happen, but feasibly could in\n        // the future if we implement resuming, or some form of that.\n        console.error(\n          'Internal error: Expected work-in-progress queue to be a clone. ' +\n            'This is a bug in React.',\n        );\n      }\n    }\n    current.baseQueue = baseQueue = pendingQueue;\n    queue.pending = null;\n  }\n\n  if (baseQueue !== null) {\n    // We have a queue to process.\n    const first = baseQueue.next;\n    let newState = current.baseState;\n\n    let newBaseState = null;\n    let newBaseQueueFirst = null;\n    let newBaseQueueLast = null;\n    let update = first;\n    do {\n      const updateLane = update.lane;\n      if (!isSubsetOfLanes(renderLanes, updateLane)) {\n        // Priority is insufficient. Skip this update. If this is the first\n        // skipped update, the previous update/state is the new base\n        // update/state.\n        const clone: Update<S, A> = {\n          lane: updateLane,\n          action: update.action,\n          eagerReducer: update.eagerReducer,\n          eagerState: update.eagerState,\n          next: (null: any),\n        };\n        if (newBaseQueueLast === null) {\n          newBaseQueueFirst = newBaseQueueLast = clone;\n          newBaseState = newState;\n        } else {\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n        // Update the remaining priority in the queue.\n        // TODO: Don't need to accumulate this. Instead, we can remove\n        // renderLanes from the original lanes.\n        currentlyRenderingFiber.lanes = mergeLanes(\n          currentlyRenderingFiber.lanes,\n          updateLane,\n        );\n        markSkippedUpdateLanes(updateLane);\n      } else {\n        // This update does have sufficient priority.\n\n        if (newBaseQueueLast !== null) {\n          const clone: Update<S, A> = {\n            // This update is going to be committed so we never want uncommit\n            // it. Using NoLane works because 0 is a subset of all bitmasks, so\n            // this will never be skipped by the check above.\n            lane: NoLane,\n            action: update.action,\n            eagerReducer: update.eagerReducer,\n            eagerState: update.eagerState,\n            next: (null: any),\n          };\n          newBaseQueueLast = newBaseQueueLast.next = clone;\n        }\n\n        // Process this update.\n        if (update.eagerReducer === reducer) {\n          // If this update was processed eagerly, and its reducer matches the\n          // current reducer, we can use the eagerly computed state.\n          newState = ((update.eagerState: any): S);\n        } else {\n          const action = update.action;\n          newState = reducer(newState, action);\n        }\n      }\n      update = update.next;\n    } while (update !== null && update !== first);\n\n    if (newBaseQueueLast === null) {\n      newBaseState = newState;\n    } else {\n      newBaseQueueLast.next = (newBaseQueueFirst: any);\n    }\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    hook.baseState = newBaseState;\n    hook.baseQueue = newBaseQueueLast;\n\n    queue.lastRenderedState = newState;\n  }\n\n  // Interleaved updates are stored on a separate queue. We aren't going to\n  // process them during this render, but we do need to track which lanes\n  // are remaining.\n  const lastInterleaved = queue.interleaved;\n  if (lastInterleaved !== null) {\n    let interleaved = lastInterleaved;\n    do {\n      const interleavedLane = interleaved.lane;\n      currentlyRenderingFiber.lanes = mergeLanes(\n        currentlyRenderingFiber.lanes,\n        interleavedLane,\n      );\n      markSkippedUpdateLanes(interleavedLane);\n      interleaved = ((interleaved: any).next: Update<S, A>);\n    } while (interleaved !== lastInterleaved);\n  } else if (baseQueue === null) {\n    // `queue.lanes` is used for entangling transitions. We can set it back to\n    // zero once the queue is empty.\n    queue.lanes = NoLanes;\n  }\n\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  return [hook.memoizedState, dispatch];\n}\n\nfunction rerenderReducer<S, I, A>(\n  reducer: (S, A) => S,\n  initialArg: I,\n  init?: I => S,\n): [S, Dispatch<A>] {\n  const hook = updateWorkInProgressHook();\n  const queue = hook.queue;\n  invariant(\n    queue !== null,\n    'Should have a queue. This is likely a bug in React. Please file an issue.',\n  );\n\n  queue.lastRenderedReducer = reducer;\n\n  // This is a re-render. Apply the new render phase updates to the previous\n  // work-in-progress hook.\n  const dispatch: Dispatch<A> = (queue.dispatch: any);\n  const lastRenderPhaseUpdate = queue.pending;\n  let newState = hook.memoizedState;\n  if (lastRenderPhaseUpdate !== null) {\n    // The queue doesn't persist past this render pass.\n    queue.pending = null;\n\n    const firstRenderPhaseUpdate = lastRenderPhaseUpdate.next;\n    let update = firstRenderPhaseUpdate;\n    do {\n      // Process this render phase update. We don't have to check the\n      // priority because it will always be the same as the current\n      // render's.\n      const action = update.action;\n      newState = reducer(newState, action);\n      update = update.next;\n    } while (update !== firstRenderPhaseUpdate);\n\n    // Mark that the fiber performed work, but only if the new state is\n    // different from the current state.\n    if (!is(newState, hook.memoizedState)) {\n      markWorkInProgressReceivedUpdate();\n    }\n\n    hook.memoizedState = newState;\n    // Don't persist the state accumulated from the render phase updates to\n    // the base state unless the queue is empty.\n    // TODO: Not sure if this is the desired semantics, but it's what we\n    // do for gDSFP. I can't remember why.\n    if (hook.baseQueue === null) {\n      hook.baseState = newState;\n    }\n\n    queue.lastRenderedState = newState;\n  }\n  return [newState, dispatch];\n}\n\ntype MutableSourceMemoizedState<Source, Snapshot> = {|\n  refs: {\n    getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n    setSnapshot: Snapshot => void,\n  },\n  source: MutableSource<any>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n|};\n\nfunction readFromUnsubscribedMutableSource<Source, Snapshot>(\n  root: FiberRoot,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n): Snapshot {\n  if (__DEV__) {\n    warnAboutMultipleRenderersDEV(source);\n  }\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  // Is it safe for this component to read from this source during the current render?\n  let isSafeToReadFromSource = false;\n\n  // Check the version first.\n  // If this render has already been started with a specific version,\n  // we can use it alone to determine if we can safely read from the source.\n  const currentRenderVersion = getWorkInProgressVersion(source);\n  if (currentRenderVersion !== null) {\n    // It's safe to read if the store hasn't been mutated since the last time\n    // we read something.\n    isSafeToReadFromSource = currentRenderVersion === version;\n  } else {\n    // If there's no version, then this is the first time we've read from the\n    // source during the current render pass, so we need to do a bit more work.\n    // What we need to determine is if there are any hooks that already\n    // subscribed to the source, and if so, whether there are any pending\n    // mutations that haven't been synchronized yet.\n    //\n    // If there are no pending mutations, then `root.mutableReadLanes` will be\n    // empty, and we know we can safely read.\n    //\n    // If there *are* pending mutations, we may still be able to safely read\n    // if the currently rendering lanes are inclusive of the pending mutation\n    // lanes, since that guarantees that the value we're about to read from\n    // the source is consistent with the values that we read during the most\n    // recent mutation.\n    isSafeToReadFromSource = isSubsetOfLanes(\n      renderLanes,\n      root.mutableReadLanes,\n    );\n\n    if (isSafeToReadFromSource) {\n      // If it's safe to read from this source during the current render,\n      // store the version in case other components read from it.\n      // A changed version number will let those components know to throw and restart the render.\n      setWorkInProgressVersion(source, version);\n    }\n  }\n\n  if (isSafeToReadFromSource) {\n    const snapshot = getSnapshot(source._source);\n    if (__DEV__) {\n      if (typeof snapshot === 'function') {\n        console.error(\n          'Mutable source should not return a function as the snapshot value. ' +\n            'Functions may close over mutable values and cause tearing.',\n        );\n      }\n    }\n    return snapshot;\n  } else {\n    // This handles the special case of a mutable source being shared between renderers.\n    // In that case, if the source is mutated between the first and second renderer,\n    // The second renderer don't know that it needs to reset the WIP version during unwind,\n    // (because the hook only marks sources as dirty if it's written to their WIP version).\n    // That would cause this tear check to throw again and eventually be visible to the user.\n    // We can avoid this infinite loop by explicitly marking the source as dirty.\n    //\n    // This can lead to tearing in the first renderer when it resumes,\n    // but there's nothing we can do about that (short of throwing here and refusing to continue the render).\n    markSourceAsDirty(source);\n\n    // Intentioally throw an error to force React to retry synchronously. During\n    // the synchronous retry, it will block interleaved mutations, so we should\n    // get a consistent read. Therefore, the following error should never be\n    // visible to the user.\n    //\n    // If it were to become visible to the user, it suggests one of two things:\n    // a bug in React, or (more likely), a mutation during the render phase that\n    // caused the second re-render attempt to be different from the first.\n    //\n    // We know it's the second case if the logs are currently disabled. So in\n    // dev, we can present a more accurate error message.\n    if (__DEV__) {\n      // eslint-disable-next-line react-internal/no-production-logging\n      if (getIsStrictModeForDevtools()) {\n        // If getIsStrictModeForDevtools is true, this is the dev-only double render\n        // This is only reachable if there was a mutation during render. Show a helpful\n        // error message.\n        //\n        // Something interesting to note: because we only double render in\n        // development, this error will never happen during production. This is\n        // actually true of all errors that occur during a double render,\n        // because if the first render had thrown, we would have exited the\n        // begin phase without double rendering. We should consider suppressing\n        // any error from a double render (with a warning) to more closely match\n        // the production behavior.\n        const componentName = getComponentNameFromFiber(\n          currentlyRenderingFiber,\n        );\n        invariant(\n          false,\n          'A mutable source was mutated while the %s component was rendering. ' +\n            'This is not supported. Move any mutations into event handlers ' +\n            'or effects.',\n          componentName,\n        );\n      }\n    }\n\n    // We expect this error not to be thrown during the synchronous retry,\n    // because we blocked interleaved mutations.\n    invariant(\n      false,\n      'Cannot read from mutable source during the current render without tearing. This may be a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction useMutableSource<Source, Snapshot>(\n  hook: Hook,\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const root = ((getWorkInProgressRoot(): any): FiberRoot);\n  invariant(\n    root !== null,\n    'Expected a work-in-progress root. This is a bug in React. Please file an issue.',\n  );\n\n  const getVersion = source._getVersion;\n  const version = getVersion(source._source);\n\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // eslint-disable-next-line prefer-const\n  let [currentSnapshot, setSnapshot] = dispatcher.useState(() =>\n    readFromUnsubscribedMutableSource(root, source, getSnapshot),\n  );\n  let snapshot = currentSnapshot;\n\n  // Grab a handle to the state hook as well.\n  // We use it to clear the pending update queue if we have a new source.\n  const stateHook = ((workInProgressHook: any): Hook);\n\n  const memoizedState = ((hook.memoizedState: any): MutableSourceMemoizedState<\n    Source,\n    Snapshot,\n  >);\n  const refs = memoizedState.refs;\n  const prevGetSnapshot = refs.getSnapshot;\n  const prevSource = memoizedState.source;\n  const prevSubscribe = memoizedState.subscribe;\n\n  const fiber = currentlyRenderingFiber;\n\n  hook.memoizedState = ({\n    refs,\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n\n  // Sync the values needed by our subscription handler after each commit.\n  dispatcher.useEffect(() => {\n    refs.getSnapshot = getSnapshot;\n\n    // Normally the dispatch function for a state hook never changes,\n    // but this hook recreates the queue in certain cases  to avoid updates from stale sources.\n    // handleChange() below needs to reference the dispatch function without re-subscribing,\n    // so we use a ref to ensure that it always has the latest version.\n    refs.setSnapshot = setSnapshot;\n\n    // Check for a possible change between when we last rendered now.\n    const maybeNewVersion = getVersion(source._source);\n    if (!is(version, maybeNewVersion)) {\n      const maybeNewSnapshot = getSnapshot(source._source);\n      if (__DEV__) {\n        if (typeof maybeNewSnapshot === 'function') {\n          console.error(\n            'Mutable source should not return a function as the snapshot value. ' +\n              'Functions may close over mutable values and cause tearing.',\n          );\n        }\n      }\n\n      if (!is(snapshot, maybeNewSnapshot)) {\n        setSnapshot(maybeNewSnapshot);\n\n        const lane = requestUpdateLane(fiber);\n        markRootMutableRead(root, lane);\n      }\n      // If the source mutated between render and now,\n      // there may be state updates already scheduled from the old source.\n      // Entangle the updates so that they render in the same batch.\n      markRootEntangled(root, root.mutableReadLanes);\n    }\n  }, [getSnapshot, source, subscribe]);\n\n  // If we got a new source or subscribe function, re-subscribe in a passive effect.\n  dispatcher.useEffect(() => {\n    const handleChange = () => {\n      const latestGetSnapshot = refs.getSnapshot;\n      const latestSetSnapshot = refs.setSnapshot;\n\n      try {\n        latestSetSnapshot(latestGetSnapshot(source._source));\n\n        // Record a pending mutable source update with the same expiration time.\n        const lane = requestUpdateLane(fiber);\n\n        markRootMutableRead(root, lane);\n      } catch (error) {\n        // A selector might throw after a source mutation.\n        // e.g. it might try to read from a part of the store that no longer exists.\n        // In this case we should still schedule an update with React.\n        // Worst case the selector will throw again and then an error boundary will handle it.\n        latestSetSnapshot(\n          (() => {\n            throw error;\n          }: any),\n        );\n      }\n    };\n\n    const unsubscribe = subscribe(source._source, handleChange);\n    if (__DEV__) {\n      if (typeof unsubscribe !== 'function') {\n        console.error(\n          'Mutable source subscribe function must return an unsubscribe function.',\n        );\n      }\n    }\n\n    return unsubscribe;\n  }, [source, subscribe]);\n\n  // If any of the inputs to useMutableSource change, reading is potentially unsafe.\n  //\n  // If either the source or the subscription have changed we can't can't trust the update queue.\n  // Maybe the source changed in a way that the old subscription ignored but the new one depends on.\n  //\n  // If the getSnapshot function changed, we also shouldn't rely on the update queue.\n  // It's possible that the underlying source was mutated between the when the last \"change\" event fired,\n  // and when the current render (with the new getSnapshot function) is processed.\n  //\n  // In both cases, we need to throw away pending updates (since they are no longer relevant)\n  // and treat reading from the source as we do in the mount case.\n  if (\n    !is(prevGetSnapshot, getSnapshot) ||\n    !is(prevSource, source) ||\n    !is(prevSubscribe, subscribe)\n  ) {\n    // Create a new queue and setState method,\n    // So if there are interleaved updates, they get pushed to the older queue.\n    // When this becomes current, the previous queue and dispatch method will be discarded,\n    // including any interleaving updates that occur.\n    const newQueue: UpdateQueue<Snapshot, BasicStateAction<Snapshot>> = {\n      pending: null,\n      interleaved: null,\n      lanes: NoLanes,\n      dispatch: null,\n      lastRenderedReducer: basicStateReducer,\n      lastRenderedState: snapshot,\n    };\n    newQueue.dispatch = setSnapshot = (dispatchAction.bind(\n      null,\n      currentlyRenderingFiber,\n      newQueue,\n    ): any);\n    stateHook.queue = newQueue;\n    stateHook.baseQueue = null;\n    snapshot = readFromUnsubscribedMutableSource(root, source, getSnapshot);\n    stateHook.memoizedState = stateHook.baseState = snapshot;\n  }\n\n  return snapshot;\n}\n\nfunction mountMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = ({\n    refs: {\n      getSnapshot,\n      setSnapshot: (null: any),\n    },\n    source,\n    subscribe,\n  }: MutableSourceMemoizedState<Source, Snapshot>);\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction updateMutableSource<Source, Snapshot>(\n  source: MutableSource<Source>,\n  getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n  subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n): Snapshot {\n  const hook = updateWorkInProgressHook();\n  return useMutableSource(hook, source, getSnapshot, subscribe);\n}\n\nfunction mountSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n): T {\n  const hook = mountWorkInProgressHook();\n  // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n  const nextSnapshot = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      if (nextSnapshot !== getSnapshot()) {\n        console.error(\n          'The result of getSnapshot should be cached to avoid an infinite loop',\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n  hook.memoizedState = nextSnapshot;\n  const inst: StoreInstance<T> = {\n    value: nextSnapshot,\n    getSnapshot,\n  };\n  hook.queue = inst;\n  return useSyncExternalStore(hook, inst, subscribe, getSnapshot, nextSnapshot);\n}\n\nfunction updateSyncExternalStore<T>(\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n): T {\n  const hook = updateWorkInProgressHook();\n  // Read the current snapshot from the store on every render. This breaks the\n  // normal rules of React, and only works because store updates are\n  // always synchronous.\n  const nextSnapshot = getSnapshot();\n  if (__DEV__) {\n    if (!didWarnUncachedGetSnapshot) {\n      if (nextSnapshot !== getSnapshot()) {\n        console.error(\n          'The result of getSnapshot should be cached to avoid an infinite loop',\n        );\n        didWarnUncachedGetSnapshot = true;\n      }\n    }\n  }\n  const prevSnapshot = hook.memoizedState;\n  if (!is(prevSnapshot, nextSnapshot)) {\n    hook.memoizedState = nextSnapshot;\n    markWorkInProgressReceivedUpdate();\n  }\n  const inst = hook.queue;\n  return useSyncExternalStore(hook, inst, subscribe, getSnapshot, nextSnapshot);\n}\n\nfunction useSyncExternalStore<T>(\n  hook: Hook,\n  inst: StoreInstance<T>,\n  subscribe: (() => void) => () => void,\n  getSnapshot: () => T,\n  nextSnapshot: T,\n): T {\n  const fiber = currentlyRenderingFiber;\n  const dispatcher = ReactCurrentDispatcher.current;\n\n  // Track the latest getSnapshot function with a ref. This needs to be updated\n  // in the layout phase so we can access it during the tearing check that\n  // happens on subscribe.\n  // TODO: Circumvent SSR warning\n  dispatcher.useLayoutEffect(() => {\n    inst.value = nextSnapshot;\n    inst.getSnapshot = getSnapshot;\n\n    // Whenever getSnapshot or subscribe changes, we need to check in the\n    // commit phase if there was an interleaved mutation. In concurrent mode\n    // this can happen all the time, but even in synchronous mode, an earlier\n    // effect may have mutated the store.\n    // TODO: Move the tearing checks to an earlier, pre-commit phase so that the\n    // layout effects always observe a consistent tree.\n    if (checkIfSnapshotChanged(inst)) {\n      // Force a re-render.\n      forceStoreRerender(fiber);\n    }\n  }, [subscribe, nextSnapshot, getSnapshot]);\n\n  dispatcher.useEffect(() => {\n    const handleStoreChange = () => {\n      // TODO: Because there is no cross-renderer API for batching updates, it's\n      // up to the consumer of this library to wrap their subscription event\n      // with unstable_batchedUpdates. Should we try to detect when this isn't\n      // the case and print a warning in development?\n\n      // The store changed. Check if the snapshot changed since the last time we\n      // read from the store.\n      if (checkIfSnapshotChanged(inst)) {\n        // Force a re-render.\n        forceStoreRerender(fiber);\n      }\n    };\n    // Check for changes right before subscribing. Subsequent changes will be\n    // detected in the subscription handler.\n    handleStoreChange();\n    // Subscribe to the store and return a clean-up function.\n    return subscribe(handleStoreChange);\n  }, [subscribe]);\n\n  return nextSnapshot;\n}\n\nfunction checkIfSnapshotChanged(inst) {\n  const latestGetSnapshot = inst.getSnapshot;\n  const prevValue = inst.value;\n  try {\n    const nextValue = latestGetSnapshot();\n    return !is(prevValue, nextValue);\n  } catch (error) {\n    return true;\n  }\n}\n\nfunction forceStoreRerender(fiber) {\n  scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n}\n\nfunction mountState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  const hook = mountWorkInProgressHook();\n  if (typeof initialState === 'function') {\n    // $FlowFixMe: Flow doesn't like mixed types\n    initialState = initialState();\n  }\n  hook.memoizedState = hook.baseState = initialState;\n  const queue: UpdateQueue<S, BasicStateAction<S>> = {\n    pending: null,\n    interleaved: null,\n    lanes: NoLanes,\n    dispatch: null,\n    lastRenderedReducer: basicStateReducer,\n    lastRenderedState: (initialState: any),\n  };\n  hook.queue = queue;\n  const dispatch: Dispatch<\n    BasicStateAction<S>,\n  > = (queue.dispatch = (dispatchAction.bind(\n    null,\n    currentlyRenderingFiber,\n    queue,\n  ): any));\n  return [hook.memoizedState, dispatch];\n}\n\nfunction updateState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return updateReducer(basicStateReducer, (initialState: any));\n}\n\nfunction rerenderState<S>(\n  initialState: (() => S) | S,\n): [S, Dispatch<BasicStateAction<S>>] {\n  return rerenderReducer(basicStateReducer, (initialState: any));\n}\n\nfunction pushEffect(tag, create, destroy, deps) {\n  const effect: Effect = {\n    tag,\n    create,\n    destroy,\n    deps,\n    // Circular\n    next: (null: any),\n  };\n  let componentUpdateQueue: null | FunctionComponentUpdateQueue = (currentlyRenderingFiber.updateQueue: any);\n  if (componentUpdateQueue === null) {\n    componentUpdateQueue = createFunctionComponentUpdateQueue();\n    currentlyRenderingFiber.updateQueue = (componentUpdateQueue: any);\n    componentUpdateQueue.lastEffect = effect.next = effect;\n  } else {\n    const lastEffect = componentUpdateQueue.lastEffect;\n    if (lastEffect === null) {\n      componentUpdateQueue.lastEffect = effect.next = effect;\n    } else {\n      const firstEffect = lastEffect.next;\n      lastEffect.next = effect;\n      effect.next = firstEffect;\n      componentUpdateQueue.lastEffect = effect;\n    }\n  }\n  return effect;\n}\n\nlet stackContainsErrorMessage: boolean | null = null;\n\nfunction getCallerStackFrame(): string {\n  const stackFrames = new Error('Error message').stack.split('\\n');\n\n  // Some browsers (e.g. Chrome) include the error message in the stack\n  // but others (e.g. Firefox) do not.\n  if (stackContainsErrorMessage === null) {\n    stackContainsErrorMessage = stackFrames[0].includes('Error message');\n  }\n\n  return stackContainsErrorMessage\n    ? stackFrames.slice(3, 4).join('\\n')\n    : stackFrames.slice(2, 3).join('\\n');\n}\n\nfunction mountRef<T>(initialValue: T): {|current: T|} {\n  const hook = mountWorkInProgressHook();\n  if (enableUseRefAccessWarning) {\n    if (__DEV__) {\n      // Support lazy initialization pattern shown in docs.\n      // We need to store the caller stack frame so that we don't warn on subsequent renders.\n      let hasBeenInitialized = initialValue != null;\n      let lazyInitGetterStack = null;\n      let didCheckForLazyInit = false;\n\n      // Only warn once per component+hook.\n      let didWarnAboutRead = false;\n      let didWarnAboutWrite = false;\n\n      let current = initialValue;\n      const ref = {\n        get current() {\n          if (!hasBeenInitialized) {\n            didCheckForLazyInit = true;\n            lazyInitGetterStack = getCallerStackFrame();\n          } else if (currentlyRenderingFiber !== null && !didWarnAboutRead) {\n            if (\n              lazyInitGetterStack === null ||\n              lazyInitGetterStack !== getCallerStackFrame()\n            ) {\n              didWarnAboutRead = true;\n              console.warn(\n                '%s: Unsafe read of a mutable value during render.\\n\\n' +\n                  'Reading from a ref during render is only safe if:\\n' +\n                  '1. The ref value has not been updated, or\\n' +\n                  '2. The ref holds a lazily-initialized value that is only set once.\\n',\n                getComponentNameFromFiber(currentlyRenderingFiber) || 'Unknown',\n              );\n            }\n          }\n          return current;\n        },\n        set current(value) {\n          if (currentlyRenderingFiber !== null && !didWarnAboutWrite) {\n            if (\n              hasBeenInitialized ||\n              (!hasBeenInitialized && !didCheckForLazyInit)\n            ) {\n              didWarnAboutWrite = true;\n              console.warn(\n                '%s: Unsafe write of a mutable value during render.\\n\\n' +\n                  'Writing to a ref during render is only safe if the ref holds ' +\n                  'a lazily-initialized value that is only set once.\\n',\n                getComponentNameFromFiber(currentlyRenderingFiber) || 'Unknown',\n              );\n            }\n          }\n\n          hasBeenInitialized = true;\n          current = value;\n        },\n      };\n      Object.seal(ref);\n      hook.memoizedState = ref;\n      return ref;\n    } else {\n      const ref = {current: initialValue};\n      hook.memoizedState = ref;\n      return ref;\n    }\n  } else {\n    const ref = {current: initialValue};\n    hook.memoizedState = ref;\n    return ref;\n  }\n}\n\nfunction updateRef<T>(initialValue: T): {|current: T|} {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction mountEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  currentlyRenderingFiber.flags |= fiberFlags;\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    undefined,\n    nextDeps,\n  );\n}\n\nfunction updateEffectImpl(fiberFlags, hookFlags, create, deps): void {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  let destroy = undefined;\n\n  if (currentHook !== null) {\n    const prevEffect = currentHook.memoizedState;\n    destroy = prevEffect.destroy;\n    if (nextDeps !== null) {\n      const prevDeps = prevEffect.deps;\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        hook.memoizedState = pushEffect(hookFlags, create, destroy, nextDeps);\n        return;\n      }\n    }\n  }\n\n  currentlyRenderingFiber.flags |= fiberFlags;\n\n  hook.memoizedState = pushEffect(\n    HookHasEffect | hookFlags,\n    create,\n    destroy,\n    nextDeps,\n  );\n}\n\nfunction mountEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    return mountEffectImpl(\n      MountPassiveDevEffect | PassiveEffect | PassiveStaticEffect,\n      HookPassive,\n      create,\n      deps,\n    );\n  } else {\n    return mountEffectImpl(\n      PassiveEffect | PassiveStaticEffect,\n      HookPassive,\n      create,\n      deps,\n    );\n  }\n}\n\nfunction updateEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n    if ('undefined' !== typeof jest) {\n      warnIfNotCurrentlyActingEffectsInDEV(currentlyRenderingFiber);\n    }\n  }\n  return updateEffectImpl(PassiveEffect, HookPassive, create, deps);\n}\n\nfunction mountLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  let fiberFlags: Flags = UpdateEffect;\n  if (enableSuspenseLayoutEffectSemantics) {\n    fiberFlags |= LayoutStaticEffect;\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    fiberFlags |= MountLayoutDevEffect;\n  }\n  return mountEffectImpl(fiberFlags, HookLayout, create, deps);\n}\n\nfunction updateLayoutEffect(\n  create: () => (() => void) | void,\n  deps: Array<mixed> | void | null,\n): void {\n  return updateEffectImpl(UpdateEffect, HookLayout, create, deps);\n}\n\nfunction imperativeHandleEffect<T>(\n  create: () => T,\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n) {\n  if (typeof ref === 'function') {\n    const refCallback = ref;\n    const inst = create();\n    refCallback(inst);\n    return () => {\n      refCallback(null);\n    };\n  } else if (ref !== null && ref !== undefined) {\n    const refObject = ref;\n    if (__DEV__) {\n      if (!refObject.hasOwnProperty('current')) {\n        console.error(\n          'Expected useImperativeHandle() first argument to either be a ' +\n            'ref callback or React.createRef() object. Instead received: %s.',\n          'an object with keys {' + Object.keys(refObject).join(', ') + '}',\n        );\n      }\n    }\n    const inst = create();\n    refObject.current = inst;\n    return () => {\n      refObject.current = null;\n    };\n  }\n}\n\nfunction mountImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  let fiberFlags: Flags = UpdateEffect;\n  if (enableSuspenseLayoutEffectSemantics) {\n    fiberFlags |= LayoutStaticEffect;\n  }\n  if (\n    __DEV__ &&\n    enableStrictEffects &&\n    (currentlyRenderingFiber.mode & StrictEffectsMode) !== NoMode\n  ) {\n    fiberFlags |= MountLayoutDevEffect;\n  }\n  return mountEffectImpl(\n    fiberFlags,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction updateImperativeHandle<T>(\n  ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n  create: () => T,\n  deps: Array<mixed> | void | null,\n): void {\n  if (__DEV__) {\n    if (typeof create !== 'function') {\n      console.error(\n        'Expected useImperativeHandle() second argument to be a function ' +\n          'that creates a handle. Instead received: %s.',\n        create !== null ? typeof create : 'null',\n      );\n    }\n  }\n\n  // TODO: If deps are provided, should we skip comparing the ref itself?\n  const effectDeps =\n    deps !== null && deps !== undefined ? deps.concat([ref]) : null;\n\n  return updateEffectImpl(\n    UpdateEffect,\n    HookLayout,\n    imperativeHandleEffect.bind(null, create, ref),\n    effectDeps,\n  );\n}\n\nfunction mountDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n  // This hook is normally a no-op.\n  // The react-debug-hooks package injects its own implementation\n  // so that e.g. DevTools can display custom hook values.\n}\n\nconst updateDebugValue = mountDebugValue;\n\nfunction mountCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction updateCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  hook.memoizedState = [callback, nextDeps];\n  return callback;\n}\n\nfunction mountMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = mountWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction updateMemo<T>(\n  nextCreate: () => T,\n  deps: Array<mixed> | void | null,\n): T {\n  const hook = updateWorkInProgressHook();\n  const nextDeps = deps === undefined ? null : deps;\n  const prevState = hook.memoizedState;\n  if (prevState !== null) {\n    // Assume these are defined. If they're not, areHookInputsEqual will warn.\n    if (nextDeps !== null) {\n      const prevDeps: Array<mixed> | null = prevState[1];\n      if (areHookInputsEqual(nextDeps, prevDeps)) {\n        return prevState[0];\n      }\n    }\n  }\n  const nextValue = nextCreate();\n  hook.memoizedState = [nextValue, nextDeps];\n  return nextValue;\n}\n\nfunction mountDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = mountState(value);\n  mountEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction updateDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = updateState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction rerenderDeferredValue<T>(value: T): T {\n  const [prevValue, setValue] = rerenderState(value);\n  updateEffect(() => {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 1;\n    try {\n      setValue(value);\n    } finally {\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }, [value]);\n  return prevValue;\n}\n\nfunction startTransition(setPending, callback) {\n  const previousPriority = getCurrentUpdatePriority();\n  setCurrentUpdatePriority(\n    higherEventPriority(previousPriority, ContinuousEventPriority),\n  );\n\n  setPending(true);\n\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  ReactCurrentBatchConfig.transition = 1;\n  try {\n    setPending(false);\n    callback();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n    if (__DEV__) {\n      if (\n        prevTransition !== 1 &&\n        warnOnSubscriptionInsideStartTransition &&\n        ReactCurrentBatchConfig._updatedFibers\n      ) {\n        const updatedFibersCount = ReactCurrentBatchConfig._updatedFibers.size;\n        if (updatedFibersCount > 10) {\n          console.warn(\n            'Detected a large number of updates inside startTransition. ' +\n              'If this is due to a subscription please re-write it to use React provided hooks. ' +\n              'Otherwise concurrent mode guarantees are off the table.',\n          );\n        }\n        ReactCurrentBatchConfig._updatedFibers.clear();\n      }\n    }\n  }\n}\n\nfunction mountTransition(): [boolean, (() => void) => void] {\n  const [isPending, setPending] = mountState(false);\n  // The `start` method never changes.\n  const start = startTransition.bind(null, setPending);\n  const hook = mountWorkInProgressHook();\n  hook.memoizedState = start;\n  return [isPending, start];\n}\n\nfunction updateTransition(): [boolean, (() => void) => void] {\n  const [isPending] = updateState(false);\n  const hook = updateWorkInProgressHook();\n  const start = hook.memoizedState;\n  return [isPending, start];\n}\n\nfunction rerenderTransition(): [boolean, (() => void) => void] {\n  const [isPending] = rerenderState(false);\n  const hook = updateWorkInProgressHook();\n  const start = hook.memoizedState;\n  return [isPending, start];\n}\n\nlet isUpdatingOpaqueValueInRenderPhase = false;\nexport function getIsUpdatingOpaqueValueInRenderPhaseInDEV(): boolean | void {\n  if (__DEV__) {\n    return isUpdatingOpaqueValueInRenderPhase;\n  }\n}\n\nfunction warnOnOpaqueIdentifierAccessInDEV(fiber) {\n  if (__DEV__) {\n    // TODO: Should warn in effects and callbacks, too\n    const name = getComponentNameFromFiber(fiber) || 'Unknown';\n    if (getIsRendering() && !didWarnAboutUseOpaqueIdentifier[name]) {\n      console.error(\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the ' +\n          'value directly.',\n      );\n      didWarnAboutUseOpaqueIdentifier[name] = true;\n    }\n  }\n}\n\nfunction mountOpaqueIdentifier(): OpaqueIDType | void {\n  const makeId = __DEV__\n    ? makeClientIdInDEV.bind(\n        null,\n        warnOnOpaqueIdentifierAccessInDEV.bind(null, currentlyRenderingFiber),\n      )\n    : makeClientId;\n\n  if (getIsHydrating()) {\n    let didUpgrade = false;\n    const fiber = currentlyRenderingFiber;\n    const readValue = () => {\n      if (!didUpgrade) {\n        // Only upgrade once. This works even inside the render phase because\n        // the update is added to a shared queue, which outlasts the\n        // in-progress render.\n        didUpgrade = true;\n        if (__DEV__) {\n          isUpdatingOpaqueValueInRenderPhase = true;\n          setId(makeId());\n          isUpdatingOpaqueValueInRenderPhase = false;\n          warnOnOpaqueIdentifierAccessInDEV(fiber);\n        } else {\n          setId(makeId());\n        }\n      }\n      invariant(\n        false,\n        'The object passed back from useOpaqueIdentifier is meant to be ' +\n          'passed through to attributes only. Do not read the value directly.',\n      );\n    };\n    const id = makeOpaqueHydratingObject(readValue);\n\n    const setId = mountState(id)[1];\n\n    if ((currentlyRenderingFiber.mode & ConcurrentMode) === NoMode) {\n      if (\n        __DEV__ &&\n        enableStrictEffects &&\n        (currentlyRenderingFiber.mode & StrictEffectsMode) === NoMode\n      ) {\n        currentlyRenderingFiber.flags |= MountPassiveDevEffect | PassiveEffect;\n      } else {\n        currentlyRenderingFiber.flags |= PassiveEffect;\n      }\n      pushEffect(\n        HookHasEffect | HookPassive,\n        () => {\n          setId(makeId());\n        },\n        undefined,\n        null,\n      );\n    }\n    return id;\n  } else {\n    const id = makeId();\n    mountState(id);\n    return id;\n  }\n}\n\nfunction updateOpaqueIdentifier(): OpaqueIDType | void {\n  const id = updateState(undefined)[0];\n  return id;\n}\n\nfunction rerenderOpaqueIdentifier(): OpaqueIDType | void {\n  const id = rerenderState(undefined)[0];\n  return id;\n}\n\nfunction mountRefresh() {\n  const hook = mountWorkInProgressHook();\n  const refresh = (hook.memoizedState = refreshCache.bind(\n    null,\n    currentlyRenderingFiber,\n  ));\n  return refresh;\n}\n\nfunction updateRefresh() {\n  const hook = updateWorkInProgressHook();\n  return hook.memoizedState;\n}\n\nfunction refreshCache<T>(fiber: Fiber, seedKey: ?() => T, seedValue: T) {\n  // TODO: Does Cache work in legacy mode? Should decide and write a test.\n  // TODO: Consider warning if the refresh is at discrete priority, or if we\n  // otherwise suspect that it wasn't batched properly.\n  let provider = fiber.return;\n  while (provider !== null) {\n    switch (provider.tag) {\n      case CacheComponent:\n      case HostRoot: {\n        const lane = requestUpdateLane(provider);\n        const eventTime = requestEventTime();\n        const root = scheduleUpdateOnFiber(provider, lane, eventTime);\n        if (root !== null) {\n          entangleTransitions(root, provider, lane);\n        }\n\n        const seededCache = new Map();\n        if (seedKey !== null && seedKey !== undefined && root !== null) {\n          // Seed the cache with the value passed by the caller. This could be\n          // from a server mutation, or it could be a streaming response.\n          seededCache.set(seedKey, seedValue);\n        }\n\n        // Schedule an update on the cache boundary to trigger a refresh.\n        const refreshUpdate = createUpdate(eventTime, lane);\n        const payload = {\n          cache: seededCache,\n        };\n        refreshUpdate.payload = payload;\n        enqueueUpdate(provider, refreshUpdate, lane);\n        return;\n      }\n    }\n    provider = provider.return;\n  }\n  // TODO: Warn if unmounted?\n}\n\nfunction dispatchAction<S, A>(\n  fiber: Fiber,\n  queue: UpdateQueue<S, A>,\n  action: A,\n) {\n  if (__DEV__) {\n    if (typeof arguments[3] === 'function') {\n      console.error(\n        \"State updates from the useState() and useReducer() Hooks don't support the \" +\n          'second callback argument. To execute a side effect after ' +\n          'rendering, declare it in the component body with useEffect().',\n      );\n    }\n  }\n\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n\n  const update: Update<S, A> = {\n    lane,\n    action,\n    eagerReducer: null,\n    eagerState: null,\n    next: (null: any),\n  };\n\n  const alternate = fiber.alternate;\n  if (\n    fiber === currentlyRenderingFiber ||\n    (alternate !== null && alternate === currentlyRenderingFiber)\n  ) {\n    // This is a render phase update. Stash it in a lazily-created map of\n    // queue -> linked list of updates. After this render pass, we'll restart\n    // and apply the stashed updates on top of the work-in-progress hook.\n    didScheduleRenderPhaseUpdateDuringThisPass = didScheduleRenderPhaseUpdate = true;\n    const pending = queue.pending;\n    if (pending === null) {\n      // This is the first update. Create a circular list.\n      update.next = update;\n    } else {\n      update.next = pending.next;\n      pending.next = update;\n    }\n    queue.pending = update;\n  } else {\n    if (isInterleavedUpdate(fiber, lane)) {\n      const interleaved = queue.interleaved;\n      if (interleaved === null) {\n        // This is the first update. Create a circular list.\n        update.next = update;\n        // At the end of the current render, this queue's interleaved updates will\n        // be transferred to the pending queue.\n        pushInterleavedQueue(queue);\n      } else {\n        update.next = interleaved.next;\n        interleaved.next = update;\n      }\n      queue.interleaved = update;\n    } else {\n      const pending = queue.pending;\n      if (pending === null) {\n        // This is the first update. Create a circular list.\n        update.next = update;\n      } else {\n        update.next = pending.next;\n        pending.next = update;\n      }\n      queue.pending = update;\n    }\n\n    if (\n      fiber.lanes === NoLanes &&\n      (alternate === null || alternate.lanes === NoLanes)\n    ) {\n      // The queue is currently empty, which means we can eagerly compute the\n      // next state before entering the render phase. If the new state is the\n      // same as the current state, we may be able to bail out entirely.\n      const lastRenderedReducer = queue.lastRenderedReducer;\n      if (lastRenderedReducer !== null) {\n        let prevDispatcher;\n        if (__DEV__) {\n          prevDispatcher = ReactCurrentDispatcher.current;\n          ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n        }\n        try {\n          const currentState: S = (queue.lastRenderedState: any);\n          const eagerState = lastRenderedReducer(currentState, action);\n          // Stash the eagerly computed state, and the reducer used to compute\n          // it, on the update object. If the reducer hasn't changed by the\n          // time we enter the render phase, then the eager state can be used\n          // without calling the reducer again.\n          update.eagerReducer = lastRenderedReducer;\n          update.eagerState = eagerState;\n          if (is(eagerState, currentState)) {\n            // Fast path. We can bail out without scheduling React to re-render.\n            // It's still possible that we'll need to rebase this update later,\n            // if the component re-renders for a different reason and by that\n            // time the reducer has changed.\n            return;\n          }\n        } catch (error) {\n          // Suppress the error. It will throw again in the render phase.\n        } finally {\n          if (__DEV__) {\n            ReactCurrentDispatcher.current = prevDispatcher;\n          }\n        }\n      }\n    }\n    if (__DEV__) {\n      // $FlowExpectedError - jest isn't a global, and isn't recognized outside of tests\n      if ('undefined' !== typeof jest) {\n        warnIfNotCurrentlyActingUpdatesInDev(fiber);\n      }\n    }\n    const root = scheduleUpdateOnFiber(fiber, lane, eventTime);\n\n    if (isTransitionLane(lane) && root !== null) {\n      let queueLanes = queue.lanes;\n\n      // If any entangled lanes are no longer pending on the root, then they\n      // must have finished. We can remove them from the shared queue, which\n      // represents a superset of the actually pending lanes. In some cases we\n      // may entangle more than we need to, but that's OK. In fact it's worse if\n      // we *don't* entangle when we should.\n      queueLanes = intersectLanes(queueLanes, root.pendingLanes);\n\n      // Entangle the new transition lane with the other transition lanes.\n      const newQueueLanes = mergeLanes(queueLanes, lane);\n      queue.lanes = newQueueLanes;\n      // Even if queue.lanes already include lane, we don't know for certain if\n      // the lane finished since the last time we entangled it. So we need to\n      // entangle it again, just to be sure.\n      markRootEntangled(root, newQueueLanes);\n    }\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      if (fiber.mode & DebugTracingMode) {\n        const name = getComponentNameFromFiber(fiber) || 'Unknown';\n        logStateUpdateScheduled(name, lane, action);\n      }\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markStateUpdateScheduled(fiber, lane);\n  }\n}\n\nfunction getCacheForType<T>(resourceType: () => T): T {\n  if (!enableCache) {\n    invariant(false, 'Not implemented.');\n  }\n  const cache: Cache = readContext(CacheContext);\n  let cacheForType: T | void = (cache.get(resourceType): any);\n  if (cacheForType === undefined) {\n    cacheForType = resourceType();\n    cache.set(resourceType, cacheForType);\n  }\n  return cacheForType;\n}\n\nexport const ContextOnlyDispatcher: Dispatcher = {\n  readContext,\n\n  useCallback: throwInvalidHookError,\n  useContext: throwInvalidHookError,\n  useEffect: throwInvalidHookError,\n  useImperativeHandle: throwInvalidHookError,\n  useLayoutEffect: throwInvalidHookError,\n  useMemo: throwInvalidHookError,\n  useReducer: throwInvalidHookError,\n  useRef: throwInvalidHookError,\n  useState: throwInvalidHookError,\n  useDebugValue: throwInvalidHookError,\n  useDeferredValue: throwInvalidHookError,\n  useTransition: throwInvalidHookError,\n  useMutableSource: throwInvalidHookError,\n  useSyncExternalStore: throwInvalidHookError,\n  useOpaqueIdentifier: throwInvalidHookError,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (ContextOnlyDispatcher: Dispatcher).getCacheForType = getCacheForType;\n  (ContextOnlyDispatcher: Dispatcher).useCacheRefresh = throwInvalidHookError;\n}\n\nconst HooksDispatcherOnMount: Dispatcher = {\n  readContext,\n\n  useCallback: mountCallback,\n  useContext: readContext,\n  useEffect: mountEffect,\n  useImperativeHandle: mountImperativeHandle,\n  useLayoutEffect: mountLayoutEffect,\n  useMemo: mountMemo,\n  useReducer: mountReducer,\n  useRef: mountRef,\n  useState: mountState,\n  useDebugValue: mountDebugValue,\n  useDeferredValue: mountDeferredValue,\n  useTransition: mountTransition,\n  useMutableSource: mountMutableSource,\n  useSyncExternalStore: mountSyncExternalStore,\n  useOpaqueIdentifier: mountOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnMount: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnMount: Dispatcher).useCacheRefresh = mountRefresh;\n}\n\nconst HooksDispatcherOnUpdate: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: updateReducer,\n  useRef: updateRef,\n  useState: updateState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: updateDeferredValue,\n  useTransition: updateTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: updateSyncExternalStore,\n  useOpaqueIdentifier: updateOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnUpdate: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnUpdate: Dispatcher).useCacheRefresh = updateRefresh;\n}\n\nconst HooksDispatcherOnRerender: Dispatcher = {\n  readContext,\n\n  useCallback: updateCallback,\n  useContext: readContext,\n  useEffect: updateEffect,\n  useImperativeHandle: updateImperativeHandle,\n  useLayoutEffect: updateLayoutEffect,\n  useMemo: updateMemo,\n  useReducer: rerenderReducer,\n  useRef: updateRef,\n  useState: rerenderState,\n  useDebugValue: updateDebugValue,\n  useDeferredValue: rerenderDeferredValue,\n  useTransition: rerenderTransition,\n  useMutableSource: updateMutableSource,\n  useSyncExternalStore: mountSyncExternalStore,\n  useOpaqueIdentifier: rerenderOpaqueIdentifier,\n\n  unstable_isNewReconciler: enableNewReconciler,\n};\nif (enableCache) {\n  (HooksDispatcherOnRerender: Dispatcher).getCacheForType = getCacheForType;\n  (HooksDispatcherOnRerender: Dispatcher).useCacheRefresh = updateRefresh;\n}\n\nlet HooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet HooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher | null = null;\nlet InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher | null = null;\n\nif (__DEV__) {\n  const warnInvalidContextAccess = () => {\n    console.error(\n      'Context can only be read while React is rendering. ' +\n        'In classes, you can read it in the render method or getDerivedStateFromProps. ' +\n        'In function components, you can read it directly in the function body, but not ' +\n        'inside Hooks like useReducer() or useMemo().',\n    );\n  };\n\n  const warnInvalidHookAccess = () => {\n    console.error(\n      'Do not call Hooks inside useEffect(...), useMemo(...), or other built-in Hooks. ' +\n        'You can only call Hooks at the top level of your React function. ' +\n        'For more information, see ' +\n        'https://reactjs.org/link/rules-of-hooks',\n    );\n  };\n\n  HooksDispatcherOnMountInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      mountHookTypesDev();\n      checkDepsAreArrayDev(deps);\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnMountInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnMountInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      mountHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  HooksDispatcherOnMountWithHookTypesInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnMountWithHookTypesInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  HooksDispatcherOnUpdateInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnUpdateInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  HooksDispatcherOnRerenderInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      return readContext(context);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnRerenderInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (HooksDispatcherOnRerenderInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnMountInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnMountInDEV;\n      try {\n        return mountState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      mountHookTypesDev();\n      return mountOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnMountInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return mountRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnUpdateInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnUpdateInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n\n  InvalidNestedHooksDispatcherOnRerenderInDEV = {\n    readContext<T>(context: ReactContext<T>): T {\n      warnInvalidContextAccess();\n      return readContext(context);\n    },\n\n    useCallback<T>(callback: T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useCallback';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateCallback(callback, deps);\n    },\n    useContext<T>(context: ReactContext<T>): T {\n      currentHookNameInDev = 'useContext';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return readContext(context);\n    },\n    useEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateEffect(create, deps);\n    },\n    useImperativeHandle<T>(\n      ref: {|current: T | null|} | ((inst: T | null) => mixed) | null | void,\n      create: () => T,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useImperativeHandle';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateImperativeHandle(ref, create, deps);\n    },\n    useLayoutEffect(\n      create: () => (() => void) | void,\n      deps: Array<mixed> | void | null,\n    ): void {\n      currentHookNameInDev = 'useLayoutEffect';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateLayoutEffect(create, deps);\n    },\n    useMemo<T>(create: () => T, deps: Array<mixed> | void | null): T {\n      currentHookNameInDev = 'useMemo';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return updateMemo(create, deps);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useReducer<S, I, A>(\n      reducer: (S, A) => S,\n      initialArg: I,\n      init?: I => S,\n    ): [S, Dispatch<A>] {\n      currentHookNameInDev = 'useReducer';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderReducer(reducer, initialArg, init);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useRef<T>(initialValue: T): {|current: T|} {\n      currentHookNameInDev = 'useRef';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateRef(initialValue);\n    },\n    useState<S>(\n      initialState: (() => S) | S,\n    ): [S, Dispatch<BasicStateAction<S>>] {\n      currentHookNameInDev = 'useState';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      const prevDispatcher = ReactCurrentDispatcher.current;\n      ReactCurrentDispatcher.current = InvalidNestedHooksDispatcherOnUpdateInDEV;\n      try {\n        return rerenderState(initialState);\n      } finally {\n        ReactCurrentDispatcher.current = prevDispatcher;\n      }\n    },\n    useDebugValue<T>(value: T, formatterFn: ?(value: T) => mixed): void {\n      currentHookNameInDev = 'useDebugValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateDebugValue(value, formatterFn);\n    },\n    useDeferredValue<T>(value: T): T {\n      currentHookNameInDev = 'useDeferredValue';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderDeferredValue(value);\n    },\n    useTransition(): [boolean, (() => void) => void] {\n      currentHookNameInDev = 'useTransition';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderTransition();\n    },\n    useMutableSource<Source, Snapshot>(\n      source: MutableSource<Source>,\n      getSnapshot: MutableSourceGetSnapshotFn<Source, Snapshot>,\n      subscribe: MutableSourceSubscribeFn<Source, Snapshot>,\n    ): Snapshot {\n      currentHookNameInDev = 'useMutableSource';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateMutableSource(source, getSnapshot, subscribe);\n    },\n    useSyncExternalStore<T>(\n      subscribe: (() => void) => () => void,\n      getSnapshot: () => T,\n    ): T {\n      currentHookNameInDev = 'useSyncExternalStore';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return updateSyncExternalStore(subscribe, getSnapshot);\n    },\n    useOpaqueIdentifier(): OpaqueIDType | void {\n      currentHookNameInDev = 'useOpaqueIdentifier';\n      warnInvalidHookAccess();\n      updateHookTypesDev();\n      return rerenderOpaqueIdentifier();\n    },\n\n    unstable_isNewReconciler: enableNewReconciler,\n  };\n  if (enableCache) {\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).getCacheForType = getCacheForType;\n    (InvalidNestedHooksDispatcherOnRerenderInDEV: Dispatcher).useCacheRefresh = function useCacheRefresh() {\n      currentHookNameInDev = 'useCacheRefresh';\n      updateHookTypesDev();\n      return updateRefresh();\n    };\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableProfilerTimer,\n} from 'shared/ReactFeatureFlags';\nimport {HostRoot, Profiler} from './ReactWorkTags';\n\n// Intentionally not named imports because Rollup would use dynamic dispatch for\n// CommonJS interop named imports.\nimport * as Scheduler from 'scheduler';\n\nconst {unstable_now: now} = Scheduler;\n\nexport type ProfilerTimer = {\n  getCommitTime(): number,\n  isCurrentUpdateNested(): boolean,\n  markNestedUpdateScheduled(): void,\n  recordCommitTime(): void,\n  startProfilerTimer(fiber: Fiber): void,\n  stopProfilerTimerIfRunning(fiber: Fiber): void,\n  stopProfilerTimerIfRunningAndRecordDelta(fiber: Fiber): void,\n  syncNestedUpdateFlag(): void,\n  ...\n};\n\nlet commitTime: number = 0;\nlet layoutEffectStartTime: number = -1;\nlet profilerStartTime: number = -1;\nlet passiveEffectStartTime: number = -1;\n\n/**\n * Tracks whether the current update was a nested/cascading update (scheduled from a layout effect).\n *\n * The overall sequence is:\n *   1. render\n *   2. commit (and call `onRender`, `onCommit`)\n *   3. check for nested updates\n *   4. flush passive effects (and call `onPostCommit`)\n *\n * Nested updates are identified in step 3 above,\n * but step 4 still applies to the work that was just committed.\n * We use two flags to track nested updates then:\n * one tracks whether the upcoming update is a nested update,\n * and the other tracks whether the current update was a nested update.\n * The first value gets synced to the second at the start of the render phase.\n */\nlet currentUpdateIsNested: boolean = false;\nlet nestedUpdateScheduled: boolean = false;\n\nfunction isCurrentUpdateNested(): boolean {\n  return currentUpdateIsNested;\n}\n\nfunction markNestedUpdateScheduled(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    nestedUpdateScheduled = true;\n  }\n}\n\nfunction resetNestedUpdateFlag(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    currentUpdateIsNested = false;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction syncNestedUpdateFlag(): void {\n  if (enableProfilerNestedUpdatePhase) {\n    currentUpdateIsNested = nestedUpdateScheduled;\n    nestedUpdateScheduled = false;\n  }\n}\n\nfunction getCommitTime(): number {\n  return commitTime;\n}\n\nfunction recordCommitTime(): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  commitTime = now();\n}\n\nfunction startProfilerTimer(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  profilerStartTime = now();\n\n  if (((fiber.actualStartTime: any): number) < 0) {\n    fiber.actualStartTime = now();\n  }\n}\n\nfunction stopProfilerTimerIfRunning(fiber: Fiber): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n  profilerStartTime = -1;\n}\n\nfunction stopProfilerTimerIfRunningAndRecordDelta(\n  fiber: Fiber,\n  overrideBaseTime: boolean,\n): void {\n  if (!enableProfilerTimer) {\n    return;\n  }\n\n  if (profilerStartTime >= 0) {\n    const elapsedTime = now() - profilerStartTime;\n    fiber.actualDuration += elapsedTime;\n    if (overrideBaseTime) {\n      fiber.selfBaseDuration = elapsedTime;\n    }\n    profilerStartTime = -1;\n  }\n}\n\nfunction recordLayoutEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (layoutEffectStartTime >= 0) {\n    const elapsedTime = now() - layoutEffectStartTime;\n\n    layoutEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          const root = parentFiber.stateNode;\n          root.effectDuration += elapsedTime;\n          return;\n        case Profiler:\n          const parentStateNode = parentFiber.stateNode;\n          parentStateNode.effectDuration += elapsedTime;\n          return;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction recordPassiveEffectDuration(fiber: Fiber): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n\n  if (passiveEffectStartTime >= 0) {\n    const elapsedTime = now() - passiveEffectStartTime;\n\n    passiveEffectStartTime = -1;\n\n    // Store duration on the next nearest Profiler ancestor\n    // Or the root (for the DevTools Profiler to read)\n    let parentFiber = fiber.return;\n    while (parentFiber !== null) {\n      switch (parentFiber.tag) {\n        case HostRoot:\n          const root = parentFiber.stateNode;\n          if (root !== null) {\n            root.passiveEffectDuration += elapsedTime;\n          }\n          return;\n        case Profiler:\n          const parentStateNode = parentFiber.stateNode;\n          if (parentStateNode !== null) {\n            // Detached fibers have their state node cleared out.\n            // In this case, the return pointer is also cleared out,\n            // so we won't be able to report the time spent in this Profiler's subtree.\n            parentStateNode.passiveEffectDuration += elapsedTime;\n          }\n          return;\n      }\n      parentFiber = parentFiber.return;\n    }\n  }\n}\n\nfunction startLayoutEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  layoutEffectStartTime = now();\n}\n\nfunction startPassiveEffectTimer(): void {\n  if (!enableProfilerTimer || !enableProfilerCommitHooks) {\n    return;\n  }\n  passiveEffectStartTime = now();\n}\n\nfunction transferActualDuration(fiber: Fiber): void {\n  // Transfer time spent rendering these children so we don't lose it\n  // after we rerender. This is used as a helper in special cases\n  // where we should count the work of multiple passes.\n  let child = fiber.child;\n  while (child) {\n    fiber.actualDuration += child.actualDuration;\n    child = child.sibling;\n  }\n}\n\nexport {\n  getCommitTime,\n  isCurrentUpdateNested,\n  markNestedUpdateScheduled,\n  recordCommitTime,\n  recordLayoutEffectDuration,\n  recordPassiveEffectDuration,\n  resetNestedUpdateFlag,\n  startLayoutEffectTimer,\n  startPassiveEffectTimer,\n  startProfilerTimer,\n  stopProfilerTimerIfRunning,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  syncNestedUpdateFlag,\n  transferActualDuration,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\n\nimport {getStackByFiberInDevAndProd} from './ReactFiberComponentStack';\n\nexport type CapturedValue<T> = {|\n  value: T,\n  source: Fiber | null,\n  stack: string | null,\n|};\n\nexport function createCapturedValue<T>(\n  value: T,\n  source: Fiber,\n): CapturedValue<T> {\n  // If the value is an error, call this function immediately after it is thrown\n  // so the stack is accurate.\n  return {\n    value,\n    source,\n    stack: getStackByFiberInDevAndProd(source),\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from '../ReactFiber.old';\nimport type {CapturedValue} from '../ReactCapturedValue';\n\nimport {ClassComponent} from '../ReactWorkTags';\n\n// Module provided by RN:\nimport {ReactFiberErrorDialog as RNImpl} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\n\nimport invariant from 'shared/invariant';\n\ninvariant(\n  typeof RNImpl.showErrorDialog === 'function',\n  'Expected ReactFiberErrorDialog.showErrorDialog to be a function.',\n);\n\nexport function showErrorDialog(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): boolean {\n  const capturedError = {\n    componentStack: errorInfo.stack !== null ? errorInfo.stack : '',\n    error: errorInfo.value,\n    errorBoundary:\n      boundary !== null && boundary.tag === ClassComponent\n        ? boundary.stateNode\n        : null,\n  };\n  return RNImpl.showErrorDialog(capturedError);\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {CapturedValue} from './ReactCapturedValue';\n\nimport {showErrorDialog} from './ReactFiberErrorDialog';\nimport {ClassComponent} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {HostRoot} from 'react-reconciler/src/ReactWorkTags';\n\nexport function logCapturedError(\n  boundary: Fiber,\n  errorInfo: CapturedValue<mixed>,\n): void {\n  try {\n    const logError = showErrorDialog(boundary, errorInfo);\n\n    // Allow injected showErrorDialog() to prevent default console.error logging.\n    // This enables renderers like ReactNative to better manage redbox behavior.\n    if (logError === false) {\n      return;\n    }\n\n    const error = (errorInfo.value: any);\n    if (__DEV__) {\n      const source = errorInfo.source;\n      const stack = errorInfo.stack;\n      const componentStack = stack !== null ? stack : '';\n      // Browsers support silencing uncaught errors by calling\n      // `preventDefault()` in window `error` handler.\n      // We record this information as an expando on the error.\n      if (error != null && error._suppressLogging) {\n        if (boundary.tag === ClassComponent) {\n          // The error is recoverable and was silenced.\n          // Ignore it and don't print the stack addendum.\n          // This is handy for testing error boundaries without noise.\n          return;\n        }\n        // The error is fatal. Since the silencing might have\n        // been accidental, we'll surface it anyway.\n        // However, the browser would have silenced the original error\n        // so we'll print it first, and then print the stack addendum.\n        console['error'](error); // Don't transform to our wrapper\n        // For a more detailed description of this block, see:\n        // https://github.com/facebook/react/pull/13384\n      }\n\n      const componentName = source ? getComponentNameFromFiber(source) : null;\n      const componentNameMessage = componentName\n        ? `The above error occurred in the <${componentName}> component:`\n        : 'The above error occurred in one of your React components:';\n\n      let errorBoundaryMessage;\n      if (boundary.tag === HostRoot) {\n        errorBoundaryMessage =\n          'Consider adding an error boundary to your tree to customize error handling behavior.\\n' +\n          'Visit https://reactjs.org/link/error-boundaries to learn more about error boundaries.';\n      } else {\n        const errorBoundaryName =\n          getComponentNameFromFiber(boundary) || 'Anonymous';\n        errorBoundaryMessage =\n          `React will try to recreate this component tree from scratch ` +\n          `using the error boundary you provided, ${errorBoundaryName}.`;\n      }\n      const combinedMessage =\n        `${componentNameMessage}\\n${componentStack}\\n\\n` +\n        `${errorBoundaryMessage}`;\n\n      // In development, we provide our own message with just the component stack.\n      // We don't include the original error message and JS stack because the browser\n      // has already printed it. Even if the application swallows the error, it is still\n      // displayed by the browser thanks to the DEV-only fake event trick in ReactErrorUtils.\n      console['error'](combinedMessage); // Don't transform to our wrapper\n    } else {\n      // In production, we print the error directly.\n      // This will include the message, the JS stack, and anything the browser wants to show.\n      // We pass the error object instead of custom message so that the browser displays the error natively.\n      console['error'](error); // Don't transform to our wrapper\n    }\n  } catch (e) {\n    // This method must not throw, or React internal state will get messed up.\n    // If console.error is overridden, or logCapturedError() shows a dialog that throws,\n    // we want to report this error outside of the normal stack as a last resort.\n    // https://github.com/facebook/react/issues/13188\n    setTimeout(() => {\n      throw e;\n    });\n  }\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lane, Lanes} from './ReactFiberLane.old';\nimport type {CapturedValue} from './ReactCapturedValue';\nimport type {Update} from './ReactUpdateQueue.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\n\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport {\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n  IncompleteClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  DidCapture,\n  Incomplete,\n  NoFlags,\n  ShouldCapture,\n  LifecycleEffectMask,\n  ForceUpdateForLegacySuspense,\n} from './ReactFiberFlags';\nimport {\n  supportsPersistence,\n  getOffscreenContainerProps,\n} from './ReactFiberHostConfig';\nimport {shouldCaptureSuspense} from './ReactFiberSuspenseComponent.old';\nimport {NoMode, ConcurrentMode, DebugTracingMode} from './ReactTypeOfMode';\nimport {\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  enableLazyContextPropagation,\n  enableUpdaterTracking,\n  enablePersistentOffscreenHostContainer,\n} from 'shared/ReactFeatureFlags';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  enqueueCapturedUpdate,\n  createUpdate,\n  CaptureUpdate,\n  ForceUpdate,\n  enqueueUpdate,\n} from './ReactUpdateQueue.old';\nimport {markFailedErrorBoundaryForHotReloading} from './ReactFiberHotReloading.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {\n  renderDidError,\n  onUncaughtError,\n  markLegacyErrorBoundaryAsFailed,\n  isAlreadyFailedLegacyErrorBoundary,\n  pingSuspendedRoot,\n  restorePendingUpdaters,\n} from './ReactFiberWorkLoop.old';\nimport {propagateParentContextChangesToDeferredTree} from './ReactFiberNewContext.old';\nimport {logCapturedError} from './ReactFiberErrorLogger';\nimport {logComponentSuspended} from './DebugTracing';\nimport {\n  markComponentRenderStopped,\n  markComponentSuspended,\n} from './SchedulingProfiler';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  SyncLane,\n  NoTimestamp,\n  includesSomeLane,\n  mergeLanes,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\n\nconst PossiblyWeakMap = typeof WeakMap === 'function' ? WeakMap : Map;\n\nfunction createRootErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  // Unmount the root by rendering null.\n  update.tag = CaptureUpdate;\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element: null};\n  const error = errorInfo.value;\n  update.callback = () => {\n    onUncaughtError(error);\n    logCapturedError(fiber, errorInfo);\n  };\n  return update;\n}\n\nfunction createClassErrorUpdate(\n  fiber: Fiber,\n  errorInfo: CapturedValue<mixed>,\n  lane: Lane,\n): Update<mixed> {\n  const update = createUpdate(NoTimestamp, lane);\n  update.tag = CaptureUpdate;\n  const getDerivedStateFromError = fiber.type.getDerivedStateFromError;\n  if (typeof getDerivedStateFromError === 'function') {\n    const error = errorInfo.value;\n    update.payload = () => {\n      return getDerivedStateFromError(error);\n    };\n    update.callback = () => {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      logCapturedError(fiber, errorInfo);\n    };\n  }\n\n  const inst = fiber.stateNode;\n  if (inst !== null && typeof inst.componentDidCatch === 'function') {\n    update.callback = function callback() {\n      if (__DEV__) {\n        markFailedErrorBoundaryForHotReloading(fiber);\n      }\n      logCapturedError(fiber, errorInfo);\n      if (typeof getDerivedStateFromError !== 'function') {\n        // To preserve the preexisting retry behavior of error boundaries,\n        // we keep track of which ones already failed during this batch.\n        // This gets reset before we yield back to the browser.\n        // TODO: Warn in strict mode if getDerivedStateFromError is\n        // not defined.\n        markLegacyErrorBoundaryAsFailed(this);\n      }\n      const error = errorInfo.value;\n      const stack = errorInfo.stack;\n      this.componentDidCatch(error, {\n        componentStack: stack !== null ? stack : '',\n      });\n      if (__DEV__) {\n        if (typeof getDerivedStateFromError !== 'function') {\n          // If componentDidCatch is the only error boundary method defined,\n          // then it needs to call setState to recover from errors.\n          // If no state update is scheduled then the boundary will swallow the error.\n          if (!includesSomeLane(fiber.lanes, (SyncLane: Lane))) {\n            console.error(\n              '%s: Error boundaries should implement getDerivedStateFromError(). ' +\n                'In that method, return a state update to display an error message or fallback UI.',\n              getComponentNameFromFiber(fiber) || 'Unknown',\n            );\n          }\n        }\n      }\n    };\n  }\n  return update;\n}\n\nfunction attachPingListener(root: FiberRoot, wakeable: Wakeable, lanes: Lanes) {\n  // Attach a listener to the promise to \"ping\" the root and retry. But only if\n  // one does not already exist for the lanes we're currently rendering (which\n  // acts like a \"thread ID\" here).\n  let pingCache = root.pingCache;\n  let threadIDs;\n  if (pingCache === null) {\n    pingCache = root.pingCache = new PossiblyWeakMap();\n    threadIDs = new Set();\n    pingCache.set(wakeable, threadIDs);\n  } else {\n    threadIDs = pingCache.get(wakeable);\n    if (threadIDs === undefined) {\n      threadIDs = new Set();\n      pingCache.set(wakeable, threadIDs);\n    }\n  }\n  if (!threadIDs.has(lanes)) {\n    // Memoize using the thread ID to prevent redundant listeners.\n    threadIDs.add(lanes);\n    const ping = pingSuspendedRoot.bind(null, root, wakeable, lanes);\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        // If we have pending work still, restore the original updaters\n        restorePendingUpdaters(root, lanes);\n      }\n    }\n    wakeable.then(ping, ping);\n  }\n}\n\nfunction throwException(\n  root: FiberRoot,\n  returnFiber: Fiber,\n  sourceFiber: Fiber,\n  value: mixed,\n  rootRenderLanes: Lanes,\n) {\n  // The source fiber did not complete.\n  sourceFiber.flags |= Incomplete;\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      // If we have pending work still, restore the original updaters\n      restorePendingUpdaters(root, rootRenderLanes);\n    }\n  }\n\n  if (\n    value !== null &&\n    typeof value === 'object' &&\n    typeof value.then === 'function'\n  ) {\n    if (enableLazyContextPropagation) {\n      const currentSourceFiber = sourceFiber.alternate;\n      if (currentSourceFiber !== null) {\n        // Since we never visited the children of the suspended component, we\n        // need to propagate the context change now, to ensure that we visit\n        // them during the retry.\n        //\n        // We don't have to do this for errors because we retry errors without\n        // committing in between. So this is specific to Suspense.\n        propagateParentContextChangesToDeferredTree(\n          currentSourceFiber,\n          sourceFiber,\n          rootRenderLanes,\n        );\n      }\n    }\n\n    // This is a wakeable.\n    const wakeable: Wakeable = (value: any);\n\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        if (sourceFiber.mode & DebugTracingMode) {\n          const name = getComponentNameFromFiber(sourceFiber) || 'Unknown';\n          logComponentSuspended(name, wakeable);\n        }\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markComponentRenderStopped();\n      markComponentSuspended(sourceFiber, wakeable, rootRenderLanes);\n    }\n\n    // Reset the memoizedState to what it was before we attempted to render it.\n    // A legacy mode Suspense quirk, only relevant to hook components.\n    const tag = sourceFiber.tag;\n    if (\n      (sourceFiber.mode & ConcurrentMode) === NoMode &&\n      (tag === FunctionComponent ||\n        tag === ForwardRef ||\n        tag === SimpleMemoComponent)\n    ) {\n      const currentSource = sourceFiber.alternate;\n      if (currentSource) {\n        sourceFiber.updateQueue = currentSource.updateQueue;\n        sourceFiber.memoizedState = currentSource.memoizedState;\n        sourceFiber.lanes = currentSource.lanes;\n      } else {\n        sourceFiber.updateQueue = null;\n        sourceFiber.memoizedState = null;\n      }\n    }\n\n    const hasInvisibleParentBoundary = hasSuspenseContext(\n      suspenseStackCursor.current,\n      (InvisibleParentSuspenseContext: SuspenseContext),\n    );\n\n    // Schedule the nearest Suspense to re-render the timed out view.\n    let workInProgress = returnFiber;\n    do {\n      if (\n        workInProgress.tag === SuspenseComponent &&\n        shouldCaptureSuspense(workInProgress, hasInvisibleParentBoundary)\n      ) {\n        // Found the nearest boundary.\n\n        // Stash the promise on the boundary fiber. If the boundary times out, we'll\n        // attach another listener to flip the boundary back to its normal state.\n        const wakeables: Set<Wakeable> = (workInProgress.updateQueue: any);\n        if (wakeables === null) {\n          const updateQueue = (new Set(): any);\n          updateQueue.add(wakeable);\n          workInProgress.updateQueue = updateQueue;\n        } else {\n          wakeables.add(wakeable);\n        }\n\n        // If the boundary is in legacy mode, we should *not*\n        // suspend the commit. Pretend as if the suspended component rendered\n        // null and keep rendering. In the commit phase, we'll schedule a\n        // subsequent synchronous update to re-render the Suspense.\n        //\n        // Note: It doesn't matter whether the component that suspended was\n        // inside a concurrent mode tree. If the Suspense is outside of it, we\n        // should *not* suspend the commit.\n        //\n        // If the suspense boundary suspended itself suspended, we don't have to\n        // do this trick because nothing was partially started. We can just\n        // directly do a second pass over the fallback in this render and\n        // pretend we meant to render that directly.\n        if (\n          (workInProgress.mode & ConcurrentMode) === NoMode &&\n          workInProgress !== returnFiber\n        ) {\n          workInProgress.flags |= DidCapture;\n          sourceFiber.flags |= ForceUpdateForLegacySuspense;\n\n          // We're going to commit this fiber even though it didn't complete.\n          // But we shouldn't call any lifecycle methods or callbacks. Remove\n          // all lifecycle effect tags.\n          sourceFiber.flags &= ~(LifecycleEffectMask | Incomplete);\n\n          if (supportsPersistence && enablePersistentOffscreenHostContainer) {\n            // Another legacy Suspense quirk. In persistent mode, if this is the\n            // initial mount, override the props of the host container to hide\n            // its contents.\n            const currentSuspenseBoundary = workInProgress.alternate;\n            if (currentSuspenseBoundary === null) {\n              const offscreenFiber: Fiber = (workInProgress.child: any);\n              const offscreenContainer = offscreenFiber.child;\n              if (offscreenContainer !== null) {\n                const children = offscreenContainer.memoizedProps.children;\n                const containerProps = getOffscreenContainerProps(\n                  'hidden',\n                  children,\n                );\n                offscreenContainer.pendingProps = containerProps;\n                offscreenContainer.memoizedProps = containerProps;\n              }\n            }\n          }\n\n          if (sourceFiber.tag === ClassComponent) {\n            const currentSourceFiber = sourceFiber.alternate;\n            if (currentSourceFiber === null) {\n              // This is a new mount. Change the tag so it's not mistaken for a\n              // completed class component. For example, we should not call\n              // componentWillUnmount if it is deleted.\n              sourceFiber.tag = IncompleteClassComponent;\n            } else {\n              // When we try rendering again, we should not reuse the current fiber,\n              // since it's known to be in an inconsistent state. Use a force update to\n              // prevent a bail out.\n              const update = createUpdate(NoTimestamp, SyncLane);\n              update.tag = ForceUpdate;\n              enqueueUpdate(sourceFiber, update, SyncLane);\n            }\n          }\n\n          // The source fiber did not complete. Mark it with Sync priority to\n          // indicate that it still has pending work.\n          sourceFiber.lanes = mergeLanes(sourceFiber.lanes, SyncLane);\n\n          // Exit without suspending.\n          return;\n        }\n\n        // Confirmed that the boundary is in a concurrent mode tree. Continue\n        // with the normal suspend path.\n        //\n        // After this we'll use a set of heuristics to determine whether this\n        // render pass will run to completion or restart or \"suspend\" the commit.\n        // The actual logic for this is spread out in different places.\n        //\n        // This first principle is that if we're going to suspend when we complete\n        // a root, then we should also restart if we get an update or ping that\n        // might unsuspend it, and vice versa. The only reason to suspend is\n        // because you think you might want to restart before committing. However,\n        // it doesn't make sense to restart only while in the period we're suspended.\n        //\n        // Restarting too aggressively is also not good because it starves out any\n        // intermediate loading state. So we use heuristics to determine when.\n\n        // Suspense Heuristics\n        //\n        // If nothing threw a Promise or all the same fallbacks are already showing,\n        // then don't suspend/restart.\n        //\n        // If this is an initial render of a new tree of Suspense boundaries and\n        // those trigger a fallback, then don't suspend/restart. We want to ensure\n        // that we can show the initial loading state as quickly as possible.\n        //\n        // If we hit a \"Delayed\" case, such as when we'd switch from content back into\n        // a fallback, then we should always suspend/restart. Transitions apply\n        // to this case. If none is defined, JND is used instead.\n        //\n        // If we're already showing a fallback and it gets \"retried\", allowing us to show\n        // another level, but there's still an inner boundary that would show a fallback,\n        // then we suspend/restart for 500ms since the last time we showed a fallback\n        // anywhere in the tree. This effectively throttles progressive loading into a\n        // consistent train of commits. This also gives us an opportunity to restart to\n        // get to the completed state slightly earlier.\n        //\n        // If there's ambiguity due to batching it's resolved in preference of:\n        // 1) \"delayed\", 2) \"initial render\", 3) \"retry\".\n        //\n        // We want to ensure that a \"busy\" state doesn't get force committed. We want to\n        // ensure that new initial loading states can commit as soon as possible.\n\n        attachPingListener(root, wakeable, rootRenderLanes);\n\n        workInProgress.flags |= ShouldCapture;\n        // TODO: I think we can remove this, since we now use `DidCapture` in\n        // the begin phase to prevent an early bailout.\n        workInProgress.lanes = rootRenderLanes;\n\n        return;\n      }\n      // This boundary already captured during this render. Continue to the next\n      // boundary.\n      workInProgress = workInProgress.return;\n    } while (workInProgress !== null);\n    // No boundary was found. Fallthrough to error mode.\n    // TODO: Use invariant so the message is stripped in prod?\n    value = new Error(\n      (getComponentNameFromFiber(sourceFiber) || 'A React component') +\n        ' suspended while rendering, but no fallback UI was specified.\\n' +\n        '\\n' +\n        'Add a <Suspense fallback=...> component higher in the tree to ' +\n        'provide a loading indicator or placeholder to display.',\n    );\n  }\n\n  // We didn't find a boundary that could handle this type of exception. Start\n  // over and traverse parent path again, this time treating the exception\n  // as an error.\n  renderDidError();\n\n  value = createCapturedValue(value, sourceFiber);\n  let workInProgress = returnFiber;\n  do {\n    switch (workInProgress.tag) {\n      case HostRoot: {\n        const errorInfo = value;\n        workInProgress.flags |= ShouldCapture;\n        const lane = pickArbitraryLane(rootRenderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        const update = createRootErrorUpdate(workInProgress, errorInfo, lane);\n        enqueueCapturedUpdate(workInProgress, update);\n        return;\n      }\n      case ClassComponent:\n        // Capture and retry\n        const errorInfo = value;\n        const ctor = workInProgress.type;\n        const instance = workInProgress.stateNode;\n        if (\n          (workInProgress.flags & DidCapture) === NoFlags &&\n          (typeof ctor.getDerivedStateFromError === 'function' ||\n            (instance !== null &&\n              typeof instance.componentDidCatch === 'function' &&\n              !isAlreadyFailedLegacyErrorBoundary(instance)))\n        ) {\n          workInProgress.flags |= ShouldCapture;\n          const lane = pickArbitraryLane(rootRenderLanes);\n          workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n          // Schedule the error boundary to re-render using updated state\n          const update = createClassErrorUpdate(\n            workInProgress,\n            errorInfo,\n            lane,\n          );\n          enqueueCapturedUpdate(workInProgress, update);\n          return;\n        }\n        break;\n      default:\n        break;\n    }\n    workInProgress = workInProgress.return;\n  } while (workInProgress !== null);\n}\n\nexport {throwException, createRootErrorUpdate, createClassErrorUpdate};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {\n  ReactScopeInstance,\n  ReactContext,\n  Wakeable,\n} from 'shared/ReactTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {\n  Instance,\n  Type,\n  Props,\n  Container,\n  ChildSet,\n} from './ReactFiberHostConfig';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\nimport type {Cache, SpawnedCachePool} from './ReactFiberCacheComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\n\nimport {now} from './Scheduler';\n\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ContextProvider,\n  ContextConsumer,\n  ForwardRef,\n  Fragment,\n  Mode,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport {NoMode, ConcurrentMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  Ref,\n  RefStatic,\n  Placement,\n  Update,\n  Visibility,\n  NoFlags,\n  DidCapture,\n  Snapshot,\n  ChildDeletion,\n  StaticMask,\n  MutationMask,\n} from './ReactFiberFlags';\nimport invariant from 'shared/invariant';\n\nimport {\n  createInstance,\n  createTextInstance,\n  appendInitialChild,\n  finalizeInitialChildren,\n  prepareUpdate,\n  supportsMutation,\n  supportsPersistence,\n  cloneInstance,\n  cloneHiddenInstance,\n  cloneHiddenTextInstance,\n  createContainerChildSet,\n  appendChildToContainerChildSet,\n  finalizeContainerChildren,\n  preparePortalMount,\n  prepareScopeUpdate,\n} from './ReactFiberHostConfig';\nimport {\n  getRootHostContainer,\n  popHostContext,\n  getHostContext,\n  popHostContainer,\n} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  InvisibleParentSuspenseContext,\n  hasSuspenseContext,\n  popSuspenseContext,\n  pushSuspenseContext,\n  setShallowSuspenseContext,\n  ForceSuspenseFallback,\n  setDefaultShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {\n  prepareToHydrateHostInstance,\n  prepareToHydrateHostTextInstance,\n  prepareToHydrateHostSuspenseInstance,\n  popHydrationState,\n  resetHydrationState,\n  getIsHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  enableSuspenseCallback,\n  enableSuspenseServerRenderer,\n  enableScopeAPI,\n  enableProfilerTimer,\n  enableCache,\n  enableSuspenseLayoutEffectSemantics,\n  enablePersistentOffscreenHostContainer,\n} from 'shared/ReactFeatureFlags';\nimport {\n  renderDidSuspend,\n  renderDidSuspendDelayIfPossible,\n  renderHasNotSuspendedYet,\n  popRenderLanes,\n  getRenderTargetTime,\n  subtreeRenderLanes,\n} from './ReactFiberWorkLoop.old';\nimport {\n  OffscreenLane,\n  SomeRetryLane,\n  NoLanes,\n  includesSomeLane,\n  mergeLanes,\n} from './ReactFiberLane.old';\nimport {resetChildFibers} from './ReactChildFiber.old';\nimport {createScopeInstance} from './ReactFiberScope.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\nimport {\n  popCacheProvider,\n  popRootCachePool,\n  popCachePool,\n} from './ReactFiberCacheComponent.old';\n\nfunction markUpdate(workInProgress: Fiber) {\n  // Tag the fiber with an update effect. This turns a Placement into\n  // a PlacementAndUpdate.\n  workInProgress.flags |= Update;\n}\n\nfunction markRef(workInProgress: Fiber) {\n  workInProgress.flags |= Ref;\n  if (enableSuspenseLayoutEffectSemantics) {\n    workInProgress.flags |= RefStatic;\n  }\n}\n\nfunction hadNoMutationsEffects(current: null | Fiber, completedWork: Fiber) {\n  const didBailout = current !== null && current.child === completedWork.child;\n  if (didBailout) {\n    return true;\n  }\n\n  if ((completedWork.flags & ChildDeletion) !== NoFlags) {\n    return false;\n  }\n\n  // TODO: If we move the `hadNoMutationsEffects` call after `bubbleProperties`\n  // then we only have to check the `completedWork.subtreeFlags`.\n  let child = completedWork.child;\n  while (child !== null) {\n    if (\n      (child.flags & MutationMask) !== NoFlags ||\n      (child.subtreeFlags & MutationMask) !== NoFlags\n    ) {\n      return false;\n    }\n    child = child.sibling;\n  }\n  return true;\n}\n\nlet appendAllChildren;\nlet updateHostContainer;\nlet updateHostComponent;\nlet updateHostText;\nif (supportsMutation) {\n  // Mutation mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      if (node.tag === HostComponent || node.tag === HostText) {\n        appendInitialChild(parent, node.stateNode);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // If we have an alternate, that means this is an update and we need to\n    // schedule a side-effect to do the updates.\n    const oldProps = current.memoizedProps;\n    if (oldProps === newProps) {\n      // In mutation mode, this is sufficient for a bailout because\n      // we won't touch this node even if children changed.\n      return;\n    }\n\n    // If we get updated because one of our children updated, we don't\n    // have newProps so we'll have to reuse them.\n    // TODO: Split the update API as separate for the props vs. children.\n    // Even better would be if children weren't special cased at all tho.\n    const instance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    // TODO: Experiencing an error where oldProps is null. Suggests a host\n    // component is hitting the resume path. Figure out why. Possibly\n    // related to `hidden`.\n    const updatePayload = prepareUpdate(\n      instance,\n      type,\n      oldProps,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n    );\n    // TODO: Type this specific to this type of component.\n    workInProgress.updateQueue = (updatePayload: any);\n    // If the update payload indicates that there is a change or if there\n    // is a new ref we mark this as an update. All the work is done in commitWork.\n    if (updatePayload) {\n      markUpdate(workInProgress);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // If the text differs, mark it as an update. All the work in done in commitWork.\n    if (oldText !== newText) {\n      markUpdate(workInProgress);\n    }\n  };\n} else if (supportsPersistence) {\n  // Persistent host tree mode\n\n  appendAllChildren = function(\n    parent: Instance,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendInitialChild(parent, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (\n        node.tag === OffscreenComponent &&\n        node.memoizedState !== null\n      ) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        const child = node.child;\n        if (child !== null) {\n          child.return = node;\n        }\n        if (enablePersistentOffscreenHostContainer) {\n          appendAllChildren(parent, node, false, false);\n        } else {\n          appendAllChildren(parent, node, true, true);\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n\n  // An unfortunate fork of appendAllChildren because we have two different parent types.\n  const appendAllChildrenToContainer = function(\n    containerChildSet: ChildSet,\n    workInProgress: Fiber,\n    needsVisibilityToggle: boolean,\n    isHidden: boolean,\n  ) {\n    // We only have the top Fiber that was created but we need recurse down its\n    // children to find all the terminal nodes.\n    let node = workInProgress.child;\n    while (node !== null) {\n      // eslint-disable-next-line no-labels\n      branches: if (node.tag === HostComponent) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const props = node.memoizedProps;\n          const type = node.type;\n          instance = cloneHiddenInstance(instance, type, props, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostText) {\n        let instance = node.stateNode;\n        if (needsVisibilityToggle && isHidden) {\n          // This child is inside a timed out tree. Hide it.\n          const text = node.memoizedProps;\n          instance = cloneHiddenTextInstance(instance, text, node);\n        }\n        appendChildToContainerChildSet(containerChildSet, instance);\n      } else if (node.tag === HostPortal) {\n        // If we have a portal child, then we don't want to traverse\n        // down its children. Instead, we'll get insertions from each child in\n        // the portal directly.\n      } else if (\n        node.tag === OffscreenComponent &&\n        node.memoizedState !== null\n      ) {\n        // The children in this boundary are hidden. Toggle their visibility\n        // before appending.\n        const child = node.child;\n        if (child !== null) {\n          child.return = node;\n        }\n        if (enablePersistentOffscreenHostContainer) {\n          appendAllChildrenToContainer(containerChildSet, node, false, false);\n        } else {\n          appendAllChildrenToContainer(containerChildSet, node, true, true);\n        }\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      // $FlowFixMe This is correct but Flow is confused by the labeled break.\n      node = (node: Fiber);\n      if (node === workInProgress) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === workInProgress) {\n          return;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  };\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    const portalOrRoot: {\n      containerInfo: Container,\n      pendingChildren: ChildSet,\n      ...\n    } = workInProgress.stateNode;\n    const childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n    if (childrenUnchanged) {\n      // No changes, just reuse the existing instance.\n    } else {\n      const container = portalOrRoot.containerInfo;\n      const newChildSet = createContainerChildSet(container);\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildrenToContainer(newChildSet, workInProgress, false, false);\n      portalOrRoot.pendingChildren = newChildSet;\n      // Schedule an update on the container to swap out the container.\n      markUpdate(workInProgress);\n      finalizeContainerChildren(container, newChildSet);\n    }\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    const currentInstance = current.stateNode;\n    const oldProps = current.memoizedProps;\n    // If there are no effects associated with this node, then none of our children had any updates.\n    // This guarantees that we can reuse all of them.\n    const childrenUnchanged = hadNoMutationsEffects(current, workInProgress);\n    if (childrenUnchanged && oldProps === newProps) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const recyclableInstance: Instance = workInProgress.stateNode;\n    const currentHostContext = getHostContext();\n    let updatePayload = null;\n    if (oldProps !== newProps) {\n      updatePayload = prepareUpdate(\n        recyclableInstance,\n        type,\n        oldProps,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      );\n    }\n    if (childrenUnchanged && updatePayload === null) {\n      // No changes, just reuse the existing instance.\n      // Note that this might release a previous clone.\n      workInProgress.stateNode = currentInstance;\n      return;\n    }\n    const newInstance = cloneInstance(\n      currentInstance,\n      updatePayload,\n      type,\n      oldProps,\n      newProps,\n      workInProgress,\n      childrenUnchanged,\n      recyclableInstance,\n    );\n    if (\n      finalizeInitialChildren(\n        newInstance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n    workInProgress.stateNode = newInstance;\n    if (childrenUnchanged) {\n      // If there are no other effects in this tree, we need to flag this node as having one.\n      // Even though we're not going to use it for anything.\n      // Otherwise parents won't know that there are new children to propagate upwards.\n      markUpdate(workInProgress);\n    } else {\n      // If children might have changed, we have to add them all to the set.\n      appendAllChildren(newInstance, workInProgress, false, false);\n    }\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    if (oldText !== newText) {\n      // If the text content differs, we'll create a new text instance for it.\n      const rootContainerInstance = getRootHostContainer();\n      const currentHostContext = getHostContext();\n      workInProgress.stateNode = createTextInstance(\n        newText,\n        rootContainerInstance,\n        currentHostContext,\n        workInProgress,\n      );\n      // We'll have to mark it as having an effect, even though we won't use the effect for anything.\n      // This lets the parents know that at least one of their children has changed.\n      markUpdate(workInProgress);\n    } else {\n      workInProgress.stateNode = current.stateNode;\n    }\n  };\n} else {\n  // No host operations\n  updateHostContainer = function(current: null | Fiber, workInProgress: Fiber) {\n    // Noop\n  };\n  updateHostComponent = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    type: Type,\n    newProps: Props,\n    rootContainerInstance: Container,\n  ) {\n    // Noop\n  };\n  updateHostText = function(\n    current: Fiber,\n    workInProgress: Fiber,\n    oldText: string,\n    newText: string,\n  ) {\n    // Noop\n  };\n}\n\nfunction cutOffTailIfNeeded(\n  renderState: SuspenseListRenderState,\n  hasRenderedATailFallback: boolean,\n) {\n  if (getIsHydrating()) {\n    // If we're hydrating, we should consume as many items as we can\n    // so we don't leave any behind.\n    return;\n  }\n  switch (renderState.tailMode) {\n    case 'hidden': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        renderState.tail = null;\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n    case 'collapsed': {\n      // Any insertions at the end of the tail list after this point\n      // should be invisible. If there are already mounted boundaries\n      // anything before them are not considered for collapsing.\n      // Therefore we need to go through the whole tail to find if\n      // there are any.\n      let tailNode = renderState.tail;\n      let lastTailNode = null;\n      while (tailNode !== null) {\n        if (tailNode.alternate !== null) {\n          lastTailNode = tailNode;\n        }\n        tailNode = tailNode.sibling;\n      }\n      // Next we're simply going to delete all insertions after the\n      // last rendered item.\n      if (lastTailNode === null) {\n        // All remaining items in the tail are insertions.\n        if (!hasRenderedATailFallback && renderState.tail !== null) {\n          // We suspended during the head. We want to show at least one\n          // row at the tail. So we'll keep on and cut off the rest.\n          renderState.tail.sibling = null;\n        } else {\n          renderState.tail = null;\n        }\n      } else {\n        // Detach the insertion after the last node that was already\n        // inserted.\n        lastTailNode.sibling = null;\n      }\n      break;\n    }\n  }\n}\n\nfunction bubbleProperties(completedWork: Fiber) {\n  const didBailout =\n    completedWork.alternate !== null &&\n    completedWork.alternate.child === completedWork.child;\n\n  let newChildLanes = NoLanes;\n  let subtreeFlags = NoFlags;\n\n  if (!didBailout) {\n    // Bubble up the earliest expiration time.\n    if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      let actualDuration = completedWork.actualDuration;\n      let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags;\n\n        // When a fiber is cloned, its actualDuration is reset to 0. This value will\n        // only be updated if work is done on the fiber (i.e. it doesn't bailout).\n        // When work is done, it should bubble to the parent's actualDuration. If\n        // the fiber has not been cloned though, (meaning no work was done), then\n        // this value will reflect the amount of time spent working on a previous\n        // render. In that case it should not bubble. We determine whether it was\n        // cloned by comparing the child pointer.\n        actualDuration += child.actualDuration;\n\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.actualDuration = actualDuration;\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        subtreeFlags |= child.subtreeFlags;\n        subtreeFlags |= child.flags;\n\n        // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n        child.return = completedWork;\n\n        child = child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  } else {\n    // Bubble up the earliest expiration time.\n    if (enableProfilerTimer && (completedWork.mode & ProfileMode) !== NoMode) {\n      // In profiling mode, resetChildExpirationTime is also used to reset\n      // profiler durations.\n      let treeBaseDuration = ((completedWork.selfBaseDuration: any): number);\n\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n        subtreeFlags |= child.subtreeFlags & StaticMask;\n        subtreeFlags |= child.flags & StaticMask;\n\n        treeBaseDuration += child.treeBaseDuration;\n        child = child.sibling;\n      }\n\n      completedWork.treeBaseDuration = treeBaseDuration;\n    } else {\n      let child = completedWork.child;\n      while (child !== null) {\n        newChildLanes = mergeLanes(\n          newChildLanes,\n          mergeLanes(child.lanes, child.childLanes),\n        );\n\n        // \"Static\" flags share the lifetime of the fiber/hook they belong to,\n        // so we should bubble those up even during a bailout. All the other\n        // flags have a lifetime only of a single render + commit, so we should\n        // ignore them.\n        subtreeFlags |= child.subtreeFlags & StaticMask;\n        subtreeFlags |= child.flags & StaticMask;\n\n        // Update the return pointer so the tree is consistent. This is a code\n        // smell because it assumes the commit phase is never concurrent with\n        // the render phase. Will address during refactor to alternate model.\n        child.return = completedWork;\n\n        child = child.sibling;\n      }\n    }\n\n    completedWork.subtreeFlags |= subtreeFlags;\n  }\n\n  completedWork.childLanes = newChildLanes;\n\n  return didBailout;\n}\n\nexport function completeSuspendedOffscreenHostContainer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n) {\n  // This is a fork of the complete phase for HostComponent. We use it when\n  // a suspense tree is in its fallback state, because in that case the primary\n  // tree that includes the offscreen boundary is skipped over without a\n  // regular complete phase.\n  //\n  // We can optimize this path further by inlining the update logic for\n  // offscreen instances specifically, i.e. skipping the `prepareUpdate` call.\n  const rootContainerInstance = getRootHostContainer();\n  const type = workInProgress.type;\n  const newProps = workInProgress.memoizedProps;\n  if (current !== null) {\n    updateHostComponent(\n      current,\n      workInProgress,\n      type,\n      newProps,\n      rootContainerInstance,\n    );\n  } else {\n    const currentHostContext = getHostContext();\n    const instance = createInstance(\n      type,\n      newProps,\n      rootContainerInstance,\n      currentHostContext,\n      workInProgress,\n    );\n\n    appendAllChildren(instance, workInProgress, false, false);\n\n    workInProgress.stateNode = instance;\n\n    // Certain renderers require commit-time effects for initial mount.\n    // (eg DOM renderer supports auto-focus for certain elements).\n    // Make sure such renderers get scheduled for later work.\n    if (\n      finalizeInitialChildren(\n        instance,\n        type,\n        newProps,\n        rootContainerInstance,\n        currentHostContext,\n      )\n    ) {\n      markUpdate(workInProgress);\n    }\n\n    if (workInProgress.ref !== null) {\n      // If there is a ref on a host node we need to schedule a callback\n      markRef(workInProgress);\n    }\n  }\n  bubbleProperties(workInProgress);\n}\n\nfunction completeWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  const newProps = workInProgress.pendingProps;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent:\n    case LazyComponent:\n    case SimpleMemoComponent:\n    case FunctionComponent:\n    case ForwardRef:\n    case Fragment:\n    case Mode:\n    case Profiler:\n    case ContextConsumer:\n    case MemoComponent:\n      bubbleProperties(workInProgress);\n      return null;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostRoot: {\n      const fiberRoot = (workInProgress.stateNode: FiberRoot);\n      if (enableCache) {\n        popRootCachePool(fiberRoot, renderLanes);\n\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      if (fiberRoot.pendingContext) {\n        fiberRoot.context = fiberRoot.pendingContext;\n        fiberRoot.pendingContext = null;\n      }\n      if (current === null || current.child === null) {\n        // If we hydrated, pop so that we can delete any remaining children\n        // that weren't hydrated.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // If we hydrated, then we'll need to schedule an update for\n          // the commit side-effects on the root.\n          markUpdate(workInProgress);\n        } else if (!fiberRoot.hydrate) {\n          // Schedule an effect to clear this container at the start of the next commit.\n          // This handles the case of React rendering into a container with previous children.\n          // It's also safe to do for updates too, because current.child would only be null\n          // if the previous render was null (so the the container would already be empty).\n          workInProgress.flags |= Snapshot;\n        }\n      }\n      updateHostContainer(current, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostComponent: {\n      popHostContext(workInProgress);\n      const rootContainerInstance = getRootHostContainer();\n      const type = workInProgress.type;\n      if (current !== null && workInProgress.stateNode != null) {\n        updateHostComponent(\n          current,\n          workInProgress,\n          type,\n          newProps,\n          rootContainerInstance,\n        );\n\n        if (current.ref !== workInProgress.ref) {\n          markRef(workInProgress);\n        }\n      } else {\n        if (!newProps) {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n          bubbleProperties(workInProgress);\n          return null;\n        }\n\n        const currentHostContext = getHostContext();\n        // TODO: Move createInstance to beginWork and keep it on a context\n        // \"stack\" as the parent. Then append children as we go in beginWork\n        // or completeWork depending on whether we want to add them top->down or\n        // bottom->up. Top->down is faster in IE11.\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          // TODO: Move this and createInstance step into the beginPhase\n          // to consolidate.\n          if (\n            prepareToHydrateHostInstance(\n              workInProgress,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            // If changes to the hydrated node need to be applied at the\n            // commit-phase we mark this as such.\n            markUpdate(workInProgress);\n          }\n        } else {\n          const instance = createInstance(\n            type,\n            newProps,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n\n          appendAllChildren(instance, workInProgress, false, false);\n\n          workInProgress.stateNode = instance;\n\n          // Certain renderers require commit-time effects for initial mount.\n          // (eg DOM renderer supports auto-focus for certain elements).\n          // Make sure such renderers get scheduled for later work.\n          if (\n            finalizeInitialChildren(\n              instance,\n              type,\n              newProps,\n              rootContainerInstance,\n              currentHostContext,\n            )\n          ) {\n            markUpdate(workInProgress);\n          }\n        }\n\n        if (workInProgress.ref !== null) {\n          // If there is a ref on a host node we need to schedule a callback\n          markRef(workInProgress);\n        }\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case HostText: {\n      const newText = newProps;\n      if (current && workInProgress.stateNode != null) {\n        const oldText = current.memoizedProps;\n        // If we have an alternate, that means this is an update and we need\n        // to schedule a side-effect to do the updates.\n        updateHostText(current, workInProgress, oldText, newText);\n      } else {\n        if (typeof newText !== 'string') {\n          invariant(\n            workInProgress.stateNode !== null,\n            'We must have new props for new mounts. This error is likely ' +\n              'caused by a bug in React. Please file an issue.',\n          );\n          // This can happen when we abort work.\n        }\n        const rootContainerInstance = getRootHostContainer();\n        const currentHostContext = getHostContext();\n        const wasHydrated = popHydrationState(workInProgress);\n        if (wasHydrated) {\n          if (prepareToHydrateHostTextInstance(workInProgress)) {\n            markUpdate(workInProgress);\n          }\n        } else {\n          workInProgress.stateNode = createTextInstance(\n            newText,\n            rootContainerInstance,\n            currentHostContext,\n            workInProgress,\n          );\n        }\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      const nextState: null | SuspenseState = workInProgress.memoizedState;\n\n      if (enableSuspenseServerRenderer) {\n        if (nextState !== null && nextState.dehydrated !== null) {\n          if (current === null) {\n            const wasHydrated = popHydrationState(workInProgress);\n            invariant(\n              wasHydrated,\n              'A dehydrated suspense component was completed without a hydrated node. ' +\n                'This is probably a bug in React.',\n            );\n            prepareToHydrateHostSuspenseInstance(workInProgress);\n            bubbleProperties(workInProgress);\n            if (enableProfilerTimer) {\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                const isTimedOutSuspense = nextState !== null;\n                if (isTimedOutSuspense) {\n                  // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n                  const primaryChildFragment = workInProgress.child;\n                  if (primaryChildFragment !== null) {\n                    // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n                    workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n                  }\n                }\n              }\n            }\n            return null;\n          } else {\n            // We should never have been in a hydration state if we didn't have a current.\n            // However, in some of those paths, we might have reentered a hydration state\n            // and then we might be inside a hydration state. In that case, we'll need to exit out of it.\n            resetHydrationState();\n            if ((workInProgress.flags & DidCapture) === NoFlags) {\n              // This boundary did not suspend so it's now hydrated and unsuspended.\n              workInProgress.memoizedState = null;\n            }\n            // If nothing suspended, we need to schedule an effect to mark this boundary\n            // as having hydrated so events know that they're free to be invoked.\n            // It's also a signal to replay events and the suspense callback.\n            // If something suspended, schedule an effect to attach retry listeners.\n            // So we might as well always mark this.\n            workInProgress.flags |= Update;\n            bubbleProperties(workInProgress);\n            if (enableProfilerTimer) {\n              if ((workInProgress.mode & ProfileMode) !== NoMode) {\n                const isTimedOutSuspense = nextState !== null;\n                if (isTimedOutSuspense) {\n                  // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n                  const primaryChildFragment = workInProgress.child;\n                  if (primaryChildFragment !== null) {\n                    // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n                    workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n                  }\n                }\n              }\n            }\n            return null;\n          }\n        }\n      }\n\n      if ((workInProgress.flags & DidCapture) !== NoFlags) {\n        // Something suspended. Re-render with the fallback children.\n        workInProgress.lanes = renderLanes;\n        // Do not reset the effect list.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        // Don't bubble properties in this case.\n        return workInProgress;\n      }\n\n      const nextDidTimeout = nextState !== null;\n      let prevDidTimeout = false;\n      if (current === null) {\n        popHydrationState(workInProgress);\n      } else {\n        const prevState: null | SuspenseState = current.memoizedState;\n        prevDidTimeout = prevState !== null;\n      }\n\n      // If the suspended state of the boundary changes, we need to schedule\n      // an effect to toggle the subtree's visibility. When we switch from\n      // fallback -> primary, the inner Offscreen fiber schedules this effect\n      // as part of its normal complete phase. But when we switch from\n      // primary -> fallback, the inner Offscreen fiber does not have a complete\n      // phase. So we need to schedule its effect here.\n      //\n      // We also use this flag to connect/disconnect the effects, but the same\n      // logic applies: when re-connecting, the Offscreen fiber's complete\n      // phase will handle scheduling the effect. It's only when the fallback\n      // is active that we have to do anything special.\n      if (nextDidTimeout && !prevDidTimeout) {\n        const offscreenFiber: Fiber = (workInProgress.child: any);\n        offscreenFiber.flags |= Visibility;\n\n        // TODO: This will still suspend a synchronous tree if anything\n        // in the concurrent tree already suspended during this render.\n        // This is a known bug.\n        if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n          // TODO: Move this back to throwException because this is too late\n          // if this is a large tree which is common for initial loads. We\n          // don't know if we should restart a render or not until we get\n          // this marker, and this is too late.\n          // If this render already had a ping or lower pri updates,\n          // and this is the first time we know we're going to suspend we\n          // should be able to immediately restart from within throwException.\n          const hasInvisibleChildContext =\n            current === null &&\n            workInProgress.memoizedProps.unstable_avoidThisFallback !== true;\n          if (\n            hasInvisibleChildContext ||\n            hasSuspenseContext(\n              suspenseStackCursor.current,\n              (InvisibleParentSuspenseContext: SuspenseContext),\n            )\n          ) {\n            // If this was in an invisible tree or a new render, then showing\n            // this boundary is ok.\n            renderDidSuspend();\n          } else {\n            // Otherwise, we're going to have to hide content so we should\n            // suspend for longer if possible.\n            renderDidSuspendDelayIfPossible();\n          }\n        }\n      }\n\n      const wakeables: Set<Wakeable> | null = (workInProgress.updateQueue: any);\n      if (wakeables !== null) {\n        // Schedule an effect to attach a retry listener to the promise.\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n\n      if (\n        enableSuspenseCallback &&\n        workInProgress.updateQueue !== null &&\n        workInProgress.memoizedProps.suspenseCallback != null\n      ) {\n        // Always notify the callback\n        // TODO: Move to passive phase\n        workInProgress.flags |= Update;\n      }\n      bubbleProperties(workInProgress);\n      if (enableProfilerTimer) {\n        if ((workInProgress.mode & ProfileMode) !== NoMode) {\n          if (nextDidTimeout) {\n            // Don't count time spent in a timed out Suspense subtree as part of the base duration.\n            const primaryChildFragment = workInProgress.child;\n            if (primaryChildFragment !== null) {\n              // $FlowFixMe Flow doesn't support type casting in combination with the -= operator\n              workInProgress.treeBaseDuration -= ((primaryChildFragment.treeBaseDuration: any): number);\n            }\n          }\n        }\n      }\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      updateHostContainer(current, workInProgress);\n      if (current === null) {\n        preparePortalMount(workInProgress.stateNode.containerInfo);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    case ContextProvider:\n      // Pop provider fiber\n      const context: ReactContext<any> = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      bubbleProperties(workInProgress);\n      return null;\n    case IncompleteClassComponent: {\n      // Same as class component case. I put it down here so that the tags are\n      // sequential to ensure this switch is compiled to a jump table.\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n\n      const renderState: null | SuspenseListRenderState =\n        workInProgress.memoizedState;\n\n      if (renderState === null) {\n        // We're running in the default, \"independent\" mode.\n        // We don't do anything in this mode.\n        bubbleProperties(workInProgress);\n        return null;\n      }\n\n      let didSuspendAlready = (workInProgress.flags & DidCapture) !== NoFlags;\n\n      const renderedTail = renderState.rendering;\n      if (renderedTail === null) {\n        // We just rendered the head.\n        if (!didSuspendAlready) {\n          // This is the first pass. We need to figure out if anything is still\n          // suspended in the rendered set.\n\n          // If new content unsuspended, but there's still some content that\n          // didn't. Then we need to do a second pass that forces everything\n          // to keep showing their fallbacks.\n\n          // We might be suspended if something in this render pass suspended, or\n          // something in the previous committed pass suspended. Otherwise,\n          // there's no chance so we can skip the expensive call to\n          // findFirstSuspended.\n          const cannotBeSuspended =\n            renderHasNotSuspendedYet() &&\n            (current === null || (current.flags & DidCapture) === NoFlags);\n          if (!cannotBeSuspended) {\n            let row = workInProgress.child;\n            while (row !== null) {\n              const suspended = findFirstSuspended(row);\n              if (suspended !== null) {\n                didSuspendAlready = true;\n                workInProgress.flags |= DidCapture;\n                cutOffTailIfNeeded(renderState, false);\n\n                // If this is a newly suspended tree, it might not get committed as\n                // part of the second pass. In that case nothing will subscribe to\n                // its thenables. Instead, we'll transfer its thenables to the\n                // SuspenseList so that it can retry if they resolve.\n                // There might be multiple of these in the list but since we're\n                // going to wait for all of them anyway, it doesn't really matter\n                // which ones gets to ping. In theory we could get clever and keep\n                // track of how many dependencies remain but it gets tricky because\n                // in the meantime, we can add/remove/change items and dependencies.\n                // We might bail out of the loop before finding any but that\n                // doesn't matter since that means that the other boundaries that\n                // we did find already has their listeners attached.\n                const newThenables = suspended.updateQueue;\n                if (newThenables !== null) {\n                  workInProgress.updateQueue = newThenables;\n                  workInProgress.flags |= Update;\n                }\n\n                // Rerender the whole list, but this time, we'll force fallbacks\n                // to stay in place.\n                // Reset the effect flags before doing the second pass since that's now invalid.\n                // Reset the child fibers to their original state.\n                workInProgress.subtreeFlags = NoFlags;\n                resetChildFibers(workInProgress, renderLanes);\n\n                // Set up the Suspense Context to force suspense and immediately\n                // rerender the children.\n                pushSuspenseContext(\n                  workInProgress,\n                  setShallowSuspenseContext(\n                    suspenseStackCursor.current,\n                    ForceSuspenseFallback,\n                  ),\n                );\n                // Don't bubble properties in this case.\n                return workInProgress.child;\n              }\n              row = row.sibling;\n            }\n          }\n\n          if (renderState.tail !== null && now() > getRenderTargetTime()) {\n            // We have already passed our CPU deadline but we still have rows\n            // left in the tail. We'll just give up further attempts to render\n            // the main content and only render fallbacks.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n          }\n        } else {\n          cutOffTailIfNeeded(renderState, false);\n        }\n        // Next we're going to render the tail.\n      } else {\n        // Append the rendered row to the child list.\n        if (!didSuspendAlready) {\n          const suspended = findFirstSuspended(renderedTail);\n          if (suspended !== null) {\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            // Ensure we transfer the update queue to the parent so that it doesn't\n            // get lost if this row ends up dropped during a second pass.\n            const newThenables = suspended.updateQueue;\n            if (newThenables !== null) {\n              workInProgress.updateQueue = newThenables;\n              workInProgress.flags |= Update;\n            }\n\n            cutOffTailIfNeeded(renderState, true);\n            // This might have been modified.\n            if (\n              renderState.tail === null &&\n              renderState.tailMode === 'hidden' &&\n              !renderedTail.alternate &&\n              !getIsHydrating() // We don't cut it if we're hydrating.\n            ) {\n              // We're done.\n              bubbleProperties(workInProgress);\n              return null;\n            }\n          } else if (\n            // The time it took to render last row is greater than the remaining\n            // time we have to render. So rendering one more row would likely\n            // exceed it.\n            now() * 2 - renderState.renderingStartTime >\n              getRenderTargetTime() &&\n            renderLanes !== OffscreenLane\n          ) {\n            // We have now passed our CPU deadline and we'll just give up further\n            // attempts to render the main content and only render fallbacks.\n            // The assumption is that this is usually faster.\n            workInProgress.flags |= DidCapture;\n            didSuspendAlready = true;\n\n            cutOffTailIfNeeded(renderState, false);\n\n            // Since nothing actually suspended, there will nothing to ping this\n            // to get it started back up to attempt the next item. While in terms\n            // of priority this work has the same priority as this current render,\n            // it's not part of the same transition once the transition has\n            // committed. If it's sync, we still want to yield so that it can be\n            // painted. Conceptually, this is really the same as pinging.\n            // We can use any RetryLane even if it's the one currently rendering\n            // since we're leaving it behind on this node.\n            workInProgress.lanes = SomeRetryLane;\n          }\n        }\n        if (renderState.isBackwards) {\n          // The effect list of the backwards tail will have been added\n          // to the end. This breaks the guarantee that life-cycles fire in\n          // sibling order but that isn't a strong guarantee promised by React.\n          // Especially since these might also just pop in during future commits.\n          // Append to the beginning of the list.\n          renderedTail.sibling = workInProgress.child;\n          workInProgress.child = renderedTail;\n        } else {\n          const previousSibling = renderState.last;\n          if (previousSibling !== null) {\n            previousSibling.sibling = renderedTail;\n          } else {\n            workInProgress.child = renderedTail;\n          }\n          renderState.last = renderedTail;\n        }\n      }\n\n      if (renderState.tail !== null) {\n        // We still have tail rows to render.\n        // Pop a row.\n        const next = renderState.tail;\n        renderState.rendering = next;\n        renderState.tail = next.sibling;\n        renderState.renderingStartTime = now();\n        next.sibling = null;\n\n        // Restore the context.\n        // TODO: We can probably just avoid popping it instead and only\n        // setting it the first time we go from not suspended to suspended.\n        let suspenseContext = suspenseStackCursor.current;\n        if (didSuspendAlready) {\n          suspenseContext = setShallowSuspenseContext(\n            suspenseContext,\n            ForceSuspenseFallback,\n          );\n        } else {\n          suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n        }\n        pushSuspenseContext(workInProgress, suspenseContext);\n        // Do a pass over the next row.\n        // Don't bubble properties in this case.\n        return next;\n      }\n      bubbleProperties(workInProgress);\n      return null;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        if (current === null) {\n          const scopeInstance: ReactScopeInstance = createScopeInstance();\n          workInProgress.stateNode = scopeInstance;\n          prepareScopeUpdate(scopeInstance, workInProgress);\n          if (workInProgress.ref !== null) {\n            markRef(workInProgress);\n            markUpdate(workInProgress);\n          }\n        } else {\n          if (workInProgress.ref !== null) {\n            markUpdate(workInProgress);\n          }\n          if (current.ref !== workInProgress.ref) {\n            markRef(workInProgress);\n          }\n        }\n        bubbleProperties(workInProgress);\n        return null;\n      }\n      break;\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      popRenderLanes(workInProgress);\n      const nextState: OffscreenState | null = workInProgress.memoizedState;\n      const nextIsHidden = nextState !== null;\n\n      if (current !== null) {\n        const prevState: OffscreenState | null = current.memoizedState;\n        const prevIsHidden = prevState !== null;\n        if (\n          prevIsHidden !== nextIsHidden &&\n          newProps.mode !== 'unstable-defer-without-hiding' &&\n          // LegacyHidden doesn't do any hiding — it only pre-renders.\n          workInProgress.tag !== LegacyHiddenComponent\n        ) {\n          workInProgress.flags |= Visibility;\n        }\n      }\n\n      if (!nextIsHidden || (workInProgress.mode & ConcurrentMode) === NoMode) {\n        bubbleProperties(workInProgress);\n      } else {\n        // Don't bubble properties for hidden children unless we're rendering\n        // at offscreen priority.\n        if (includesSomeLane(subtreeRenderLanes, (OffscreenLane: Lane))) {\n          bubbleProperties(workInProgress);\n          if (supportsMutation) {\n            // Check if there was an insertion or update in the hidden subtree.\n            // If so, we need to hide those nodes in the commit phase, so\n            // schedule a visibility effect.\n            if (\n              workInProgress.tag !== LegacyHiddenComponent &&\n              workInProgress.subtreeFlags & (Placement | Update) &&\n              newProps.mode !== 'unstable-defer-without-hiding'\n            ) {\n              workInProgress.flags |= Visibility;\n            }\n          }\n        }\n      }\n\n      if (enableCache) {\n        const spawnedCachePool: SpawnedCachePool | null = (workInProgress.updateQueue: any);\n        if (spawnedCachePool !== null) {\n          popCachePool(workInProgress);\n        }\n      }\n\n      return null;\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n        bubbleProperties(workInProgress);\n        return null;\n      }\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {completeWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactProviderType, ReactContext} from 'shared/ReactTypes';\nimport type {LazyComponent as LazyComponentType} from 'react/src/ReactLazy';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {MutableSource} from 'shared/ReactTypes';\nimport type {\n  SuspenseState,\n  SuspenseListRenderState,\n  SuspenseListTailMode,\n} from './ReactFiberSuspenseComponent.old';\nimport type {SuspenseContext} from './ReactFiberSuspenseContext.old';\nimport type {\n  OffscreenProps,\n  OffscreenState,\n} from './ReactFiberOffscreenComponent';\nimport type {\n  Cache,\n  CacheComponentState,\n  SpawnedCachePool,\n} from './ReactFiberCacheComponent.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\n\nimport checkPropTypes from 'shared/checkPropTypes';\nimport {\n  markComponentRenderStarted,\n  markComponentRenderStopped,\n} from './SchedulingProfiler';\nimport {\n  IndeterminateComponent,\n  FunctionComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  IncompleteClassComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport {\n  NoFlags,\n  PerformedWork,\n  Placement,\n  Hydrating,\n  ContentReset,\n  DidCapture,\n  Update,\n  Ref,\n  RefStatic,\n  ChildDeletion,\n  ForceUpdateForLegacySuspense,\n  StaticMask,\n  ShouldCapture,\n} from './ReactFiberFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {\n  debugRenderPhaseSideEffectsForStrictMode,\n  disableLegacyContext,\n  disableModulePatternComponents,\n  enableProfilerCommitHooks,\n  enableProfilerTimer,\n  enableSuspenseServerRenderer,\n  warnAboutDefaultPropsOnFunctionComponents,\n  enableScopeAPI,\n  enableCache,\n  enableLazyContextPropagation,\n  enableSuspenseLayoutEffectSemantics,\n  enableSchedulingProfiler,\n  enablePersistentOffscreenHostContainer,\n} from 'shared/ReactFeatureFlags';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\nimport shallowEqual from 'shared/shallowEqual';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {REACT_LAZY_TYPE, getIteratorFn} from 'shared/ReactSymbols';\nimport {\n  getCurrentFiberOwnerNameInDevOrNull,\n  setIsRendering,\n} from './ReactCurrentFiber';\nimport {\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n  resolveClassForHotReloading,\n} from './ReactFiberHotReloading.old';\n\nimport {\n  mountChildFibers,\n  reconcileChildFibers,\n  cloneChildFibers,\n} from './ReactChildFiber.old';\nimport {\n  processUpdateQueue,\n  cloneUpdateQueue,\n  initializeUpdateQueue,\n  enqueueCapturedUpdate,\n} from './ReactUpdateQueue.old';\nimport {\n  NoLane,\n  NoLanes,\n  SyncLane,\n  OffscreenLane,\n  DefaultHydrationLane,\n  SomeRetryLane,\n  NoTimestamp,\n  includesSomeLane,\n  laneToLanes,\n  removeLanes,\n  mergeLanes,\n  getBumpedLaneForHydration,\n  pickArbitraryLane,\n} from './ReactFiberLane.old';\nimport {\n  ConcurrentMode,\n  NoMode,\n  ProfileMode,\n  StrictLegacyMode,\n} from './ReactTypeOfMode';\nimport {\n  shouldSetTextContent,\n  isSuspenseInstancePending,\n  isSuspenseInstanceFallback,\n  registerSuspenseInstanceRetry,\n  supportsHydration,\n  isPrimaryRenderer,\n  supportsPersistence,\n  getOffscreenContainerProps,\n} from './ReactFiberHostConfig';\nimport type {SuspenseInstance} from './ReactFiberHostConfig';\nimport {\n  shouldError,\n  shouldSuspend,\n  setIsStrictModeForDevtools,\n} from './ReactFiberReconciler';\nimport {pushHostContext, pushHostContainer} from './ReactFiberHostContext.old';\nimport {\n  suspenseStackCursor,\n  pushSuspenseContext,\n  InvisibleParentSuspenseContext,\n  ForceSuspenseFallback,\n  hasSuspenseContext,\n  setDefaultShallowSuspenseContext,\n  addSubtreeSuspenseContext,\n  setShallowSuspenseContext,\n} from './ReactFiberSuspenseContext.old';\nimport {findFirstSuspended} from './ReactFiberSuspenseComponent.old';\nimport {\n  pushProvider,\n  propagateContextChange,\n  lazilyPropagateParentContextChanges,\n  propagateParentContextChangesToDeferredTree,\n  checkIfContextChanged,\n  readContext,\n  prepareToReadContext,\n  scheduleWorkOnParentPath,\n} from './ReactFiberNewContext.old';\nimport {renderWithHooks, bailoutHooks} from './ReactFiberHooks.old';\nimport {stopProfilerTimerIfRunning} from './ReactProfilerTimer.old';\nimport {\n  getMaskedContext,\n  getUnmaskedContext,\n  hasContextChanged as hasLegacyContextChanged,\n  pushContextProvider as pushLegacyContextProvider,\n  isContextProvider as isLegacyContextProvider,\n  pushTopLevelContextObject,\n  invalidateContextProvider,\n} from './ReactFiberContext.old';\nimport {\n  enterHydrationState,\n  reenterHydrationStateFromDehydratedSuspenseInstance,\n  resetHydrationState,\n  tryToClaimNextHydratableInstance,\n  warnIfHydrating,\n} from './ReactFiberHydrationContext.old';\nimport {\n  adoptClassInstance,\n  constructClassInstance,\n  mountClassInstance,\n  resumeMountClassInstance,\n  updateClassInstance,\n} from './ReactFiberClassComponent.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  resolveLazyComponentTag,\n  createFiberFromTypeAndProps,\n  createFiberFromFragment,\n  createFiberFromOffscreen,\n  createWorkInProgress,\n  createOffscreenHostContainerFiber,\n  isSimpleFunctionComponent,\n} from './ReactFiber.old';\nimport {\n  retryDehydratedSuspenseBoundary,\n  scheduleUpdateOnFiber,\n  renderDidSuspendDelayIfPossible,\n  markSkippedUpdateLanes,\n  getWorkInProgressRoot,\n  pushRenderLanes,\n  getExecutionContext,\n  RetryAfterError,\n  NoContext,\n} from './ReactFiberWorkLoop.old';\nimport {setWorkInProgressVersion} from './ReactMutableSource.old';\nimport {\n  requestCacheFromPool,\n  pushCacheProvider,\n  pushRootCachePool,\n  CacheContext,\n  getSuspendedCachePool,\n  restoreSpawnedCachePool,\n  getOffscreenDeferredCachePool,\n} from './ReactFiberCacheComponent.old';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {createClassErrorUpdate} from './ReactFiberThrow.old';\nimport {completeSuspendedOffscreenHostContainer} from './ReactFiberCompleteWork.old';\nimport is from 'shared/objectIs';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nlet didReceiveUpdate: boolean = false;\n\nlet didWarnAboutBadClass;\nlet didWarnAboutModulePatternComponent;\nlet didWarnAboutContextTypeOnFunctionComponent;\nlet didWarnAboutGetDerivedStateOnFunctionComponent;\nlet didWarnAboutFunctionRefs;\nexport let didWarnAboutReassigningProps;\nlet didWarnAboutRevealOrder;\nlet didWarnAboutTailOptions;\nlet didWarnAboutDefaultPropsOnFunctionComponent;\n\nif (__DEV__) {\n  didWarnAboutBadClass = {};\n  didWarnAboutModulePatternComponent = {};\n  didWarnAboutContextTypeOnFunctionComponent = {};\n  didWarnAboutGetDerivedStateOnFunctionComponent = {};\n  didWarnAboutFunctionRefs = {};\n  didWarnAboutReassigningProps = false;\n  didWarnAboutRevealOrder = {};\n  didWarnAboutTailOptions = {};\n  didWarnAboutDefaultPropsOnFunctionComponent = {};\n}\n\nexport function reconcileChildren(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  if (current === null) {\n    // If this is a fresh new component that hasn't been rendered yet, we\n    // won't update its child set by applying minimal side-effects. Instead,\n    // we will add them all to the child before it gets rendered. That means\n    // we can optimize this reconciliation pass by not tracking side-effects.\n    workInProgress.child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    // If the current child is the same as the work in progress, it means that\n    // we haven't yet started any work on these children. Therefore, we use\n    // the clone algorithm to create a copy of all the current children.\n\n    // If we had any progressed work already, that is invalid at this point so\n    // let's throw it out.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      current.child,\n      nextChildren,\n      renderLanes,\n    );\n  }\n}\n\nfunction forceUnmountCurrentAndReconcile(\n  current: Fiber,\n  workInProgress: Fiber,\n  nextChildren: any,\n  renderLanes: Lanes,\n) {\n  // This function is fork of reconcileChildren. It's used in cases where we\n  // want to reconcile without matching against the existing set. This has the\n  // effect of all current children being unmounted; even if the type and key\n  // are the same, the old child is unmounted and a new child is created.\n  //\n  // To do this, we're going to go through the reconcile algorithm twice. In\n  // the first pass, we schedule a deletion for all the current children by\n  // passing null.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    current.child,\n    null,\n    renderLanes,\n  );\n  // In the second pass, we mount the new children. The trick here is that we\n  // pass null in place of where we usually pass the current child set. This has\n  // the effect of remounting all children regardless of whether their\n  // identities match.\n  workInProgress.child = reconcileChildFibers(\n    workInProgress,\n    null,\n    nextChildren,\n    renderLanes,\n  );\n}\n\nfunction updateForwardRef(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens after the first render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  const render = Component.render;\n  const ref = workInProgress.ref;\n\n  // The rest is a fork of updateFunctionComponent\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          render,\n          nextProps,\n          ref,\n          renderLanes,\n        );\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      render,\n      nextProps,\n      ref,\n      renderLanes,\n    );\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n): null | Fiber {\n  if (current === null) {\n    const type = Component.type;\n    if (\n      isSimpleFunctionComponent(type) &&\n      Component.compare === null &&\n      // SimpleMemoComponent codepath doesn't resolve outer props either.\n      Component.defaultProps === undefined\n    ) {\n      let resolvedType = type;\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(type);\n      }\n      // If this is a plain function component without default props,\n      // and with only the default shallow comparison, we upgrade it\n      // to a SimpleMemoComponent to allow fast path updates.\n      workInProgress.tag = SimpleMemoComponent;\n      workInProgress.type = resolvedType;\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, type);\n      }\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        resolvedType,\n        nextProps,\n        renderLanes,\n      );\n    }\n    if (__DEV__) {\n      const innerPropTypes = type.propTypes;\n      if (innerPropTypes) {\n        // Inner memo component props aren't currently validated in createElement.\n        // We could move it there, but we'd still need this for lazy code path.\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(type),\n        );\n      }\n    }\n    const child = createFiberFromTypeAndProps(\n      Component.type,\n      null,\n      nextProps,\n      workInProgress,\n      workInProgress.mode,\n      renderLanes,\n    );\n    child.ref = workInProgress.ref;\n    child.return = workInProgress;\n    workInProgress.child = child;\n    return child;\n  }\n  if (__DEV__) {\n    const type = Component.type;\n    const innerPropTypes = type.propTypes;\n    if (innerPropTypes) {\n      // Inner memo component props aren't currently validated in createElement.\n      // We could move it there, but we'd still need this for lazy code path.\n      checkPropTypes(\n        innerPropTypes,\n        nextProps, // Resolved props\n        'prop',\n        getComponentNameFromType(type),\n      );\n    }\n  }\n  const currentChild = ((current.child: any): Fiber); // This is always exactly one child\n  const hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n    current,\n    renderLanes,\n  );\n  if (!hasScheduledUpdateOrContext) {\n    // This will be the props with resolved defaultProps,\n    // unlike current.memoizedProps which will be the unresolved ones.\n    const prevProps = currentChild.memoizedProps;\n    // Default to shallow comparison\n    let compare = Component.compare;\n    compare = compare !== null ? compare : shallowEqual;\n    if (compare(prevProps, nextProps) && current.ref === workInProgress.ref) {\n      return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n    }\n  }\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  const newChild = createWorkInProgress(currentChild, nextProps);\n  newChild.ref = workInProgress.ref;\n  newChild.return = workInProgress;\n  workInProgress.child = newChild;\n  return newChild;\n}\n\nfunction updateSimpleMemoComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n): null | Fiber {\n  // TODO: current can be non-null here even if the component\n  // hasn't yet mounted. This happens when the inner render suspends.\n  // We'll need to figure out if this is fine or can cause issues.\n\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      let outerMemoType = workInProgress.elementType;\n      if (outerMemoType.$$typeof === REACT_LAZY_TYPE) {\n        // We warn when you define propTypes on lazy()\n        // so let's just skip over it to find memo() outer wrapper.\n        // Inner props for memo are validated later.\n        const lazyComponent: LazyComponentType<any, any> = outerMemoType;\n        const payload = lazyComponent._payload;\n        const init = lazyComponent._init;\n        try {\n          outerMemoType = init(payload);\n        } catch (x) {\n          outerMemoType = null;\n        }\n        // Inner propTypes will be validated in the function component path.\n        const outerPropTypes = outerMemoType && (outerMemoType: any).propTypes;\n        if (outerPropTypes) {\n          checkPropTypes(\n            outerPropTypes,\n            nextProps, // Resolved (SimpleMemoComponent has no defaultProps)\n            'prop',\n            getComponentNameFromType(outerMemoType),\n          );\n        }\n      }\n    }\n  }\n  if (current !== null) {\n    const prevProps = current.memoizedProps;\n    if (\n      shallowEqual(prevProps, nextProps) &&\n      current.ref === workInProgress.ref &&\n      // Prevent bailout if the implementation changed due to hot reload.\n      (__DEV__ ? workInProgress.type === current.type : true)\n    ) {\n      didReceiveUpdate = false;\n      if (!checkScheduledUpdateOrContext(current, renderLanes)) {\n        // The pending lanes were cleared at the beginning of beginWork. We're\n        // about to bail out, but there might be other lanes that weren't\n        // included in the current render. Usually, the priority level of the\n        // remaining updates is accumulated during the evaluation of the\n        // component (i.e. when processing the update queue). But since since\n        // we're bailing out early *without* evaluating the component, we need\n        // to account for it here, too. Reset to the value of the current fiber.\n        // NOTE: This only applies to SimpleMemoComponent, not MemoComponent,\n        // because a MemoComponent fiber does not have hooks or an update queue;\n        // rather, it wraps around an inner component, which may or may not\n        // contains hooks.\n        // TODO: Move the reset at in beginWork out of the common path so that\n        // this is no longer necessary.\n        workInProgress.lanes = current.lanes;\n        return bailoutOnAlreadyFinishedWork(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      } else if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      }\n    }\n  }\n  return updateFunctionComponent(\n    current,\n    workInProgress,\n    Component,\n    nextProps,\n    renderLanes,\n  );\n}\n\nfunction updateOffscreenComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps: OffscreenProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  const prevState: OffscreenState | null =\n    current !== null ? current.memoizedState : null;\n\n  // If this is not null, this is a cache pool that was carried over from the\n  // previous render. We will push this to the cache pool context so that we can\n  // resume in-flight requests.\n  let spawnedCachePool: SpawnedCachePool | null = null;\n\n  if (\n    nextProps.mode === 'hidden' ||\n    nextProps.mode === 'unstable-defer-without-hiding'\n  ) {\n    // Rendering a hidden tree.\n    if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n      // In legacy sync mode, don't defer the subtree. Render it now.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n      };\n      workInProgress.memoizedState = nextState;\n      pushRenderLanes(workInProgress, renderLanes);\n    } else if (!includesSomeLane(renderLanes, (OffscreenLane: Lane))) {\n      // We're hidden, and we're not rendering at Offscreen. We will bail out\n      // and resume this tree later.\n      let nextBaseLanes;\n      if (prevState !== null) {\n        const prevBaseLanes = prevState.baseLanes;\n        nextBaseLanes = mergeLanes(prevBaseLanes, renderLanes);\n        if (enableCache) {\n          // Save the cache pool so we can resume later.\n          spawnedCachePool = getOffscreenDeferredCachePool();\n          // We don't need to push to the cache pool because we're about to\n          // bail out. There won't be a context mismatch because we only pop\n          // the cache pool if `updateQueue` is non-null.\n        }\n      } else {\n        nextBaseLanes = renderLanes;\n      }\n\n      // Schedule this fiber to re-render at offscreen priority. Then bailout.\n      workInProgress.lanes = workInProgress.childLanes = laneToLanes(\n        OffscreenLane,\n      );\n      const nextState: OffscreenState = {\n        baseLanes: nextBaseLanes,\n        cachePool: spawnedCachePool,\n      };\n      workInProgress.memoizedState = nextState;\n      workInProgress.updateQueue = null;\n      // We're about to bail out, but we need to push this to the stack anyway\n      // to avoid a push/pop misalignment.\n      pushRenderLanes(workInProgress, nextBaseLanes);\n\n      if (enableLazyContextPropagation && current !== null) {\n        // Since this tree will resume rendering in a separate render, we need\n        // to propagate parent contexts now so we don't lose track of which\n        // ones changed.\n        propagateParentContextChangesToDeferredTree(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n\n      return null;\n    } else {\n      // This is the second render. The surrounding visible content has already\n      // committed. Now we resume rendering the hidden tree.\n\n      if (enableCache && prevState !== null) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        const prevCachePool = prevState.cachePool;\n        if (prevCachePool !== null) {\n          spawnedCachePool = restoreSpawnedCachePool(\n            workInProgress,\n            prevCachePool,\n          );\n        }\n      }\n\n      // Rendering at offscreen, so we can clear the base lanes.\n      const nextState: OffscreenState = {\n        baseLanes: NoLanes,\n        cachePool: null,\n      };\n      workInProgress.memoizedState = nextState;\n      // Push the lanes that were skipped when we bailed out.\n      const subtreeRenderLanes =\n        prevState !== null ? prevState.baseLanes : renderLanes;\n      pushRenderLanes(workInProgress, subtreeRenderLanes);\n    }\n  } else {\n    // Rendering a visible tree.\n    let subtreeRenderLanes;\n    if (prevState !== null) {\n      // We're going from hidden -> visible.\n\n      subtreeRenderLanes = mergeLanes(prevState.baseLanes, renderLanes);\n\n      if (enableCache) {\n        // If the render that spawned this one accessed the cache pool, resume\n        // using the same cache. Unless the parent changed, since that means\n        // there was a refresh.\n        const prevCachePool = prevState.cachePool;\n        if (prevCachePool !== null) {\n          spawnedCachePool = restoreSpawnedCachePool(\n            workInProgress,\n            prevCachePool,\n          );\n        }\n      }\n\n      // Since we're not hidden anymore, reset the state\n      workInProgress.memoizedState = null;\n    } else {\n      // We weren't previously hidden, and we still aren't, so there's nothing\n      // special to do. Need to push to the stack regardless, though, to avoid\n      // a push/pop misalignment.\n      subtreeRenderLanes = renderLanes;\n    }\n    pushRenderLanes(workInProgress, subtreeRenderLanes);\n  }\n\n  if (enableCache) {\n    // If we have a cache pool from a previous render attempt, then this will be\n    // non-null. We use this to infer whether to push/pop the cache context.\n    workInProgress.updateQueue = spawnedCachePool;\n  }\n\n  if (enablePersistentOffscreenHostContainer && supportsPersistence) {\n    // In persistent mode, the offscreen children are wrapped in a host node.\n    // TODO: Optimize this to use the OffscreenComponent fiber instead of\n    // an extra HostComponent fiber. Need to make sure this doesn't break Fabric\n    // or some other infra that expects a HostComponent.\n    const isHidden =\n      nextProps.mode === 'hidden' &&\n      workInProgress.tag !== LegacyHiddenComponent;\n    const offscreenContainer = reconcileOffscreenHostContainer(\n      current,\n      workInProgress,\n      isHidden,\n      nextChildren,\n      renderLanes,\n    );\n    return offscreenContainer;\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    return workInProgress.child;\n  }\n}\n\nfunction reconcileOffscreenHostContainer(\n  currentOffscreen: Fiber | null,\n  offscreen: Fiber,\n  isHidden: boolean,\n  children: any,\n  renderLanes: Lanes,\n) {\n  const containerProps = getOffscreenContainerProps(\n    isHidden ? 'hidden' : 'visible',\n    children,\n  );\n  let hostContainer;\n  if (currentOffscreen === null) {\n    hostContainer = createOffscreenHostContainerFiber(\n      containerProps,\n      offscreen.mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    const currentHostContainer = currentOffscreen.child;\n    if (currentHostContainer === null) {\n      hostContainer = createOffscreenHostContainerFiber(\n        containerProps,\n        offscreen.mode,\n        renderLanes,\n        null,\n      );\n      hostContainer.flags |= Placement;\n    } else {\n      hostContainer = createWorkInProgress(\n        currentHostContainer,\n        containerProps,\n      );\n    }\n  }\n  hostContainer.return = offscreen;\n  offscreen.child = hostContainer;\n  return hostContainer;\n}\n\n// Note: These happen to have identical begin phases, for now. We shouldn't hold\n// ourselves to this constraint, though. If the behavior diverges, we should\n// fork the function.\nconst updateLegacyHiddenComponent = updateOffscreenComponent;\n\nfunction updateCacheComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (!enableCache) {\n    return null;\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const parentCache = readContext(CacheContext);\n\n  if (current === null) {\n    // Initial mount. Request a fresh cache from the pool.\n    const freshCache = requestCacheFromPool(renderLanes);\n    const initialState: CacheComponentState = {\n      parent: parentCache,\n      cache: freshCache,\n    };\n    workInProgress.memoizedState = initialState;\n    initializeUpdateQueue(workInProgress);\n    pushCacheProvider(workInProgress, freshCache);\n  } else {\n    // Check for updates\n    if (includesSomeLane(current.lanes, renderLanes)) {\n      cloneUpdateQueue(current, workInProgress);\n      processUpdateQueue(workInProgress, null, null, renderLanes);\n    }\n    const prevState: CacheComponentState = current.memoizedState;\n    const nextState: CacheComponentState = workInProgress.memoizedState;\n\n    // Compare the new parent cache to the previous to see detect there was\n    // a refresh.\n    if (prevState.parent !== parentCache) {\n      // Refresh in parent. Update the parent.\n      const derivedState: CacheComponentState = {\n        parent: parentCache,\n        cache: parentCache,\n      };\n\n      // Copied from getDerivedStateFromProps implementation. Once the update\n      // queue is empty, persist the derived state onto the base state.\n      workInProgress.memoizedState = derivedState;\n      if (workInProgress.lanes === NoLanes) {\n        const updateQueue: UpdateQueue<any> = (workInProgress.updateQueue: any);\n        workInProgress.memoizedState = updateQueue.baseState = derivedState;\n      }\n\n      pushCacheProvider(workInProgress, parentCache);\n      // No need to propagate a context change because the refreshed parent\n      // already did.\n    } else {\n      // The parent didn't refresh. Now check if this cache did.\n      const nextCache = nextState.cache;\n      pushCacheProvider(workInProgress, nextCache);\n      if (nextCache !== prevState.cache) {\n        // This cache refreshed. Propagate a context change.\n        propagateContextChange(workInProgress, CacheContext, renderLanes);\n      }\n    }\n  }\n\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateFragment(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateMode(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextChildren = workInProgress.pendingProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateProfiler(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  if (enableProfilerTimer) {\n    workInProgress.flags |= Update;\n\n    if (enableProfilerCommitHooks) {\n      // Reset effect durations for the next eventual effect phase.\n      // These are reset during render to allow the DevTools commit hook a chance to read them,\n      const stateNode = workInProgress.stateNode;\n      stateNode.effectDuration = 0;\n      stateNode.passiveEffectDuration = 0;\n    }\n  }\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction markRef(current: Fiber | null, workInProgress: Fiber) {\n  const ref = workInProgress.ref;\n  if (\n    (current === null && ref !== null) ||\n    (current !== null && current.ref !== ref)\n  ) {\n    // Schedule a Ref effect\n    workInProgress.flags |= Ref;\n    if (enableSuspenseLayoutEffectSemantics) {\n      workInProgress.flags |= RefStatic;\n    }\n  }\n}\n\nfunction updateFunctionComponent(\n  current,\n  workInProgress,\n  Component,\n  nextProps: any,\n  renderLanes,\n) {\n  if (__DEV__) {\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(workInProgress, Component, true);\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  let nextChildren;\n  prepareToReadContext(workInProgress, renderLanes);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n    if (\n      debugRenderPhaseSideEffectsForStrictMode &&\n      workInProgress.mode & StrictLegacyMode\n    ) {\n      setIsStrictModeForDevtools(true);\n      try {\n        nextChildren = renderWithHooks(\n          current,\n          workInProgress,\n          Component,\n          nextProps,\n          context,\n          renderLanes,\n        );\n      } finally {\n        setIsStrictModeForDevtools(false);\n      }\n    }\n    setIsRendering(false);\n  } else {\n    nextChildren = renderWithHooks(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      context,\n      renderLanes,\n    );\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  if (current !== null && !didReceiveUpdate) {\n    bailoutHooks(current, workInProgress, renderLanes);\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  nextProps: any,\n  renderLanes: Lanes,\n) {\n  if (__DEV__) {\n    // This is used by DevTools to force a boundary to error.\n    switch (shouldError(workInProgress)) {\n      case false: {\n        const instance = workInProgress.stateNode;\n        const ctor = workInProgress.type;\n        // TODO This way of resetting the error boundary state is a hack.\n        // Is there a better way to do this?\n        const tempInstance = new ctor(\n          workInProgress.memoizedProps,\n          instance.context,\n        );\n        const state = tempInstance.state;\n        instance.updater.enqueueSetState(instance, state, null);\n        break;\n      }\n      case true: {\n        workInProgress.flags |= DidCapture;\n        workInProgress.flags |= ShouldCapture;\n        const error = new Error('Simulated error coming from DevTools');\n        const lane = pickArbitraryLane(renderLanes);\n        workInProgress.lanes = mergeLanes(workInProgress.lanes, lane);\n        // Schedule the error boundary to re-render using updated state\n        const update = createClassErrorUpdate(\n          workInProgress,\n          createCapturedValue(error, workInProgress),\n          lane,\n        );\n        enqueueCapturedUpdate(workInProgress, update);\n        break;\n      }\n    }\n\n    if (workInProgress.type !== workInProgress.elementType) {\n      // Lazy component props can't be validated in createElement\n      // because they're only guaranteed to be resolved here.\n      const innerPropTypes = Component.propTypes;\n      if (innerPropTypes) {\n        checkPropTypes(\n          innerPropTypes,\n          nextProps, // Resolved props\n          'prop',\n          getComponentNameFromType(Component),\n        );\n      }\n    }\n  }\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  const instance = workInProgress.stateNode;\n  let shouldUpdate;\n  if (instance === null) {\n    if (current !== null) {\n      // A class component without an instance only mounts if it suspended\n      // inside a non-concurrent tree, in an inconsistent state. We want to\n      // treat it like a new mount, even though an empty version of it already\n      // committed. Disconnect the alternate pointers.\n      current.alternate = null;\n      workInProgress.alternate = null;\n      // Since this is conceptually a new fiber, schedule a Placement effect\n      workInProgress.flags |= Placement;\n    }\n    // In the initial pass we might need to construct the instance.\n    constructClassInstance(workInProgress, Component, nextProps);\n    mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n    shouldUpdate = true;\n  } else if (current === null) {\n    // In a resume, we'll already have an instance we can reuse.\n    shouldUpdate = resumeMountClassInstance(\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  } else {\n    shouldUpdate = updateClassInstance(\n      current,\n      workInProgress,\n      Component,\n      nextProps,\n      renderLanes,\n    );\n  }\n  const nextUnitOfWork = finishClassComponent(\n    current,\n    workInProgress,\n    Component,\n    shouldUpdate,\n    hasContext,\n    renderLanes,\n  );\n  if (__DEV__) {\n    const inst = workInProgress.stateNode;\n    if (shouldUpdate && inst.props !== nextProps) {\n      if (!didWarnAboutReassigningProps) {\n        console.error(\n          'It looks like %s is reassigning its own `this.props` while rendering. ' +\n            'This is not supported and can lead to confusing bugs.',\n          getComponentNameFromFiber(workInProgress) || 'a component',\n        );\n      }\n      didWarnAboutReassigningProps = true;\n    }\n  }\n  return nextUnitOfWork;\n}\n\nfunction finishClassComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  Component: any,\n  shouldUpdate: boolean,\n  hasContext: boolean,\n  renderLanes: Lanes,\n) {\n  // Refs should update even if shouldComponentUpdate returns false\n  markRef(current, workInProgress);\n\n  const didCaptureError = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (!shouldUpdate && !didCaptureError) {\n    // Context providers should defer to sCU for rendering\n    if (hasContext) {\n      invalidateContextProvider(workInProgress, Component, false);\n    }\n\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n\n  const instance = workInProgress.stateNode;\n\n  // Rerender\n  ReactCurrentOwner.current = workInProgress;\n  let nextChildren;\n  if (\n    didCaptureError &&\n    typeof Component.getDerivedStateFromError !== 'function'\n  ) {\n    // If we captured an error, but getDerivedStateFromError is not defined,\n    // unmount all the children. componentDidCatch will schedule an update to\n    // re-render a fallback. This is temporary until we migrate everyone to\n    // the new API.\n    // TODO: Warn in a future release.\n    nextChildren = null;\n\n    if (enableProfilerTimer) {\n      stopProfilerTimerIfRunning(workInProgress);\n    }\n  } else {\n    if (enableSchedulingProfiler) {\n      markComponentRenderStarted(workInProgress);\n    }\n    if (__DEV__) {\n      setIsRendering(true);\n      nextChildren = instance.render();\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          instance.render();\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n      setIsRendering(false);\n    } else {\n      nextChildren = instance.render();\n    }\n    if (enableSchedulingProfiler) {\n      markComponentRenderStopped();\n    }\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  if (current !== null && didCaptureError) {\n    // If we're recovering from an error, reconcile without reusing any of\n    // the existing children. Conceptually, the normal children and the children\n    // that are shown on error are two different sets, so we shouldn't reuse\n    // normal children even if their identities match.\n    forceUnmountCurrentAndReconcile(\n      current,\n      workInProgress,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n\n  // Memoize state using the values we just used to render.\n  // TODO: Restructure so we never read values from the instance.\n  workInProgress.memoizedState = instance.state;\n\n  // The context might have changed so we need to recalculate it.\n  if (hasContext) {\n    invalidateContextProvider(workInProgress, Component, true);\n  }\n\n  return workInProgress.child;\n}\n\nfunction pushHostRootContext(workInProgress) {\n  const root = (workInProgress.stateNode: FiberRoot);\n  if (root.pendingContext) {\n    pushTopLevelContextObject(\n      workInProgress,\n      root.pendingContext,\n      root.pendingContext !== root.context,\n    );\n  } else if (root.context) {\n    // Should always be set\n    pushTopLevelContextObject(workInProgress, root.context, false);\n  }\n  pushHostContainer(workInProgress, root.containerInfo);\n}\n\nfunction updateHostRoot(current, workInProgress, renderLanes) {\n  pushHostRootContext(workInProgress);\n  const updateQueue = workInProgress.updateQueue;\n  invariant(\n    current !== null && updateQueue !== null,\n    'If the root does not have an updateQueue, we should have already ' +\n      'bailed out. This error is likely caused by a bug in React. Please ' +\n      'file an issue.',\n  );\n  const nextProps = workInProgress.pendingProps;\n  const prevState = workInProgress.memoizedState;\n  const prevChildren = prevState.element;\n  cloneUpdateQueue(current, workInProgress);\n  processUpdateQueue(workInProgress, nextProps, null, renderLanes);\n  const nextState = workInProgress.memoizedState;\n\n  const root: FiberRoot = workInProgress.stateNode;\n\n  if (enableCache) {\n    const nextCache: Cache = nextState.cache;\n    pushRootCachePool(root);\n    pushCacheProvider(workInProgress, nextCache);\n    if (nextCache !== prevState.cache) {\n      // The root cache refreshed.\n      propagateContextChange(workInProgress, CacheContext, renderLanes);\n    }\n  }\n\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  const nextChildren = nextState.element;\n  if (nextChildren === prevChildren) {\n    resetHydrationState();\n    return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n  }\n  if (root.hydrate && enterHydrationState(workInProgress)) {\n    // If we don't have any current children this might be the first pass.\n    // We always try to hydrate. If this isn't a hydration pass there won't\n    // be any children to hydrate which is effectively the same thing as\n    // not hydrating.\n\n    if (supportsHydration) {\n      const mutableSourceEagerHydrationData =\n        root.mutableSourceEagerHydrationData;\n      if (mutableSourceEagerHydrationData != null) {\n        for (let i = 0; i < mutableSourceEagerHydrationData.length; i += 2) {\n          const mutableSource = ((mutableSourceEagerHydrationData[\n            i\n          ]: any): MutableSource<any>);\n          const version = mutableSourceEagerHydrationData[i + 1];\n          setWorkInProgressVersion(mutableSource, version);\n        }\n      }\n    }\n\n    const child = mountChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n    workInProgress.child = child;\n\n    let node = child;\n    while (node) {\n      // Mark each child as hydrating. This is a fast path to know whether this\n      // tree is part of a hydrating tree. This is used to determine if a child\n      // node has fully mounted yet, and for scheduling event replaying.\n      // Conceptually this is similar to Placement in that a new subtree is\n      // inserted into the React tree here. It just happens to not need DOM\n      // mutations because it already exists.\n      node.flags = (node.flags & ~Placement) | Hydrating;\n      node = node.sibling;\n    }\n  } else {\n    // Otherwise reset hydration state in case we aborted and resumed another\n    // root.\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n    resetHydrationState();\n  }\n  return workInProgress.child;\n}\n\nfunction updateHostComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContext(workInProgress);\n\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n\n  const type = workInProgress.type;\n  const nextProps = workInProgress.pendingProps;\n  const prevProps = current !== null ? current.memoizedProps : null;\n\n  let nextChildren = nextProps.children;\n  const isDirectTextChild = shouldSetTextContent(type, nextProps);\n\n  if (isDirectTextChild) {\n    // We special case a direct text child of a host node. This is a common\n    // case. We won't handle it as a reified child. We will instead handle\n    // this in the host environment that also has access to this prop. That\n    // avoids allocating another HostText fiber and traversing it.\n    nextChildren = null;\n  } else if (prevProps !== null && shouldSetTextContent(type, prevProps)) {\n    // If we're switching from a direct text child to a normal child, or to\n    // empty, we need to schedule the text content to be reset.\n    workInProgress.flags |= ContentReset;\n  }\n\n  markRef(current, workInProgress);\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateHostText(current, workInProgress) {\n  if (current === null) {\n    tryToClaimNextHydratableInstance(workInProgress);\n  }\n  // Nothing to do here. This is terminal. We'll do the completion step\n  // immediately after.\n  return null;\n}\n\nfunction mountLazyComponent(\n  _current,\n  workInProgress,\n  elementType,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // A lazy component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  const lazyComponent: LazyComponentType<any, any> = elementType;\n  const payload = lazyComponent._payload;\n  const init = lazyComponent._init;\n  let Component = init(payload);\n  // Store the unwrapped component in the type.\n  workInProgress.type = Component;\n  const resolvedTag = (workInProgress.tag = resolveLazyComponentTag(Component));\n  const resolvedProps = resolveDefaultProps(Component, props);\n  let child;\n  switch (resolvedTag) {\n    case FunctionComponent: {\n      if (__DEV__) {\n        validateFunctionComponentInDev(workInProgress, Component);\n        workInProgress.type = Component = resolveFunctionForHotReloading(\n          Component,\n        );\n      }\n      child = updateFunctionComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ClassComponent: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveClassForHotReloading(\n          Component,\n        );\n      }\n      child = updateClassComponent(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case ForwardRef: {\n      if (__DEV__) {\n        workInProgress.type = Component = resolveForwardRefForHotReloading(\n          Component,\n        );\n      }\n      child = updateForwardRef(\n        null,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n      return child;\n    }\n    case MemoComponent: {\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = Component.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentNameFromType(Component),\n            );\n          }\n        }\n      }\n      child = updateMemoComponent(\n        null,\n        workInProgress,\n        Component,\n        resolveDefaultProps(Component.type, resolvedProps), // The inner type can have defaults too\n        renderLanes,\n      );\n      return child;\n    }\n  }\n  let hint = '';\n  if (__DEV__) {\n    if (\n      Component !== null &&\n      typeof Component === 'object' &&\n      Component.$$typeof === REACT_LAZY_TYPE\n    ) {\n      hint = ' Did you wrap a component in React.lazy() more than once?';\n    }\n  }\n  // This message intentionally doesn't mention ForwardRef or MemoComponent\n  // because the fact that it's a separate type of work is an\n  // implementation detail.\n  invariant(\n    false,\n    'Element type is invalid. Received a promise that resolves to: %s. ' +\n      'Lazy element type must resolve to a class or function.%s',\n    Component,\n    hint,\n  );\n}\n\nfunction mountIncompleteClassComponent(\n  _current,\n  workInProgress,\n  Component,\n  nextProps,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An incomplete component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  // Promote the fiber to a class and try rendering again.\n  workInProgress.tag = ClassComponent;\n\n  // The rest of this function is a fork of `updateClassComponent`\n\n  // Push context providers early to prevent context stack mismatches.\n  // During mounting we don't know the child context yet as the instance doesn't exist.\n  // We will invalidate the child context in finishClassComponent() right after rendering.\n  let hasContext;\n  if (isLegacyContextProvider(Component)) {\n    hasContext = true;\n    pushLegacyContextProvider(workInProgress);\n  } else {\n    hasContext = false;\n  }\n  prepareToReadContext(workInProgress, renderLanes);\n\n  constructClassInstance(workInProgress, Component, nextProps);\n  mountClassInstance(workInProgress, Component, nextProps, renderLanes);\n\n  return finishClassComponent(\n    null,\n    workInProgress,\n    Component,\n    true,\n    hasContext,\n    renderLanes,\n  );\n}\n\nfunction mountIndeterminateComponent(\n  _current,\n  workInProgress,\n  Component,\n  renderLanes,\n) {\n  if (_current !== null) {\n    // An indeterminate component only mounts if it suspended inside a non-\n    // concurrent tree, in an inconsistent state. We want to treat it like\n    // a new mount, even though an empty version of it already committed.\n    // Disconnect the alternate pointers.\n    _current.alternate = null;\n    workInProgress.alternate = null;\n    // Since this is conceptually a new fiber, schedule a Placement effect\n    workInProgress.flags |= Placement;\n  }\n\n  const props = workInProgress.pendingProps;\n  let context;\n  if (!disableLegacyContext) {\n    const unmaskedContext = getUnmaskedContext(\n      workInProgress,\n      Component,\n      false,\n    );\n    context = getMaskedContext(workInProgress, unmaskedContext);\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  let value;\n\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  if (__DEV__) {\n    if (\n      Component.prototype &&\n      typeof Component.prototype.render === 'function'\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutBadClass[componentName]) {\n        console.error(\n          \"The <%s /> component appears to have a render method, but doesn't extend React.Component. \" +\n            'This is likely to cause errors. Change %s to extend React.Component instead.',\n          componentName,\n          componentName,\n        );\n        didWarnAboutBadClass[componentName] = true;\n      }\n    }\n\n    if (workInProgress.mode & StrictLegacyMode) {\n      ReactStrictModeWarnings.recordLegacyContextWarning(workInProgress, null);\n    }\n\n    setIsRendering(true);\n    ReactCurrentOwner.current = workInProgress;\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n    setIsRendering(false);\n  } else {\n    value = renderWithHooks(\n      null,\n      workInProgress,\n      Component,\n      props,\n      context,\n      renderLanes,\n    );\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n\n  if (__DEV__) {\n    // Support for module components is deprecated and is removed behind a flag.\n    // Whether or not it would crash later, we want to show a good message in DEV first.\n    if (\n      typeof value === 'object' &&\n      value !== null &&\n      typeof value.render === 'function' &&\n      value.$$typeof === undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n  }\n\n  if (\n    // Run these checks in production only if the flag is off.\n    // Eventually we'll delete this branch altogether.\n    !disableModulePatternComponents &&\n    typeof value === 'object' &&\n    value !== null &&\n    typeof value.render === 'function' &&\n    value.$$typeof === undefined\n  ) {\n    if (__DEV__) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n      if (!didWarnAboutModulePatternComponent[componentName]) {\n        console.error(\n          'The <%s /> component appears to be a function component that returns a class instance. ' +\n            'Change %s to a class that extends React.Component instead. ' +\n            \"If you can't use a class try assigning the prototype on the function as a workaround. \" +\n            \"`%s.prototype = React.Component.prototype`. Don't use an arrow function since it \" +\n            'cannot be called with `new` by React.',\n          componentName,\n          componentName,\n          componentName,\n        );\n        didWarnAboutModulePatternComponent[componentName] = true;\n      }\n    }\n\n    // Proceed under the assumption that this is a class instance\n    workInProgress.tag = ClassComponent;\n\n    // Throw out any hooks that were used.\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    // Push context providers early to prevent context stack mismatches.\n    // During mounting we don't know the child context yet as the instance doesn't exist.\n    // We will invalidate the child context in finishClassComponent() right after rendering.\n    let hasContext = false;\n    if (isLegacyContextProvider(Component)) {\n      hasContext = true;\n      pushLegacyContextProvider(workInProgress);\n    } else {\n      hasContext = false;\n    }\n\n    workInProgress.memoizedState =\n      value.state !== null && value.state !== undefined ? value.state : null;\n\n    initializeUpdateQueue(workInProgress);\n\n    adoptClassInstance(workInProgress, value);\n    mountClassInstance(workInProgress, Component, props, renderLanes);\n    return finishClassComponent(\n      null,\n      workInProgress,\n      Component,\n      true,\n      hasContext,\n      renderLanes,\n    );\n  } else {\n    // Proceed under the assumption that this is a function component\n    workInProgress.tag = FunctionComponent;\n    if (__DEV__) {\n      if (disableLegacyContext && Component.contextTypes) {\n        console.error(\n          '%s uses the legacy contextTypes API which is no longer supported. ' +\n            'Use React.createContext() with React.useContext() instead.',\n          getComponentNameFromType(Component) || 'Unknown',\n        );\n      }\n\n      if (\n        debugRenderPhaseSideEffectsForStrictMode &&\n        workInProgress.mode & StrictLegacyMode\n      ) {\n        setIsStrictModeForDevtools(true);\n        try {\n          value = renderWithHooks(\n            null,\n            workInProgress,\n            Component,\n            props,\n            context,\n            renderLanes,\n          );\n        } finally {\n          setIsStrictModeForDevtools(false);\n        }\n      }\n    }\n    reconcileChildren(null, workInProgress, value, renderLanes);\n    if (__DEV__) {\n      validateFunctionComponentInDev(workInProgress, Component);\n    }\n    return workInProgress.child;\n  }\n}\n\nfunction validateFunctionComponentInDev(workInProgress: Fiber, Component: any) {\n  if (__DEV__) {\n    if (Component) {\n      if (Component.childContextTypes) {\n        console.error(\n          '%s(...): childContextTypes cannot be defined on a function component.',\n          Component.displayName || Component.name || 'Component',\n        );\n      }\n    }\n    if (workInProgress.ref !== null) {\n      let info = '';\n      const ownerName = getCurrentFiberOwnerNameInDevOrNull();\n      if (ownerName) {\n        info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n      }\n\n      let warningKey = ownerName || '';\n      const debugSource = workInProgress._debugSource;\n      if (debugSource) {\n        warningKey = debugSource.fileName + ':' + debugSource.lineNumber;\n      }\n      if (!didWarnAboutFunctionRefs[warningKey]) {\n        didWarnAboutFunctionRefs[warningKey] = true;\n        console.error(\n          'Function components cannot be given refs. ' +\n            'Attempts to access this ref will fail. ' +\n            'Did you mean to use React.forwardRef()?%s',\n          info,\n        );\n      }\n    }\n\n    if (\n      warnAboutDefaultPropsOnFunctionComponents &&\n      Component.defaultProps !== undefined\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutDefaultPropsOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Support for defaultProps will be removed from function components ' +\n            'in a future major release. Use JavaScript default parameters instead.',\n          componentName,\n        );\n        didWarnAboutDefaultPropsOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (typeof Component.getDerivedStateFromProps === 'function') {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutGetDerivedStateOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support getDerivedStateFromProps.',\n          componentName,\n        );\n        didWarnAboutGetDerivedStateOnFunctionComponent[componentName] = true;\n      }\n    }\n\n    if (\n      typeof Component.contextType === 'object' &&\n      Component.contextType !== null\n    ) {\n      const componentName = getComponentNameFromType(Component) || 'Unknown';\n\n      if (!didWarnAboutContextTypeOnFunctionComponent[componentName]) {\n        console.error(\n          '%s: Function components do not support contextType.',\n          componentName,\n        );\n        didWarnAboutContextTypeOnFunctionComponent[componentName] = true;\n      }\n    }\n  }\n}\n\nconst SUSPENDED_MARKER: SuspenseState = {\n  dehydrated: null,\n  retryLane: NoLane,\n};\n\nfunction mountSuspenseOffscreenState(renderLanes: Lanes): OffscreenState {\n  return {\n    baseLanes: renderLanes,\n    cachePool: getSuspendedCachePool(),\n  };\n}\n\nfunction updateSuspenseOffscreenState(\n  prevOffscreenState: OffscreenState,\n  renderLanes: Lanes,\n): OffscreenState {\n  let cachePool: SpawnedCachePool | null = null;\n  if (enableCache) {\n    const prevCachePool: SpawnedCachePool | null = prevOffscreenState.cachePool;\n    if (prevCachePool !== null) {\n      const parentCache = isPrimaryRenderer\n        ? CacheContext._currentValue\n        : CacheContext._currentValue2;\n      if (prevCachePool.parent !== parentCache) {\n        // Detected a refresh in the parent. This overrides any previously\n        // suspended cache.\n        cachePool = {\n          parent: parentCache,\n          pool: parentCache,\n        };\n      } else {\n        // We can reuse the cache from last time. The only thing that would have\n        // overridden it is a parent refresh, which we checked for above.\n        cachePool = prevCachePool;\n      }\n    } else {\n      // If there's no previous cache pool, grab the current one.\n      cachePool = getSuspendedCachePool();\n    }\n  }\n  return {\n    baseLanes: mergeLanes(prevOffscreenState.baseLanes, renderLanes),\n    cachePool,\n  };\n}\n\n// TODO: Probably should inline this back\nfunction shouldRemainOnFallback(\n  suspenseContext: SuspenseContext,\n  current: null | Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // If we're already showing a fallback, there are cases where we need to\n  // remain on that fallback regardless of whether the content has resolved.\n  // For example, SuspenseList coordinates when nested content appears.\n  if (current !== null) {\n    const suspenseState: SuspenseState = current.memoizedState;\n    if (suspenseState === null) {\n      // Currently showing content. Don't hide it, even if ForceSuspenseFallback\n      // is true. More precise name might be \"ForceRemainSuspenseFallback\".\n      // Note: This is a factoring smell. Can't remain on a fallback if there's\n      // no fallback to remain on.\n      return false;\n    }\n  }\n\n  // Not currently showing content. Consult the Suspense context.\n  return hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n}\n\nfunction getRemainingWorkInPrimaryTree(current: Fiber, renderLanes) {\n  // TODO: Should not remove render lanes that were pinged during this render\n  return removeLanes(current.childLanes, renderLanes);\n}\n\nfunction updateSuspenseComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n\n  // This is used by DevTools to force a boundary to suspend.\n  if (__DEV__) {\n    if (shouldSuspend(workInProgress)) {\n      workInProgress.flags |= DidCapture;\n    }\n  }\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  let showFallback = false;\n  const didSuspend = (workInProgress.flags & DidCapture) !== NoFlags;\n\n  if (\n    didSuspend ||\n    shouldRemainOnFallback(\n      suspenseContext,\n      current,\n      workInProgress,\n      renderLanes,\n    )\n  ) {\n    // Something in this boundary's subtree already suspended. Switch to\n    // rendering the fallback children.\n    showFallback = true;\n    workInProgress.flags &= ~DidCapture;\n  } else {\n    // Attempting the main content\n    if (\n      current === null ||\n      (current.memoizedState: null | SuspenseState) !== null\n    ) {\n      // This is a new mount or this boundary is already showing a fallback state.\n      // Mark this subtree context as having at least one invisible parent that could\n      // handle the fallback state.\n      // Avoided boundaries are not considered since they cannot handle preferred fallback states.\n      if (nextProps.unstable_avoidThisFallback !== true) {\n        suspenseContext = addSubtreeSuspenseContext(\n          suspenseContext,\n          InvisibleParentSuspenseContext,\n        );\n      }\n    }\n  }\n\n  suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  // OK, the next part is confusing. We're about to reconcile the Suspense\n  // boundary's children. This involves some custom reconciliation logic. Two\n  // main reasons this is so complicated.\n  //\n  // First, Legacy Mode has different semantics for backwards compatibility. The\n  // primary tree will commit in an inconsistent state, so when we do the\n  // second pass to render the fallback, we do some exceedingly, uh, clever\n  // hacks to make that not totally break. Like transferring effects and\n  // deletions from hidden tree. In Concurrent Mode, it's much simpler,\n  // because we bailout on the primary tree completely and leave it in its old\n  // state, no effects. Same as what we do for Offscreen (except that\n  // Offscreen doesn't have the first render pass).\n  //\n  // Second is hydration. During hydration, the Suspense fiber has a slightly\n  // different layout, where the child points to a dehydrated fragment, which\n  // contains the DOM rendered by the server.\n  //\n  // Third, even if you set all that aside, Suspense is like error boundaries in\n  // that we first we try to render one tree, and if that fails, we render again\n  // and switch to a different tree. Like a try/catch block. So we have to track\n  // which branch we're currently rendering. Ideally we would model this using\n  // a stack.\n  if (current === null) {\n    // Initial mount\n    // If we're currently hydrating, try to hydrate this boundary.\n    tryToClaimNextHydratableInstance(workInProgress);\n    // This could've been a dehydrated suspense component.\n    if (enableSuspenseServerRenderer) {\n      const suspenseState: null | SuspenseState = workInProgress.memoizedState;\n      if (suspenseState !== null) {\n        const dehydrated = suspenseState.dehydrated;\n        if (dehydrated !== null) {\n          return mountDehydratedSuspenseComponent(\n            workInProgress,\n            dehydrated,\n            renderLanes,\n          );\n        }\n      }\n    }\n\n    const nextPrimaryChildren = nextProps.children;\n    const nextFallbackChildren = nextProps.fallback;\n    if (showFallback) {\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n      return fallbackFragment;\n    } else if (typeof nextProps.unstable_expectedLoadTime === 'number') {\n      // This is a CPU-bound tree. Skip this tree and show a placeholder to\n      // unblock the surrounding content. Then immediately retry after the\n      // initial commit.\n      const fallbackFragment = mountSuspenseFallbackChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        nextFallbackChildren,\n        renderLanes,\n      );\n      const primaryChildFragment: Fiber = (workInProgress.child: any);\n      primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n        renderLanes,\n      );\n      workInProgress.memoizedState = SUSPENDED_MARKER;\n\n      // Since nothing actually suspended, there will nothing to ping this to\n      // get it started back up to attempt the next item. While in terms of\n      // priority this work has the same priority as this current render, it's\n      // not part of the same transition once the transition has committed. If\n      // it's sync, we still want to yield so that it can be painted.\n      // Conceptually, this is really the same as pinging. We can use any\n      // RetryLane even if it's the one currently rendering since we're leaving\n      // it behind on this node.\n      workInProgress.lanes = SomeRetryLane;\n      return fallbackFragment;\n    } else {\n      return mountSuspensePrimaryChildren(\n        workInProgress,\n        nextPrimaryChildren,\n        renderLanes,\n      );\n    }\n  } else {\n    // This is an update.\n\n    // If the current fiber has a SuspenseState, that means it's already showing\n    // a fallback.\n    const prevState: null | SuspenseState = current.memoizedState;\n    if (prevState !== null) {\n      // The current tree is already showing a fallback\n\n      // Special path for hydration\n      if (enableSuspenseServerRenderer) {\n        const dehydrated = prevState.dehydrated;\n        if (dehydrated !== null) {\n          if (!didSuspend) {\n            return updateDehydratedSuspenseComponent(\n              current,\n              workInProgress,\n              dehydrated,\n              prevState,\n              renderLanes,\n            );\n          } else if (\n            (workInProgress.memoizedState: null | SuspenseState) !== null\n          ) {\n            // Something suspended and we should still be in dehydrated mode.\n            // Leave the existing child in place.\n            workInProgress.child = current.child;\n            // The dehydrated completion pass expects this flag to be there\n            // but the normal suspense pass doesn't.\n            workInProgress.flags |= DidCapture;\n            return null;\n          } else {\n            // Suspended but we should no longer be in dehydrated mode.\n            // Therefore we now have to render the fallback.\n            const nextPrimaryChildren = nextProps.children;\n            const nextFallbackChildren = nextProps.fallback;\n            const fallbackChildFragment = mountSuspenseFallbackAfterRetryWithoutHydrating(\n              current,\n              workInProgress,\n              nextPrimaryChildren,\n              nextFallbackChildren,\n              renderLanes,\n            );\n            const primaryChildFragment: Fiber = (workInProgress.child: any);\n            primaryChildFragment.memoizedState = mountSuspenseOffscreenState(\n              renderLanes,\n            );\n            workInProgress.memoizedState = SUSPENDED_MARKER;\n            return fallbackChildFragment;\n          }\n        }\n      }\n\n      if (showFallback) {\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    } else {\n      // The current tree is not already showing a fallback.\n      if (showFallback) {\n        // Timed out.\n        const nextFallbackChildren = nextProps.fallback;\n        const nextPrimaryChildren = nextProps.children;\n        const fallbackChildFragment = updateSuspenseFallbackChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          nextFallbackChildren,\n          renderLanes,\n        );\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const prevOffscreenState: OffscreenState | null = (current.child: any)\n          .memoizedState;\n        primaryChildFragment.memoizedState =\n          prevOffscreenState === null\n            ? mountSuspenseOffscreenState(renderLanes)\n            : updateSuspenseOffscreenState(prevOffscreenState, renderLanes);\n        primaryChildFragment.childLanes = getRemainingWorkInPrimaryTree(\n          current,\n          renderLanes,\n        );\n        // Skip the primary children, and continue working on the\n        // fallback children.\n        workInProgress.memoizedState = SUSPENDED_MARKER;\n        return fallbackChildFragment;\n      } else {\n        // Still haven't timed out. Continue rendering the children, like we\n        // normally do.\n        const nextPrimaryChildren = nextProps.children;\n        const primaryChildFragment = updateSuspensePrimaryChildren(\n          current,\n          workInProgress,\n          nextPrimaryChildren,\n          renderLanes,\n        );\n        workInProgress.memoizedState = null;\n        return primaryChildFragment;\n      }\n    }\n  }\n}\n\nfunction mountSuspensePrimaryChildren(\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    mode,\n    renderLanes,\n  );\n  primaryChildFragment.return = workInProgress;\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackChildren(\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const progressedPrimaryFragment: Fiber | null = workInProgress.child;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  let fallbackChildFragment;\n  if (\n    (mode & ConcurrentMode) === NoMode &&\n    progressedPrimaryFragment !== null\n  ) {\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration = 0;\n      primaryChildFragment.treeBaseDuration = 0;\n    }\n\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  } else {\n    primaryChildFragment = mountWorkInProgressOffscreenFiber(\n      primaryChildProps,\n      mode,\n      NoLanes,\n    );\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n  }\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n  return fallbackChildFragment;\n}\n\nfunction mountWorkInProgressOffscreenFiber(\n  offscreenProps: OffscreenProps,\n  mode: TypeOfMode,\n  renderLanes: Lanes,\n) {\n  // The props argument to `createFiberFromOffscreen` is `any` typed, so we use\n  // this wrapper function to constrain it.\n  return createFiberFromOffscreen(offscreenProps, mode, NoLanes, null);\n}\n\nfunction updateWorkInProgressOffscreenFiber(\n  current: Fiber,\n  offscreenProps: OffscreenProps,\n) {\n  // The props argument to `createWorkInProgress` is `any` typed, so we use this\n  // wrapper function to constrain it.\n  return createWorkInProgress(current, offscreenProps);\n}\n\nfunction updateSuspensePrimaryChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  renderLanes,\n) {\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildFragment = updateWorkInProgressOffscreenFiber(\n    currentPrimaryChildFragment,\n    {\n      mode: 'visible',\n      children: primaryChildren,\n    },\n  );\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    primaryChildFragment.lanes = renderLanes;\n  }\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = null;\n  if (currentFallbackChildFragment !== null) {\n    // Delete the fallback child fragment\n    const deletions = workInProgress.deletions;\n    if (deletions === null) {\n      workInProgress.deletions = [currentFallbackChildFragment];\n      workInProgress.flags |= ChildDeletion;\n    } else {\n      deletions.push(currentFallbackChildFragment);\n    }\n  }\n\n  workInProgress.child = primaryChildFragment;\n  return primaryChildFragment;\n}\n\nfunction updateSuspenseFallbackChildren(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const mode = workInProgress.mode;\n  const currentPrimaryChildFragment: Fiber = (current.child: any);\n  const currentFallbackChildFragment: Fiber | null =\n    currentPrimaryChildFragment.sibling;\n\n  const primaryChildProps: OffscreenProps = {\n    mode: 'hidden',\n    children: primaryChildren,\n  };\n\n  let primaryChildFragment;\n  if (\n    // In legacy mode, we commit the primary tree as if it successfully\n    // completed, even though it's in an inconsistent state.\n    (mode & ConcurrentMode) === NoMode &&\n    // Make sure we're on the second pass, i.e. the primary child fragment was\n    // already cloned. In legacy mode, the only case where this isn't true is\n    // when DevTools forces us to display a fallback; we skip the first render\n    // pass entirely and go straight to rendering the fallback. (In Concurrent\n    // Mode, SuspenseList can also trigger this scenario, but this is a legacy-\n    // only codepath.)\n    workInProgress.child !== currentPrimaryChildFragment\n  ) {\n    const progressedPrimaryFragment: Fiber = (workInProgress.child: any);\n    primaryChildFragment = progressedPrimaryFragment;\n    primaryChildFragment.childLanes = NoLanes;\n    primaryChildFragment.pendingProps = primaryChildProps;\n\n    if (enableProfilerTimer && workInProgress.mode & ProfileMode) {\n      // Reset the durations from the first pass so they aren't included in the\n      // final amounts. This seems counterintuitive, since we're intentionally\n      // not measuring part of the render phase, but this makes it match what we\n      // do in Concurrent Mode.\n      primaryChildFragment.actualDuration = 0;\n      primaryChildFragment.actualStartTime = -1;\n      primaryChildFragment.selfBaseDuration =\n        currentPrimaryChildFragment.selfBaseDuration;\n      primaryChildFragment.treeBaseDuration =\n        currentPrimaryChildFragment.treeBaseDuration;\n    }\n\n    if (enablePersistentOffscreenHostContainer && supportsPersistence) {\n      // In persistent mode, the offscreen children are wrapped in a host node.\n      // We need to complete it now, because we're going to skip over its normal\n      // complete phase and go straight to rendering the fallback.\n      const currentOffscreenContainer = currentPrimaryChildFragment.child;\n      const offscreenContainer: Fiber = (primaryChildFragment.child: any);\n      const containerProps = getOffscreenContainerProps(\n        'hidden',\n        primaryChildren,\n      );\n      offscreenContainer.pendingProps = containerProps;\n      offscreenContainer.memoizedProps = containerProps;\n      completeSuspendedOffscreenHostContainer(\n        currentOffscreenContainer,\n        offscreenContainer,\n      );\n    }\n\n    // The fallback fiber was added as a deletion during the first pass.\n    // However, since we're going to remain on the fallback, we no longer want\n    // to delete it.\n    workInProgress.deletions = null;\n  } else {\n    primaryChildFragment = updateWorkInProgressOffscreenFiber(\n      currentPrimaryChildFragment,\n      primaryChildProps,\n    );\n\n    if (enablePersistentOffscreenHostContainer && supportsPersistence) {\n      // In persistent mode, the offscreen children are wrapped in a host node.\n      // We need to complete it now, because we're going to skip over its normal\n      // complete phase and go straight to rendering the fallback.\n      const currentOffscreenContainer = currentPrimaryChildFragment.child;\n      if (currentOffscreenContainer !== null) {\n        const isHidden = true;\n        const offscreenContainer = reconcileOffscreenHostContainer(\n          currentPrimaryChildFragment,\n          primaryChildFragment,\n          isHidden,\n          primaryChildren,\n          renderLanes,\n        );\n        offscreenContainer.memoizedProps = offscreenContainer.pendingProps;\n        completeSuspendedOffscreenHostContainer(\n          currentOffscreenContainer,\n          offscreenContainer,\n        );\n      }\n    }\n\n    // Since we're reusing a current tree, we need to reuse the flags, too.\n    // (We don't do this in legacy mode, because in legacy mode we don't re-use\n    // the current tree; see previous branch.)\n    primaryChildFragment.subtreeFlags =\n      currentPrimaryChildFragment.subtreeFlags & StaticMask;\n  }\n  let fallbackChildFragment;\n  if (currentFallbackChildFragment !== null) {\n    fallbackChildFragment = createWorkInProgress(\n      currentFallbackChildFragment,\n      fallbackChildren,\n    );\n  } else {\n    fallbackChildFragment = createFiberFromFragment(\n      fallbackChildren,\n      mode,\n      renderLanes,\n      null,\n    );\n    // Needs a placement effect because the parent (the Suspense boundary) already\n    // mounted but this is a new fiber.\n    fallbackChildFragment.flags |= Placement;\n  }\n\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  return fallbackChildFragment;\n}\n\nfunction retrySuspenseComponentWithoutHydrating(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This will add the old fiber to the deletion list\n  reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n\n  // We're now not suspended nor dehydrated.\n  const nextProps = workInProgress.pendingProps;\n  const primaryChildren = nextProps.children;\n  const primaryChildFragment = mountSuspensePrimaryChildren(\n    workInProgress,\n    primaryChildren,\n    renderLanes,\n  );\n  // Needs a placement effect because the parent (the Suspense boundary) already\n  // mounted but this is a new fiber.\n  primaryChildFragment.flags |= Placement;\n  workInProgress.memoizedState = null;\n\n  return primaryChildFragment;\n}\n\nfunction mountSuspenseFallbackAfterRetryWithoutHydrating(\n  current,\n  workInProgress,\n  primaryChildren,\n  fallbackChildren,\n  renderLanes,\n) {\n  const fiberMode = workInProgress.mode;\n  const primaryChildProps: OffscreenProps = {\n    mode: 'visible',\n    children: primaryChildren,\n  };\n  const primaryChildFragment = mountWorkInProgressOffscreenFiber(\n    primaryChildProps,\n    fiberMode,\n    NoLanes,\n  );\n  const fallbackChildFragment = createFiberFromFragment(\n    fallbackChildren,\n    fiberMode,\n    renderLanes,\n    null,\n  );\n  // Needs a placement effect because the parent (the Suspense\n  // boundary) already mounted but this is a new fiber.\n  fallbackChildFragment.flags |= Placement;\n\n  primaryChildFragment.return = workInProgress;\n  fallbackChildFragment.return = workInProgress;\n  primaryChildFragment.sibling = fallbackChildFragment;\n  workInProgress.child = primaryChildFragment;\n\n  if ((workInProgress.mode & ConcurrentMode) !== NoMode) {\n    // We will have dropped the effect list which contains the\n    // deletion. We need to reconcile to delete the current child.\n    reconcileChildFibers(workInProgress, current.child, null, renderLanes);\n  }\n\n  return fallbackChildFragment;\n}\n\nfunction mountDehydratedSuspenseComponent(\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  renderLanes: Lanes,\n): null | Fiber {\n  // During the first pass, we'll bail out and not drill into the children.\n  // Instead, we'll leave the content in place and try to hydrate it later.\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    if (__DEV__) {\n      console.error(\n        'Cannot hydrate Suspense in legacy mode. Switch from ' +\n          'ReactDOM.hydrate(element, container) to ' +\n          'ReactDOM.createRoot(container, { hydrate: true })' +\n          '.render(element) or remove the Suspense components from ' +\n          'the server rendered components.',\n      );\n    }\n    workInProgress.lanes = laneToLanes(SyncLane);\n  } else if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This is a client-only boundary. Since we won't get any content from the server\n    // for this, we need to schedule that at a higher priority based on when it would\n    // have timed out. In theory we could render it in this pass but it would have the\n    // wrong priority associated with it and will prevent hydration of parent path.\n    // Instead, we'll leave work left on it to render it in a separate commit.\n\n    // TODO This time should be the time at which the server rendered response that is\n    // a parent to this boundary was displayed. However, since we currently don't have\n    // a protocol to transfer that time, we'll just estimate it by using the current\n    // time. This will mean that Suspense timeouts are slightly shifted to later than\n    // they should be.\n    // Schedule a normal pri update to render this content.\n    workInProgress.lanes = laneToLanes(DefaultHydrationLane);\n  } else {\n    // We'll continue hydrating the rest at offscreen priority since we'll already\n    // be showing the right content coming from the server, it is no rush.\n    workInProgress.lanes = laneToLanes(OffscreenLane);\n  }\n  return null;\n}\n\nfunction updateDehydratedSuspenseComponent(\n  current: Fiber,\n  workInProgress: Fiber,\n  suspenseInstance: SuspenseInstance,\n  suspenseState: SuspenseState,\n  renderLanes: Lanes,\n): null | Fiber {\n  // We should never be hydrating at this point because it is the first pass,\n  // but after we've already committed once.\n  warnIfHydrating();\n\n  if ((getExecutionContext() & RetryAfterError) !== NoContext) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if (isSuspenseInstanceFallback(suspenseInstance)) {\n    // This boundary is in a permanent fallback state. In this case, we'll never\n    // get an update and we'll never be able to hydrate the final content. Let's just try the\n    // client side render instead.\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  }\n\n  if (\n    enableLazyContextPropagation &&\n    // TODO: Factoring is a little weird, since we check this right below, too.\n    // But don't want to re-arrange the if-else chain until/unless this\n    // feature lands.\n    !didReceiveUpdate\n  ) {\n    // We need to check if any children have context before we decide to bail\n    // out, so propagate the changes now.\n    lazilyPropagateParentContextChanges(current, workInProgress, renderLanes);\n  }\n\n  // We use lanes to indicate that a child might depend on context, so if\n  // any context has changed, we need to treat is as if the input might have changed.\n  const hasContextChanged = includesSomeLane(renderLanes, current.childLanes);\n  if (didReceiveUpdate || hasContextChanged) {\n    // This boundary has changed since the first render. This means that we are now unable to\n    // hydrate it. We might still be able to hydrate it using a higher priority lane.\n    const root = getWorkInProgressRoot();\n    if (root !== null) {\n      const attemptHydrationAtLane = getBumpedLaneForHydration(\n        root,\n        renderLanes,\n      );\n      if (\n        attemptHydrationAtLane !== NoLane &&\n        attemptHydrationAtLane !== suspenseState.retryLane\n      ) {\n        // Intentionally mutating since this render will get interrupted. This\n        // is one of the very rare times where we mutate the current tree\n        // during the render phase.\n        suspenseState.retryLane = attemptHydrationAtLane;\n        // TODO: Ideally this would inherit the event time of the current render\n        const eventTime = NoTimestamp;\n        scheduleUpdateOnFiber(current, attemptHydrationAtLane, eventTime);\n      } else {\n        // We have already tried to ping at a higher priority than we're rendering with\n        // so if we got here, we must have failed to hydrate at those levels. We must\n        // now give up. Instead, we're going to delete the whole subtree and instead inject\n        // a new real Suspense boundary to take its place, which may render content\n        // or fallback. This might suspend for a while and if it does we might still have\n        // an opportunity to hydrate before this pass commits.\n      }\n    }\n\n    // If we have scheduled higher pri work above, this will probably just abort the render\n    // since we now have higher priority work, but in case it doesn't, we need to prepare to\n    // render something, if we time out. Even if that requires us to delete everything and\n    // skip hydration.\n    // Delay having to do this as long as the suspense timeout allows us.\n    renderDidSuspendDelayIfPossible();\n    return retrySuspenseComponentWithoutHydrating(\n      current,\n      workInProgress,\n      renderLanes,\n    );\n  } else if (isSuspenseInstancePending(suspenseInstance)) {\n    // This component is still pending more data from the server, so we can't hydrate its\n    // content. We treat it as if this component suspended itself. It might seem as if\n    // we could just try to render it client-side instead. However, this will perform a\n    // lot of unnecessary work and is unlikely to complete since it often will suspend\n    // on missing data anyway. Additionally, the server might be able to render more\n    // than we can on the client yet. In that case we'd end up with more fallback states\n    // on the client than if we just leave it alone. If the server times out or errors\n    // these should update this boundary to the permanent Fallback state instead.\n    // Mark it as having captured (i.e. suspended).\n    workInProgress.flags |= DidCapture;\n    // Leave the child in place. I.e. the dehydrated fragment.\n    workInProgress.child = current.child;\n    // Register a callback to retry this boundary once the server has sent the result.\n    const retry = retryDehydratedSuspenseBoundary.bind(null, current);\n    registerSuspenseInstanceRetry(suspenseInstance, retry);\n    return null;\n  } else {\n    // This is the first attempt.\n    reenterHydrationStateFromDehydratedSuspenseInstance(\n      workInProgress,\n      suspenseInstance,\n    );\n    const nextProps = workInProgress.pendingProps;\n    const primaryChildren = nextProps.children;\n    const primaryChildFragment = mountSuspensePrimaryChildren(\n      workInProgress,\n      primaryChildren,\n      renderLanes,\n    );\n    // Mark the children as hydrating. This is a fast path to know whether this\n    // tree is part of a hydrating tree. This is used to determine if a child\n    // node has fully mounted yet, and for scheduling event replaying.\n    // Conceptually this is similar to Placement in that a new subtree is\n    // inserted into the React tree here. It just happens to not need DOM\n    // mutations because it already exists.\n    primaryChildFragment.flags |= Hydrating;\n    return primaryChildFragment;\n  }\n}\n\nfunction scheduleWorkOnFiber(fiber: Fiber, renderLanes: Lanes) {\n  fiber.lanes = mergeLanes(fiber.lanes, renderLanes);\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, renderLanes);\n  }\n  scheduleWorkOnParentPath(fiber.return, renderLanes);\n}\n\nfunction propagateSuspenseContextChange(\n  workInProgress: Fiber,\n  firstChild: null | Fiber,\n  renderLanes: Lanes,\n): void {\n  // Mark any Suspense boundaries with fallbacks as having work to do.\n  // If they were previously forced into fallbacks, they may now be able\n  // to unblock.\n  let node = firstChild;\n  while (node !== null) {\n    if (node.tag === SuspenseComponent) {\n      const state: SuspenseState | null = node.memoizedState;\n      if (state !== null) {\n        scheduleWorkOnFiber(node, renderLanes);\n      }\n    } else if (node.tag === SuspenseListComponent) {\n      // If the tail is hidden there might not be an Suspense boundaries\n      // to schedule work on. In this case we have to schedule it on the\n      // list itself.\n      // We don't have to traverse to the children of the list since\n      // the list will propagate the change when it rerenders.\n      scheduleWorkOnFiber(node, renderLanes);\n    } else if (node.child !== null) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === workInProgress) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === workInProgress) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction findLastContentRow(firstChild: null | Fiber): null | Fiber {\n  // This is going to find the last row among these children that is already\n  // showing content on the screen, as opposed to being in fallback state or\n  // new. If a row has multiple Suspense boundaries, any of them being in the\n  // fallback state, counts as the whole row being in a fallback state.\n  // Note that the \"rows\" will be workInProgress, but any nested children\n  // will still be current since we haven't rendered them yet. The mounted\n  // order may not be the same as the new order. We use the new order.\n  let row = firstChild;\n  let lastContentRow: null | Fiber = null;\n  while (row !== null) {\n    const currentRow = row.alternate;\n    // New rows can't be content rows.\n    if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n      lastContentRow = row;\n    }\n    row = row.sibling;\n  }\n  return lastContentRow;\n}\n\ntype SuspenseListRevealOrder = 'forwards' | 'backwards' | 'together' | void;\n\nfunction validateRevealOrder(revealOrder: SuspenseListRevealOrder) {\n  if (__DEV__) {\n    if (\n      revealOrder !== undefined &&\n      revealOrder !== 'forwards' &&\n      revealOrder !== 'backwards' &&\n      revealOrder !== 'together' &&\n      !didWarnAboutRevealOrder[revealOrder]\n    ) {\n      didWarnAboutRevealOrder[revealOrder] = true;\n      if (typeof revealOrder === 'string') {\n        switch (revealOrder.toLowerCase()) {\n          case 'together':\n          case 'forwards':\n          case 'backwards': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'Use lowercase \"%s\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          case 'forward':\n          case 'backward': {\n            console.error(\n              '\"%s\" is not a valid value for revealOrder on <SuspenseList />. ' +\n                'React uses the -s suffix in the spelling. Use \"%ss\" instead.',\n              revealOrder,\n              revealOrder.toLowerCase(),\n            );\n            break;\n          }\n          default:\n            console.error(\n              '\"%s\" is not a supported revealOrder on <SuspenseList />. ' +\n                'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n              revealOrder,\n            );\n            break;\n        }\n      } else {\n        console.error(\n          '%s is not a supported value for revealOrder on <SuspenseList />. ' +\n            'Did you mean \"together\", \"forwards\" or \"backwards\"?',\n          revealOrder,\n        );\n      }\n    }\n  }\n}\n\nfunction validateTailOptions(\n  tailMode: SuspenseListTailMode,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (tailMode !== undefined && !didWarnAboutTailOptions[tailMode]) {\n      if (tailMode !== 'collapsed' && tailMode !== 'hidden') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '\"%s\" is not a supported value for tail on <SuspenseList />. ' +\n            'Did you mean \"collapsed\" or \"hidden\"?',\n          tailMode,\n        );\n      } else if (revealOrder !== 'forwards' && revealOrder !== 'backwards') {\n        didWarnAboutTailOptions[tailMode] = true;\n        console.error(\n          '<SuspenseList tail=\"%s\" /> is only valid if revealOrder is ' +\n            '\"forwards\" or \"backwards\". ' +\n            'Did you mean to specify revealOrder=\"forwards\"?',\n          tailMode,\n        );\n      }\n    }\n  }\n}\n\nfunction validateSuspenseListNestedChild(childSlot: mixed, index: number) {\n  if (__DEV__) {\n    const isAnArray = isArray(childSlot);\n    const isIterable =\n      !isAnArray && typeof getIteratorFn(childSlot) === 'function';\n    if (isAnArray || isIterable) {\n      const type = isAnArray ? 'array' : 'iterable';\n      console.error(\n        'A nested %s was passed to row #%s in <SuspenseList />. Wrap it in ' +\n          'an additional SuspenseList to configure its revealOrder: ' +\n          '<SuspenseList revealOrder=...> ... ' +\n          '<SuspenseList revealOrder=...>{%s}</SuspenseList> ... ' +\n          '</SuspenseList>',\n        type,\n        index,\n        type,\n      );\n      return false;\n    }\n  }\n  return true;\n}\n\nfunction validateSuspenseListChildren(\n  children: mixed,\n  revealOrder: SuspenseListRevealOrder,\n) {\n  if (__DEV__) {\n    if (\n      (revealOrder === 'forwards' || revealOrder === 'backwards') &&\n      children !== undefined &&\n      children !== null &&\n      children !== false\n    ) {\n      if (isArray(children)) {\n        for (let i = 0; i < children.length; i++) {\n          if (!validateSuspenseListNestedChild(children[i], i)) {\n            return;\n          }\n        }\n      } else {\n        const iteratorFn = getIteratorFn(children);\n        if (typeof iteratorFn === 'function') {\n          const childrenIterator = iteratorFn.call(children);\n          if (childrenIterator) {\n            let step = childrenIterator.next();\n            let i = 0;\n            for (; !step.done; step = childrenIterator.next()) {\n              if (!validateSuspenseListNestedChild(step.value, i)) {\n                return;\n              }\n              i++;\n            }\n          }\n        } else {\n          console.error(\n            'A single row was passed to a <SuspenseList revealOrder=\"%s\" />. ' +\n              'This is not useful since it needs multiple rows. ' +\n              'Did you mean to pass multiple children or an array?',\n            revealOrder,\n          );\n        }\n      }\n    }\n  }\n}\n\nfunction initSuspenseListRenderState(\n  workInProgress: Fiber,\n  isBackwards: boolean,\n  tail: null | Fiber,\n  lastContentRow: null | Fiber,\n  tailMode: SuspenseListTailMode,\n): void {\n  const renderState: null | SuspenseListRenderState =\n    workInProgress.memoizedState;\n  if (renderState === null) {\n    workInProgress.memoizedState = ({\n      isBackwards: isBackwards,\n      rendering: null,\n      renderingStartTime: 0,\n      last: lastContentRow,\n      tail: tail,\n      tailMode: tailMode,\n    }: SuspenseListRenderState);\n  } else {\n    // We can reuse the existing object from previous renders.\n    renderState.isBackwards = isBackwards;\n    renderState.rendering = null;\n    renderState.renderingStartTime = 0;\n    renderState.last = lastContentRow;\n    renderState.tail = tail;\n    renderState.tailMode = tailMode;\n  }\n}\n\n// This can end up rendering this component multiple passes.\n// The first pass splits the children fibers into two sets. A head and tail.\n// We first render the head. If anything is in fallback state, we do another\n// pass through beginWork to rerender all children (including the tail) with\n// the force suspend context. If the first render didn't have anything in\n// in fallback state. Then we render each row in the tail one-by-one.\n// That happens in the completeWork phase without going back to beginWork.\nfunction updateSuspenseListComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const nextProps = workInProgress.pendingProps;\n  const revealOrder: SuspenseListRevealOrder = nextProps.revealOrder;\n  const tailMode: SuspenseListTailMode = nextProps.tail;\n  const newChildren = nextProps.children;\n\n  validateRevealOrder(revealOrder);\n  validateTailOptions(tailMode, revealOrder);\n  validateSuspenseListChildren(newChildren, revealOrder);\n\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n\n  let suspenseContext: SuspenseContext = suspenseStackCursor.current;\n\n  const shouldForceFallback = hasSuspenseContext(\n    suspenseContext,\n    (ForceSuspenseFallback: SuspenseContext),\n  );\n  if (shouldForceFallback) {\n    suspenseContext = setShallowSuspenseContext(\n      suspenseContext,\n      ForceSuspenseFallback,\n    );\n    workInProgress.flags |= DidCapture;\n  } else {\n    const didSuspendBefore =\n      current !== null && (current.flags & DidCapture) !== NoFlags;\n    if (didSuspendBefore) {\n      // If we previously forced a fallback, we need to schedule work\n      // on any nested boundaries to let them know to try to render\n      // again. This is the same as context updating.\n      propagateSuspenseContextChange(\n        workInProgress,\n        workInProgress.child,\n        renderLanes,\n      );\n    }\n    suspenseContext = setDefaultShallowSuspenseContext(suspenseContext);\n  }\n  pushSuspenseContext(workInProgress, suspenseContext);\n\n  if ((workInProgress.mode & ConcurrentMode) === NoMode) {\n    // In legacy mode, SuspenseList doesn't work so we just\n    // use make it a noop by treating it as the default revealOrder.\n    workInProgress.memoizedState = null;\n  } else {\n    switch (revealOrder) {\n      case 'forwards': {\n        const lastContentRow = findLastContentRow(workInProgress.child);\n        let tail;\n        if (lastContentRow === null) {\n          // The whole list is part of the tail.\n          // TODO: We could fast path by just rendering the tail now.\n          tail = workInProgress.child;\n          workInProgress.child = null;\n        } else {\n          // Disconnect the tail rows after the content row.\n          // We're going to render them separately later.\n          tail = lastContentRow.sibling;\n          lastContentRow.sibling = null;\n        }\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          tail,\n          lastContentRow,\n          tailMode,\n        );\n        break;\n      }\n      case 'backwards': {\n        // We're going to find the first row that has existing content.\n        // At the same time we're going to reverse the list of everything\n        // we pass in the meantime. That's going to be our tail in reverse\n        // order.\n        let tail = null;\n        let row = workInProgress.child;\n        workInProgress.child = null;\n        while (row !== null) {\n          const currentRow = row.alternate;\n          // New rows can't be content rows.\n          if (currentRow !== null && findFirstSuspended(currentRow) === null) {\n            // This is the beginning of the main content.\n            workInProgress.child = row;\n            break;\n          }\n          const nextRow = row.sibling;\n          row.sibling = tail;\n          tail = row;\n          row = nextRow;\n        }\n        // TODO: If workInProgress.child is null, we can continue on the tail immediately.\n        initSuspenseListRenderState(\n          workInProgress,\n          true, // isBackwards\n          tail,\n          null, // last\n          tailMode,\n        );\n        break;\n      }\n      case 'together': {\n        initSuspenseListRenderState(\n          workInProgress,\n          false, // isBackwards\n          null, // tail\n          null, // last\n          undefined,\n        );\n        break;\n      }\n      default: {\n        // The default reveal order is the same as not having\n        // a boundary.\n        workInProgress.memoizedState = null;\n      }\n    }\n  }\n  return workInProgress.child;\n}\n\nfunction updatePortalComponent(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n  const nextChildren = workInProgress.pendingProps;\n  if (current === null) {\n    // Portals are special because we don't append the children during mount\n    // but at commit. Therefore we need to track insertions which the normal\n    // flow doesn't do during mount. This doesn't happen at the root because\n    // the root always starts with a \"current\" with a null child.\n    // TODO: Consider unifying this with how the root works.\n    workInProgress.child = reconcileChildFibers(\n      workInProgress,\n      null,\n      nextChildren,\n      renderLanes,\n    );\n  } else {\n    reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  }\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingNoValuePropOnContextProvider = false;\n\nfunction updateContextProvider(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  const providerType: ReactProviderType<any> = workInProgress.type;\n  const context: ReactContext<any> = providerType._context;\n\n  const newProps = workInProgress.pendingProps;\n  const oldProps = workInProgress.memoizedProps;\n\n  const newValue = newProps.value;\n\n  if (__DEV__) {\n    if (!('value' in newProps)) {\n      if (!hasWarnedAboutUsingNoValuePropOnContextProvider) {\n        hasWarnedAboutUsingNoValuePropOnContextProvider = true;\n        console.error(\n          'The `value` prop is required for the `<Context.Provider>`. Did you misspell it or forget to pass it?',\n        );\n      }\n    }\n    const providerPropTypes = workInProgress.type.propTypes;\n\n    if (providerPropTypes) {\n      checkPropTypes(providerPropTypes, newProps, 'prop', 'Context.Provider');\n    }\n  }\n\n  pushProvider(workInProgress, context, newValue);\n\n  if (enableLazyContextPropagation) {\n    // In the lazy propagation implementation, we don't scan for matching\n    // consumers until something bails out, because until something bails out\n    // we're going to visit those nodes, anyway. The trade-off is that it shifts\n    // responsibility to the consumer to track whether something has changed.\n  } else {\n    if (oldProps !== null) {\n      const oldValue = oldProps.value;\n      if (is(oldValue, newValue)) {\n        // No change. Bailout early if children are the same.\n        if (\n          oldProps.children === newProps.children &&\n          !hasLegacyContextChanged()\n        ) {\n          return bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n        }\n      } else {\n        // The context value changed. Search for matching consumers and schedule\n        // them to update.\n        propagateContextChange(workInProgress, context, renderLanes);\n      }\n    }\n  }\n\n  const newChildren = newProps.children;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nlet hasWarnedAboutUsingContextAsConsumer = false;\n\nfunction updateContextConsumer(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  let context: ReactContext<any> = workInProgress.type;\n  // The logic below for Context differs depending on PROD or DEV mode. In\n  // DEV mode, we create a separate object for Context.Consumer that acts\n  // like a proxy to Context. This proxy object adds unnecessary code in PROD\n  // so we use the old behaviour (Context.Consumer references Context) to\n  // reduce size and overhead. The separate object references context via\n  // a property called \"_context\", which also gives us the ability to check\n  // in DEV mode if this property exists or not and warn if it does not.\n  if (__DEV__) {\n    if ((context: any)._context === undefined) {\n      // This may be because it's a Context (rather than a Consumer).\n      // Or it may be because it's older React where they're the same thing.\n      // We only want to warn if we're sure it's a new React.\n      if (context !== context.Consumer) {\n        if (!hasWarnedAboutUsingContextAsConsumer) {\n          hasWarnedAboutUsingContextAsConsumer = true;\n          console.error(\n            'Rendering <Context> directly is not supported and will be removed in ' +\n              'a future major release. Did you mean to render <Context.Consumer> instead?',\n          );\n        }\n      }\n    } else {\n      context = (context: any)._context;\n    }\n  }\n  const newProps = workInProgress.pendingProps;\n  const render = newProps.children;\n\n  if (__DEV__) {\n    if (typeof render !== 'function') {\n      console.error(\n        'A context consumer was rendered with multiple children, or a child ' +\n          \"that isn't a function. A context consumer expects a single child \" +\n          'that is a function. If you did pass a function, make sure there ' +\n          'is no trailing or leading whitespace around it.',\n      );\n    }\n  }\n\n  prepareToReadContext(workInProgress, renderLanes);\n  const newValue = readContext(context);\n  if (enableSchedulingProfiler) {\n    markComponentRenderStarted(workInProgress);\n  }\n  let newChildren;\n  if (__DEV__) {\n    ReactCurrentOwner.current = workInProgress;\n    setIsRendering(true);\n    newChildren = render(newValue);\n    setIsRendering(false);\n  } else {\n    newChildren = render(newValue);\n  }\n  if (enableSchedulingProfiler) {\n    markComponentRenderStopped();\n  }\n\n  // React DevTools reads this flag.\n  workInProgress.flags |= PerformedWork;\n  reconcileChildren(current, workInProgress, newChildren, renderLanes);\n  return workInProgress.child;\n}\n\nfunction updateScopeComponent(current, workInProgress, renderLanes) {\n  const nextProps = workInProgress.pendingProps;\n  const nextChildren = nextProps.children;\n\n  reconcileChildren(current, workInProgress, nextChildren, renderLanes);\n  return workInProgress.child;\n}\n\nexport function markWorkInProgressReceivedUpdate() {\n  didReceiveUpdate = true;\n}\n\nexport function checkIfWorkInProgressReceivedUpdate() {\n  return didReceiveUpdate;\n}\n\nfunction bailoutOnAlreadyFinishedWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (current !== null) {\n    // Reuse previous dependencies\n    workInProgress.dependencies = current.dependencies;\n  }\n\n  if (enableProfilerTimer) {\n    // Don't update \"base\" render times for bailouts.\n    stopProfilerTimerIfRunning(workInProgress);\n  }\n\n  markSkippedUpdateLanes(workInProgress.lanes);\n\n  // Check if the children have any pending work.\n  if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n    // The children don't have any work either. We can skip them.\n    // TODO: Once we add back resuming, we should check if the children are\n    // a work-in-progress set. If so, we need to transfer their effects.\n\n    if (enableLazyContextPropagation && current !== null) {\n      // Before bailing out, check if there are any context changes in\n      // the children.\n      lazilyPropagateParentContextChanges(current, workInProgress, renderLanes);\n      if (!includesSomeLane(renderLanes, workInProgress.childLanes)) {\n        return null;\n      }\n    } else {\n      return null;\n    }\n  }\n\n  // This fiber doesn't have work, but its subtree does. Clone the child\n  // fibers and continue.\n  cloneChildFibers(current, workInProgress);\n  return workInProgress.child;\n}\n\nfunction remountFiber(\n  current: Fiber,\n  oldWorkInProgress: Fiber,\n  newWorkInProgress: Fiber,\n): Fiber | null {\n  if (__DEV__) {\n    const returnFiber = oldWorkInProgress.return;\n    if (returnFiber === null) {\n      throw new Error('Cannot swap the root fiber.');\n    }\n\n    // Disconnect from the old current.\n    // It will get deleted.\n    current.alternate = null;\n    oldWorkInProgress.alternate = null;\n\n    // Connect to the new tree.\n    newWorkInProgress.index = oldWorkInProgress.index;\n    newWorkInProgress.sibling = oldWorkInProgress.sibling;\n    newWorkInProgress.return = oldWorkInProgress.return;\n    newWorkInProgress.ref = oldWorkInProgress.ref;\n\n    // Replace the child/sibling pointers above it.\n    if (oldWorkInProgress === returnFiber.child) {\n      returnFiber.child = newWorkInProgress;\n    } else {\n      let prevSibling = returnFiber.child;\n      if (prevSibling === null) {\n        throw new Error('Expected parent to have a child.');\n      }\n      while (prevSibling.sibling !== oldWorkInProgress) {\n        prevSibling = prevSibling.sibling;\n        if (prevSibling === null) {\n          throw new Error('Expected to find the previous sibling.');\n        }\n      }\n      prevSibling.sibling = newWorkInProgress;\n    }\n\n    // Delete the old fiber and place the new one.\n    // Since the old fiber is disconnected, we have to schedule it manually.\n    const deletions = returnFiber.deletions;\n    if (deletions === null) {\n      returnFiber.deletions = [current];\n      returnFiber.flags |= ChildDeletion;\n    } else {\n      deletions.push(current);\n    }\n\n    newWorkInProgress.flags |= Placement;\n\n    // Restart work from the new fiber.\n    return newWorkInProgress;\n  } else {\n    throw new Error(\n      'Did not expect this call in production. ' +\n        'This is a bug in React. Please file an issue.',\n    );\n  }\n}\n\nfunction checkScheduledUpdateOrContext(\n  current: Fiber,\n  renderLanes: Lanes,\n): boolean {\n  // Before performing an early bailout, we must check if there are pending\n  // updates or context.\n  const updateLanes = current.lanes;\n  if (includesSomeLane(updateLanes, renderLanes)) {\n    return true;\n  }\n  // No pending update, but because context is propagated lazily, we need\n  // to check for a context change before we bail out.\n  if (enableLazyContextPropagation) {\n    const dependencies = current.dependencies;\n    if (dependencies !== null && checkIfContextChanged(dependencies)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nfunction attemptEarlyBailoutIfNoScheduledUpdate(\n  current: Fiber,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n) {\n  // This fiber does not have any pending work. Bailout without entering\n  // the begin phase. There's still some bookkeeping we that needs to be done\n  // in this optimized path, mostly pushing stuff onto the stack.\n  switch (workInProgress.tag) {\n    case HostRoot:\n      pushHostRootContext(workInProgress);\n      if (enableCache) {\n        const root: FiberRoot = workInProgress.stateNode;\n        const cache: Cache = current.memoizedState.cache;\n        pushCacheProvider(workInProgress, cache);\n        pushRootCachePool(root);\n      }\n      resetHydrationState();\n      break;\n    case HostComponent:\n      pushHostContext(workInProgress);\n      break;\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        pushLegacyContextProvider(workInProgress);\n      }\n      break;\n    }\n    case HostPortal:\n      pushHostContainer(workInProgress, workInProgress.stateNode.containerInfo);\n      break;\n    case ContextProvider: {\n      const newValue = workInProgress.memoizedProps.value;\n      const context: ReactContext<any> = workInProgress.type._context;\n      pushProvider(workInProgress, context, newValue);\n      break;\n    }\n    case Profiler:\n      if (enableProfilerTimer) {\n        // Profiler should only call onRender when one of its descendants actually rendered.\n        const hasChildWork = includesSomeLane(\n          renderLanes,\n          workInProgress.childLanes,\n        );\n        if (hasChildWork) {\n          workInProgress.flags |= Update;\n        }\n\n        if (enableProfilerCommitHooks) {\n          // Reset effect durations for the next eventual effect phase.\n          // These are reset during render to allow the DevTools commit hook a chance to read them,\n          const stateNode = workInProgress.stateNode;\n          stateNode.effectDuration = 0;\n          stateNode.passiveEffectDuration = 0;\n        }\n      }\n      break;\n    case SuspenseComponent: {\n      const state: SuspenseState | null = workInProgress.memoizedState;\n      if (state !== null) {\n        if (enableSuspenseServerRenderer) {\n          if (state.dehydrated !== null) {\n            pushSuspenseContext(\n              workInProgress,\n              setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n            );\n            // We know that this component will suspend again because if it has\n            // been unsuspended it has committed as a resolved Suspense component.\n            // If it needs to be retried, it should have work scheduled on it.\n            workInProgress.flags |= DidCapture;\n            // We should never render the children of a dehydrated boundary until we\n            // upgrade it. We return null instead of bailoutOnAlreadyFinishedWork.\n            return null;\n          }\n        }\n\n        // If this boundary is currently timed out, we need to decide\n        // whether to retry the primary children, or to skip over it and\n        // go straight to the fallback. Check the priority of the primary\n        // child fragment.\n        const primaryChildFragment: Fiber = (workInProgress.child: any);\n        const primaryChildLanes = primaryChildFragment.childLanes;\n        if (includesSomeLane(renderLanes, primaryChildLanes)) {\n          // The primary children have pending work. Use the normal path\n          // to attempt to render the primary children again.\n          return updateSuspenseComponent(current, workInProgress, renderLanes);\n        } else {\n          // The primary child fragment does not have pending work marked\n          // on it\n          pushSuspenseContext(\n            workInProgress,\n            setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n          );\n          // The primary children do not have pending work with sufficient\n          // priority. Bailout.\n          const child = bailoutOnAlreadyFinishedWork(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n          if (child !== null) {\n            // The fallback children have pending work. Skip over the\n            // primary children and work on the fallback.\n            return child.sibling;\n          } else {\n            // Note: We can return `null` here because we already checked\n            // whether there were nested context consumers, via the call to\n            // `bailoutOnAlreadyFinishedWork` above.\n            return null;\n          }\n        }\n      } else {\n        pushSuspenseContext(\n          workInProgress,\n          setDefaultShallowSuspenseContext(suspenseStackCursor.current),\n        );\n      }\n      break;\n    }\n    case SuspenseListComponent: {\n      const didSuspendBefore = (current.flags & DidCapture) !== NoFlags;\n\n      let hasChildWork = includesSomeLane(\n        renderLanes,\n        workInProgress.childLanes,\n      );\n\n      if (enableLazyContextPropagation && !hasChildWork) {\n        // Context changes may not have been propagated yet. We need to do\n        // that now, before we can decide whether to bail out.\n        // TODO: We use `childLanes` as a heuristic for whether there is\n        // remaining work in a few places, including\n        // `bailoutOnAlreadyFinishedWork` and\n        // `updateDehydratedSuspenseComponent`. We should maybe extract this\n        // into a dedicated function.\n        lazilyPropagateParentContextChanges(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n        hasChildWork = includesSomeLane(renderLanes, workInProgress.childLanes);\n      }\n\n      if (didSuspendBefore) {\n        if (hasChildWork) {\n          // If something was in fallback state last time, and we have all the\n          // same children then we're still in progressive loading state.\n          // Something might get unblocked by state updates or retries in the\n          // tree which will affect the tail. So we need to use the normal\n          // path to compute the correct tail.\n          return updateSuspenseListComponent(\n            current,\n            workInProgress,\n            renderLanes,\n          );\n        }\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        workInProgress.flags |= DidCapture;\n      }\n\n      // If nothing suspended before and we're rendering the same children,\n      // then the tail doesn't matter. Anything new that suspends will work\n      // in the \"together\" mode, so we can continue from the state we had.\n      const renderState = workInProgress.memoizedState;\n      if (renderState !== null) {\n        // Reset to the \"together\" mode in case we've started a different\n        // update in the past but didn't complete it.\n        renderState.rendering = null;\n        renderState.tail = null;\n        renderState.lastEffect = null;\n      }\n      pushSuspenseContext(workInProgress, suspenseStackCursor.current);\n\n      if (hasChildWork) {\n        break;\n      } else {\n        // If none of the children had any work, that means that none of\n        // them got retried so they'll still be blocked in the same way\n        // as before. We can fast bail out.\n        return null;\n      }\n    }\n    case OffscreenComponent:\n    case LegacyHiddenComponent: {\n      // Need to check if the tree still needs to be deferred. This is\n      // almost identical to the logic used in the normal update path,\n      // so we'll just enter that. The only difference is we'll bail out\n      // at the next level instead of this one, because the child props\n      // have not changed. Which is fine.\n      // TODO: Probably should refactor `beginWork` to split the bailout\n      // path from the normal path. I'm tempted to do a labeled break here\n      // but I won't :)\n      workInProgress.lanes = NoLanes;\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        const cache: Cache = current.memoizedState.cache;\n        pushCacheProvider(workInProgress, cache);\n      }\n      break;\n    }\n  }\n  return bailoutOnAlreadyFinishedWork(current, workInProgress, renderLanes);\n}\n\nfunction beginWork(\n  current: Fiber | null,\n  workInProgress: Fiber,\n  renderLanes: Lanes,\n): Fiber | null {\n  if (__DEV__) {\n    if (workInProgress._debugNeedsRemount && current !== null) {\n      // This will restart the begin phase with a new fiber.\n      return remountFiber(\n        current,\n        workInProgress,\n        createFiberFromTypeAndProps(\n          workInProgress.type,\n          workInProgress.key,\n          workInProgress.pendingProps,\n          workInProgress._debugOwner || null,\n          workInProgress.mode,\n          workInProgress.lanes,\n        ),\n      );\n    }\n  }\n\n  if (current !== null) {\n    const oldProps = current.memoizedProps;\n    const newProps = workInProgress.pendingProps;\n\n    if (\n      oldProps !== newProps ||\n      hasLegacyContextChanged() ||\n      // Force a re-render if the implementation changed due to hot reload:\n      (__DEV__ ? workInProgress.type !== current.type : false)\n    ) {\n      // If props or context changed, mark the fiber as having performed work.\n      // This may be unset if the props are determined to be equal later (memo).\n      didReceiveUpdate = true;\n    } else {\n      // Neither props nor legacy context changes. Check if there's a pending\n      // update or context change.\n      const hasScheduledUpdateOrContext = checkScheduledUpdateOrContext(\n        current,\n        renderLanes,\n      );\n      if (\n        !hasScheduledUpdateOrContext &&\n        // If this is the second pass of an error or suspense boundary, there\n        // may not be work scheduled on `current`, so we check for this flag.\n        (workInProgress.flags & DidCapture) === NoFlags\n      ) {\n        // No pending updates or context. Bail out now.\n        didReceiveUpdate = false;\n        return attemptEarlyBailoutIfNoScheduledUpdate(\n          current,\n          workInProgress,\n          renderLanes,\n        );\n      }\n      if ((current.flags & ForceUpdateForLegacySuspense) !== NoFlags) {\n        // This is a special case that only exists for legacy mode.\n        // See https://github.com/facebook/react/pull/19216.\n        didReceiveUpdate = true;\n      } else {\n        // An update was scheduled on this fiber, but there are no new props\n        // nor legacy context. Set this to false. If an update queue or context\n        // consumer produces a changed value, it will set this to true. Otherwise,\n        // the component will assume the children have not changed and bail out.\n        didReceiveUpdate = false;\n      }\n    }\n  } else {\n    didReceiveUpdate = false;\n  }\n\n  // Before entering the begin phase, clear pending update priority.\n  // TODO: This assumes that we're about to evaluate the component and process\n  // the update queue. However, there's an exception: SimpleMemoComponent\n  // sometimes bails out later in the begin phase. This indicates that we should\n  // move this assignment out of the common path and into each branch.\n  workInProgress.lanes = NoLanes;\n\n  switch (workInProgress.tag) {\n    case IndeterminateComponent: {\n      return mountIndeterminateComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        renderLanes,\n      );\n    }\n    case LazyComponent: {\n      const elementType = workInProgress.elementType;\n      return mountLazyComponent(\n        current,\n        workInProgress,\n        elementType,\n        renderLanes,\n      );\n    }\n    case FunctionComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateFunctionComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return updateClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case HostRoot:\n      return updateHostRoot(current, workInProgress, renderLanes);\n    case HostComponent:\n      return updateHostComponent(current, workInProgress, renderLanes);\n    case HostText:\n      return updateHostText(current, workInProgress);\n    case SuspenseComponent:\n      return updateSuspenseComponent(current, workInProgress, renderLanes);\n    case HostPortal:\n      return updatePortalComponent(current, workInProgress, renderLanes);\n    case ForwardRef: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === type\n          ? unresolvedProps\n          : resolveDefaultProps(type, unresolvedProps);\n      return updateForwardRef(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case Fragment:\n      return updateFragment(current, workInProgress, renderLanes);\n    case Mode:\n      return updateMode(current, workInProgress, renderLanes);\n    case Profiler:\n      return updateProfiler(current, workInProgress, renderLanes);\n    case ContextProvider:\n      return updateContextProvider(current, workInProgress, renderLanes);\n    case ContextConsumer:\n      return updateContextConsumer(current, workInProgress, renderLanes);\n    case MemoComponent: {\n      const type = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      // Resolve outer props first, then resolve inner props.\n      let resolvedProps = resolveDefaultProps(type, unresolvedProps);\n      if (__DEV__) {\n        if (workInProgress.type !== workInProgress.elementType) {\n          const outerPropTypes = type.propTypes;\n          if (outerPropTypes) {\n            checkPropTypes(\n              outerPropTypes,\n              resolvedProps, // Resolved for outer only\n              'prop',\n              getComponentNameFromType(type),\n            );\n          }\n        }\n      }\n      resolvedProps = resolveDefaultProps(type.type, resolvedProps);\n      return updateMemoComponent(\n        current,\n        workInProgress,\n        type,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SimpleMemoComponent: {\n      return updateSimpleMemoComponent(\n        current,\n        workInProgress,\n        workInProgress.type,\n        workInProgress.pendingProps,\n        renderLanes,\n      );\n    }\n    case IncompleteClassComponent: {\n      const Component = workInProgress.type;\n      const unresolvedProps = workInProgress.pendingProps;\n      const resolvedProps =\n        workInProgress.elementType === Component\n          ? unresolvedProps\n          : resolveDefaultProps(Component, unresolvedProps);\n      return mountIncompleteClassComponent(\n        current,\n        workInProgress,\n        Component,\n        resolvedProps,\n        renderLanes,\n      );\n    }\n    case SuspenseListComponent: {\n      return updateSuspenseListComponent(current, workInProgress, renderLanes);\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        return updateScopeComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n    case OffscreenComponent: {\n      return updateOffscreenComponent(current, workInProgress, renderLanes);\n    }\n    case LegacyHiddenComponent: {\n      return updateLegacyHiddenComponent(current, workInProgress, renderLanes);\n    }\n    case CacheComponent: {\n      if (enableCache) {\n        return updateCacheComponent(current, workInProgress, renderLanes);\n      }\n      break;\n    }\n  }\n  invariant(\n    false,\n    'Unknown unit of work tag (%s). This error is likely caused by a bug in ' +\n      'React. Please file an issue.',\n    workInProgress.tag,\n  );\n}\n\nexport {beginWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactContext} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {Cache, SpawnedCachePool} from './ReactFiberCacheComponent.old';\n\nimport {resetWorkInProgressVersions as resetMutableSourceWorkInProgressVersions} from './ReactMutableSource.old';\nimport {\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostPortal,\n  ContextProvider,\n  SuspenseComponent,\n  SuspenseListComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport {DidCapture, NoFlags, ShouldCapture} from './ReactFiberFlags';\nimport {NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {\n  enableSuspenseServerRenderer,\n  enableProfilerTimer,\n  enableCache,\n} from 'shared/ReactFeatureFlags';\n\nimport {popHostContainer, popHostContext} from './ReactFiberHostContext.old';\nimport {popSuspenseContext} from './ReactFiberSuspenseContext.old';\nimport {resetHydrationState} from './ReactFiberHydrationContext.old';\nimport {\n  isContextProvider as isLegacyContextProvider,\n  popContext as popLegacyContext,\n  popTopLevelContextObject as popTopLevelLegacyContextObject,\n} from './ReactFiberContext.old';\nimport {popProvider} from './ReactFiberNewContext.old';\nimport {popRenderLanes} from './ReactFiberWorkLoop.old';\nimport {\n  popCacheProvider,\n  popRootCachePool,\n  popCachePool,\n} from './ReactFiberCacheComponent.old';\nimport {transferActualDuration} from './ReactProfilerTimer.old';\n\nimport invariant from 'shared/invariant';\n\nfunction unwindWork(workInProgress: Fiber, renderLanes: Lanes) {\n  switch (workInProgress.tag) {\n    case ClassComponent: {\n      const Component = workInProgress.type;\n      if (isLegacyContextProvider(Component)) {\n        popLegacyContext(workInProgress);\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case HostRoot: {\n      if (enableCache) {\n        const root: FiberRoot = workInProgress.stateNode;\n        popRootCachePool(root, renderLanes);\n\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      popHostContainer(workInProgress);\n      popTopLevelLegacyContextObject(workInProgress);\n      resetMutableSourceWorkInProgressVersions();\n      const flags = workInProgress.flags;\n      invariant(\n        (flags & DidCapture) === NoFlags,\n        'The root failed to unmount after an error. This is likely a bug in ' +\n          'React. Please file an issue.',\n      );\n      workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n      return workInProgress;\n    }\n    case HostComponent: {\n      // TODO: popHydrationState\n      popHostContext(workInProgress);\n      return null;\n    }\n    case SuspenseComponent: {\n      popSuspenseContext(workInProgress);\n      if (enableSuspenseServerRenderer) {\n        const suspenseState: null | SuspenseState =\n          workInProgress.memoizedState;\n        if (suspenseState !== null && suspenseState.dehydrated !== null) {\n          invariant(\n            workInProgress.alternate !== null,\n            'Threw in newly mounted dehydrated component. This is likely a bug in ' +\n              'React. Please file an issue.',\n          );\n          resetHydrationState();\n        }\n      }\n      const flags = workInProgress.flags;\n      if (flags & ShouldCapture) {\n        workInProgress.flags = (flags & ~ShouldCapture) | DidCapture;\n        // Captured a suspense effect. Re-render the boundary.\n        if (\n          enableProfilerTimer &&\n          (workInProgress.mode & ProfileMode) !== NoMode\n        ) {\n          transferActualDuration(workInProgress);\n        }\n        return workInProgress;\n      }\n      return null;\n    }\n    case SuspenseListComponent: {\n      popSuspenseContext(workInProgress);\n      // SuspenseList doesn't actually catch anything. It should've been\n      // caught by a nested boundary. If not, it should bubble through.\n      return null;\n    }\n    case HostPortal:\n      popHostContainer(workInProgress);\n      return null;\n    case ContextProvider:\n      const context: ReactContext<any> = workInProgress.type._context;\n      popProvider(context, workInProgress);\n      return null;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(workInProgress);\n      if (enableCache) {\n        const spawnedCachePool: SpawnedCachePool | null = (workInProgress.updateQueue: any);\n        if (spawnedCachePool !== null) {\n          popCachePool(workInProgress);\n        }\n      }\n      return null;\n    case CacheComponent:\n      if (enableCache) {\n        const cache: Cache = workInProgress.memoizedState.cache;\n        popCacheProvider(workInProgress, cache);\n      }\n      return null;\n    default:\n      return null;\n  }\n}\n\nfunction unwindInterruptedWork(interruptedWork: Fiber, renderLanes: Lanes) {\n  switch (interruptedWork.tag) {\n    case ClassComponent: {\n      const childContextTypes = interruptedWork.type.childContextTypes;\n      if (childContextTypes !== null && childContextTypes !== undefined) {\n        popLegacyContext(interruptedWork);\n      }\n      break;\n    }\n    case HostRoot: {\n      if (enableCache) {\n        const root: FiberRoot = interruptedWork.stateNode;\n        popRootCachePool(root, renderLanes);\n\n        const cache: Cache = interruptedWork.memoizedState.cache;\n        popCacheProvider(interruptedWork, cache);\n      }\n      popHostContainer(interruptedWork);\n      popTopLevelLegacyContextObject(interruptedWork);\n      resetMutableSourceWorkInProgressVersions();\n      break;\n    }\n    case HostComponent: {\n      popHostContext(interruptedWork);\n      break;\n    }\n    case HostPortal:\n      popHostContainer(interruptedWork);\n      break;\n    case SuspenseComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case SuspenseListComponent:\n      popSuspenseContext(interruptedWork);\n      break;\n    case ContextProvider:\n      const context: ReactContext<any> = interruptedWork.type._context;\n      popProvider(context, interruptedWork);\n      break;\n    case OffscreenComponent:\n    case LegacyHiddenComponent:\n      popRenderLanes(interruptedWork);\n      if (enableCache) {\n        const spawnedCachePool: SpawnedCachePool | null = (interruptedWork.updateQueue: any);\n        if (spawnedCachePool !== null) {\n          popCachePool(interruptedWork);\n        }\n      }\n\n      break;\n    case CacheComponent:\n      if (enableCache) {\n        const cache: Cache = interruptedWork.memoizedState.cache;\n        popCacheProvider(interruptedWork, cache);\n      }\n      break;\n    default:\n      break;\n  }\n}\n\nexport {unwindWork, unwindInterruptedWork};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {\n  Instance,\n  TextInstance,\n  SuspenseInstance,\n  Container,\n  ChildSet,\n  UpdatePayload,\n} from './ReactFiberHostConfig';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {UpdateQueue} from './ReactUpdateQueue.old';\nimport type {FunctionComponentUpdateQueue} from './ReactFiberHooks.old';\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {OffscreenState} from './ReactFiberOffscreenComponent';\nimport type {HookFlags} from './ReactHookEffectTags';\n\nimport {\n  enableCreateEventHandleAPI,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableSuspenseServerRenderer,\n  enableSuspenseCallback,\n  enableScopeAPI,\n  enableStrictEffects,\n  deletedTreeCleanUpLevel,\n  enableSuspenseLayoutEffectSemantics,\n  enableUpdaterTracking,\n} from 'shared/ReactFeatureFlags';\nimport {\n  FunctionComponent,\n  ForwardRef,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  Profiler,\n  SuspenseComponent,\n  DehydratedFragment,\n  IncompleteClassComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  SuspenseListComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n} from './ReactWorkTags';\nimport {detachDeletedInstance} from './ReactFiberHostConfig';\nimport {\n  NoFlags,\n  ContentReset,\n  Placement,\n  PlacementAndUpdate,\n  ChildDeletion,\n  Snapshot,\n  Update,\n  Ref,\n  Hydrating,\n  HydratingAndUpdate,\n  Passive,\n  BeforeMutationMask,\n  MutationMask,\n  LayoutMask,\n  PassiveMask,\n  Visibility,\n} from './ReactFiberFlags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport invariant from 'shared/invariant';\nimport {\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {onCommitUnmount} from './ReactFiberDevToolsHook.old';\nimport {resolveDefaultProps} from './ReactFiberLazyComponent.old';\nimport {\n  isCurrentUpdateNested,\n  getCommitTime,\n  recordLayoutEffectDuration,\n  startLayoutEffectTimer,\n  recordPassiveEffectDuration,\n  startPassiveEffectTimer,\n} from './ReactProfilerTimer.old';\nimport {ConcurrentMode, NoMode, ProfileMode} from './ReactTypeOfMode';\nimport {commitUpdateQueue} from './ReactUpdateQueue.old';\nimport {\n  getPublicInstance,\n  supportsMutation,\n  supportsPersistence,\n  supportsHydration,\n  commitMount,\n  commitUpdate,\n  resetTextContent,\n  commitTextUpdate,\n  appendChild,\n  appendChildToContainer,\n  insertBefore,\n  insertInContainerBefore,\n  removeChild,\n  removeChildFromContainer,\n  clearSuspenseBoundary,\n  clearSuspenseBoundaryFromContainer,\n  replaceContainerChildren,\n  createContainerChildSet,\n  hideInstance,\n  hideTextInstance,\n  unhideInstance,\n  unhideTextInstance,\n  commitHydratedContainer,\n  commitHydratedSuspenseInstance,\n  clearContainer,\n  prepareScopeUpdate,\n  prepareForCommit,\n  beforeActiveInstanceBlur,\n} from './ReactFiberHostConfig';\nimport {\n  captureCommitPhaseError,\n  resolveRetryWakeable,\n  markCommitTimeOfFallback,\n  enqueuePendingPassiveProfilerEffect,\n  restorePendingUpdaters,\n} from './ReactFiberWorkLoop.old';\nimport {\n  NoFlags as NoHookEffect,\n  HasEffect as HookHasEffect,\n  Layout as HookLayout,\n  Passive as HookPassive,\n} from './ReactHookEffectTags';\nimport {didWarnAboutReassigningProps} from './ReactFiberBeginWork.old';\nimport {doesFiberContain} from './ReactFiberTreeReflection';\nimport {invokeGuardedCallback, clearCaughtError} from 'shared/ReactErrorUtils';\n\nlet didWarnAboutUndefinedSnapshotBeforeUpdate: Set<mixed> | null = null;\nif (__DEV__) {\n  didWarnAboutUndefinedSnapshotBeforeUpdate = new Set();\n}\n\n// Used during the commit phase to track the state of the Offscreen component stack.\n// Allows us to avoid traversing the return path to find the nearest Offscreen ancestor.\n// Only used when enableSuspenseLayoutEffectSemantics is enabled.\nlet offscreenSubtreeIsHidden: boolean = false;\nlet offscreenSubtreeWasHidden: boolean = false;\n\nconst PossiblyWeakSet = typeof WeakSet === 'function' ? WeakSet : Set;\n\nlet nextEffect: Fiber | null = null;\n\n// Used for Profiling builds to track updaters.\nlet inProgressLanes: Lanes | null = null;\nlet inProgressRoot: FiberRoot | null = null;\n\nfunction reportUncaughtErrorInDEV(error) {\n  // Wrapping each small part of the commit phase into a guarded\n  // callback is a bit too slow (https://github.com/facebook/react/pull/21666).\n  // But we rely on it to surface errors to DEV tools like overlays\n  // (https://github.com/facebook/react/issues/21712).\n  // As a compromise, rethrow only caught errors in a guard.\n  if (__DEV__) {\n    invokeGuardedCallback(null, () => {\n      throw error;\n    });\n    clearCaughtError();\n  }\n}\n\nconst callComponentWillUnmountWithTimer = function(current, instance) {\n  instance.props = current.memoizedProps;\n  instance.state = current.memoizedState;\n  if (\n    enableProfilerTimer &&\n    enableProfilerCommitHooks &&\n    current.mode & ProfileMode\n  ) {\n    try {\n      startLayoutEffectTimer();\n      instance.componentWillUnmount();\n    } finally {\n      recordLayoutEffectDuration(current);\n    }\n  } else {\n    instance.componentWillUnmount();\n  }\n};\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyCallCommitHookLayoutEffectListMount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  try {\n    commitHookEffectListMount(HookLayout, current);\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt unmounting.\nfunction safelyCallComponentWillUnmount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  instance: any,\n) {\n  try {\n    callComponentWillUnmountWithTimer(current, instance);\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyCallComponentDidMount(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  instance: any,\n) {\n  try {\n    instance.componentDidMount();\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\n// Capture errors so they don't interrupt mounting.\nfunction safelyAttachRef(current: Fiber, nearestMountedAncestor: Fiber | null) {\n  try {\n    commitAttachRef(current);\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nfunction safelyDetachRef(current: Fiber, nearestMountedAncestor: Fiber | null) {\n  const ref = current.ref;\n  if (ref !== null) {\n    if (typeof ref === 'function') {\n      try {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          current.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            ref(null);\n          } finally {\n            recordLayoutEffectDuration(current);\n          }\n        } else {\n          ref(null);\n        }\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(current, nearestMountedAncestor, error);\n      }\n    } else {\n      ref.current = null;\n    }\n  }\n}\n\nfunction safelyCallDestroy(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  destroy: () => void,\n) {\n  try {\n    destroy();\n  } catch (error) {\n    reportUncaughtErrorInDEV(error);\n    captureCommitPhaseError(current, nearestMountedAncestor, error);\n  }\n}\n\nlet focusedInstanceHandle: null | Fiber = null;\nlet shouldFireAfterActiveInstanceBlur: boolean = false;\n\nexport function commitBeforeMutationEffects(\n  root: FiberRoot,\n  firstChild: Fiber,\n) {\n  focusedInstanceHandle = prepareForCommit(root.containerInfo);\n\n  nextEffect = firstChild;\n  commitBeforeMutationEffects_begin();\n\n  // We no longer need to track the active instance fiber\n  const shouldFire = shouldFireAfterActiveInstanceBlur;\n  shouldFireAfterActiveInstanceBlur = false;\n  focusedInstanceHandle = null;\n\n  return shouldFire;\n}\n\nfunction commitBeforeMutationEffects_begin() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // This phase is only used for beforeActiveInstanceBlur.\n    // Let's skip the whole loop if it's off.\n    if (enableCreateEventHandleAPI) {\n      // TODO: Should wrap this in flags check, too, as optimization\n      const deletions = fiber.deletions;\n      if (deletions !== null) {\n        for (let i = 0; i < deletions.length; i++) {\n          const deletion = deletions[i];\n          commitBeforeMutationEffectsDeletion(deletion);\n        }\n      }\n    }\n\n    const child = fiber.child;\n    if (\n      (fiber.subtreeFlags & BeforeMutationMask) !== NoFlags &&\n      child !== null\n    ) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitBeforeMutationEffects_complete();\n    }\n  }\n}\n\nfunction commitBeforeMutationEffects_complete() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      commitBeforeMutationEffectsOnFiber(fiber);\n    } catch (error) {\n      reportUncaughtErrorInDEV(error);\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitBeforeMutationEffectsOnFiber(finishedWork: Fiber) {\n  const current = finishedWork.alternate;\n  const flags = finishedWork.flags;\n\n  if (enableCreateEventHandleAPI) {\n    if (!shouldFireAfterActiveInstanceBlur && focusedInstanceHandle !== null) {\n      // Check to see if the focused element was inside of a hidden (Suspense) subtree.\n      // TODO: Move this out of the hot path using a dedicated effect tag.\n      if (\n        finishedWork.tag === SuspenseComponent &&\n        isSuspenseBoundaryBeingHidden(current, finishedWork) &&\n        doesFiberContain(finishedWork, focusedInstanceHandle)\n      ) {\n        shouldFireAfterActiveInstanceBlur = true;\n        beforeActiveInstanceBlur(finishedWork);\n      }\n    }\n  }\n\n  if ((flags & Snapshot) !== NoFlags) {\n    setCurrentDebugFiberInDEV(finishedWork);\n\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        break;\n      }\n      case ClassComponent: {\n        if (current !== null) {\n          const prevProps = current.memoizedProps;\n          const prevState = current.memoizedState;\n          const instance = finishedWork.stateNode;\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'getSnapshotBeforeUpdate. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n            }\n          }\n          const snapshot = instance.getSnapshotBeforeUpdate(\n            finishedWork.elementType === finishedWork.type\n              ? prevProps\n              : resolveDefaultProps(finishedWork.type, prevProps),\n            prevState,\n          );\n          if (__DEV__) {\n            const didWarnSet = ((didWarnAboutUndefinedSnapshotBeforeUpdate: any): Set<mixed>);\n            if (snapshot === undefined && !didWarnSet.has(finishedWork.type)) {\n              didWarnSet.add(finishedWork.type);\n              console.error(\n                '%s.getSnapshotBeforeUpdate(): A snapshot value (or null) ' +\n                  'must be returned. You have returned undefined.',\n                getComponentNameFromFiber(finishedWork),\n              );\n            }\n          }\n          instance.__reactInternalSnapshotBeforeUpdate = snapshot;\n        }\n        break;\n      }\n      case HostRoot: {\n        if (supportsMutation) {\n          const root = finishedWork.stateNode;\n          clearContainer(root.containerInfo);\n        }\n        break;\n      }\n      case HostComponent:\n      case HostText:\n      case HostPortal:\n      case IncompleteClassComponent:\n        // Nothing to do for these component types\n        break;\n      default: {\n        invariant(\n          false,\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.',\n        );\n      }\n    }\n\n    resetCurrentDebugFiberInDEV();\n  }\n}\n\nfunction commitBeforeMutationEffectsDeletion(deletion: Fiber) {\n  if (enableCreateEventHandleAPI) {\n    // TODO (effects) It would be nice to avoid calling doesFiberContain()\n    // Maybe we can repurpose one of the subtreeFlags positions for this instead?\n    // Use it to store which part of the tree the focused instance is in?\n    // This assumes we can safely determine that instance during the \"render\" phase.\n    if (doesFiberContain(deletion, ((focusedInstanceHandle: any): Fiber))) {\n      shouldFireAfterActiveInstanceBlur = true;\n      beforeActiveInstanceBlur(deletion);\n    }\n  }\n}\n\nfunction commitHookEffectListUnmount(\n  flags: HookFlags,\n  finishedWork: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & flags) === flags) {\n        // Unmount\n        const destroy = effect.destroy;\n        effect.destroy = undefined;\n        if (destroy !== undefined) {\n          safelyCallDestroy(finishedWork, nearestMountedAncestor, destroy);\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nfunction commitHookEffectListMount(tag: number, finishedWork: Fiber) {\n  const updateQueue: FunctionComponentUpdateQueue | null = (finishedWork.updateQueue: any);\n  const lastEffect = updateQueue !== null ? updateQueue.lastEffect : null;\n  if (lastEffect !== null) {\n    const firstEffect = lastEffect.next;\n    let effect = firstEffect;\n    do {\n      if ((effect.tag & tag) === tag) {\n        // Mount\n        const create = effect.create;\n        effect.destroy = create();\n\n        if (__DEV__) {\n          const destroy = effect.destroy;\n          if (destroy !== undefined && typeof destroy !== 'function') {\n            let addendum;\n            if (destroy === null) {\n              addendum =\n                ' You returned null. If your effect does not require clean ' +\n                'up, return undefined (or nothing).';\n            } else if (typeof destroy.then === 'function') {\n              addendum =\n                '\\n\\nIt looks like you wrote useEffect(async () => ...) or returned a Promise. ' +\n                'Instead, write the async function inside your effect ' +\n                'and call it immediately:\\n\\n' +\n                'useEffect(() => {\\n' +\n                '  async function fetchData() {\\n' +\n                '    // You can await here\\n' +\n                '    const response = await MyAPI.getData(someId);\\n' +\n                '    // ...\\n' +\n                '  }\\n' +\n                '  fetchData();\\n' +\n                `}, [someId]); // Or [] if effect doesn't need props or state\\n\\n` +\n                'Learn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching';\n            } else {\n              addendum = ' You returned: ' + destroy;\n            }\n            console.error(\n              'An effect function must not return anything besides a function, ' +\n                'which is used for clean-up.%s',\n              addendum,\n            );\n          }\n        }\n      }\n      effect = effect.next;\n    } while (effect !== firstEffect);\n  }\n}\n\nexport function commitPassiveEffectDurations(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    // Only Profilers with work in their subtree will have an Update effect scheduled.\n    if ((finishedWork.flags & Update) !== NoFlags) {\n      switch (finishedWork.tag) {\n        case Profiler: {\n          const {passiveEffectDuration} = finishedWork.stateNode;\n          const {id, onPostCommit} = finishedWork.memoizedProps;\n\n          // This value will still reflect the previous commit phase.\n          // It does not get reset until the start of the next commit phase.\n          const commitTime = getCommitTime();\n\n          let phase = finishedWork.alternate === null ? 'mount' : 'update';\n          if (enableProfilerNestedUpdatePhase) {\n            if (isCurrentUpdateNested()) {\n              phase = 'nested-update';\n            }\n          }\n\n          if (typeof onPostCommit === 'function') {\n            onPostCommit(id, phase, passiveEffectDuration, commitTime);\n          }\n\n          // Bubble times to the next nearest ancestor Profiler.\n          // After we process that Profiler, we'll bubble further up.\n          let parentFiber = finishedWork.return;\n          outer: while (parentFiber !== null) {\n            switch (parentFiber.tag) {\n              case HostRoot:\n                const root = parentFiber.stateNode;\n                root.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n              case Profiler:\n                const parentStateNode = parentFiber.stateNode;\n                parentStateNode.passiveEffectDuration += passiveEffectDuration;\n                break outer;\n            }\n            parentFiber = parentFiber.return;\n          }\n          break;\n        }\n        default:\n          break;\n      }\n    }\n  }\n}\n\nfunction commitLayoutEffectOnFiber(\n  finishedRoot: FiberRoot,\n  current: Fiber | null,\n  finishedWork: Fiber,\n  committedLanes: Lanes,\n): void {\n  if ((finishedWork.flags & LayoutMask) !== NoFlags) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        if (\n          !enableSuspenseLayoutEffectSemantics ||\n          !offscreenSubtreeWasHidden\n        ) {\n          // At this point layout effects have already been destroyed (during mutation phase).\n          // This is done to prevent sibling component effects from interfering with each other,\n          // e.g. a destroy function in one component should never override a ref set\n          // by a create function in another component during the same commit.\n          if (\n            enableProfilerTimer &&\n            enableProfilerCommitHooks &&\n            finishedWork.mode & ProfileMode\n          ) {\n            try {\n              startLayoutEffectTimer();\n              commitHookEffectListMount(\n                HookLayout | HookHasEffect,\n                finishedWork,\n              );\n            } finally {\n              recordLayoutEffectDuration(finishedWork);\n            }\n          } else {\n            commitHookEffectListMount(HookLayout | HookHasEffect, finishedWork);\n          }\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = finishedWork.stateNode;\n        if (finishedWork.flags & Update) {\n          if (!offscreenSubtreeWasHidden) {\n            if (current === null) {\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              if (__DEV__) {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    console.error(\n                      'Expected %s props to match memoized props before ' +\n                        'componentDidMount. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.props`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                  if (instance.state !== finishedWork.memoizedState) {\n                    console.error(\n                      'Expected %s state to match memoized state before ' +\n                        'componentDidMount. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.state`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                }\n              }\n              if (\n                enableProfilerTimer &&\n                enableProfilerCommitHooks &&\n                finishedWork.mode & ProfileMode\n              ) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidMount();\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidMount();\n              }\n            } else {\n              const prevProps =\n                finishedWork.elementType === finishedWork.type\n                  ? current.memoizedProps\n                  : resolveDefaultProps(\n                      finishedWork.type,\n                      current.memoizedProps,\n                    );\n              const prevState = current.memoizedState;\n              // We could update instance props and state here,\n              // but instead we rely on them being set during last render.\n              // TODO: revisit this when we implement resuming.\n              if (__DEV__) {\n                if (\n                  finishedWork.type === finishedWork.elementType &&\n                  !didWarnAboutReassigningProps\n                ) {\n                  if (instance.props !== finishedWork.memoizedProps) {\n                    console.error(\n                      'Expected %s props to match memoized props before ' +\n                        'componentDidUpdate. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.props`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                  if (instance.state !== finishedWork.memoizedState) {\n                    console.error(\n                      'Expected %s state to match memoized state before ' +\n                        'componentDidUpdate. ' +\n                        'This might either be because of a bug in React, or because ' +\n                        'a component reassigns its own `this.state`. ' +\n                        'Please file an issue.',\n                      getComponentNameFromFiber(finishedWork) || 'instance',\n                    );\n                  }\n                }\n              }\n              if (\n                enableProfilerTimer &&\n                enableProfilerCommitHooks &&\n                finishedWork.mode & ProfileMode\n              ) {\n                try {\n                  startLayoutEffectTimer();\n                  instance.componentDidUpdate(\n                    prevProps,\n                    prevState,\n                    instance.__reactInternalSnapshotBeforeUpdate,\n                  );\n                } finally {\n                  recordLayoutEffectDuration(finishedWork);\n                }\n              } else {\n                instance.componentDidUpdate(\n                  prevProps,\n                  prevState,\n                  instance.__reactInternalSnapshotBeforeUpdate,\n                );\n              }\n            }\n          }\n        }\n\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue: UpdateQueue<\n          *,\n        > | null = (finishedWork.updateQueue: any);\n        if (updateQueue !== null) {\n          if (__DEV__) {\n            if (\n              finishedWork.type === finishedWork.elementType &&\n              !didWarnAboutReassigningProps\n            ) {\n              if (instance.props !== finishedWork.memoizedProps) {\n                console.error(\n                  'Expected %s props to match memoized props before ' +\n                    'processing the update queue. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.props`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n              if (instance.state !== finishedWork.memoizedState) {\n                console.error(\n                  'Expected %s state to match memoized state before ' +\n                    'processing the update queue. ' +\n                    'This might either be because of a bug in React, or because ' +\n                    'a component reassigns its own `this.state`. ' +\n                    'Please file an issue.',\n                  getComponentNameFromFiber(finishedWork) || 'instance',\n                );\n              }\n            }\n          }\n          // We could update instance props and state here,\n          // but instead we rely on them being set during last render.\n          // TODO: revisit this when we implement resuming.\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n        break;\n      }\n      case HostRoot: {\n        // TODO: I think this is now always non-null by the time it reaches the\n        // commit phase. Consider removing the type check.\n        const updateQueue: UpdateQueue<\n          *,\n        > | null = (finishedWork.updateQueue: any);\n        if (updateQueue !== null) {\n          let instance = null;\n          if (finishedWork.child !== null) {\n            switch (finishedWork.child.tag) {\n              case HostComponent:\n                instance = getPublicInstance(finishedWork.child.stateNode);\n                break;\n              case ClassComponent:\n                instance = finishedWork.child.stateNode;\n                break;\n            }\n          }\n          commitUpdateQueue(finishedWork, updateQueue, instance);\n        }\n        break;\n      }\n      case HostComponent: {\n        const instance: Instance = finishedWork.stateNode;\n\n        // Renderers may schedule work to be done after host components are mounted\n        // (eg DOM renderer may schedule auto-focus for inputs and form controls).\n        // These effects should only be committed when components are first mounted,\n        // aka when there is no current/alternate.\n        if (current === null && finishedWork.flags & Update) {\n          const type = finishedWork.type;\n          const props = finishedWork.memoizedProps;\n          commitMount(instance, type, props, finishedWork);\n        }\n\n        break;\n      }\n      case HostText: {\n        // We have no life-cycles associated with text.\n        break;\n      }\n      case HostPortal: {\n        // We have no life-cycles associated with portals.\n        break;\n      }\n      case Profiler: {\n        if (enableProfilerTimer) {\n          const {onCommit, onRender} = finishedWork.memoizedProps;\n          const {effectDuration} = finishedWork.stateNode;\n\n          const commitTime = getCommitTime();\n\n          let phase = current === null ? 'mount' : 'update';\n          if (enableProfilerNestedUpdatePhase) {\n            if (isCurrentUpdateNested()) {\n              phase = 'nested-update';\n            }\n          }\n\n          if (typeof onRender === 'function') {\n            onRender(\n              finishedWork.memoizedProps.id,\n              phase,\n              finishedWork.actualDuration,\n              finishedWork.treeBaseDuration,\n              finishedWork.actualStartTime,\n              commitTime,\n            );\n          }\n\n          if (enableProfilerCommitHooks) {\n            if (typeof onCommit === 'function') {\n              onCommit(\n                finishedWork.memoizedProps.id,\n                phase,\n                effectDuration,\n                commitTime,\n              );\n            }\n\n            // Schedule a passive effect for this Profiler to call onPostCommit hooks.\n            // This effect should be scheduled even if there is no onPostCommit callback for this Profiler,\n            // because the effect is also where times bubble to parent Profilers.\n            enqueuePendingPassiveProfilerEffect(finishedWork);\n\n            // Propagate layout effect durations to the next nearest Profiler ancestor.\n            // Do not reset these values until the next render so DevTools has a chance to read them first.\n            let parentFiber = finishedWork.return;\n            outer: while (parentFiber !== null) {\n              switch (parentFiber.tag) {\n                case HostRoot:\n                  const root = parentFiber.stateNode;\n                  root.effectDuration += effectDuration;\n                  break outer;\n                case Profiler:\n                  const parentStateNode = parentFiber.stateNode;\n                  parentStateNode.effectDuration += effectDuration;\n                  break outer;\n              }\n              parentFiber = parentFiber.return;\n            }\n          }\n        }\n        break;\n      }\n      case SuspenseComponent: {\n        commitSuspenseHydrationCallbacks(finishedRoot, finishedWork);\n        break;\n      }\n      case SuspenseListComponent:\n      case IncompleteClassComponent:\n      case ScopeComponent:\n      case OffscreenComponent:\n      case LegacyHiddenComponent:\n        break;\n      default:\n        invariant(\n          false,\n          'This unit of work tag should not have side-effects. This error is ' +\n            'likely caused by a bug in React. Please file an issue.',\n        );\n    }\n  }\n\n  if (!enableSuspenseLayoutEffectSemantics || !offscreenSubtreeWasHidden) {\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (finishedWork.flags & Ref && finishedWork.tag !== ScopeComponent) {\n        commitAttachRef(finishedWork);\n      }\n    } else {\n      if (finishedWork.flags & Ref) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n}\n\nfunction reappearLayoutEffectsOnFiber(node: Fiber) {\n  // Turn on layout effects in a tree that previously disappeared.\n  // TODO (Offscreen) Check: flags & LayoutStatic\n  switch (node.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        node.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          safelyCallCommitHookLayoutEffectListMount(node, node.return);\n        } finally {\n          recordLayoutEffectDuration(node);\n        }\n      } else {\n        safelyCallCommitHookLayoutEffectListMount(node, node.return);\n      }\n      break;\n    }\n    case ClassComponent: {\n      const instance = node.stateNode;\n      if (typeof instance.componentDidMount === 'function') {\n        safelyCallComponentDidMount(node, node.return, instance);\n      }\n      safelyAttachRef(node, node.return);\n      break;\n    }\n    case HostComponent: {\n      safelyAttachRef(node, node.return);\n      break;\n    }\n  }\n}\n\nfunction hideOrUnhideAllChildren(finishedWork, isHidden) {\n  // Only hide or unhide the top-most host nodes.\n  let hostSubtreeRoot = null;\n\n  if (supportsMutation) {\n    // We only have the top Fiber that was inserted but we need to recurse down its\n    // children to find all the terminal nodes.\n    let node: Fiber = finishedWork;\n    while (true) {\n      if (node.tag === HostComponent) {\n        if (hostSubtreeRoot === null) {\n          hostSubtreeRoot = node;\n\n          const instance = node.stateNode;\n          if (isHidden) {\n            hideInstance(instance);\n          } else {\n            unhideInstance(node.stateNode, node.memoizedProps);\n          }\n        }\n      } else if (node.tag === HostText) {\n        if (hostSubtreeRoot === null) {\n          const instance = node.stateNode;\n          if (isHidden) {\n            hideTextInstance(instance);\n          } else {\n            unhideTextInstance(instance, node.memoizedProps);\n          }\n        }\n      } else if (\n        (node.tag === OffscreenComponent ||\n          node.tag === LegacyHiddenComponent) &&\n        (node.memoizedState: OffscreenState) !== null &&\n        node !== finishedWork\n      ) {\n        // Found a nested Offscreen component that is hidden.\n        // Don't search any deeper. This tree should remain hidden.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n\n      if (node === finishedWork) {\n        return;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === finishedWork) {\n          return;\n        }\n\n        if (hostSubtreeRoot === node) {\n          hostSubtreeRoot = null;\n        }\n\n        node = node.return;\n      }\n\n      if (hostSubtreeRoot === node) {\n        hostSubtreeRoot = null;\n      }\n\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n}\n\nfunction commitAttachRef(finishedWork: Fiber) {\n  const ref = finishedWork.ref;\n  if (ref !== null) {\n    const instance = finishedWork.stateNode;\n    let instanceToUse;\n    switch (finishedWork.tag) {\n      case HostComponent:\n        instanceToUse = getPublicInstance(instance);\n        break;\n      default:\n        instanceToUse = instance;\n    }\n    // Moved outside to ensure DCE works with this flag\n    if (enableScopeAPI && finishedWork.tag === ScopeComponent) {\n      instanceToUse = instance;\n    }\n    if (typeof ref === 'function') {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          ref(instanceToUse);\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        ref(instanceToUse);\n      }\n    } else {\n      if (__DEV__) {\n        if (!ref.hasOwnProperty('current')) {\n          console.error(\n            'Unexpected ref object provided for %s. ' +\n              'Use either a ref-setter function or React.createRef().',\n            getComponentNameFromFiber(finishedWork),\n          );\n        }\n      }\n\n      ref.current = instanceToUse;\n    }\n  }\n}\n\nfunction commitDetachRef(current: Fiber) {\n  const currentRef = current.ref;\n  if (currentRef !== null) {\n    if (typeof currentRef === 'function') {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        current.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          currentRef(null);\n        } finally {\n          recordLayoutEffectDuration(current);\n        }\n      } else {\n        currentRef(null);\n      }\n    } else {\n      currentRef.current = null;\n    }\n  }\n}\n\n// User-originating errors (lifecycles and refs) should not interrupt\n// deletion, so don't let them throw. Host-originating errors should\n// interrupt deletion, so it's okay\nfunction commitUnmount(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  nearestMountedAncestor: Fiber,\n): void {\n  onCommitUnmount(current);\n\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      const updateQueue: FunctionComponentUpdateQueue | null = (current.updateQueue: any);\n      if (updateQueue !== null) {\n        const lastEffect = updateQueue.lastEffect;\n        if (lastEffect !== null) {\n          const firstEffect = lastEffect.next;\n\n          let effect = firstEffect;\n          do {\n            const {destroy, tag} = effect;\n            if (destroy !== undefined) {\n              if ((tag & HookLayout) !== NoHookEffect) {\n                if (\n                  enableProfilerTimer &&\n                  enableProfilerCommitHooks &&\n                  current.mode & ProfileMode\n                ) {\n                  startLayoutEffectTimer();\n                  safelyCallDestroy(current, nearestMountedAncestor, destroy);\n                  recordLayoutEffectDuration(current);\n                } else {\n                  safelyCallDestroy(current, nearestMountedAncestor, destroy);\n                }\n              }\n            }\n            effect = effect.next;\n          } while (effect !== firstEffect);\n        }\n      }\n      return;\n    }\n    case ClassComponent: {\n      safelyDetachRef(current, nearestMountedAncestor);\n      const instance = current.stateNode;\n      if (typeof instance.componentWillUnmount === 'function') {\n        safelyCallComponentWillUnmount(\n          current,\n          nearestMountedAncestor,\n          instance,\n        );\n      }\n      return;\n    }\n    case HostComponent: {\n      safelyDetachRef(current, nearestMountedAncestor);\n      return;\n    }\n    case HostPortal: {\n      // TODO: this is recursive.\n      // We are also not using this parent because\n      // the portal will get pushed immediately.\n      if (supportsMutation) {\n        unmountHostComponents(finishedRoot, current, nearestMountedAncestor);\n      } else if (supportsPersistence) {\n        emptyPortalContainer(current);\n      }\n      return;\n    }\n    case DehydratedFragment: {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((current.stateNode: SuspenseInstance));\n          }\n        }\n      }\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        safelyDetachRef(current, nearestMountedAncestor);\n      }\n      return;\n    }\n  }\n}\n\nfunction commitNestedUnmounts(\n  finishedRoot: FiberRoot,\n  root: Fiber,\n  nearestMountedAncestor: Fiber,\n): void {\n  // While we're inside a removed host node we don't want to call\n  // removeChild on the inner nodes because they're removed by the top\n  // call anyway. We also want to call componentWillUnmount on all\n  // composites before this host node is removed from the tree. Therefore\n  // we do an inner loop while we're still inside the host node.\n  let node: Fiber = root;\n  while (true) {\n    commitUnmount(finishedRoot, node, nearestMountedAncestor);\n    // Visit children because they may contain more composite or host nodes.\n    // Skip portals because commitUnmount() currently visits them recursively.\n    if (\n      node.child !== null &&\n      // If we use mutation we drill down into portals using commitUnmount above.\n      // If we don't use mutation we drill down into portals here instead.\n      (!supportsMutation || node.tag !== HostPortal)\n    ) {\n      node.child.return = node;\n      node = node.child;\n      continue;\n    }\n    if (node === root) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === root) {\n        return;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction detachFiberMutation(fiber: Fiber) {\n  // Cut off the return pointer to disconnect it from the tree.\n  // This enables us to detect and warn against state updates on an unmounted component.\n  // It also prevents events from bubbling from within disconnected components.\n  //\n  // Ideally, we should also clear the child pointer of the parent alternate to let this\n  // get GC:ed but we don't know which for sure which parent is the current\n  // one so we'll settle for GC:ing the subtree of this child.\n  // This child itself will be GC:ed when the parent updates the next time.\n  //\n  // Note that we can't clear child or sibling pointers yet.\n  // They're needed for passive effects and for findDOMNode.\n  // We defer those fields, and all other cleanup, to the passive phase (see detachFiberAfterEffects).\n  //\n  // Don't reset the alternate yet, either. We need that so we can detach the\n  // alternate's fields in the passive phase. Clearing the return pointer is\n  // sufficient for findDOMNode semantics.\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    alternate.return = null;\n  }\n  fiber.return = null;\n}\n\nfunction detachFiberAfterEffects(fiber: Fiber) {\n  const alternate = fiber.alternate;\n  if (alternate !== null) {\n    fiber.alternate = null;\n    detachFiberAfterEffects(alternate);\n  }\n\n  // Note: Defensively using negation instead of < in case\n  // `deletedTreeCleanUpLevel` is undefined.\n  if (!(deletedTreeCleanUpLevel >= 2)) {\n    // This is the default branch (level 0).\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.dependencies = null;\n    fiber.memoizedProps = null;\n    fiber.memoizedState = null;\n    fiber.pendingProps = null;\n    fiber.sibling = null;\n    fiber.stateNode = null;\n    fiber.updateQueue = null;\n\n    if (__DEV__) {\n      fiber._debugOwner = null;\n    }\n  } else {\n    // Clear cyclical Fiber fields. This level alone is designed to roughly\n    // approximate the planned Fiber refactor. In that world, `setState` will be\n    // bound to a special \"instance\" object instead of a Fiber. The Instance\n    // object will not have any of these fields. It will only be connected to\n    // the fiber tree via a single link at the root. So if this level alone is\n    // sufficient to fix memory issues, that bodes well for our plans.\n    fiber.child = null;\n    fiber.deletions = null;\n    fiber.sibling = null;\n\n    // The `stateNode` is cyclical because on host nodes it points to the host\n    // tree, which has its own pointers to children, parents, and siblings.\n    // The other host nodes also point back to fibers, so we should detach that\n    // one, too.\n    if (fiber.tag === HostComponent) {\n      const hostInstance: Instance = fiber.stateNode;\n      if (hostInstance !== null) {\n        detachDeletedInstance(hostInstance);\n      }\n    }\n    fiber.stateNode = null;\n\n    // I'm intentionally not clearing the `return` field in this level. We\n    // already disconnect the `return` pointer at the root of the deleted\n    // subtree (in `detachFiberMutation`). Besides, `return` by itself is not\n    // cyclical — it's only cyclical when combined with `child`, `sibling`, and\n    // `alternate`. But we'll clear it in the next level anyway, just in case.\n\n    if (__DEV__) {\n      fiber._debugOwner = null;\n    }\n\n    if (deletedTreeCleanUpLevel >= 3) {\n      // Theoretically, nothing in here should be necessary, because we already\n      // disconnected the fiber from the tree. So even if something leaks this\n      // particular fiber, it won't leak anything else\n      //\n      // The purpose of this branch is to be super aggressive so we can measure\n      // if there's any difference in memory impact. If there is, that could\n      // indicate a React leak we don't know about.\n      fiber.return = null;\n      fiber.dependencies = null;\n      fiber.memoizedProps = null;\n      fiber.memoizedState = null;\n      fiber.pendingProps = null;\n      fiber.stateNode = null;\n      // TODO: Move to `commitPassiveUnmountInsideDeletedTreeOnFiber` instead.\n      fiber.updateQueue = null;\n    }\n  }\n}\n\nfunction emptyPortalContainer(current: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  const portal: {\n    containerInfo: Container,\n    pendingChildren: ChildSet,\n    ...\n  } = current.stateNode;\n  const {containerInfo} = portal;\n  const emptyChildSet = createContainerChildSet(containerInfo);\n  replaceContainerChildren(containerInfo, emptyChildSet);\n}\n\nfunction commitContainer(finishedWork: Fiber) {\n  if (!supportsPersistence) {\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case ClassComponent:\n    case HostComponent:\n    case HostText: {\n      return;\n    }\n    case HostRoot:\n    case HostPortal: {\n      const portalOrRoot: {\n        containerInfo: Container,\n        pendingChildren: ChildSet,\n        ...\n      } = finishedWork.stateNode;\n      const {containerInfo, pendingChildren} = portalOrRoot;\n      replaceContainerChildren(containerInfo, pendingChildren);\n      return;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction getHostParentFiber(fiber: Fiber): Fiber {\n  let parent = fiber.return;\n  while (parent !== null) {\n    if (isHostParent(parent)) {\n      return parent;\n    }\n    parent = parent.return;\n  }\n  invariant(\n    false,\n    'Expected to find a host parent. This error is likely caused by a bug ' +\n      'in React. Please file an issue.',\n  );\n}\n\nfunction isHostParent(fiber: Fiber): boolean {\n  return (\n    fiber.tag === HostComponent ||\n    fiber.tag === HostRoot ||\n    fiber.tag === HostPortal\n  );\n}\n\nfunction getHostSibling(fiber: Fiber): ?Instance {\n  // We're going to search forward into the tree until we find a sibling host\n  // node. Unfortunately, if multiple insertions are done in a row we have to\n  // search past them. This leads to exponential search for the next sibling.\n  // TODO: Find a more efficient way to do this.\n  let node: Fiber = fiber;\n  siblings: while (true) {\n    // If we didn't find anything, let's try the next sibling.\n    while (node.sibling === null) {\n      if (node.return === null || isHostParent(node.return)) {\n        // If we pop out of the root or hit the parent the fiber we are the\n        // last sibling.\n        return null;\n      }\n      node = node.return;\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n    while (\n      node.tag !== HostComponent &&\n      node.tag !== HostText &&\n      node.tag !== DehydratedFragment\n    ) {\n      // If it is not host node and, we might have a host node inside it.\n      // Try to search down until we find one.\n      if (node.flags & Placement) {\n        // If we don't have a child, try the siblings instead.\n        continue siblings;\n      }\n      // If we don't have a child, try the siblings instead.\n      // We also skip portals because they are not part of this host tree.\n      if (node.child === null || node.tag === HostPortal) {\n        continue siblings;\n      } else {\n        node.child.return = node;\n        node = node.child;\n      }\n    }\n    // Check if this host node is stable or about to be placed.\n    if (!(node.flags & Placement)) {\n      // Found it!\n      return node.stateNode;\n    }\n  }\n}\n\nfunction commitPlacement(finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    return;\n  }\n\n  // Recursively insert all host nodes into the parent.\n  const parentFiber = getHostParentFiber(finishedWork);\n\n  // Note: these two variables *must* always be updated together.\n  let parent;\n  let isContainer;\n  const parentStateNode = parentFiber.stateNode;\n  switch (parentFiber.tag) {\n    case HostComponent:\n      parent = parentStateNode;\n      isContainer = false;\n      break;\n    case HostRoot:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    case HostPortal:\n      parent = parentStateNode.containerInfo;\n      isContainer = true;\n      break;\n    // eslint-disable-next-line-no-fallthrough\n    default:\n      invariant(\n        false,\n        'Invalid host parent fiber. This error is likely caused by a bug ' +\n          'in React. Please file an issue.',\n      );\n  }\n  if (parentFiber.flags & ContentReset) {\n    // Reset the text content of the parent before doing any insertions\n    resetTextContent(parent);\n    // Clear ContentReset from the effect tag\n    parentFiber.flags &= ~ContentReset;\n  }\n\n  const before = getHostSibling(finishedWork);\n  // We only have the top Fiber that was inserted but we need to recurse down its\n  // children to find all the terminal nodes.\n  if (isContainer) {\n    insertOrAppendPlacementNodeIntoContainer(finishedWork, before, parent);\n  } else {\n    insertOrAppendPlacementNode(finishedWork, before, parent);\n  }\n}\n\nfunction insertOrAppendPlacementNodeIntoContainer(\n  node: Fiber,\n  before: ?Instance,\n  parent: Container,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost) {\n    const stateNode = node.stateNode;\n    if (before) {\n      insertInContainerBefore(parent, stateNode, before);\n    } else {\n      appendChildToContainer(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNodeIntoContainer(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNodeIntoContainer(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction insertOrAppendPlacementNode(\n  node: Fiber,\n  before: ?Instance,\n  parent: Instance,\n): void {\n  const {tag} = node;\n  const isHost = tag === HostComponent || tag === HostText;\n  if (isHost) {\n    const stateNode = node.stateNode;\n    if (before) {\n      insertBefore(parent, stateNode, before);\n    } else {\n      appendChild(parent, stateNode);\n    }\n  } else if (tag === HostPortal) {\n    // If the insertion itself is a portal, then we don't want to traverse\n    // down its children. Instead, we'll get insertions from each child in\n    // the portal directly.\n  } else {\n    const child = node.child;\n    if (child !== null) {\n      insertOrAppendPlacementNode(child, before, parent);\n      let sibling = child.sibling;\n      while (sibling !== null) {\n        insertOrAppendPlacementNode(sibling, before, parent);\n        sibling = sibling.sibling;\n      }\n    }\n  }\n}\n\nfunction unmountHostComponents(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  nearestMountedAncestor: Fiber,\n): void {\n  // We only have the top Fiber that was deleted but we need to recurse down its\n  // children to find all the terminal nodes.\n  let node: Fiber = current;\n\n  // Each iteration, currentParent is populated with node's host parent if not\n  // currentParentIsValid.\n  let currentParentIsValid = false;\n\n  // Note: these two variables *must* always be updated together.\n  let currentParent;\n  let currentParentIsContainer;\n\n  while (true) {\n    if (!currentParentIsValid) {\n      let parent = node.return;\n      findParent: while (true) {\n        invariant(\n          parent !== null,\n          'Expected to find a host parent. This error is likely caused by ' +\n            'a bug in React. Please file an issue.',\n        );\n        const parentStateNode = parent.stateNode;\n        switch (parent.tag) {\n          case HostComponent:\n            currentParent = parentStateNode;\n            currentParentIsContainer = false;\n            break findParent;\n          case HostRoot:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n          case HostPortal:\n            currentParent = parentStateNode.containerInfo;\n            currentParentIsContainer = true;\n            break findParent;\n        }\n        parent = parent.return;\n      }\n      currentParentIsValid = true;\n    }\n\n    if (node.tag === HostComponent || node.tag === HostText) {\n      commitNestedUnmounts(finishedRoot, node, nearestMountedAncestor);\n      // After all the children have unmounted, it is now safe to remove the\n      // node from the tree.\n      if (currentParentIsContainer) {\n        removeChildFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: Instance | TextInstance),\n        );\n      } else {\n        removeChild(\n          ((currentParent: any): Instance),\n          (node.stateNode: Instance | TextInstance),\n        );\n      }\n      // Don't visit children because we already visited them.\n    } else if (\n      enableSuspenseServerRenderer &&\n      node.tag === DehydratedFragment\n    ) {\n      if (enableSuspenseCallback) {\n        const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n        if (hydrationCallbacks !== null) {\n          const onDeleted = hydrationCallbacks.onDeleted;\n          if (onDeleted) {\n            onDeleted((node.stateNode: SuspenseInstance));\n          }\n        }\n      }\n\n      // Delete the dehydrated suspense boundary and all of its content.\n      if (currentParentIsContainer) {\n        clearSuspenseBoundaryFromContainer(\n          ((currentParent: any): Container),\n          (node.stateNode: SuspenseInstance),\n        );\n      } else {\n        clearSuspenseBoundary(\n          ((currentParent: any): Instance),\n          (node.stateNode: SuspenseInstance),\n        );\n      }\n    } else if (node.tag === HostPortal) {\n      if (node.child !== null) {\n        // When we go into a portal, it becomes the parent to remove from.\n        // We will reassign it back when we pop the portal on the way up.\n        currentParent = node.stateNode.containerInfo;\n        currentParentIsContainer = true;\n        // Visit children because portals might contain host components.\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    } else {\n      commitUnmount(finishedRoot, node, nearestMountedAncestor);\n      // Visit children because we may find more host components below.\n      if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n    }\n    if (node === current) {\n      return;\n    }\n    while (node.sibling === null) {\n      if (node.return === null || node.return === current) {\n        return;\n      }\n      node = node.return;\n      if (node.tag === HostPortal) {\n        // When we go out of the portal, we need to restore the parent.\n        // Since we don't keep a stack of them, we will search for it.\n        currentParentIsValid = false;\n      }\n    }\n    node.sibling.return = node.return;\n    node = node.sibling;\n  }\n}\n\nfunction commitDeletion(\n  finishedRoot: FiberRoot,\n  current: Fiber,\n  nearestMountedAncestor: Fiber,\n): void {\n  if (supportsMutation) {\n    // Recursively delete all host nodes from the parent.\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    unmountHostComponents(finishedRoot, current, nearestMountedAncestor);\n  } else {\n    // Detach refs and call componentWillUnmount() on the whole subtree.\n    commitNestedUnmounts(finishedRoot, current, nearestMountedAncestor);\n  }\n\n  detachFiberMutation(current);\n}\n\nfunction commitWork(current: Fiber | null, finishedWork: Fiber): void {\n  if (!supportsMutation) {\n    switch (finishedWork.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        // Layout effects are destroyed during the mutation phase so that all\n        // destroy functions for all fibers are called before any create functions.\n        // This prevents sibling component effects from interfering with each other,\n        // e.g. a destroy function in one component should never override a ref set\n        // by a create function in another component during the same commit.\n        // TODO: Check if we're inside an Offscreen subtree that disappeared\n        // during this commit. If so, we would have already unmounted its\n        // layout hooks. (However, since we null out the `destroy` function\n        // right before calling it, the behavior is already correct, so this\n        // would mostly be for modeling purposes.)\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          finishedWork.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(\n              HookLayout | HookHasEffect,\n              finishedWork,\n              finishedWork.return,\n            );\n          } finally {\n            recordLayoutEffectDuration(finishedWork);\n          }\n        } else {\n          commitHookEffectListUnmount(\n            HookLayout | HookHasEffect,\n            finishedWork,\n            finishedWork.return,\n          );\n        }\n        return;\n      }\n      case Profiler: {\n        return;\n      }\n      case SuspenseComponent: {\n        commitSuspenseCallback(finishedWork);\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case SuspenseListComponent: {\n        attachSuspenseRetryListeners(finishedWork);\n        return;\n      }\n      case HostRoot: {\n        if (supportsHydration) {\n          const root: FiberRoot = finishedWork.stateNode;\n          if (root.hydrate) {\n            // We've just hydrated. No need to hydrate again.\n            root.hydrate = false;\n            commitHydratedContainer(root.containerInfo);\n          }\n        }\n        break;\n      }\n      case OffscreenComponent:\n      case LegacyHiddenComponent: {\n        return;\n      }\n    }\n\n    commitContainer(finishedWork);\n    return;\n  }\n\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case MemoComponent:\n    case SimpleMemoComponent: {\n      // Layout effects are destroyed during the mutation phase so that all\n      // destroy functions for all fibers are called before any create functions.\n      // This prevents sibling component effects from interfering with each other,\n      // e.g. a destroy function in one component should never override a ref set\n      // by a create function in another component during the same commit.\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        try {\n          startLayoutEffectTimer();\n          commitHookEffectListUnmount(\n            HookLayout | HookHasEffect,\n            finishedWork,\n            finishedWork.return,\n          );\n        } finally {\n          recordLayoutEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListUnmount(\n          HookLayout | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n      }\n      return;\n    }\n    case ClassComponent: {\n      return;\n    }\n    case HostComponent: {\n      const instance: Instance = finishedWork.stateNode;\n      if (instance != null) {\n        // Commit the work prepared earlier.\n        const newProps = finishedWork.memoizedProps;\n        // For hydration we reuse the update path but we treat the oldProps\n        // as the newProps. The updatePayload will contain the real change in\n        // this case.\n        const oldProps = current !== null ? current.memoizedProps : newProps;\n        const type = finishedWork.type;\n        // TODO: Type the updateQueue to be specific to host components.\n        const updatePayload: null | UpdatePayload = (finishedWork.updateQueue: any);\n        finishedWork.updateQueue = null;\n        if (updatePayload !== null) {\n          commitUpdate(\n            instance,\n            updatePayload,\n            type,\n            oldProps,\n            newProps,\n            finishedWork,\n          );\n        }\n      }\n      return;\n    }\n    case HostText: {\n      invariant(\n        finishedWork.stateNode !== null,\n        'This should have a text node initialized. This error is likely ' +\n          'caused by a bug in React. Please file an issue.',\n      );\n      const textInstance: TextInstance = finishedWork.stateNode;\n      const newText: string = finishedWork.memoizedProps;\n      // For hydration we reuse the update path but we treat the oldProps\n      // as the newProps. The updatePayload will contain the real change in\n      // this case.\n      const oldText: string =\n        current !== null ? current.memoizedProps : newText;\n      commitTextUpdate(textInstance, oldText, newText);\n      return;\n    }\n    case HostRoot: {\n      if (supportsHydration) {\n        const root: FiberRoot = finishedWork.stateNode;\n        if (root.hydrate) {\n          // We've just hydrated. No need to hydrate again.\n          root.hydrate = false;\n          commitHydratedContainer(root.containerInfo);\n        }\n      }\n      return;\n    }\n    case Profiler: {\n      return;\n    }\n    case SuspenseComponent: {\n      commitSuspenseCallback(finishedWork);\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case SuspenseListComponent: {\n      attachSuspenseRetryListeners(finishedWork);\n      return;\n    }\n    case IncompleteClassComponent: {\n      return;\n    }\n    case ScopeComponent: {\n      if (enableScopeAPI) {\n        const scopeInstance = finishedWork.stateNode;\n        prepareScopeUpdate(scopeInstance, finishedWork);\n        return;\n      }\n      break;\n    }\n  }\n  invariant(\n    false,\n    'This unit of work tag should not have side-effects. This error is ' +\n      'likely caused by a bug in React. Please file an issue.',\n  );\n}\n\nfunction commitSuspenseCallback(finishedWork: Fiber) {\n  // TODO: Move this to passive phase\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (enableSuspenseCallback && newState !== null) {\n    const suspenseCallback = finishedWork.memoizedProps.suspenseCallback;\n    if (typeof suspenseCallback === 'function') {\n      const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n      if (wakeables !== null) {\n        suspenseCallback(new Set(wakeables));\n      }\n    } else if (__DEV__) {\n      if (suspenseCallback !== undefined) {\n        console.error('Unexpected type for suspenseCallback.');\n      }\n    }\n  }\n}\n\nfunction commitSuspenseHydrationCallbacks(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n) {\n  if (!supportsHydration) {\n    return;\n  }\n  const newState: SuspenseState | null = finishedWork.memoizedState;\n  if (newState === null) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      const prevState: SuspenseState | null = current.memoizedState;\n      if (prevState !== null) {\n        const suspenseInstance = prevState.dehydrated;\n        if (suspenseInstance !== null) {\n          commitHydratedSuspenseInstance(suspenseInstance);\n          if (enableSuspenseCallback) {\n            const hydrationCallbacks = finishedRoot.hydrationCallbacks;\n            if (hydrationCallbacks !== null) {\n              const onHydrated = hydrationCallbacks.onHydrated;\n              if (onHydrated) {\n                onHydrated(suspenseInstance);\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n\nfunction attachSuspenseRetryListeners(finishedWork: Fiber) {\n  // If this boundary just timed out, then it will have a set of wakeables.\n  // For each wakeable, attach a listener so that when it resolves, React\n  // attempts to re-render the boundary in the primary (pre-timeout) state.\n  const wakeables: Set<Wakeable> | null = (finishedWork.updateQueue: any);\n  if (wakeables !== null) {\n    finishedWork.updateQueue = null;\n    let retryCache = finishedWork.stateNode;\n    if (retryCache === null) {\n      retryCache = finishedWork.stateNode = new PossiblyWeakSet();\n    }\n    wakeables.forEach(wakeable => {\n      // Memoize using the boundary fiber to prevent redundant listeners.\n      const retry = resolveRetryWakeable.bind(null, finishedWork, wakeable);\n      if (!retryCache.has(wakeable)) {\n        retryCache.add(wakeable);\n\n        if (enableUpdaterTracking) {\n          if (isDevToolsPresent) {\n            if (inProgressLanes !== null && inProgressRoot !== null) {\n              // If we have pending work still, associate the original updaters with it.\n              restorePendingUpdaters(inProgressRoot, inProgressLanes);\n            } else {\n              throw Error(\n                'Expected finished root and lanes to be set. This is a bug in React.',\n              );\n            }\n          }\n        }\n\n        wakeable.then(retry, retry);\n      }\n    });\n  }\n}\n\n// This function detects when a Suspense boundary goes from visible to hidden.\n// It returns false if the boundary is already hidden.\n// TODO: Use an effect tag.\nexport function isSuspenseBoundaryBeingHidden(\n  current: Fiber | null,\n  finishedWork: Fiber,\n): boolean {\n  if (current !== null) {\n    const oldState: SuspenseState | null = current.memoizedState;\n    if (oldState === null || oldState.dehydrated !== null) {\n      const newState: SuspenseState | null = finishedWork.memoizedState;\n      return newState !== null && newState.dehydrated === null;\n    }\n  }\n  return false;\n}\n\nfunction commitResetTextContent(current: Fiber) {\n  if (!supportsMutation) {\n    return;\n  }\n  resetTextContent(current.stateNode);\n}\n\nexport function commitMutationEffects(\n  root: FiberRoot,\n  firstChild: Fiber,\n  committedLanes: Lanes,\n) {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = firstChild;\n\n  commitMutationEffects_begin(root);\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitMutationEffects_begin(root: FiberRoot) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // TODO: Should wrap this in flags check, too, as optimization\n    const deletions = fiber.deletions;\n    if (deletions !== null) {\n      for (let i = 0; i < deletions.length; i++) {\n        const childToDelete = deletions[i];\n        try {\n          commitDeletion(root, childToDelete, fiber);\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(childToDelete, fiber, error);\n        }\n      }\n    }\n\n    const child = fiber.child;\n    if ((fiber.subtreeFlags & MutationMask) !== NoFlags && child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitMutationEffects_complete(root);\n    }\n  }\n}\n\nfunction commitMutationEffects_complete(root: FiberRoot) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      commitMutationEffectsOnFiber(fiber, root);\n    } catch (error) {\n      reportUncaughtErrorInDEV(error);\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitMutationEffectsOnFiber(finishedWork: Fiber, root: FiberRoot) {\n  // TODO: The factoring of this phase could probably be improved. Consider\n  // switching on the type of work before checking the flags. That's what\n  // we do in all the other phases. I think this one is only different\n  // because of the shared reconciliation logic below.\n  const flags = finishedWork.flags;\n\n  if (flags & ContentReset) {\n    commitResetTextContent(finishedWork);\n  }\n\n  if (flags & Ref) {\n    const current = finishedWork.alternate;\n    if (current !== null) {\n      commitDetachRef(current);\n    }\n    if (enableScopeAPI) {\n      // TODO: This is a temporary solution that allowed us to transition away\n      // from React Flare on www.\n      if (finishedWork.tag === ScopeComponent) {\n        commitAttachRef(finishedWork);\n      }\n    }\n  }\n\n  if (flags & Visibility) {\n    switch (finishedWork.tag) {\n      case SuspenseComponent: {\n        const newState: OffscreenState | null = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n        if (isHidden) {\n          const current = finishedWork.alternate;\n          const wasHidden = current !== null && current.memoizedState !== null;\n          if (!wasHidden) {\n            // TODO: Move to passive phase\n            markCommitTimeOfFallback();\n          }\n        }\n        break;\n      }\n      case OffscreenComponent: {\n        const newState: OffscreenState | null = finishedWork.memoizedState;\n        const isHidden = newState !== null;\n        const current = finishedWork.alternate;\n        const wasHidden = current !== null && current.memoizedState !== null;\n        const offscreenBoundary: Fiber = finishedWork;\n\n        if (supportsMutation) {\n          // TODO: This needs to run whenever there's an insertion or update\n          // inside a hidden Offscreen tree.\n          hideOrUnhideAllChildren(offscreenBoundary, isHidden);\n        }\n\n        if (enableSuspenseLayoutEffectSemantics) {\n          if (isHidden) {\n            if (!wasHidden) {\n              if ((offscreenBoundary.mode & ConcurrentMode) !== NoMode) {\n                nextEffect = offscreenBoundary;\n                let offscreenChild = offscreenBoundary.child;\n                while (offscreenChild !== null) {\n                  nextEffect = offscreenChild;\n                  disappearLayoutEffects_begin(offscreenChild);\n                  offscreenChild = offscreenChild.sibling;\n                }\n              }\n            }\n          } else {\n            if (wasHidden) {\n              // TODO: Move re-appear call here for symmetry?\n            }\n          }\n          break;\n        }\n      }\n    }\n  }\n\n  // The following switch statement is only concerned about placement,\n  // updates, and deletions. To avoid needing to add a case for every possible\n  // bitmap value, we remove the secondary effects from the effect tag and\n  // switch on that value.\n  const primaryFlags = flags & (Placement | Update | Hydrating);\n  outer: switch (primaryFlags) {\n    case Placement: {\n      commitPlacement(finishedWork);\n      // Clear the \"placement\" from effect tag so that we know that this is\n      // inserted, before any life-cycles like componentDidMount gets called.\n      // TODO: findDOMNode doesn't rely on this any more but isMounted does\n      // and isMounted is deprecated anyway so we should be able to kill this.\n      finishedWork.flags &= ~Placement;\n      break;\n    }\n    case PlacementAndUpdate: {\n      // Placement\n      commitPlacement(finishedWork);\n      // Clear the \"placement\" from effect tag so that we know that this is\n      // inserted, before any life-cycles like componentDidMount gets called.\n      finishedWork.flags &= ~Placement;\n\n      // Update\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n    case Hydrating: {\n      finishedWork.flags &= ~Hydrating;\n      break;\n    }\n    case HydratingAndUpdate: {\n      finishedWork.flags &= ~Hydrating;\n\n      // Update\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n    case Update: {\n      const current = finishedWork.alternate;\n      commitWork(current, finishedWork);\n      break;\n    }\n  }\n}\n\nexport function commitLayoutEffects(\n  finishedWork: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n): void {\n  inProgressLanes = committedLanes;\n  inProgressRoot = root;\n  nextEffect = finishedWork;\n\n  commitLayoutEffects_begin(finishedWork, root, committedLanes);\n\n  inProgressLanes = null;\n  inProgressRoot = null;\n}\n\nfunction commitLayoutEffects_begin(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n) {\n  // Suspense layout effects semantics don't change for legacy roots.\n  const isModernRoot = (subtreeRoot.mode & ConcurrentMode) !== NoMode;\n\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if (\n      enableSuspenseLayoutEffectSemantics &&\n      fiber.tag === OffscreenComponent &&\n      isModernRoot\n    ) {\n      // Keep track of the current Offscreen stack's state.\n      const isHidden = fiber.memoizedState !== null;\n      const newOffscreenSubtreeIsHidden = isHidden || offscreenSubtreeIsHidden;\n      if (newOffscreenSubtreeIsHidden) {\n        // The Offscreen tree is hidden. Skip over its layout effects.\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n        continue;\n      } else {\n        // TODO (Offscreen) Also check: subtreeFlags & LayoutMask\n        const current = fiber.alternate;\n        const wasHidden = current !== null && current.memoizedState !== null;\n        const newOffscreenSubtreeWasHidden =\n          wasHidden || offscreenSubtreeWasHidden;\n        const prevOffscreenSubtreeIsHidden = offscreenSubtreeIsHidden;\n        const prevOffscreenSubtreeWasHidden = offscreenSubtreeWasHidden;\n\n        // Traverse the Offscreen subtree with the current Offscreen as the root.\n        offscreenSubtreeIsHidden = newOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = newOffscreenSubtreeWasHidden;\n\n        if (offscreenSubtreeWasHidden && !prevOffscreenSubtreeWasHidden) {\n          // This is the root of a reappearing boundary. Turn its layout effects\n          // back on.\n          nextEffect = fiber;\n          reappearLayoutEffects_begin(fiber);\n        }\n\n        let child = firstChild;\n        while (child !== null) {\n          nextEffect = child;\n          commitLayoutEffects_begin(\n            child, // New root; bubble back up to here and stop.\n            root,\n            committedLanes,\n          );\n          child = child.sibling;\n        }\n\n        // Restore Offscreen state and resume in our-progress traversal.\n        nextEffect = fiber;\n        offscreenSubtreeIsHidden = prevOffscreenSubtreeIsHidden;\n        offscreenSubtreeWasHidden = prevOffscreenSubtreeWasHidden;\n        commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n\n        continue;\n      }\n    }\n\n    if ((fiber.subtreeFlags & LayoutMask) !== NoFlags && firstChild !== null) {\n      ensureCorrectReturnPointer(firstChild, fiber);\n      nextEffect = firstChild;\n    } else {\n      commitLayoutMountEffects_complete(subtreeRoot, root, committedLanes);\n    }\n  }\n}\n\nfunction commitLayoutMountEffects_complete(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n  committedLanes: Lanes,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & LayoutMask) !== NoFlags) {\n      const current = fiber.alternate;\n      setCurrentDebugFiberInDEV(fiber);\n      try {\n        commitLayoutEffectOnFiber(root, current, fiber, committedLanes);\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction disappearLayoutEffects_begin(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    // TODO (Offscreen) Check: flags & (RefStatic | LayoutStatic)\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if (\n          enableProfilerTimer &&\n          enableProfilerCommitHooks &&\n          fiber.mode & ProfileMode\n        ) {\n          try {\n            startLayoutEffectTimer();\n            commitHookEffectListUnmount(HookLayout, fiber, fiber.return);\n          } finally {\n            recordLayoutEffectDuration(fiber);\n          }\n        } else {\n          commitHookEffectListUnmount(HookLayout, fiber, fiber.return);\n        }\n        break;\n      }\n      case ClassComponent: {\n        // TODO (Offscreen) Check: flags & RefStatic\n        safelyDetachRef(fiber, fiber.return);\n\n        const instance = fiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n        }\n        break;\n      }\n      case HostComponent: {\n        safelyDetachRef(fiber, fiber.return);\n        break;\n      }\n      case OffscreenComponent: {\n        // Check if this is a\n        const isHidden = fiber.memoizedState !== null;\n        if (isHidden) {\n          // Nested Offscreen tree is already hidden. Don't disappear\n          // its effects.\n          disappearLayoutEffects_complete(subtreeRoot);\n          continue;\n        }\n        break;\n      }\n    }\n\n    // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n    if (firstChild !== null) {\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      disappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction disappearLayoutEffects_complete(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction reappearLayoutEffects_begin(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n\n    if (fiber.tag === OffscreenComponent) {\n      const isHidden = fiber.memoizedState !== null;\n      if (isHidden) {\n        // Nested Offscreen tree is still hidden. Don't re-appear its effects.\n        reappearLayoutEffects_complete(subtreeRoot);\n        continue;\n      }\n    }\n\n    // TODO (Offscreen) Check: subtreeFlags & LayoutStatic\n    if (firstChild !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      firstChild.return = fiber;\n      nextEffect = firstChild;\n    } else {\n      reappearLayoutEffects_complete(subtreeRoot);\n    }\n  }\n}\n\nfunction reappearLayoutEffects_complete(subtreeRoot: Fiber) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // TODO (Offscreen) Check: flags & LayoutStatic\n    setCurrentDebugFiberInDEV(fiber);\n    try {\n      reappearLayoutEffectsOnFiber(fiber);\n    } catch (error) {\n      reportUncaughtErrorInDEV(error);\n      captureCommitPhaseError(fiber, fiber.return, error);\n    }\n    resetCurrentDebugFiberInDEV();\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      // This node may have been reused from a previous render, so we can't\n      // assume its return pointer is correct.\n      sibling.return = fiber.return;\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nexport function commitPassiveMountEffects(\n  root: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  nextEffect = finishedWork;\n  commitPassiveMountEffects_begin(finishedWork, root);\n}\n\nfunction commitPassiveMountEffects_begin(subtreeRoot: Fiber, root: FiberRoot) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const firstChild = fiber.child;\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && firstChild !== null) {\n      ensureCorrectReturnPointer(firstChild, fiber);\n      nextEffect = firstChild;\n    } else {\n      commitPassiveMountEffects_complete(subtreeRoot, root);\n    }\n  }\n}\n\nfunction commitPassiveMountEffects_complete(\n  subtreeRoot: Fiber,\n  root: FiberRoot,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentDebugFiberInDEV(fiber);\n      try {\n        commitPassiveMountOnFiber(root, fiber);\n      } catch (error) {\n        reportUncaughtErrorInDEV(error);\n        captureCommitPhaseError(fiber, fiber.return, error);\n      }\n      resetCurrentDebugFiberInDEV();\n    }\n\n    if (fiber === subtreeRoot) {\n      nextEffect = null;\n      return;\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveMountOnFiber(\n  finishedRoot: FiberRoot,\n  finishedWork: Fiber,\n): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        try {\n          commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n        } finally {\n          recordPassiveEffectDuration(finishedWork);\n        }\n      } else {\n        commitHookEffectListMount(HookPassive | HookHasEffect, finishedWork);\n      }\n      break;\n    }\n  }\n}\n\nexport function commitPassiveUnmountEffects(firstChild: Fiber): void {\n  nextEffect = firstChild;\n  commitPassiveUnmountEffects_begin();\n}\n\nfunction commitPassiveUnmountEffects_begin() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const child = fiber.child;\n\n    if ((nextEffect.flags & ChildDeletion) !== NoFlags) {\n      const deletions = fiber.deletions;\n      if (deletions !== null) {\n        for (let i = 0; i < deletions.length; i++) {\n          const fiberToDelete = deletions[i];\n          nextEffect = fiberToDelete;\n          commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n            fiberToDelete,\n            fiber,\n          );\n        }\n\n        if (deletedTreeCleanUpLevel >= 1) {\n          // A fiber was deleted from this parent fiber, but it's still part of\n          // the previous (alternate) parent fiber's list of children. Because\n          // children are a linked list, an earlier sibling that's still alive\n          // will be connected to the deleted fiber via its `alternate`:\n          //\n          //   live fiber\n          //   --alternate--> previous live fiber\n          //   --sibling--> deleted fiber\n          //\n          // We can't disconnect `alternate` on nodes that haven't been deleted\n          // yet, but we can disconnect the `sibling` and `child` pointers.\n          const previousFiber = fiber.alternate;\n          if (previousFiber !== null) {\n            let detachedChild = previousFiber.child;\n            if (detachedChild !== null) {\n              previousFiber.child = null;\n              do {\n                const detachedSibling = detachedChild.sibling;\n                detachedChild.sibling = null;\n                detachedChild = detachedSibling;\n              } while (detachedChild !== null);\n            }\n          }\n        }\n\n        nextEffect = fiber;\n      }\n    }\n\n    if ((fiber.subtreeFlags & PassiveMask) !== NoFlags && child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffects_complete();\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffects_complete() {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    if ((fiber.flags & Passive) !== NoFlags) {\n      setCurrentDebugFiberInDEV(fiber);\n      commitPassiveUnmountOnFiber(fiber);\n      resetCurrentDebugFiberInDEV();\n    }\n\n    const sibling = fiber.sibling;\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, fiber.return);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = fiber.return;\n  }\n}\n\nfunction commitPassiveUnmountOnFiber(finishedWork: Fiber): void {\n  switch (finishedWork.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        finishedWork.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          HookPassive | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n        recordPassiveEffectDuration(finishedWork);\n      } else {\n        commitHookEffectListUnmount(\n          HookPassive | HookHasEffect,\n          finishedWork,\n          finishedWork.return,\n        );\n      }\n      break;\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_begin(\n  deletedSubtreeRoot: Fiber,\n  nearestMountedAncestor: Fiber | null,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n\n    // Deletion effects fire in parent -> child order\n    // TODO: Check if fiber has a PassiveStatic flag\n    setCurrentDebugFiberInDEV(fiber);\n    commitPassiveUnmountInsideDeletedTreeOnFiber(fiber, nearestMountedAncestor);\n    resetCurrentDebugFiberInDEV();\n\n    const child = fiber.child;\n    // TODO: Only traverse subtree if it has a PassiveStatic flag. (But, if we\n    // do this, still need to handle `deletedTreeCleanUpLevel` correctly.)\n    if (child !== null) {\n      ensureCorrectReturnPointer(child, fiber);\n      nextEffect = child;\n    } else {\n      commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n        deletedSubtreeRoot,\n      );\n    }\n  }\n}\n\nfunction commitPassiveUnmountEffectsInsideOfDeletedTree_complete(\n  deletedSubtreeRoot: Fiber,\n) {\n  while (nextEffect !== null) {\n    const fiber = nextEffect;\n    const sibling = fiber.sibling;\n    const returnFiber = fiber.return;\n\n    if (deletedTreeCleanUpLevel >= 2) {\n      // Recursively traverse the entire deleted tree and clean up fiber fields.\n      // This is more aggressive than ideal, and the long term goal is to only\n      // have to detach the deleted tree at the root.\n      detachFiberAfterEffects(fiber);\n      if (fiber === deletedSubtreeRoot) {\n        nextEffect = null;\n        return;\n      }\n    } else {\n      // This is the default branch (level 0). We do not recursively clear all\n      // the fiber fields. Only the root of the deleted subtree.\n      if (fiber === deletedSubtreeRoot) {\n        detachFiberAfterEffects(fiber);\n        nextEffect = null;\n        return;\n      }\n    }\n\n    if (sibling !== null) {\n      ensureCorrectReturnPointer(sibling, returnFiber);\n      nextEffect = sibling;\n      return;\n    }\n\n    nextEffect = returnFiber;\n  }\n}\n\nfunction commitPassiveUnmountInsideDeletedTreeOnFiber(\n  current: Fiber,\n  nearestMountedAncestor: Fiber | null,\n): void {\n  switch (current.tag) {\n    case FunctionComponent:\n    case ForwardRef:\n    case SimpleMemoComponent: {\n      if (\n        enableProfilerTimer &&\n        enableProfilerCommitHooks &&\n        current.mode & ProfileMode\n      ) {\n        startPassiveEffectTimer();\n        commitHookEffectListUnmount(\n          HookPassive,\n          current,\n          nearestMountedAncestor,\n        );\n        recordPassiveEffectDuration(current);\n      } else {\n        commitHookEffectListUnmount(\n          HookPassive,\n          current,\n          nearestMountedAncestor,\n        );\n      }\n      break;\n    }\n  }\n}\n\nlet didWarnWrongReturnPointer = false;\nfunction ensureCorrectReturnPointer(fiber, expectedReturnFiber) {\n  if (__DEV__) {\n    if (!didWarnWrongReturnPointer && fiber.return !== expectedReturnFiber) {\n      didWarnWrongReturnPointer = true;\n      console.error(\n        'Internal React error: Return pointer is inconsistent ' +\n          'with parent.',\n      );\n    }\n  }\n\n  // TODO: Remove this assignment once we're confident that it won't break\n  // anything, by checking the warning logs for the above invariant\n  fiber.return = expectedReturnFiber;\n}\n\n// TODO: Reuse reappearLayoutEffects traversal here?\nfunction invokeLayoutEffectMountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListMount(HookLayout | HookHasEffect, fiber);\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = fiber.stateNode;\n        try {\n          instance.componentDidMount();\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokePassiveEffectMountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListMount(HookPassive | HookHasEffect, fiber);\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokeLayoutEffectUnmountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListUnmount(\n            HookLayout | HookHasEffect,\n            fiber,\n            fiber.return,\n          );\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n        break;\n      }\n      case ClassComponent: {\n        const instance = fiber.stateNode;\n        if (typeof instance.componentWillUnmount === 'function') {\n          safelyCallComponentWillUnmount(fiber, fiber.return, instance);\n        }\n        break;\n      }\n    }\n  }\n}\n\nfunction invokePassiveEffectUnmountInDEV(fiber: Fiber): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n    switch (fiber.tag) {\n      case FunctionComponent:\n      case ForwardRef:\n      case SimpleMemoComponent: {\n        try {\n          commitHookEffectListUnmount(\n            HookPassive | HookHasEffect,\n            fiber,\n            fiber.return,\n          );\n        } catch (error) {\n          reportUncaughtErrorInDEV(error);\n          captureCommitPhaseError(fiber, fiber.return, error);\n        }\n      }\n    }\n  }\n}\n\nexport {\n  commitResetTextContent,\n  commitPlacement,\n  commitDeletion,\n  commitWork,\n  commitAttachRef,\n  commitDetachRef,\n  invokeLayoutEffectMountInDEV,\n  invokeLayoutEffectUnmountInDEV,\n  invokePassiveEffectMountInDEV,\n  invokePassiveEffectUnmountInDEV,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\n\nimport invariant from 'shared/invariant';\nimport {HostComponent, HostText} from 'react-reconciler/src/ReactWorkTags';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {\n  findFiberRoot,\n  getBoundingRect,\n  getInstanceFromNode,\n  getTextContent,\n  isHiddenSubtree,\n  matchAccessibilityRole,\n  setFocusIfFocusable,\n  setupIntersectionObserver,\n  supportsTestSelectors,\n} from './ReactFiberHostConfig';\n\nlet COMPONENT_TYPE = 0b000;\nlet HAS_PSEUDO_CLASS_TYPE = 0b001;\nlet ROLE_TYPE = 0b010;\nlet TEST_NAME_TYPE = 0b011;\nlet TEXT_TYPE = 0b100;\n\nif (typeof Symbol === 'function' && Symbol.for) {\n  const symbolFor = Symbol.for;\n  COMPONENT_TYPE = symbolFor('selector.component');\n  HAS_PSEUDO_CLASS_TYPE = symbolFor('selector.has_pseudo_class');\n  ROLE_TYPE = symbolFor('selector.role');\n  TEST_NAME_TYPE = symbolFor('selector.test_id');\n  TEXT_TYPE = symbolFor('selector.text');\n}\n\ntype Type = Symbol | number;\n\ntype ComponentSelector = {|\n  $$typeof: Type,\n  value: React$AbstractComponent<empty, mixed>,\n|};\n\ntype HasPseudoClassSelector = {|\n  $$typeof: Type,\n  value: Array<Selector>,\n|};\n\ntype RoleSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TextSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype TestNameSelector = {|\n  $$typeof: Type,\n  value: string,\n|};\n\ntype Selector =\n  | ComponentSelector\n  | HasPseudoClassSelector\n  | RoleSelector\n  | TextSelector\n  | TestNameSelector;\n\nexport function createComponentSelector(\n  component: React$AbstractComponent<empty, mixed>,\n): ComponentSelector {\n  return {\n    $$typeof: COMPONENT_TYPE,\n    value: component,\n  };\n}\n\nexport function createHasPseudoClassSelector(\n  selectors: Array<Selector>,\n): HasPseudoClassSelector {\n  return {\n    $$typeof: HAS_PSEUDO_CLASS_TYPE,\n    value: selectors,\n  };\n}\n\nexport function createRoleSelector(role: string): RoleSelector {\n  return {\n    $$typeof: ROLE_TYPE,\n    value: role,\n  };\n}\n\nexport function createTextSelector(text: string): TextSelector {\n  return {\n    $$typeof: TEXT_TYPE,\n    value: text,\n  };\n}\n\nexport function createTestNameSelector(id: string): TestNameSelector {\n  return {\n    $$typeof: TEST_NAME_TYPE,\n    value: id,\n  };\n}\n\nfunction findFiberRootForHostRoot(hostRoot: Instance): Fiber {\n  const maybeFiber = getInstanceFromNode((hostRoot: any));\n  if (maybeFiber != null) {\n    invariant(\n      typeof maybeFiber.memoizedProps['data-testname'] === 'string',\n      'Invalid host root specified. Should be either a React container or a node with a testname attribute.',\n    );\n    return ((maybeFiber: any): Fiber);\n  } else {\n    const fiberRoot = findFiberRoot(hostRoot);\n    invariant(\n      fiberRoot !== null,\n      'Could not find React container within specified host subtree.',\n    );\n    // The Flow type for FiberRoot is a little funky.\n    // createFiberRoot() cheats this by treating the root as :any and adding stateNode lazily.\n    return ((fiberRoot: any).stateNode.current: Fiber);\n  }\n}\n\nfunction matchSelector(fiber: Fiber, selector: Selector): boolean {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      if (fiber.type === selector.value) {\n        return true;\n      }\n      break;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return hasMatchingPaths(\n        fiber,\n        ((selector: any): HasPseudoClassSelector).value,\n      );\n    case ROLE_TYPE:\n      if (fiber.tag === HostComponent) {\n        const node = fiber.stateNode;\n        if (\n          matchAccessibilityRole(node, ((selector: any): RoleSelector).value)\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEXT_TYPE:\n      if (fiber.tag === HostComponent || fiber.tag === HostText) {\n        const textContent = getTextContent(fiber);\n        if (\n          textContent !== null &&\n          textContent.indexOf(((selector: any): TextSelector).value) >= 0\n        ) {\n          return true;\n        }\n      }\n      break;\n    case TEST_NAME_TYPE:\n      if (fiber.tag === HostComponent) {\n        const dataTestID = fiber.memoizedProps['data-testname'];\n        if (\n          typeof dataTestID === 'string' &&\n          dataTestID.toLowerCase() ===\n            ((selector: any): TestNameSelector).value.toLowerCase()\n        ) {\n          return true;\n        }\n      }\n      break;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return false;\n}\n\nfunction selectorToString(selector: Selector): string | null {\n  switch (selector.$$typeof) {\n    case COMPONENT_TYPE:\n      const displayName = getComponentNameFromType(selector.value) || 'Unknown';\n      return `<${displayName}>`;\n    case HAS_PSEUDO_CLASS_TYPE:\n      return `:has(${selectorToString(selector) || ''})`;\n    case ROLE_TYPE:\n      return `[role=\"${((selector: any): RoleSelector).value}\"]`;\n    case TEXT_TYPE:\n      return `\"${((selector: any): TextSelector).value}\"`;\n    case TEST_NAME_TYPE:\n      return `[data-testname=\"${((selector: any): TestNameSelector).value}\"]`;\n    default:\n      invariant(null, 'Invalid selector type %s specified.', selector);\n      break;\n  }\n\n  return null;\n}\n\nfunction findPaths(root: Fiber, selectors: Array<Selector>): Array<Fiber> {\n  const matchingFibers: Array<Fiber> = [];\n\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      matchingFibers.push(fiber);\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return matchingFibers;\n}\n\n// Same as findPaths but with eager bailout on first match\nfunction hasMatchingPaths(root: Fiber, selectors: Array<Selector>): boolean {\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    let selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else {\n      while (selector != null && matchSelector(fiber, selector)) {\n        selectorIndex++;\n        selector = selectors[selectorIndex];\n      }\n    }\n\n    if (selectorIndex === selectors.length) {\n      return true;\n    } else {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return false;\n}\n\nexport function findAllNodes(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<Instance> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const instanceRoots: Array<Instance> = [];\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const node = ((stack[index++]: any): Fiber);\n    if (node.tag === HostComponent) {\n      if (isHiddenSubtree(node)) {\n        continue;\n      }\n      instanceRoots.push(node.stateNode);\n    } else {\n      let child = node.child;\n      while (child !== null) {\n        stack.push(child);\n        child = child.sibling;\n      }\n    }\n  }\n\n  return instanceRoots;\n}\n\nexport function getFindAllNodesFailureDescription(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): string | null {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n\n  let maxSelectorIndex: number = 0;\n  const matchedNames = [];\n\n  // The logic of this loop should be kept in sync with findPaths()\n  const stack = [root, 0];\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    let selectorIndex = ((stack[index++]: any): number);\n    const selector = selectors[selectorIndex];\n\n    if (fiber.tag === HostComponent && isHiddenSubtree(fiber)) {\n      continue;\n    } else if (matchSelector(fiber, selector)) {\n      matchedNames.push(selectorToString(selector));\n      selectorIndex++;\n\n      if (selectorIndex > maxSelectorIndex) {\n        maxSelectorIndex = selectorIndex;\n      }\n    }\n\n    if (selectorIndex < selectors.length) {\n      let child = fiber.child;\n      while (child !== null) {\n        stack.push(child, selectorIndex);\n        child = child.sibling;\n      }\n    }\n  }\n\n  if (maxSelectorIndex < selectors.length) {\n    const unmatchedNames = [];\n    for (let i = maxSelectorIndex; i < selectors.length; i++) {\n      unmatchedNames.push(selectorToString(selectors[i]));\n    }\n\n    return (\n      'findAllNodes was able to match part of the selector:\\n' +\n      `  ${matchedNames.join(' > ')}\\n\\n` +\n      'No matching component was found for:\\n' +\n      `  ${unmatchedNames.join(' > ')}`\n    );\n  }\n\n  return null;\n}\n\nexport type BoundingRect = {|\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n|};\n\nexport function findBoundingRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): Array<BoundingRect> {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const boundingRects: Array<BoundingRect> = [];\n  for (let i = 0; i < instanceRoots.length; i++) {\n    boundingRects.push(getBoundingRect(instanceRoots[i]));\n  }\n\n  for (let i = boundingRects.length - 1; i > 0; i--) {\n    const targetRect = boundingRects[i];\n    const targetLeft = targetRect.x;\n    const targetRight = targetLeft + targetRect.width;\n    const targetTop = targetRect.y;\n    const targetBottom = targetTop + targetRect.height;\n\n    for (let j = i - 1; j >= 0; j--) {\n      if (i !== j) {\n        const otherRect = boundingRects[j];\n        const otherLeft = otherRect.x;\n        const otherRight = otherLeft + otherRect.width;\n        const otherTop = otherRect.y;\n        const otherBottom = otherTop + otherRect.height;\n\n        // Merging all rects to the minimums set would be complicated,\n        // but we can handle the most common cases:\n        // 1. completely overlapping rects\n        // 2. adjacent rects that are the same width or height (e.g. items in a list)\n        //\n        // Even given the above constraints,\n        // we still won't end up with the fewest possible rects without doing multiple passes,\n        // but it's good enough for this purpose.\n\n        if (\n          targetLeft >= otherLeft &&\n          targetTop >= otherTop &&\n          targetRight <= otherRight &&\n          targetBottom <= otherBottom\n        ) {\n          // Complete overlapping rects; remove the inner one.\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetLeft === otherLeft &&\n          targetRect.width === otherRect.width &&\n          !(otherBottom < targetTop) &&\n          !(otherTop > targetBottom)\n        ) {\n          // Adjacent vertical rects; merge them.\n          if (otherTop > targetTop) {\n            otherRect.height += otherTop - targetTop;\n            otherRect.y = targetTop;\n          }\n          if (otherBottom < targetBottom) {\n            otherRect.height = targetBottom - otherTop;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        } else if (\n          targetTop === otherTop &&\n          targetRect.height === otherRect.height &&\n          !(otherRight < targetLeft) &&\n          !(otherLeft > targetRight)\n        ) {\n          // Adjacent horizontal rects; merge them.\n          if (otherLeft > targetLeft) {\n            otherRect.width += otherLeft - targetLeft;\n            otherRect.x = targetLeft;\n          }\n          if (otherRight < targetRight) {\n            otherRect.width = targetRight - otherLeft;\n          }\n\n          boundingRects.splice(i, 1);\n          break;\n        }\n      }\n    }\n  }\n\n  return boundingRects;\n}\n\nexport function focusWithin(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n): boolean {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const root = findFiberRootForHostRoot(hostRoot);\n  const matchingFibers = findPaths(root, selectors);\n\n  const stack = Array.from(matchingFibers);\n  let index = 0;\n  while (index < stack.length) {\n    const fiber = ((stack[index++]: any): Fiber);\n    if (isHiddenSubtree(fiber)) {\n      continue;\n    }\n    if (fiber.tag === HostComponent) {\n      const node = fiber.stateNode;\n      if (setFocusIfFocusable(node)) {\n        return true;\n      }\n    }\n    let child = fiber.child;\n    while (child !== null) {\n      stack.push(child);\n      child = child.sibling;\n    }\n  }\n\n  return false;\n}\n\nconst commitHooks: Array<Function> = [];\n\nexport function onCommitRoot(): void {\n  if (supportsTestSelectors) {\n    commitHooks.forEach(commitHook => commitHook());\n  }\n}\n\nexport type IntersectionObserverOptions = Object;\n\nexport type ObserveVisibleRectsCallback = (\n  intersections: Array<{ratio: number, rect: BoundingRect}>,\n) => void;\n\nexport function observeVisibleRects(\n  hostRoot: Instance,\n  selectors: Array<Selector>,\n  callback: (intersections: Array<{ratio: number, rect: BoundingRect}>) => void,\n  options?: IntersectionObserverOptions,\n): {|disconnect: () => void|} {\n  if (!supportsTestSelectors) {\n    invariant(false, 'Test selector API is not supported by this renderer.');\n  }\n\n  const instanceRoots = findAllNodes(hostRoot, selectors);\n\n  const {disconnect, observe, unobserve} = setupIntersectionObserver(\n    instanceRoots,\n    callback,\n    options,\n  );\n\n  // When React mutates the host environment, we may need to change what we're listening to.\n  const commitHook = () => {\n    const nextInstanceRoots = findAllNodes(hostRoot, selectors);\n\n    instanceRoots.forEach(target => {\n      if (nextInstanceRoots.indexOf(target) < 0) {\n        unobserve(target);\n      }\n    });\n\n    nextInstanceRoots.forEach(target => {\n      if (instanceRoots.indexOf(target) < 0) {\n        observe(target);\n      }\n    });\n  };\n\n  commitHooks.push(commitHook);\n\n  return {\n    disconnect: () => {\n      // Stop listening for React mutations:\n      const index = commitHooks.indexOf(commitHook);\n      if (index >= 0) {\n        commitHooks.splice(index, 1);\n      }\n\n      // Disconnect the host observer:\n      disconnect();\n    },\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Wakeable} from 'shared/ReactTypes';\nimport type {Fiber, FiberRoot} from './ReactInternalTypes';\nimport type {Lanes, Lane} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\nimport type {StackCursor} from './ReactFiberStack.old';\nimport type {Flags} from './ReactFiberFlags';\n\nimport {\n  warnAboutDeprecatedLifecycles,\n  enableSuspenseServerRenderer,\n  replayFailedUnitOfWorkWithInvokeGuardedCallback,\n  enableCreateEventHandleAPI,\n  enableProfilerTimer,\n  enableProfilerCommitHooks,\n  enableProfilerNestedUpdatePhase,\n  enableProfilerNestedUpdateScheduledHook,\n  deferRenderPhaseUpdateToNextBatch,\n  enableDebugTracing,\n  enableSchedulingProfiler,\n  disableSchedulerTimeoutInWorkLoop,\n  enableStrictEffects,\n  skipUnmountedBoundaries,\n  enableUpdaterTracking,\n  warnOnSubscriptionInsideStartTransition,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport invariant from 'shared/invariant';\n\nimport {\n  // Aliased because `act` will override and push to an internal queue\n  scheduleCallback as Scheduler_scheduleCallback,\n  cancelCallback as Scheduler_cancelCallback,\n  shouldYield,\n  requestPaint,\n  now,\n  ImmediatePriority as ImmediateSchedulerPriority,\n  UserBlockingPriority as UserBlockingSchedulerPriority,\n  NormalPriority as NormalSchedulerPriority,\n  IdlePriority as IdleSchedulerPriority,\n} from './Scheduler';\nimport {\n  flushSyncCallbacks,\n  flushSyncCallbacksOnlyInLegacyMode,\n  scheduleSyncCallback,\n  scheduleLegacySyncCallback,\n} from './ReactFiberSyncTaskQueue.old';\nimport {\n  logCommitStarted,\n  logCommitStopped,\n  logLayoutEffectsStarted,\n  logLayoutEffectsStopped,\n  logPassiveEffectsStarted,\n  logPassiveEffectsStopped,\n  logRenderStarted,\n  logRenderStopped,\n} from './DebugTracing';\nimport {\n  markCommitStarted,\n  markCommitStopped,\n  markLayoutEffectsStarted,\n  markLayoutEffectsStopped,\n  markPassiveEffectsStarted,\n  markPassiveEffectsStopped,\n  markRenderStarted,\n  markRenderYielded,\n  markRenderStopped,\n} from './SchedulingProfiler';\n\nimport {\n  resetAfterCommit,\n  scheduleTimeout,\n  cancelTimeout,\n  noTimeout,\n  warnsIfNotActing,\n  afterActiveInstanceBlur,\n  clearContainer,\n  getCurrentEventPriority,\n  supportsMicrotasks,\n  errorHydratingContainer,\n  scheduleMicrotask,\n} from './ReactFiberHostConfig';\n\nimport {\n  createWorkInProgress,\n  assignFiberPropertiesInDEV,\n} from './ReactFiber.old';\nimport {\n  NoMode,\n  StrictLegacyMode,\n  ProfileMode,\n  ConcurrentMode,\n} from './ReactTypeOfMode';\nimport {\n  HostRoot,\n  IndeterminateComponent,\n  ClassComponent,\n  SuspenseComponent,\n  SuspenseListComponent,\n  FunctionComponent,\n  ForwardRef,\n  MemoComponent,\n  SimpleMemoComponent,\n  Profiler,\n} from './ReactWorkTags';\nimport {LegacyRoot} from './ReactRootTags';\nimport {\n  NoFlags,\n  Placement,\n  Incomplete,\n  HostEffectMask,\n  Hydrating,\n  BeforeMutationMask,\n  MutationMask,\n  LayoutMask,\n  PassiveMask,\n  MountPassiveDev,\n  MountLayoutDev,\n} from './ReactFiberFlags';\nimport {\n  NoLanes,\n  NoLane,\n  SyncLane,\n  NoTimestamp,\n  claimNextTransitionLane,\n  claimNextRetryLane,\n  includesSomeLane,\n  isSubsetOfLanes,\n  mergeLanes,\n  removeLanes,\n  pickArbitraryLane,\n  includesNonIdleWork,\n  includesOnlyRetries,\n  includesOnlyTransitions,\n  shouldTimeSlice,\n  getNextLanes,\n  markStarvedLanesAsExpired,\n  getLanesToRetrySynchronouslyOnError,\n  getMostRecentEventTime,\n  markRootUpdated,\n  markRootSuspended as markRootSuspended_dontCallThisOneDirectly,\n  markRootPinged,\n  markRootEntangled,\n  markRootFinished,\n  getHighestPriorityLane,\n  addFiberToLanesMap,\n  movePendingFibersToMemoized,\n} from './ReactFiberLane.old';\nimport {\n  DiscreteEventPriority,\n  ContinuousEventPriority,\n  DefaultEventPriority,\n  IdleEventPriority,\n  getCurrentUpdatePriority,\n  setCurrentUpdatePriority,\n  lowerEventPriority,\n  lanesToEventPriority,\n} from './ReactEventPriorities.old';\nimport {requestCurrentTransition, NoTransition} from './ReactFiberTransition';\nimport {beginWork as originalBeginWork} from './ReactFiberBeginWork.old';\nimport {completeWork} from './ReactFiberCompleteWork.old';\nimport {unwindWork, unwindInterruptedWork} from './ReactFiberUnwindWork.old';\nimport {\n  throwException,\n  createRootErrorUpdate,\n  createClassErrorUpdate,\n} from './ReactFiberThrow.old';\nimport {\n  commitBeforeMutationEffects,\n  commitLayoutEffects,\n  commitMutationEffects,\n  commitPassiveEffectDurations,\n  commitPassiveMountEffects,\n  commitPassiveUnmountEffects,\n  invokeLayoutEffectMountInDEV,\n  invokePassiveEffectMountInDEV,\n  invokeLayoutEffectUnmountInDEV,\n  invokePassiveEffectUnmountInDEV,\n} from './ReactFiberCommitWork.old';\nimport {enqueueUpdate} from './ReactUpdateQueue.old';\nimport {resetContextDependencies} from './ReactFiberNewContext.old';\nimport {\n  resetHooksAfterThrow,\n  ContextOnlyDispatcher,\n  getIsUpdatingOpaqueValueInRenderPhaseInDEV,\n} from './ReactFiberHooks.old';\nimport {createCapturedValue} from './ReactCapturedValue';\nimport {\n  push as pushToStack,\n  pop as popFromStack,\n  createCursor,\n} from './ReactFiberStack.old';\nimport {enqueueInterleavedUpdates} from './ReactFiberInterleavedUpdates.old';\n\nimport {\n  markNestedUpdateScheduled,\n  recordCommitTime,\n  resetNestedUpdateFlag,\n  startProfilerTimer,\n  stopProfilerTimerIfRunningAndRecordDelta,\n  syncNestedUpdateFlag,\n} from './ReactProfilerTimer.old';\n\n// DEV stuff\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport ReactStrictModeWarnings from './ReactStrictModeWarnings.old';\nimport {\n  isRendering as ReactCurrentDebugFiberIsRenderingInDEV,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {\n  invokeGuardedCallback,\n  hasCaughtError,\n  clearCaughtError,\n} from 'shared/ReactErrorUtils';\nimport {\n  onCommitRoot as onCommitRootDevTools,\n  onPostCommitRoot as onPostCommitRootDevTools,\n  isDevToolsPresent,\n} from './ReactFiberDevToolsHook.old';\nimport {onCommitRoot as onCommitRootTestSelector} from './ReactTestSelectors';\n\nconst ceil = Math.ceil;\n\nconst {\n  ReactCurrentDispatcher,\n  ReactCurrentOwner,\n  ReactCurrentBatchConfig,\n  ReactCurrentActQueue,\n} = ReactSharedInternals;\n\ntype ExecutionContext = number;\n\nexport const NoContext = /*             */ 0b0000;\nconst BatchedContext = /*               */ 0b0001;\nconst RenderContext = /*                */ 0b0010;\nconst CommitContext = /*                */ 0b0100;\nexport const RetryAfterError = /*       */ 0b1000;\n\ntype RootExitStatus = 0 | 1 | 2 | 3 | 4 | 5;\nconst RootIncomplete = 0;\nconst RootFatalErrored = 1;\nconst RootErrored = 2;\nconst RootSuspended = 3;\nconst RootSuspendedWithDelay = 4;\nconst RootCompleted = 5;\n\n// Describes where we are in the React execution stack\nlet executionContext: ExecutionContext = NoContext;\n// The root we're working on\nlet workInProgressRoot: FiberRoot | null = null;\n// The fiber we're working on\nlet workInProgress: Fiber | null = null;\n// The lanes we're rendering\nlet workInProgressRootRenderLanes: Lanes = NoLanes;\n\n// Stack that allows components to change the render lanes for its subtree\n// This is a superset of the lanes we started working on at the root. The only\n// case where it's different from `workInProgressRootRenderLanes` is when we\n// enter a subtree that is hidden and needs to be unhidden: Suspense and\n// Offscreen component.\n//\n// Most things in the work loop should deal with workInProgressRootRenderLanes.\n// Most things in begin/complete phases should deal with subtreeRenderLanes.\nexport let subtreeRenderLanes: Lanes = NoLanes;\nconst subtreeRenderLanesCursor: StackCursor<Lanes> = createCursor(NoLanes);\n\n// Whether to root completed, errored, suspended, etc.\nlet workInProgressRootExitStatus: RootExitStatus = RootIncomplete;\n// A fatal error, if one is thrown\nlet workInProgressRootFatalError: mixed = null;\n// \"Included\" lanes refer to lanes that were worked on during this render. It's\n// slightly different than `renderLanes` because `renderLanes` can change as you\n// enter and exit an Offscreen tree. This value is the combination of all render\n// lanes for the entire render phase.\nlet workInProgressRootIncludedLanes: Lanes = NoLanes;\n// The work left over by components that were visited during this render. Only\n// includes unprocessed updates, not work in bailed out children.\nlet workInProgressRootSkippedLanes: Lanes = NoLanes;\n// Lanes that were updated (in an interleaved event) during this render.\nlet workInProgressRootUpdatedLanes: Lanes = NoLanes;\n// Lanes that were pinged (in an interleaved event) during this render.\nlet workInProgressRootPingedLanes: Lanes = NoLanes;\n\n// The most recent time we committed a fallback. This lets us ensure a train\n// model where we don't commit new loading states in too quick succession.\nlet globalMostRecentFallbackTime: number = 0;\nconst FALLBACK_THROTTLE_MS: number = 500;\n\n// The absolute time for when we should start giving up on rendering\n// more and prefer CPU suspense heuristics instead.\nlet workInProgressRootRenderTargetTime: number = Infinity;\n// How long a render is supposed to take before we start following CPU\n// suspense heuristics and opt out of rendering more content.\nconst RENDER_TIMEOUT_MS = 500;\n\nfunction resetRenderTimer() {\n  workInProgressRootRenderTargetTime = now() + RENDER_TIMEOUT_MS;\n}\n\nexport function getRenderTargetTime(): number {\n  return workInProgressRootRenderTargetTime;\n}\n\nlet hasUncaughtError = false;\nlet firstUncaughtError = null;\nlet legacyErrorBoundariesThatAlreadyFailed: Set<mixed> | null = null;\n\n// Only used when enableProfilerNestedUpdateScheduledHook is true;\n// to track which root is currently committing layout effects.\nlet rootCommittingMutationOrLayoutEffects: FiberRoot | null = null;\n\nlet rootDoesHavePassiveEffects: boolean = false;\nlet rootWithPendingPassiveEffects: FiberRoot | null = null;\nlet pendingPassiveEffectsLanes: Lanes = NoLanes;\nlet pendingPassiveProfilerEffects: Array<Fiber> = [];\n\n// Use these to prevent an infinite loop of nested updates\nconst NESTED_UPDATE_LIMIT = 50;\nlet nestedUpdateCount: number = 0;\nlet rootWithNestedUpdates: FiberRoot | null = null;\n\nconst NESTED_PASSIVE_UPDATE_LIMIT = 50;\nlet nestedPassiveUpdateCount: number = 0;\n\n// If two updates are scheduled within the same event, we should treat their\n// event times as simultaneous, even if the actual clock time has advanced\n// between the first and second call.\nlet currentEventTime: number = NoTimestamp;\nlet currentEventTransitionLane: Lanes = NoLanes;\n\nexport function getWorkInProgressRoot(): FiberRoot | null {\n  return workInProgressRoot;\n}\n\nexport function requestEventTime() {\n  if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n    // We're inside React, so it's fine to read the actual time.\n    return now();\n  }\n  // We're not inside React, so we may be in the middle of a browser event.\n  if (currentEventTime !== NoTimestamp) {\n    // Use the same start time for all updates until we enter React again.\n    return currentEventTime;\n  }\n  // This is the first update since React yielded. Compute a new start time.\n  currentEventTime = now();\n  return currentEventTime;\n}\n\nexport function getCurrentTime() {\n  return now();\n}\n\nexport function requestUpdateLane(fiber: Fiber): Lane {\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & ConcurrentMode) === NoMode) {\n    return (SyncLane: Lane);\n  } else if (\n    !deferRenderPhaseUpdateToNextBatch &&\n    (executionContext & RenderContext) !== NoContext &&\n    workInProgressRootRenderLanes !== NoLanes\n  ) {\n    // This is a render phase update. These are not officially supported. The\n    // old behavior is to give this the same \"thread\" (lanes) as\n    // whatever is currently rendering. So if you call `setState` on a component\n    // that happens later in the same render, it will flush. Ideally, we want to\n    // remove the special case and treat them as if they came from an\n    // interleaved event. Regardless, this pattern is not officially supported.\n    // This behavior is only a fallback. The flag only exists until we can roll\n    // out the setState warning, since existing code might accidentally rely on\n    // the current behavior.\n    return pickArbitraryLane(workInProgressRootRenderLanes);\n  }\n\n  const isTransition = requestCurrentTransition() !== NoTransition;\n  if (isTransition) {\n    if (\n      __DEV__ &&\n      warnOnSubscriptionInsideStartTransition &&\n      ReactCurrentBatchConfig._updatedFibers\n    ) {\n      ReactCurrentBatchConfig._updatedFibers.add(fiber);\n    }\n    // The algorithm for assigning an update to a lane should be stable for all\n    // updates at the same priority within the same event. To do this, the\n    // inputs to the algorithm must be the same.\n    //\n    // The trick we use is to cache the first of each of these inputs within an\n    // event. Then reset the cached values once we can be sure the event is\n    // over. Our heuristic for that is whenever we enter a concurrent work loop.\n    if (currentEventTransitionLane === NoLane) {\n      // All transitions within the same event are assigned the same lane.\n      currentEventTransitionLane = claimNextTransitionLane();\n    }\n    return currentEventTransitionLane;\n  }\n\n  // Updates originating inside certain React methods, like flushSync, have\n  // their priority set by tracking it with a context variable.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n  const updateLane: Lane = (getCurrentUpdatePriority(): any);\n  if (updateLane !== NoLane) {\n    return updateLane;\n  }\n\n  // This update originated outside React. Ask the host environment for an\n  // appropriate priority, based on the type of event.\n  //\n  // The opaque type returned by the host config is internally a lane, so we can\n  // use that directly.\n  // TODO: Move this type conversion to the event priority module.\n  const eventLane: Lane = (getCurrentEventPriority(): any);\n  return eventLane;\n}\n\nfunction requestRetryLane(fiber: Fiber) {\n  // This is a fork of `requestUpdateLane` designed specifically for Suspense\n  // \"retries\" — a special update that attempts to flip a Suspense boundary\n  // from its placeholder state to its primary/resolved state.\n\n  // Special cases\n  const mode = fiber.mode;\n  if ((mode & ConcurrentMode) === NoMode) {\n    return (SyncLane: Lane);\n  }\n\n  return claimNextRetryLane();\n}\n\nexport function scheduleUpdateOnFiber(\n  fiber: Fiber,\n  lane: Lane,\n  eventTime: number,\n): FiberRoot | null {\n  checkForNestedUpdates();\n  warnAboutRenderPhaseUpdatesInDEV(fiber);\n\n  const root = markUpdateLaneFromFiberToRoot(fiber, lane);\n  if (root === null) {\n    return null;\n  }\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      addFiberToLanesMap(root, fiber, lane);\n    }\n  }\n\n  // Mark that the root has a pending update.\n  markRootUpdated(root, lane, eventTime);\n\n  if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n    if (\n      (executionContext & CommitContext) !== NoContext &&\n      root === rootCommittingMutationOrLayoutEffects\n    ) {\n      if (fiber.mode & ProfileMode) {\n        let current = fiber;\n        while (current !== null) {\n          if (current.tag === Profiler) {\n            const {id, onNestedUpdateScheduled} = current.memoizedProps;\n            if (typeof onNestedUpdateScheduled === 'function') {\n              onNestedUpdateScheduled(id);\n            }\n          }\n          current = current.return;\n        }\n      }\n    }\n  }\n\n  // TODO: Consolidate with `isInterleavedUpdate` check\n  if (root === workInProgressRoot) {\n    // Received an update to a tree that's in the middle of rendering. Mark\n    // that there was an interleaved update work on this root. Unless the\n    // `deferRenderPhaseUpdateToNextBatch` flag is off and this is a render\n    // phase update. In that case, we don't treat render phase updates as if\n    // they were interleaved, for backwards compat reasons.\n    if (\n      deferRenderPhaseUpdateToNextBatch ||\n      (executionContext & RenderContext) === NoContext\n    ) {\n      workInProgressRootUpdatedLanes = mergeLanes(\n        workInProgressRootUpdatedLanes,\n        lane,\n      );\n    }\n    if (workInProgressRootExitStatus === RootSuspendedWithDelay) {\n      // The root already suspended with a delay, which means this render\n      // definitely won't finish. Since we have a new update, let's mark it as\n      // suspended now, right before marking the incoming update. This has the\n      // effect of interrupting the current render and switching to the update.\n      // TODO: Make sure this doesn't override pings that happen while we've\n      // already started rendering.\n      markRootSuspended(root, workInProgressRootRenderLanes);\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n  if (\n    lane === SyncLane &&\n    executionContext === NoContext &&\n    (fiber.mode & ConcurrentMode) === NoMode &&\n    // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n    !(__DEV__ && ReactCurrentActQueue.isBatchingLegacy)\n  ) {\n    // Flush the synchronous work now, unless we're already working or inside\n    // a batch. This is intentionally inside scheduleUpdateOnFiber instead of\n    // scheduleCallbackForFiber to preserve the ability to schedule a callback\n    // without immediately flushing it. We only do this for user-initiated\n    // updates, to preserve historical behavior of legacy mode.\n    resetRenderTimer();\n    flushSyncCallbacksOnlyInLegacyMode();\n  }\n\n  return root;\n}\n\n// This is split into a separate function so we can mark a fiber with pending\n// work without treating it as a typical update that originates from an event;\n// e.g. retrying a Suspense boundary isn't an update, but it does schedule work\n// on a fiber.\nfunction markUpdateLaneFromFiberToRoot(\n  sourceFiber: Fiber,\n  lane: Lane,\n): FiberRoot | null {\n  // Update the source fiber's lanes\n  sourceFiber.lanes = mergeLanes(sourceFiber.lanes, lane);\n  let alternate = sourceFiber.alternate;\n  if (alternate !== null) {\n    alternate.lanes = mergeLanes(alternate.lanes, lane);\n  }\n  if (__DEV__) {\n    if (\n      alternate === null &&\n      (sourceFiber.flags & (Placement | Hydrating)) !== NoFlags\n    ) {\n      warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n    }\n  }\n  // Walk the parent path to the root and update the child lanes.\n  let node = sourceFiber;\n  let parent = sourceFiber.return;\n  while (parent !== null) {\n    parent.childLanes = mergeLanes(parent.childLanes, lane);\n    alternate = parent.alternate;\n    if (alternate !== null) {\n      alternate.childLanes = mergeLanes(alternate.childLanes, lane);\n    } else {\n      if (__DEV__) {\n        if ((parent.flags & (Placement | Hydrating)) !== NoFlags) {\n          warnAboutUpdateOnNotYetMountedFiberInDEV(sourceFiber);\n        }\n      }\n    }\n    node = parent;\n    parent = parent.return;\n  }\n  if (node.tag === HostRoot) {\n    const root: FiberRoot = node.stateNode;\n    return root;\n  } else {\n    return null;\n  }\n}\n\nexport function isInterleavedUpdate(fiber: Fiber, lane: Lane) {\n  return (\n    // TODO: Optimize slightly by comparing to root that fiber belongs to.\n    // Requires some refactoring. Not a big deal though since it's rare for\n    // concurrent apps to have more than a single root.\n    workInProgressRoot !== null &&\n    (fiber.mode & ConcurrentMode) !== NoMode &&\n    // If this is a render phase update (i.e. UNSAFE_componentWillReceiveProps),\n    // then don't treat this as an interleaved update. This pattern is\n    // accompanied by a warning but we haven't fully deprecated it yet. We can\n    // remove once the deferRenderPhaseUpdateToNextBatch flag is enabled.\n    (deferRenderPhaseUpdateToNextBatch ||\n      (executionContext & RenderContext) === NoContext)\n  );\n}\n\n// Use this function to schedule a task for a root. There's only one task per\n// root; if a task was already scheduled, we'll check to make sure the priority\n// of the existing task is the same as the priority of the next level that the\n// root has work on. This function is called on every update, and right before\n// exiting a task.\nfunction ensureRootIsScheduled(root: FiberRoot, currentTime: number) {\n  const existingCallbackNode = root.callbackNode;\n\n  // Check if any lanes are being starved by other work. If so, mark them as\n  // expired so we know to work on those next.\n  markStarvedLanesAsExpired(root, currentTime);\n\n  // Determine the next lanes to work on, and their priority.\n  const nextLanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n\n  if (nextLanes === NoLanes) {\n    // Special case: There's nothing to work on.\n    if (existingCallbackNode !== null) {\n      cancelCallback(existingCallbackNode);\n    }\n    root.callbackNode = null;\n    root.callbackPriority = NoLane;\n    return;\n  }\n\n  // We use the highest priority lane to represent the priority of the callback.\n  const newCallbackPriority = getHighestPriorityLane(nextLanes);\n\n  // Check if there's an existing task. We may be able to reuse it.\n  const existingCallbackPriority = root.callbackPriority;\n  if (\n    existingCallbackPriority === newCallbackPriority &&\n    // Special case related to `act`. If the currently scheduled task is a\n    // Scheduler task, rather than an `act` task, cancel it and re-scheduled\n    // on the `act` queue.\n    !(\n      __DEV__ &&\n      ReactCurrentActQueue.current !== null &&\n      existingCallbackNode !== fakeActCallbackNode\n    )\n  ) {\n    if (__DEV__) {\n      // If we're going to re-use an existing task, it needs to exist.\n      // Assume that discrete update microtasks are non-cancellable and null.\n      // TODO: Temporary until we confirm this warning is not fired.\n      if (\n        existingCallbackNode == null &&\n        existingCallbackPriority !== SyncLane\n      ) {\n        console.error(\n          'Expected scheduled callback to exist. This error is likely caused by a bug in React. Please file an issue.',\n        );\n      }\n    }\n    // The priority hasn't changed. We can reuse the existing task. Exit.\n    return;\n  }\n\n  if (existingCallbackNode != null) {\n    // Cancel the existing callback. We'll schedule a new one below.\n    cancelCallback(existingCallbackNode);\n  }\n\n  // Schedule a new callback.\n  let newCallbackNode;\n  if (newCallbackPriority === SyncLane) {\n    // Special case: Sync React callbacks are scheduled on a special\n    // internal queue\n    if (root.tag === LegacyRoot) {\n      if (__DEV__ && ReactCurrentActQueue.isBatchingLegacy !== null) {\n        ReactCurrentActQueue.didScheduleLegacyUpdate = true;\n      }\n      scheduleLegacySyncCallback(performSyncWorkOnRoot.bind(null, root));\n    } else {\n      scheduleSyncCallback(performSyncWorkOnRoot.bind(null, root));\n    }\n    if (supportsMicrotasks) {\n      // Flush the queue in a microtask.\n      if (__DEV__ && ReactCurrentActQueue.current !== null) {\n        // Inside `act`, use our internal `act` queue so that these get flushed\n        // at the end of the current scope even when using the sync version\n        // of `act`.\n        ReactCurrentActQueue.current.push(flushSyncCallbacks);\n      } else {\n        scheduleMicrotask(flushSyncCallbacks);\n      }\n    } else {\n      // Flush the queue in an Immediate task.\n      scheduleCallback(ImmediateSchedulerPriority, flushSyncCallbacks);\n    }\n    newCallbackNode = null;\n  } else {\n    let schedulerPriorityLevel;\n    switch (lanesToEventPriority(nextLanes)) {\n      case DiscreteEventPriority:\n        schedulerPriorityLevel = ImmediateSchedulerPriority;\n        break;\n      case ContinuousEventPriority:\n        schedulerPriorityLevel = UserBlockingSchedulerPriority;\n        break;\n      case DefaultEventPriority:\n        schedulerPriorityLevel = NormalSchedulerPriority;\n        break;\n      case IdleEventPriority:\n        schedulerPriorityLevel = IdleSchedulerPriority;\n        break;\n      default:\n        schedulerPriorityLevel = NormalSchedulerPriority;\n        break;\n    }\n    newCallbackNode = scheduleCallback(\n      schedulerPriorityLevel,\n      performConcurrentWorkOnRoot.bind(null, root),\n    );\n  }\n\n  root.callbackPriority = newCallbackPriority;\n  root.callbackNode = newCallbackNode;\n}\n\n// This is the entry point for every concurrent task, i.e. anything that\n// goes through Scheduler.\nfunction performConcurrentWorkOnRoot(root, didTimeout) {\n  if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n    resetNestedUpdateFlag();\n  }\n\n  // Since we know we're in a React event, we can clear the current\n  // event time. The next update will compute a new event time.\n  currentEventTime = NoTimestamp;\n  currentEventTransitionLane = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  // Flush any pending passive effects before deciding which lanes to work on,\n  // in case they schedule additional work.\n  const originalCallbackNode = root.callbackNode;\n  const didFlushPassiveEffects = flushPassiveEffects();\n  if (didFlushPassiveEffects) {\n    // Something in the passive effect phase may have canceled the current task.\n    // Check if the task node for this root was changed.\n    if (root.callbackNode !== originalCallbackNode) {\n      // The current task was canceled. Exit. We don't need to call\n      // `ensureRootIsScheduled` because the check above implies either that\n      // there's a new task, or that there's no remaining work on this root.\n      return null;\n    } else {\n      // Current task was not canceled. Continue.\n    }\n  }\n\n  // Determine the next lanes to work on, using the fields stored\n  // on the root.\n  let lanes = getNextLanes(\n    root,\n    root === workInProgressRoot ? workInProgressRootRenderLanes : NoLanes,\n  );\n  if (lanes === NoLanes) {\n    // Defensive coding. This is never expected to happen.\n    return null;\n  }\n\n  // We disable time-slicing in some cases: if the work has been CPU-bound\n  // for too long (\"expired\" work, to prevent starvation), or we're in\n  // sync-updates-by-default mode.\n  // TODO: We only check `didTimeout` defensively, to account for a Scheduler\n  // bug we're still investigating. Once the bug in Scheduler is fixed,\n  // we can remove this, since we track expiration ourselves.\n  let exitStatus =\n    shouldTimeSlice(root, lanes) &&\n    (disableSchedulerTimeoutInWorkLoop || !didTimeout)\n      ? renderRootConcurrent(root, lanes)\n      : renderRootSync(root, lanes);\n  if (exitStatus !== RootIncomplete) {\n    if (exitStatus === RootErrored) {\n      const prevExecutionContext = executionContext;\n      executionContext |= RetryAfterError;\n\n      // If an error occurred during hydration,\n      // discard server response and fall back to client side render.\n      if (root.hydrate) {\n        root.hydrate = false;\n        if (__DEV__) {\n          errorHydratingContainer(root.containerInfo);\n        }\n        clearContainer(root.containerInfo);\n      }\n\n      // If something threw an error, try rendering one more time. We'll render\n      // synchronously to block concurrent data mutations, and we'll includes\n      // all pending updates are included. If it still fails after the second\n      // attempt, we'll give up and commit the resulting tree.\n      const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n      if (errorRetryLanes !== NoLanes) {\n        lanes = errorRetryLanes;\n        exitStatus = renderRootSync(root, errorRetryLanes);\n      }\n\n      executionContext = prevExecutionContext;\n    }\n\n    if (exitStatus === RootFatalErrored) {\n      const fatalError = workInProgressRootFatalError;\n      prepareFreshStack(root, NoLanes);\n      markRootSuspended(root, lanes);\n      ensureRootIsScheduled(root, now());\n      throw fatalError;\n    }\n\n    // We now have a consistent tree. The next step is either to commit it,\n    // or, if something suspended, wait to commit it after a timeout.\n    const finishedWork: Fiber = (root.current.alternate: any);\n    root.finishedWork = finishedWork;\n    root.finishedLanes = lanes;\n    finishConcurrentRender(root, exitStatus, lanes);\n  }\n\n  ensureRootIsScheduled(root, now());\n  if (root.callbackNode === originalCallbackNode) {\n    // The task node scheduled for this root is the same one that's\n    // currently executed. Need to return a continuation.\n    return performConcurrentWorkOnRoot.bind(null, root);\n  }\n  return null;\n}\n\nfunction finishConcurrentRender(root, exitStatus, lanes) {\n  switch (exitStatus) {\n    case RootIncomplete:\n    case RootFatalErrored: {\n      invariant(false, 'Root did not complete. This is a bug in React.');\n    }\n    // Flow knows about invariant, so it complains if I add a break\n    // statement, but eslint doesn't know about invariant, so it complains\n    // if I do. eslint-disable-next-line no-fallthrough\n    case RootErrored: {\n      // We should have already attempted to retry this tree. If we reached\n      // this point, it errored again. Commit it.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspended: {\n      markRootSuspended(root, lanes);\n\n      // We have an acceptable loading state. We need to figure out if we\n      // should immediately commit it or wait a bit.\n\n      if (\n        includesOnlyRetries(lanes) &&\n        // do not delay if we're inside an act() scope\n        !shouldForceFlushFallbacksInDEV()\n      ) {\n        // This render only included retries, no updates. Throttle committing\n        // retries so that we don't show too many loading states too quickly.\n        const msUntilTimeout =\n          globalMostRecentFallbackTime + FALLBACK_THROTTLE_MS - now();\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          const nextLanes = getNextLanes(root, NoLanes);\n          if (nextLanes !== NoLanes) {\n            // There's additional work on this root.\n            break;\n          }\n          const suspendedLanes = root.suspendedLanes;\n          if (!isSubsetOfLanes(suspendedLanes, lanes)) {\n            // We should prefer to render the fallback of at the last\n            // suspended level. Ping the last suspended level to try\n            // rendering it again.\n            // FIXME: What if the suspended lanes are Idle? Should not restart.\n            const eventTime = requestEventTime();\n            markRootPinged(root, suspendedLanes, eventTime);\n            break;\n          }\n\n          // The render is suspended, it hasn't timed out, and there's no\n          // lower priority work to do. Instead of committing the fallback\n          // immediately, wait for more data to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n      // The work expired. Commit immediately.\n      commitRoot(root);\n      break;\n    }\n    case RootSuspendedWithDelay: {\n      markRootSuspended(root, lanes);\n\n      if (includesOnlyTransitions(lanes)) {\n        // This is a transition, so we should exit without committing a\n        // placeholder and without scheduling a timeout. Delay indefinitely\n        // until we receive more data.\n        break;\n      }\n\n      if (!shouldForceFlushFallbacksInDEV()) {\n        // This is not a transition, but we did trigger an avoided state.\n        // Schedule a placeholder to display after a short delay, using the Just\n        // Noticeable Difference.\n        // TODO: Is the JND optimization worth the added complexity? If this is\n        // the only reason we track the event time, then probably not.\n        // Consider removing.\n\n        const mostRecentEventTime = getMostRecentEventTime(root, lanes);\n        const eventTimeMs = mostRecentEventTime;\n        const timeElapsedMs = now() - eventTimeMs;\n        const msUntilTimeout = jnd(timeElapsedMs) - timeElapsedMs;\n\n        // Don't bother with a very short suspense time.\n        if (msUntilTimeout > 10) {\n          // Instead of committing the fallback immediately, wait for more data\n          // to arrive.\n          root.timeoutHandle = scheduleTimeout(\n            commitRoot.bind(null, root),\n            msUntilTimeout,\n          );\n          break;\n        }\n      }\n\n      // Commit the placeholder.\n      commitRoot(root);\n      break;\n    }\n    case RootCompleted: {\n      // The work completed. Ready to commit.\n      commitRoot(root);\n      break;\n    }\n    default: {\n      invariant(false, 'Unknown root exit status.');\n    }\n  }\n}\n\nfunction markRootSuspended(root, suspendedLanes) {\n  // When suspending, we should always exclude lanes that were pinged or (more\n  // rarely, since we try to avoid it) updated during the render phase.\n  // TODO: Lol maybe there's a better way to factor this besides this\n  // obnoxiously named function :)\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootPingedLanes);\n  suspendedLanes = removeLanes(suspendedLanes, workInProgressRootUpdatedLanes);\n  markRootSuspended_dontCallThisOneDirectly(root, suspendedLanes);\n}\n\n// This is the entry point for synchronous tasks that don't go\n// through Scheduler\nfunction performSyncWorkOnRoot(root) {\n  if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n    syncNestedUpdateFlag();\n  }\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  flushPassiveEffects();\n\n  let lanes = getNextLanes(root, NoLanes);\n  if (!includesSomeLane(lanes, SyncLane)) {\n    // There's no remaining sync work left.\n    ensureRootIsScheduled(root, now());\n    return null;\n  }\n\n  let exitStatus = renderRootSync(root, lanes);\n  if (root.tag !== LegacyRoot && exitStatus === RootErrored) {\n    const prevExecutionContext = executionContext;\n    executionContext |= RetryAfterError;\n\n    // If an error occurred during hydration,\n    // discard server response and fall back to client side render.\n    if (root.hydrate) {\n      root.hydrate = false;\n      if (__DEV__) {\n        errorHydratingContainer(root.containerInfo);\n      }\n      clearContainer(root.containerInfo);\n    }\n\n    // If something threw an error, try rendering one more time. We'll render\n    // synchronously to block concurrent data mutations, and we'll includes\n    // all pending updates are included. If it still fails after the second\n    // attempt, we'll give up and commit the resulting tree.\n    const errorRetryLanes = getLanesToRetrySynchronouslyOnError(root);\n    if (errorRetryLanes !== NoLanes) {\n      lanes = errorRetryLanes;\n      exitStatus = renderRootSync(root, lanes);\n    }\n\n    executionContext = prevExecutionContext;\n  }\n\n  if (exitStatus === RootFatalErrored) {\n    const fatalError = workInProgressRootFatalError;\n    prepareFreshStack(root, NoLanes);\n    markRootSuspended(root, lanes);\n    ensureRootIsScheduled(root, now());\n    throw fatalError;\n  }\n\n  // We now have a consistent tree. Because this is a sync render, we\n  // will commit it even if something suspended.\n  const finishedWork: Fiber = (root.current.alternate: any);\n  root.finishedWork = finishedWork;\n  root.finishedLanes = lanes;\n  commitRoot(root);\n\n  // Before exiting, make sure there's a callback scheduled for the next\n  // pending level.\n  ensureRootIsScheduled(root, now());\n\n  return null;\n}\n\nexport function flushRoot(root: FiberRoot, lanes: Lanes) {\n  if (lanes !== NoLanes) {\n    markRootEntangled(root, mergeLanes(lanes, SyncLane));\n    ensureRootIsScheduled(root, now());\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function getExecutionContext(): ExecutionContext {\n  return executionContext;\n}\n\nexport function deferredUpdates<A>(fn: () => A): A {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DefaultEventPriority);\n    return fn();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  }\n}\n\nexport function batchedUpdates<A, R>(fn: A => R, a: A): R {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  try {\n    return fn(a);\n  } finally {\n    executionContext = prevExecutionContext;\n    // If there were legacy sync updates, flush them at the end of the outer\n    // most batchedUpdates-like method.\n    if (\n      executionContext === NoContext &&\n      // Treat `act` as if it's inside `batchedUpdates`, even in legacy mode.\n      !(__DEV__ && ReactCurrentActQueue.isBatchingLegacy)\n    ) {\n      resetRenderTimer();\n      flushSyncCallbacksOnlyInLegacyMode();\n    }\n  }\n}\n\nexport function discreteUpdates<A, B, C, D, R>(\n  fn: (A, B, C, D) => R,\n  a: A,\n  b: B,\n  c: C,\n  d: D,\n): R {\n  const previousPriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    return fn(a, b, c, d);\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n    if (executionContext === NoContext) {\n      resetRenderTimer();\n    }\n  }\n}\n\n// Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\ndeclare function flushSyncWithoutWarningIfAlreadyRendering<R>(fn: () => R): R;\n// eslint-disable-next-line no-redeclare\ndeclare function flushSyncWithoutWarningIfAlreadyRendering(): void;\n// eslint-disable-next-line no-redeclare\nexport function flushSyncWithoutWarningIfAlreadyRendering(fn) {\n  // In legacy mode, we flush pending passive effects at the beginning of the\n  // next event, not at the end of the previous one.\n  if (\n    rootWithPendingPassiveEffects !== null &&\n    rootWithPendingPassiveEffects.tag === LegacyRoot &&\n    (executionContext & (RenderContext | CommitContext)) === NoContext\n  ) {\n    flushPassiveEffects();\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  const previousPriority = getCurrentUpdatePriority();\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    if (fn) {\n      return fn();\n    } else {\n      return undefined;\n    }\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n    executionContext = prevExecutionContext;\n    // Flush the immediate callbacks that were scheduled during this batch.\n    // Note that this will happen even if batchedUpdates is higher up\n    // the stack.\n    if ((executionContext & (RenderContext | CommitContext)) === NoContext) {\n      flushSyncCallbacks();\n    }\n  }\n}\n\n// Overload the definition to the two valid signatures.\n// Warning, this opts-out of checking the function body.\ndeclare function flushSync<R>(fn: () => R): R;\n// eslint-disable-next-line no-redeclare\ndeclare function flushSync(): void;\n// eslint-disable-next-line no-redeclare\nexport function flushSync(fn) {\n  if (__DEV__) {\n    if ((executionContext & (RenderContext | CommitContext)) !== NoContext) {\n      console.error(\n        'flushSync was called from inside a lifecycle method. React cannot ' +\n          'flush when React is already rendering. Consider moving this call to ' +\n          'a scheduler task or micro task.',\n      );\n    }\n  }\n  return flushSyncWithoutWarningIfAlreadyRendering(fn);\n}\n\nexport function flushControlled(fn: () => mixed): void {\n  const prevExecutionContext = executionContext;\n  executionContext |= BatchedContext;\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  const previousPriority = getCurrentUpdatePriority();\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    fn();\n  } finally {\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n\n    executionContext = prevExecutionContext;\n    if (executionContext === NoContext) {\n      // Flush the immediate callbacks that were scheduled during this batch\n      resetRenderTimer();\n      flushSyncCallbacks();\n    }\n  }\n}\n\nexport function pushRenderLanes(fiber: Fiber, lanes: Lanes) {\n  pushToStack(subtreeRenderLanesCursor, subtreeRenderLanes, fiber);\n  subtreeRenderLanes = mergeLanes(subtreeRenderLanes, lanes);\n  workInProgressRootIncludedLanes = mergeLanes(\n    workInProgressRootIncludedLanes,\n    lanes,\n  );\n}\n\nexport function popRenderLanes(fiber: Fiber) {\n  subtreeRenderLanes = subtreeRenderLanesCursor.current;\n  popFromStack(subtreeRenderLanesCursor, fiber);\n}\n\nfunction prepareFreshStack(root: FiberRoot, lanes: Lanes) {\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  const timeoutHandle = root.timeoutHandle;\n  if (timeoutHandle !== noTimeout) {\n    // The root previous suspended and scheduled a timeout to commit a fallback\n    // state. Now that we have additional work, cancel the timeout.\n    root.timeoutHandle = noTimeout;\n    // $FlowFixMe Complains noTimeout is not a TimeoutID, despite the check above\n    cancelTimeout(timeoutHandle);\n  }\n\n  if (workInProgress !== null) {\n    let interruptedWork = workInProgress.return;\n    while (interruptedWork !== null) {\n      unwindInterruptedWork(interruptedWork, workInProgressRootRenderLanes);\n      interruptedWork = interruptedWork.return;\n    }\n  }\n  workInProgressRoot = root;\n  workInProgress = createWorkInProgress(root.current, null);\n  workInProgressRootRenderLanes = subtreeRenderLanes = workInProgressRootIncludedLanes = lanes;\n  workInProgressRootExitStatus = RootIncomplete;\n  workInProgressRootFatalError = null;\n  workInProgressRootSkippedLanes = NoLanes;\n  workInProgressRootUpdatedLanes = NoLanes;\n  workInProgressRootPingedLanes = NoLanes;\n\n  enqueueInterleavedUpdates();\n\n  if (__DEV__) {\n    ReactStrictModeWarnings.discardPendingWarnings();\n  }\n}\n\nfunction handleError(root, thrownValue): void {\n  do {\n    let erroredWork = workInProgress;\n    try {\n      // Reset module-level state that was set during the render phase.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      resetCurrentDebugFiberInDEV();\n      // TODO: I found and added this missing line while investigating a\n      // separate issue. Write a regression test using string refs.\n      ReactCurrentOwner.current = null;\n\n      if (erroredWork === null || erroredWork.return === null) {\n        // Expected to be working on a non-root fiber. This is a fatal error\n        // because there's no ancestor that can handle it; the root is\n        // supposed to capture all errors that weren't caught by an error\n        // boundary.\n        workInProgressRootExitStatus = RootFatalErrored;\n        workInProgressRootFatalError = thrownValue;\n        // Set `workInProgress` to null. This represents advancing to the next\n        // sibling, or the parent if there are no siblings. But since the root\n        // has no siblings nor a parent, we set it to null. Usually this is\n        // handled by `completeUnitOfWork` or `unwindWork`, but since we're\n        // intentionally not calling those, we need set it here.\n        // TODO: Consider calling `unwindWork` to pop the contexts.\n        workInProgress = null;\n        return;\n      }\n\n      if (enableProfilerTimer && erroredWork.mode & ProfileMode) {\n        // Record the time spent rendering before an error was thrown. This\n        // avoids inaccurate Profiler durations in the case of a\n        // suspended render.\n        stopProfilerTimerIfRunningAndRecordDelta(erroredWork, true);\n      }\n\n      throwException(\n        root,\n        erroredWork.return,\n        erroredWork,\n        thrownValue,\n        workInProgressRootRenderLanes,\n      );\n      completeUnitOfWork(erroredWork);\n    } catch (yetAnotherThrownValue) {\n      // Something in the return path also threw.\n      thrownValue = yetAnotherThrownValue;\n      if (workInProgress === erroredWork && erroredWork !== null) {\n        // If this boundary has already errored, then we had trouble processing\n        // the error. Bubble it to the next boundary.\n        erroredWork = erroredWork.return;\n        workInProgress = erroredWork;\n      } else {\n        erroredWork = workInProgress;\n      }\n      continue;\n    }\n    // Return to the normal work loop.\n    return;\n  } while (true);\n}\n\nfunction pushDispatcher() {\n  const prevDispatcher = ReactCurrentDispatcher.current;\n  ReactCurrentDispatcher.current = ContextOnlyDispatcher;\n  if (prevDispatcher === null) {\n    // The React isomorphic package does not include a default dispatcher.\n    // Instead the first renderer will lazily attach one, in order to give\n    // nicer error messages.\n    return ContextOnlyDispatcher;\n  } else {\n    return prevDispatcher;\n  }\n}\n\nfunction popDispatcher(prevDispatcher) {\n  ReactCurrentDispatcher.current = prevDispatcher;\n}\n\nexport function markCommitTimeOfFallback() {\n  globalMostRecentFallbackTime = now();\n}\n\nexport function markSkippedUpdateLanes(lane: Lane | Lanes): void {\n  workInProgressRootSkippedLanes = mergeLanes(\n    lane,\n    workInProgressRootSkippedLanes,\n  );\n}\n\nexport function renderDidSuspend(): void {\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootSuspended;\n  }\n}\n\nexport function renderDidSuspendDelayIfPossible(): void {\n  if (\n    workInProgressRootExitStatus === RootIncomplete ||\n    workInProgressRootExitStatus === RootSuspended\n  ) {\n    workInProgressRootExitStatus = RootSuspendedWithDelay;\n  }\n\n  // Check if there are updates that we skipped tree that might have unblocked\n  // this render.\n  if (\n    workInProgressRoot !== null &&\n    (includesNonIdleWork(workInProgressRootSkippedLanes) ||\n      includesNonIdleWork(workInProgressRootUpdatedLanes))\n  ) {\n    // Mark the current render as suspended so that we switch to working on\n    // the updates that were skipped. Usually we only suspend at the end of\n    // the render phase.\n    // TODO: We should probably always mark the root as suspended immediately\n    // (inside this function), since by suspending at the end of the render\n    // phase introduces a potential mistake where we suspend lanes that were\n    // pinged or updated while we were rendering.\n    markRootSuspended(workInProgressRoot, workInProgressRootRenderLanes);\n  }\n}\n\nexport function renderDidError() {\n  if (workInProgressRootExitStatus !== RootCompleted) {\n    workInProgressRootExitStatus = RootErrored;\n  }\n}\n\n// Called during render to determine if anything has suspended.\n// Returns false if we're not sure.\nexport function renderHasNotSuspendedYet(): boolean {\n  // If something errored or completed, we can't really be sure,\n  // so those are false.\n  return workInProgressRootExitStatus === RootIncomplete;\n}\n\nfunction renderRootSync(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        const memoizedUpdaters = root.memoizedUpdaters;\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        }\n\n        // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    prepareFreshStack(root, lanes);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopSync();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n\n  executionContext = prevExecutionContext;\n  popDispatcher(prevDispatcher);\n\n  if (workInProgress !== null) {\n    // This is a sync render, so we should have finished the whole tree.\n    invariant(\n      false,\n      'Cannot commit an incomplete root. This error is likely caused by a ' +\n        'bug in React. Please file an issue.',\n    );\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStopped();\n  }\n\n  // Set this to null to indicate there's no in-progress render.\n  workInProgressRoot = null;\n  workInProgressRootRenderLanes = NoLanes;\n\n  return workInProgressRootExitStatus;\n}\n\n// The work loop is an extremely hot path. Tell Closure not to inline it.\n/** @noinline */\nfunction workLoopSync() {\n  // Already timed out, so perform work without checking if we need to yield.\n  while (workInProgress !== null) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction renderRootConcurrent(root: FiberRoot, lanes: Lanes) {\n  const prevExecutionContext = executionContext;\n  executionContext |= RenderContext;\n  const prevDispatcher = pushDispatcher();\n\n  // If the root or lanes have changed, throw out the existing stack\n  // and prepare a fresh one. Otherwise we'll continue where we left off.\n  if (workInProgressRoot !== root || workInProgressRootRenderLanes !== lanes) {\n    if (enableUpdaterTracking) {\n      if (isDevToolsPresent) {\n        const memoizedUpdaters = root.memoizedUpdaters;\n        if (memoizedUpdaters.size > 0) {\n          restorePendingUpdaters(root, workInProgressRootRenderLanes);\n          memoizedUpdaters.clear();\n        }\n\n        // At this point, move Fibers that scheduled the upcoming work from the Map to the Set.\n        // If we bailout on this work, we'll move them back (like above).\n        // It's important to move them now in case the work spawns more work at the same priority with different updaters.\n        // That way we can keep the current update and future updates separate.\n        movePendingFibersToMemoized(root, lanes);\n      }\n    }\n\n    resetRenderTimer();\n    prepareFreshStack(root, lanes);\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markRenderStarted(lanes);\n  }\n\n  do {\n    try {\n      workLoopConcurrent();\n      break;\n    } catch (thrownValue) {\n      handleError(root, thrownValue);\n    }\n  } while (true);\n  resetContextDependencies();\n\n  popDispatcher(prevDispatcher);\n  executionContext = prevExecutionContext;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logRenderStopped();\n    }\n  }\n\n  // Check if the tree has completed.\n  if (workInProgress !== null) {\n    // Still work remaining.\n    if (enableSchedulingProfiler) {\n      markRenderYielded();\n    }\n    return RootIncomplete;\n  } else {\n    // Completed the tree.\n    if (enableSchedulingProfiler) {\n      markRenderStopped();\n    }\n\n    // Set this to null to indicate there's no in-progress render.\n    workInProgressRoot = null;\n    workInProgressRootRenderLanes = NoLanes;\n\n    // Return the final exit status.\n    return workInProgressRootExitStatus;\n  }\n}\n\n/** @noinline */\nfunction workLoopConcurrent() {\n  // Perform work until Scheduler asks us to yield\n  while (workInProgress !== null && !shouldYield()) {\n    performUnitOfWork(workInProgress);\n  }\n}\n\nfunction performUnitOfWork(unitOfWork: Fiber): void {\n  // The current, flushed, state of this fiber is the alternate. Ideally\n  // nothing should rely on this, but relying on it here means that we don't\n  // need an additional field on the work in progress.\n  const current = unitOfWork.alternate;\n  setCurrentDebugFiberInDEV(unitOfWork);\n\n  let next;\n  if (enableProfilerTimer && (unitOfWork.mode & ProfileMode) !== NoMode) {\n    startProfilerTimer(unitOfWork);\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n    stopProfilerTimerIfRunningAndRecordDelta(unitOfWork, true);\n  } else {\n    next = beginWork(current, unitOfWork, subtreeRenderLanes);\n  }\n\n  resetCurrentDebugFiberInDEV();\n  unitOfWork.memoizedProps = unitOfWork.pendingProps;\n  if (next === null) {\n    // If this doesn't spawn new work, complete the current work.\n    completeUnitOfWork(unitOfWork);\n  } else {\n    workInProgress = next;\n  }\n\n  ReactCurrentOwner.current = null;\n}\n\nfunction completeUnitOfWork(unitOfWork: Fiber): void {\n  // Attempt to complete the current unit of work, then move to the next\n  // sibling. If there are no more siblings, return to the parent fiber.\n  let completedWork = unitOfWork;\n  do {\n    // The current, flushed, state of this fiber is the alternate. Ideally\n    // nothing should rely on this, but relying on it here means that we don't\n    // need an additional field on the work in progress.\n    const current = completedWork.alternate;\n    const returnFiber = completedWork.return;\n\n    // Check if the work completed or if something threw.\n    if ((completedWork.flags & Incomplete) === NoFlags) {\n      setCurrentDebugFiberInDEV(completedWork);\n      let next;\n      if (\n        !enableProfilerTimer ||\n        (completedWork.mode & ProfileMode) === NoMode\n      ) {\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n      } else {\n        startProfilerTimer(completedWork);\n        next = completeWork(current, completedWork, subtreeRenderLanes);\n        // Update render duration assuming we didn't error.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n      }\n      resetCurrentDebugFiberInDEV();\n\n      if (next !== null) {\n        // Completing this fiber spawned new work. Work on that next.\n        workInProgress = next;\n        return;\n      }\n    } else {\n      // This fiber did not complete because something threw. Pop values off\n      // the stack without entering the complete phase. If this is a boundary,\n      // capture values if possible.\n      const next = unwindWork(completedWork, subtreeRenderLanes);\n\n      // Because this fiber did not complete, don't reset its lanes.\n\n      if (next !== null) {\n        // If completing this work spawned new work, do that next. We'll come\n        // back here again.\n        // Since we're restarting, remove anything that is not a host effect\n        // from the effect tag.\n        next.flags &= HostEffectMask;\n        workInProgress = next;\n        return;\n      }\n\n      if (\n        enableProfilerTimer &&\n        (completedWork.mode & ProfileMode) !== NoMode\n      ) {\n        // Record the render duration for the fiber that errored.\n        stopProfilerTimerIfRunningAndRecordDelta(completedWork, false);\n\n        // Include the time spent working on failed children before continuing.\n        let actualDuration = completedWork.actualDuration;\n        let child = completedWork.child;\n        while (child !== null) {\n          actualDuration += child.actualDuration;\n          child = child.sibling;\n        }\n        completedWork.actualDuration = actualDuration;\n      }\n\n      if (returnFiber !== null) {\n        // Mark the parent fiber as incomplete and clear its subtree flags.\n        returnFiber.flags |= Incomplete;\n        returnFiber.subtreeFlags = NoFlags;\n        returnFiber.deletions = null;\n      }\n    }\n\n    const siblingFiber = completedWork.sibling;\n    if (siblingFiber !== null) {\n      // If there is more work to do in this returnFiber, do that next.\n      workInProgress = siblingFiber;\n      return;\n    }\n    // Otherwise, return to the parent\n    completedWork = returnFiber;\n    // Update the next thing we're working on in case something throws.\n    workInProgress = completedWork;\n  } while (completedWork !== null);\n\n  // We've reached the root.\n  if (workInProgressRootExitStatus === RootIncomplete) {\n    workInProgressRootExitStatus = RootCompleted;\n  }\n}\n\nfunction commitRoot(root) {\n  // TODO: This no longer makes any sense. We already wrap the mutation and\n  // layout phases. Should be able to remove.\n  const previousUpdateLanePriority = getCurrentUpdatePriority();\n  const prevTransition = ReactCurrentBatchConfig.transition;\n  try {\n    ReactCurrentBatchConfig.transition = 0;\n    setCurrentUpdatePriority(DiscreteEventPriority);\n    commitRootImpl(root, previousUpdateLanePriority);\n  } finally {\n    ReactCurrentBatchConfig.transition = prevTransition;\n    setCurrentUpdatePriority(previousUpdateLanePriority);\n  }\n\n  return null;\n}\n\nfunction commitRootImpl(root, renderPriorityLevel) {\n  do {\n    // `flushPassiveEffects` will call `flushSyncUpdateQueue` at the end, which\n    // means `flushPassiveEffects` will sometimes result in additional\n    // passive effects. So we need to keep flushing in a loop until there are\n    // no more pending effects.\n    // TODO: Might be better if `flushPassiveEffects` did not automatically\n    // flush synchronous work at the end, to avoid factoring hazards like this.\n    flushPassiveEffects();\n  } while (rootWithPendingPassiveEffects !== null);\n  flushRenderPhaseStrictModeWarningsInDEV();\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Should not already be working.',\n  );\n\n  const finishedWork = root.finishedWork;\n  const lanes = root.finishedLanes;\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStarted(lanes);\n  }\n\n  if (finishedWork === null) {\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logCommitStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markCommitStopped();\n    }\n\n    return null;\n  } else {\n    if (__DEV__) {\n      if (lanes === NoLanes) {\n        console.error(\n          'root.finishedLanes should not be empty during a commit. This is a ' +\n            'bug in React.',\n        );\n      }\n    }\n  }\n  root.finishedWork = null;\n  root.finishedLanes = NoLanes;\n\n  invariant(\n    finishedWork !== root.current,\n    'Cannot commit the same tree as before. This error is likely caused by ' +\n      'a bug in React. Please file an issue.',\n  );\n\n  // commitRoot never returns a continuation; it always finishes synchronously.\n  // So we can clear these now to allow a new callback to be scheduled.\n  root.callbackNode = null;\n  root.callbackPriority = NoLane;\n\n  // Update the first and last pending times on this root. The new first\n  // pending time is whatever is left on the root fiber.\n  let remainingLanes = mergeLanes(finishedWork.lanes, finishedWork.childLanes);\n  markRootFinished(root, remainingLanes);\n\n  if (root === workInProgressRoot) {\n    // We can reset these now that they are finished.\n    workInProgressRoot = null;\n    workInProgress = null;\n    workInProgressRootRenderLanes = NoLanes;\n  } else {\n    // This indicates that the last root we worked on is not the same one that\n    // we're committing now. This most commonly happens when a suspended root\n    // times out.\n  }\n\n  // If there are pending passive effects, schedule a callback to process them.\n  // Do this as early as possible, so it is queued before anything else that\n  // might get scheduled in the commit phase. (See #16714.)\n  // TODO: Delete all other places that schedule the passive effect callback\n  // They're redundant.\n  if (\n    (finishedWork.subtreeFlags & PassiveMask) !== NoFlags ||\n    (finishedWork.flags & PassiveMask) !== NoFlags\n  ) {\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n\n  // Check if there are any effects in the whole tree.\n  // TODO: This is left over from the effect list implementation, where we had\n  // to check for the existence of `firstEffect` to satisfy Flow. I think the\n  // only other reason this optimization exists is because it affects profiling.\n  // Reconsider whether this is necessary.\n  const subtreeHasEffects =\n    (finishedWork.subtreeFlags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n  const rootHasEffect =\n    (finishedWork.flags &\n      (BeforeMutationMask | MutationMask | LayoutMask | PassiveMask)) !==\n    NoFlags;\n\n  if (subtreeHasEffects || rootHasEffect) {\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    ReactCurrentBatchConfig.transition = 0;\n    const previousPriority = getCurrentUpdatePriority();\n    setCurrentUpdatePriority(DiscreteEventPriority);\n\n    const prevExecutionContext = executionContext;\n    executionContext |= CommitContext;\n\n    // Reset this to null before calling lifecycles\n    ReactCurrentOwner.current = null;\n\n    // The commit phase is broken into several sub-phases. We do a separate pass\n    // of the effect list for each phase: all mutation effects come before all\n    // layout effects, and so on.\n\n    // The first phase a \"before mutation\" phase. We use this phase to read the\n    // state of the host tree right before we mutate it. This is where\n    // getSnapshotBeforeUpdate is called.\n    const shouldFireAfterActiveInstanceBlur = commitBeforeMutationEffects(\n      root,\n      finishedWork,\n    );\n\n    if (enableProfilerTimer) {\n      // Mark the current commit time to be shared by all Profilers in this\n      // batch. This enables them to be grouped later.\n      recordCommitTime();\n    }\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      // Track the root here, rather than in commitLayoutEffects(), because of ref setters.\n      // Updates scheduled during ref detachment should also be flagged.\n      rootCommittingMutationOrLayoutEffects = root;\n    }\n\n    // The next phase is the mutation phase, where we mutate the host tree.\n    commitMutationEffects(root, finishedWork, lanes);\n\n    if (enableCreateEventHandleAPI) {\n      if (shouldFireAfterActiveInstanceBlur) {\n        afterActiveInstanceBlur();\n      }\n    }\n    resetAfterCommit(root.containerInfo);\n\n    // The work-in-progress tree is now the current tree. This must come after\n    // the mutation phase, so that the previous tree is still current during\n    // componentWillUnmount, but before the layout phase, so that the finished\n    // work is current during componentDidMount/Update.\n    root.current = finishedWork;\n\n    // The next phase is the layout phase, where we call effects that read\n    // the host tree after it's been mutated. The idiomatic use case for this is\n    // layout, but class component lifecycles also fire here for legacy reasons.\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logLayoutEffectsStarted(lanes);\n      }\n    }\n    if (enableSchedulingProfiler) {\n      markLayoutEffectsStarted(lanes);\n    }\n    commitLayoutEffects(finishedWork, root, lanes);\n    if (__DEV__) {\n      if (enableDebugTracing) {\n        logLayoutEffectsStopped();\n      }\n    }\n\n    if (enableSchedulingProfiler) {\n      markLayoutEffectsStopped();\n    }\n\n    if (enableProfilerTimer && enableProfilerNestedUpdateScheduledHook) {\n      rootCommittingMutationOrLayoutEffects = null;\n    }\n\n    // Tell Scheduler to yield at the end of the frame, so the browser has an\n    // opportunity to paint.\n    requestPaint();\n\n    executionContext = prevExecutionContext;\n\n    // Reset the priority to the previous non-sync value.\n    setCurrentUpdatePriority(previousPriority);\n    ReactCurrentBatchConfig.transition = prevTransition;\n  } else {\n    // No effects.\n    root.current = finishedWork;\n    // Measure these anyway so the flamegraph explicitly shows that there were\n    // no effects.\n    // TODO: Maybe there's a better way to report this.\n    if (enableProfilerTimer) {\n      recordCommitTime();\n    }\n  }\n\n  const rootDidHavePassiveEffects = rootDoesHavePassiveEffects;\n\n  if (rootDoesHavePassiveEffects) {\n    // This commit has passive effects. Stash a reference to them. But don't\n    // schedule a callback until after flushing layout work.\n    rootDoesHavePassiveEffects = false;\n    rootWithPendingPassiveEffects = root;\n    pendingPassiveEffectsLanes = lanes;\n  }\n\n  // Read this again, since an effect might have updated it\n  remainingLanes = root.pendingLanes;\n\n  // Check if there's remaining work on this root\n  // TODO: This is part of the `componentDidCatch` implementation. Its purpose\n  // is to detect whether something might have called setState inside\n  // `componentDidCatch`. The mechanism is known to be flawed because `setState`\n  // inside `componentDidCatch` is itself flawed — that's why we recommend\n  // `getDerivedStateFromError` instead. However, it could be improved by\n  // checking if remainingLanes includes Sync work, instead of whether there's\n  // any work remaining at all (which would also include stuff like Suspense\n  // retries or transitions). It's been like this for a while, though, so fixing\n  // it probably isn't that urgent.\n  if (remainingLanes === NoLanes) {\n    // If there's no remaining work, we can clear the set of already failed\n    // error boundaries.\n    legacyErrorBoundariesThatAlreadyFailed = null;\n  }\n\n  if (__DEV__ && enableStrictEffects) {\n    if (!rootDidHavePassiveEffects) {\n      commitDoubleInvokeEffectsInDEV(root.current, false);\n    }\n  }\n\n  onCommitRootDevTools(finishedWork.stateNode, renderPriorityLevel);\n\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      root.memoizedUpdaters.clear();\n    }\n  }\n\n  if (__DEV__) {\n    onCommitRootTestSelector();\n  }\n\n  // Always call this before exiting `commitRoot`, to ensure that any\n  // additional work on this root is scheduled.\n  ensureRootIsScheduled(root, now());\n\n  if (hasUncaughtError) {\n    hasUncaughtError = false;\n    const error = firstUncaughtError;\n    firstUncaughtError = null;\n    throw error;\n  }\n\n  // If the passive effects are the result of a discrete render, flush them\n  // synchronously at the end of the current task so that the result is\n  // immediately observable. Otherwise, we assume that they are not\n  // order-dependent and do not need to be observed by external systems, so we\n  // can wait until after paint.\n  // TODO: We can optimize this by not scheduling the callback earlier. Since we\n  // currently schedule the callback in multiple places, will wait until those\n  // are consolidated.\n  if (\n    includesSomeLane(pendingPassiveEffectsLanes, SyncLane) &&\n    root.tag !== LegacyRoot\n  ) {\n    flushPassiveEffects();\n  }\n\n  // Read this again, since a passive effect might have updated it\n  remainingLanes = root.pendingLanes;\n  if (includesSomeLane(remainingLanes, (SyncLane: Lane))) {\n    if (enableProfilerTimer && enableProfilerNestedUpdatePhase) {\n      markNestedUpdateScheduled();\n    }\n\n    // Count the number of times the root synchronously re-renders without\n    // finishing. If there are too many, it indicates an infinite update loop.\n    if (root === rootWithNestedUpdates) {\n      nestedUpdateCount++;\n    } else {\n      nestedUpdateCount = 0;\n      rootWithNestedUpdates = root;\n    }\n  } else {\n    nestedUpdateCount = 0;\n  }\n\n  // If layout work was scheduled, flush it now.\n  flushSyncCallbacks();\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logCommitStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markCommitStopped();\n  }\n\n  return null;\n}\n\nexport function flushPassiveEffects(): boolean {\n  // Returns whether passive effects were flushed.\n  // TODO: Combine this check with the one in flushPassiveEFfectsImpl. We should\n  // probably just combine the two functions. I believe they were only separate\n  // in the first place because we used to wrap it with\n  // `Scheduler.runWithPriority`, which accepts a function. But now we track the\n  // priority within React itself, so we can mutate the variable directly.\n  if (rootWithPendingPassiveEffects !== null) {\n    const renderPriority = lanesToEventPriority(pendingPassiveEffectsLanes);\n    const priority = lowerEventPriority(DefaultEventPriority, renderPriority);\n    const prevTransition = ReactCurrentBatchConfig.transition;\n    const previousPriority = getCurrentUpdatePriority();\n    try {\n      ReactCurrentBatchConfig.transition = 0;\n      setCurrentUpdatePriority(priority);\n      return flushPassiveEffectsImpl();\n    } finally {\n      setCurrentUpdatePriority(previousPriority);\n      ReactCurrentBatchConfig.transition = prevTransition;\n    }\n  }\n  return false;\n}\n\nexport function enqueuePendingPassiveProfilerEffect(fiber: Fiber): void {\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    pendingPassiveProfilerEffects.push(fiber);\n    if (!rootDoesHavePassiveEffects) {\n      rootDoesHavePassiveEffects = true;\n      scheduleCallback(NormalSchedulerPriority, () => {\n        flushPassiveEffects();\n        return null;\n      });\n    }\n  }\n}\n\nfunction flushPassiveEffectsImpl() {\n  if (rootWithPendingPassiveEffects === null) {\n    return false;\n  }\n\n  const root = rootWithPendingPassiveEffects;\n  const lanes = pendingPassiveEffectsLanes;\n  rootWithPendingPassiveEffects = null;\n  // TODO: This is sometimes out of sync with rootWithPendingPassiveEffects.\n  // Figure out why and fix it. It's not causing any known issues (probably\n  // because it's only used for profiling), but it's a refactor hazard.\n  pendingPassiveEffectsLanes = NoLanes;\n\n  invariant(\n    (executionContext & (RenderContext | CommitContext)) === NoContext,\n    'Cannot flush passive effects while already rendering.',\n  );\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStarted(lanes);\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStarted(lanes);\n  }\n\n  const prevExecutionContext = executionContext;\n  executionContext |= CommitContext;\n\n  commitPassiveUnmountEffects(root.current);\n  commitPassiveMountEffects(root, root.current);\n\n  // TODO: Move to commitPassiveMountEffects\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const profilerEffects = pendingPassiveProfilerEffects;\n    pendingPassiveProfilerEffects = [];\n    for (let i = 0; i < profilerEffects.length; i++) {\n      const fiber = ((profilerEffects[i]: any): Fiber);\n      commitPassiveEffectDurations(root, fiber);\n    }\n  }\n\n  if (__DEV__) {\n    if (enableDebugTracing) {\n      logPassiveEffectsStopped();\n    }\n  }\n\n  if (enableSchedulingProfiler) {\n    markPassiveEffectsStopped();\n  }\n\n  if (__DEV__ && enableStrictEffects) {\n    commitDoubleInvokeEffectsInDEV(root.current, true);\n  }\n\n  executionContext = prevExecutionContext;\n\n  flushSyncCallbacks();\n\n  // If additional passive effects were scheduled, increment a counter. If this\n  // exceeds the limit, we'll fire a warning.\n  nestedPassiveUpdateCount =\n    rootWithPendingPassiveEffects === null ? 0 : nestedPassiveUpdateCount + 1;\n\n  // TODO: Move to commitPassiveMountEffects\n  onPostCommitRootDevTools(root);\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    const stateNode = root.current.stateNode;\n    stateNode.effectDuration = 0;\n    stateNode.passiveEffectDuration = 0;\n  }\n\n  return true;\n}\n\nexport function isAlreadyFailedLegacyErrorBoundary(instance: mixed): boolean {\n  return (\n    legacyErrorBoundariesThatAlreadyFailed !== null &&\n    legacyErrorBoundariesThatAlreadyFailed.has(instance)\n  );\n}\n\nexport function markLegacyErrorBoundaryAsFailed(instance: mixed) {\n  if (legacyErrorBoundariesThatAlreadyFailed === null) {\n    legacyErrorBoundariesThatAlreadyFailed = new Set([instance]);\n  } else {\n    legacyErrorBoundariesThatAlreadyFailed.add(instance);\n  }\n}\n\nfunction prepareToThrowUncaughtError(error: mixed) {\n  if (!hasUncaughtError) {\n    hasUncaughtError = true;\n    firstUncaughtError = error;\n  }\n}\nexport const onUncaughtError = prepareToThrowUncaughtError;\n\nfunction captureCommitPhaseErrorOnRoot(\n  rootFiber: Fiber,\n  sourceFiber: Fiber,\n  error: mixed,\n) {\n  const errorInfo = createCapturedValue(error, sourceFiber);\n  const update = createRootErrorUpdate(rootFiber, errorInfo, (SyncLane: Lane));\n  enqueueUpdate(rootFiber, update, (SyncLane: Lane));\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(rootFiber, (SyncLane: Lane));\n  if (root !== null) {\n    markRootUpdated(root, SyncLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nexport function captureCommitPhaseError(\n  sourceFiber: Fiber,\n  nearestMountedAncestor: Fiber | null,\n  error: mixed,\n) {\n  if (sourceFiber.tag === HostRoot) {\n    // Error was thrown at the root. There is no parent, so the root\n    // itself should capture it.\n    captureCommitPhaseErrorOnRoot(sourceFiber, sourceFiber, error);\n    return;\n  }\n\n  let fiber = null;\n  if (skipUnmountedBoundaries) {\n    fiber = nearestMountedAncestor;\n  } else {\n    fiber = sourceFiber.return;\n  }\n\n  while (fiber !== null) {\n    if (fiber.tag === HostRoot) {\n      captureCommitPhaseErrorOnRoot(fiber, sourceFiber, error);\n      return;\n    } else if (fiber.tag === ClassComponent) {\n      const ctor = fiber.type;\n      const instance = fiber.stateNode;\n      if (\n        typeof ctor.getDerivedStateFromError === 'function' ||\n        (typeof instance.componentDidCatch === 'function' &&\n          !isAlreadyFailedLegacyErrorBoundary(instance))\n      ) {\n        const errorInfo = createCapturedValue(error, sourceFiber);\n        const update = createClassErrorUpdate(\n          fiber,\n          errorInfo,\n          (SyncLane: Lane),\n        );\n        enqueueUpdate(fiber, update, (SyncLane: Lane));\n        const eventTime = requestEventTime();\n        const root = markUpdateLaneFromFiberToRoot(fiber, (SyncLane: Lane));\n        if (root !== null) {\n          markRootUpdated(root, SyncLane, eventTime);\n          ensureRootIsScheduled(root, eventTime);\n        }\n        return;\n      }\n    }\n    fiber = fiber.return;\n  }\n\n  if (__DEV__) {\n    // TODO: Until we re-land skipUnmountedBoundaries (see #20147), this warning\n    // will fire for errors that are thrown by destroy functions inside deleted\n    // trees. What it should instead do is propagate the error to the parent of\n    // the deleted tree. In the meantime, do not add this warning to the\n    // allowlist; this is only for our internal use.\n    console.error(\n      'Internal React error: Attempted to capture a commit phase error ' +\n        'inside a detached tree. This indicates a bug in React. Likely ' +\n        'causes include deleting the same fiber more than once, committing an ' +\n        'already-finished tree, or an inconsistent return pointer.\\n\\n' +\n        'Error message:\\n\\n%s',\n      error,\n    );\n  }\n}\n\nexport function pingSuspendedRoot(\n  root: FiberRoot,\n  wakeable: Wakeable,\n  pingedLanes: Lanes,\n) {\n  const pingCache = root.pingCache;\n  if (pingCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    pingCache.delete(wakeable);\n  }\n\n  const eventTime = requestEventTime();\n  markRootPinged(root, pingedLanes, eventTime);\n\n  if (\n    workInProgressRoot === root &&\n    isSubsetOfLanes(workInProgressRootRenderLanes, pingedLanes)\n  ) {\n    // Received a ping at the same priority level at which we're currently\n    // rendering. We might want to restart this render. This should mirror\n    // the logic of whether or not a root suspends once it completes.\n\n    // TODO: If we're rendering sync either due to Sync, Batched or expired,\n    // we should probably never restart.\n\n    // If we're suspended with delay, or if it's a retry, we'll always suspend\n    // so we can always restart.\n    if (\n      workInProgressRootExitStatus === RootSuspendedWithDelay ||\n      (workInProgressRootExitStatus === RootSuspended &&\n        includesOnlyRetries(workInProgressRootRenderLanes) &&\n        now() - globalMostRecentFallbackTime < FALLBACK_THROTTLE_MS)\n    ) {\n      // Restart from the root.\n      prepareFreshStack(root, NoLanes);\n    } else {\n      // Even though we can't restart right now, we might get an\n      // opportunity later. So we mark this render as having a ping.\n      workInProgressRootPingedLanes = mergeLanes(\n        workInProgressRootPingedLanes,\n        pingedLanes,\n      );\n    }\n  }\n\n  ensureRootIsScheduled(root, eventTime);\n}\n\nfunction retryTimedOutBoundary(boundaryFiber: Fiber, retryLane: Lane) {\n  // The boundary fiber (a Suspense component or SuspenseList component)\n  // previously was rendered in its fallback state. One of the promises that\n  // suspended it has resolved, which means at least part of the tree was\n  // likely unblocked. Try rendering again, at a new lanes.\n  if (retryLane === NoLane) {\n    // TODO: Assign this to `suspenseState.retryLane`? to avoid\n    // unnecessary entanglement?\n    retryLane = requestRetryLane(boundaryFiber);\n  }\n  // TODO: Special case idle priority?\n  const eventTime = requestEventTime();\n  const root = markUpdateLaneFromFiberToRoot(boundaryFiber, retryLane);\n  if (root !== null) {\n    markRootUpdated(root, retryLane, eventTime);\n    ensureRootIsScheduled(root, eventTime);\n  }\n}\n\nexport function retryDehydratedSuspenseBoundary(boundaryFiber: Fiber) {\n  const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n  let retryLane = NoLane;\n  if (suspenseState !== null) {\n    retryLane = suspenseState.retryLane;\n  }\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\nexport function resolveRetryWakeable(boundaryFiber: Fiber, wakeable: Wakeable) {\n  let retryLane = NoLane; // Default\n  let retryCache: WeakSet<Wakeable> | Set<Wakeable> | null;\n  if (enableSuspenseServerRenderer) {\n    switch (boundaryFiber.tag) {\n      case SuspenseComponent:\n        retryCache = boundaryFiber.stateNode;\n        const suspenseState: null | SuspenseState = boundaryFiber.memoizedState;\n        if (suspenseState !== null) {\n          retryLane = suspenseState.retryLane;\n        }\n        break;\n      case SuspenseListComponent:\n        retryCache = boundaryFiber.stateNode;\n        break;\n      default:\n        invariant(\n          false,\n          'Pinged unknown suspense boundary type. ' +\n            'This is probably a bug in React.',\n        );\n    }\n  } else {\n    retryCache = boundaryFiber.stateNode;\n  }\n\n  if (retryCache !== null) {\n    // The wakeable resolved, so we no longer need to memoize, because it will\n    // never be thrown again.\n    retryCache.delete(wakeable);\n  }\n\n  retryTimedOutBoundary(boundaryFiber, retryLane);\n}\n\n// Computes the next Just Noticeable Difference (JND) boundary.\n// The theory is that a person can't tell the difference between small differences in time.\n// Therefore, if we wait a bit longer than necessary that won't translate to a noticeable\n// difference in the experience. However, waiting for longer might mean that we can avoid\n// showing an intermediate loading state. The longer we have already waited, the harder it\n// is to tell small differences in time. Therefore, the longer we've already waited,\n// the longer we can wait additionally. At some point we have to give up though.\n// We pick a train model where the next boundary commits at a consistent schedule.\n// These particular numbers are vague estimates. We expect to adjust them based on research.\nfunction jnd(timeElapsed: number) {\n  return timeElapsed < 120\n    ? 120\n    : timeElapsed < 480\n    ? 480\n    : timeElapsed < 1080\n    ? 1080\n    : timeElapsed < 1920\n    ? 1920\n    : timeElapsed < 3000\n    ? 3000\n    : timeElapsed < 4320\n    ? 4320\n    : ceil(timeElapsed / 1960) * 1960;\n}\n\nfunction checkForNestedUpdates() {\n  if (nestedUpdateCount > NESTED_UPDATE_LIMIT) {\n    nestedUpdateCount = 0;\n    rootWithNestedUpdates = null;\n    invariant(\n      false,\n      'Maximum update depth exceeded. This can happen when a component ' +\n        'repeatedly calls setState inside componentWillUpdate or ' +\n        'componentDidUpdate. React limits the number of nested updates to ' +\n        'prevent infinite loops.',\n    );\n  }\n\n  if (__DEV__) {\n    if (nestedPassiveUpdateCount > NESTED_PASSIVE_UPDATE_LIMIT) {\n      nestedPassiveUpdateCount = 0;\n      console.error(\n        'Maximum update depth exceeded. This can happen when a component ' +\n          \"calls setState inside useEffect, but useEffect either doesn't \" +\n          'have a dependency array, or one of the dependencies changes on ' +\n          'every render.',\n      );\n    }\n  }\n}\n\nfunction flushRenderPhaseStrictModeWarningsInDEV() {\n  if (__DEV__) {\n    ReactStrictModeWarnings.flushLegacyContextWarning();\n\n    if (warnAboutDeprecatedLifecycles) {\n      ReactStrictModeWarnings.flushPendingUnsafeLifecycleWarnings();\n    }\n  }\n}\n\nfunction commitDoubleInvokeEffectsInDEV(\n  fiber: Fiber,\n  hasPassiveEffects: boolean,\n) {\n  if (__DEV__ && enableStrictEffects) {\n    // TODO (StrictEffects) Should we set a marker on the root if it contains strict effects\n    // so we don't traverse unnecessarily? similar to subtreeFlags but just at the root level.\n    // Maybe not a big deal since this is DEV only behavior.\n\n    setCurrentDebugFiberInDEV(fiber);\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectUnmountInDEV);\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(\n        fiber,\n        MountPassiveDev,\n        invokePassiveEffectUnmountInDEV,\n      );\n    }\n\n    invokeEffectsInDev(fiber, MountLayoutDev, invokeLayoutEffectMountInDEV);\n    if (hasPassiveEffects) {\n      invokeEffectsInDev(fiber, MountPassiveDev, invokePassiveEffectMountInDEV);\n    }\n    resetCurrentDebugFiberInDEV();\n  }\n}\n\nfunction invokeEffectsInDev(\n  firstChild: Fiber,\n  fiberFlags: Flags,\n  invokeEffectFn: (fiber: Fiber) => void,\n): void {\n  if (__DEV__ && enableStrictEffects) {\n    // We don't need to re-check StrictEffectsMode here.\n    // This function is only called if that check has already passed.\n\n    let current = firstChild;\n    let subtreeRoot = null;\n    while (current !== null) {\n      const primarySubtreeFlag = current.subtreeFlags & fiberFlags;\n      if (\n        current !== subtreeRoot &&\n        current.child !== null &&\n        primarySubtreeFlag !== NoFlags\n      ) {\n        current = current.child;\n      } else {\n        if ((current.flags & fiberFlags) !== NoFlags) {\n          invokeEffectFn(current);\n        }\n\n        if (current.sibling !== null) {\n          current = current.sibling;\n        } else {\n          current = subtreeRoot = current.return;\n        }\n      }\n    }\n  }\n}\n\nlet didWarnStateUpdateForNotYetMountedComponent: Set<string> | null = null;\nfunction warnAboutUpdateOnNotYetMountedFiberInDEV(fiber) {\n  if (__DEV__) {\n    if ((executionContext & RenderContext) !== NoContext) {\n      // We let the other warning about render phase updates deal with this one.\n      return;\n    }\n\n    if (!(fiber.mode & ConcurrentMode)) {\n      return;\n    }\n\n    const tag = fiber.tag;\n    if (\n      tag !== IndeterminateComponent &&\n      tag !== HostRoot &&\n      tag !== ClassComponent &&\n      tag !== FunctionComponent &&\n      tag !== ForwardRef &&\n      tag !== MemoComponent &&\n      tag !== SimpleMemoComponent\n    ) {\n      // Only warn for user-defined components, not internal ones like Suspense.\n      return;\n    }\n\n    // We show the whole stack but dedupe on the top component's name because\n    // the problematic code almost always lies inside that component.\n    const componentName = getComponentNameFromFiber(fiber) || 'ReactComponent';\n    if (didWarnStateUpdateForNotYetMountedComponent !== null) {\n      if (didWarnStateUpdateForNotYetMountedComponent.has(componentName)) {\n        return;\n      }\n      didWarnStateUpdateForNotYetMountedComponent.add(componentName);\n    } else {\n      didWarnStateUpdateForNotYetMountedComponent = new Set([componentName]);\n    }\n\n    const previousFiber = ReactCurrentFiberCurrent;\n    try {\n      setCurrentDebugFiberInDEV(fiber);\n      console.error(\n        \"Can't perform a React state update on a component that hasn't mounted yet. \" +\n          'This indicates that you have a side-effect in your render function that ' +\n          'asynchronously later calls tries to update the component. Move this work to ' +\n          'useEffect instead.',\n      );\n    } finally {\n      if (previousFiber) {\n        setCurrentDebugFiberInDEV(fiber);\n      } else {\n        resetCurrentDebugFiberInDEV();\n      }\n    }\n  }\n}\n\nlet beginWork;\nif (__DEV__ && replayFailedUnitOfWorkWithInvokeGuardedCallback) {\n  const dummyFiber = null;\n  beginWork = (current, unitOfWork, lanes) => {\n    // If a component throws an error, we replay it again in a synchronously\n    // dispatched event, so that the debugger will treat it as an uncaught\n    // error See ReactErrorUtils for more information.\n\n    // Before entering the begin phase, copy the work-in-progress onto a dummy\n    // fiber. If beginWork throws, we'll use this to reset the state.\n    const originalWorkInProgressCopy = assignFiberPropertiesInDEV(\n      dummyFiber,\n      unitOfWork,\n    );\n    try {\n      return originalBeginWork(current, unitOfWork, lanes);\n    } catch (originalError) {\n      if (\n        originalError !== null &&\n        typeof originalError === 'object' &&\n        typeof originalError.then === 'function'\n      ) {\n        // Don't replay promises. Treat everything else like an error.\n        throw originalError;\n      }\n\n      // Keep this code in sync with handleError; any changes here must have\n      // corresponding changes there.\n      resetContextDependencies();\n      resetHooksAfterThrow();\n      // Don't reset current debug fiber, since we're about to work on the\n      // same fiber again.\n\n      // Unwind the failed stack frame\n      unwindInterruptedWork(unitOfWork, workInProgressRootRenderLanes);\n\n      // Restore the original properties of the fiber.\n      assignFiberPropertiesInDEV(unitOfWork, originalWorkInProgressCopy);\n\n      if (enableProfilerTimer && unitOfWork.mode & ProfileMode) {\n        // Reset the profiler timer.\n        startProfilerTimer(unitOfWork);\n      }\n\n      // Run beginWork again.\n      invokeGuardedCallback(\n        null,\n        originalBeginWork,\n        null,\n        current,\n        unitOfWork,\n        lanes,\n      );\n\n      if (hasCaughtError()) {\n        const replayError = clearCaughtError();\n        if (\n          typeof replayError === 'object' &&\n          replayError !== null &&\n          replayError._suppressLogging &&\n          typeof originalError === 'object' &&\n          originalError !== null &&\n          !originalError._suppressLogging\n        ) {\n          // If suppressed, let the flag carry over to the original error which is the one we'll rethrow.\n          originalError._suppressLogging = true;\n        }\n      }\n      // We always throw the original error in case the second render pass is not idempotent.\n      // This can happen if a memoized function or CommonJS module doesn't throw after first invokation.\n      throw originalError;\n    }\n  };\n} else {\n  beginWork = originalBeginWork;\n}\n\nlet didWarnAboutUpdateInRender = false;\nlet didWarnAboutUpdateInRenderForAnotherComponent;\nif (__DEV__) {\n  didWarnAboutUpdateInRenderForAnotherComponent = new Set();\n}\n\nfunction warnAboutRenderPhaseUpdatesInDEV(fiber) {\n  if (__DEV__) {\n    if (\n      ReactCurrentDebugFiberIsRenderingInDEV &&\n      (executionContext & RenderContext) !== NoContext &&\n      !getIsUpdatingOpaqueValueInRenderPhaseInDEV()\n    ) {\n      switch (fiber.tag) {\n        case FunctionComponent:\n        case ForwardRef:\n        case SimpleMemoComponent: {\n          const renderingComponentName =\n            (workInProgress && getComponentNameFromFiber(workInProgress)) ||\n            'Unknown';\n          // Dedupe by the rendering component because it's the one that needs to be fixed.\n          const dedupeKey = renderingComponentName;\n          if (!didWarnAboutUpdateInRenderForAnotherComponent.has(dedupeKey)) {\n            didWarnAboutUpdateInRenderForAnotherComponent.add(dedupeKey);\n            const setStateComponentName =\n              getComponentNameFromFiber(fiber) || 'Unknown';\n            console.error(\n              'Cannot update a component (`%s`) while rendering a ' +\n                'different component (`%s`). To locate the bad setState() call inside `%s`, ' +\n                'follow the stack trace as described in https://reactjs.org/link/setstate-in-render',\n              setStateComponentName,\n              renderingComponentName,\n              renderingComponentName,\n            );\n          }\n          break;\n        }\n        case ClassComponent: {\n          if (!didWarnAboutUpdateInRender) {\n            console.error(\n              'Cannot update during an existing state transition (such as ' +\n                'within `render`). Render methods should be a pure ' +\n                'function of props and state.',\n            );\n            didWarnAboutUpdateInRender = true;\n          }\n          break;\n        }\n      }\n    }\n  }\n}\n\nexport function restorePendingUpdaters(root: FiberRoot, lanes: Lanes): void {\n  if (enableUpdaterTracking) {\n    if (isDevToolsPresent) {\n      const memoizedUpdaters = root.memoizedUpdaters;\n      memoizedUpdaters.forEach(schedulingFiber => {\n        addFiberToLanesMap(root, schedulingFiber, lanes);\n      });\n\n      // This function intentionally does not clear memoized updaters.\n      // Those may still be relevant to the current commit\n      // and a future one (e.g. Suspense).\n    }\n  }\n}\n\nconst fakeActCallbackNode = {};\nfunction scheduleCallback(priorityLevel, callback) {\n  if (__DEV__) {\n    // If we're currently inside an `act` scope, bypass Scheduler and push to\n    // the `act` queue instead.\n    const actQueue = ReactCurrentActQueue.current;\n    if (actQueue !== null) {\n      actQueue.push(callback);\n      return fakeActCallbackNode;\n    } else {\n      return Scheduler_scheduleCallback(priorityLevel, callback);\n    }\n  } else {\n    // In production, always call Scheduler. This function will be stripped out.\n    return Scheduler_scheduleCallback(priorityLevel, callback);\n  }\n}\n\nfunction cancelCallback(callbackNode) {\n  if (__DEV__ && callbackNode === fakeActCallbackNode) {\n    return;\n  }\n  // In production, always call Scheduler. This function will be stripped out.\n  return Scheduler_cancelCallback(callbackNode);\n}\n\nfunction shouldForceFlushFallbacksInDEV() {\n  // Never force flush in production. This function should get stripped out.\n  return __DEV__ && ReactCurrentActQueue.current !== null;\n}\n\nexport function warnIfNotCurrentlyActingEffectsInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      (fiber.mode & StrictLegacyMode) !== NoMode &&\n      ReactCurrentActQueue.current === null &&\n      // Our internal tests use a custom implementation of `act` that works by\n      // mocking the Scheduler package. Disable the `act` warning.\n      // TODO: Maybe the warning should be disabled by default, and then turned\n      // on at the testing frameworks layer? Instead of what we do now, which\n      // is check if a `jest` global is defined.\n      ReactCurrentActQueue.disableActWarning === false\n    ) {\n      console.error(\n        'An update to %s ran an effect, but was not wrapped in act(...).\\n\\n' +\n          'When testing, code that causes React state updates should be ' +\n          'wrapped into act(...):\\n\\n' +\n          'act(() => {\\n' +\n          '  /* fire events that update state */\\n' +\n          '});\\n' +\n          '/* assert on the output */\\n\\n' +\n          \"This ensures that you're testing the behavior the user would see \" +\n          'in the browser.' +\n          ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n        getComponentNameFromFiber(fiber),\n      );\n    }\n  }\n}\n\nfunction warnIfNotCurrentlyActingUpdatesInDEV(fiber: Fiber): void {\n  if (__DEV__) {\n    if (\n      warnsIfNotActing === true &&\n      executionContext === NoContext &&\n      ReactCurrentActQueue.current === null &&\n      // Our internal tests use a custom implementation of `act` that works by\n      // mocking the Scheduler package. Disable the `act` warning.\n      // TODO: Maybe the warning should be disabled by default, and then turned\n      // on at the testing frameworks layer? Instead of what we do now, which\n      // is check if a `jest` global is defined.\n      ReactCurrentActQueue.disableActWarning === false\n    ) {\n      const previousFiber = ReactCurrentFiberCurrent;\n      try {\n        setCurrentDebugFiberInDEV(fiber);\n        console.error(\n          'An update to %s inside a test was not wrapped in act(...).\\n\\n' +\n            'When testing, code that causes React state updates should be ' +\n            'wrapped into act(...):\\n\\n' +\n            'act(() => {\\n' +\n            '  /* fire events that update state */\\n' +\n            '});\\n' +\n            '/* assert on the output */\\n\\n' +\n            \"This ensures that you're testing the behavior the user would see \" +\n            'in the browser.' +\n            ' Learn more at https://reactjs.org/link/wrap-tests-with-act',\n          getComponentNameFromFiber(fiber),\n        );\n      } finally {\n        if (previousFiber) {\n          setCurrentDebugFiberInDEV(fiber);\n        } else {\n          resetCurrentDebugFiberInDEV();\n        }\n      }\n    }\n  }\n}\n\nexport const warnIfNotCurrentlyActingUpdatesInDev = warnIfNotCurrentlyActingUpdatesInDEV;\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {Instance} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\n\nimport {\n  flushSync,\n  scheduleUpdateOnFiber,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {updateContainer} from './ReactFiberReconciler.old';\nimport {emptyContextObject} from './ReactFiberContext.old';\nimport {SyncLane, NoTimestamp} from './ReactFiberLane.old';\nimport {\n  ClassComponent,\n  FunctionComponent,\n  ForwardRef,\n  HostComponent,\n  HostPortal,\n  HostRoot,\n  MemoComponent,\n  SimpleMemoComponent,\n} from './ReactWorkTags';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type Family = {|\n  current: any,\n|};\n\nexport type RefreshUpdate = {|\n  staleFamilies: Set<Family>,\n  updatedFamilies: Set<Family>,\n|};\n\n// Resolves type to a family.\ntype RefreshHandler = any => Family | void;\n\n// Used by React Refresh runtime through DevTools Global Hook.\nexport type SetRefreshHandler = (handler: RefreshHandler | null) => void;\nexport type ScheduleRefresh = (root: FiberRoot, update: RefreshUpdate) => void;\nexport type ScheduleRoot = (root: FiberRoot, element: ReactNodeList) => void;\nexport type FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n) => Set<Instance>;\n\nlet resolveFamily: RefreshHandler | null = null;\n// $FlowFixMe Flow gets confused by a WeakSet feature check below.\nlet failedBoundaries: WeakSet<Fiber> | null = null;\n\nexport const setRefreshHandler = (handler: RefreshHandler | null): void => {\n  if (__DEV__) {\n    resolveFamily = handler;\n  }\n};\n\nexport function resolveFunctionForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function resolveClassForHotReloading(type: any): any {\n  // No implementation differences.\n  return resolveFunctionForHotReloading(type);\n}\n\nexport function resolveForwardRefForHotReloading(type: any): any {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return type;\n    }\n    const family = resolveFamily(type);\n    if (family === undefined) {\n      // Check if we're dealing with a real forwardRef. Don't want to crash early.\n      if (\n        type !== null &&\n        type !== undefined &&\n        typeof type.render === 'function'\n      ) {\n        // ForwardRef is special because its resolved .type is an object,\n        // but it's possible that we only have its inner render function in the map.\n        // If that inner render function is different, we'll build a new forwardRef type.\n        const currentRender = resolveFunctionForHotReloading(type.render);\n        if (type.render !== currentRender) {\n          const syntheticType = {\n            $$typeof: REACT_FORWARD_REF_TYPE,\n            render: currentRender,\n          };\n          if (type.displayName !== undefined) {\n            (syntheticType: any).displayName = type.displayName;\n          }\n          return syntheticType;\n        }\n      }\n      return type;\n    }\n    // Use the latest known implementation.\n    return family.current;\n  } else {\n    return type;\n  }\n}\n\nexport function isCompatibleFamilyForHotReloading(\n  fiber: Fiber,\n  element: ReactElement,\n): boolean {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return false;\n    }\n\n    const prevType = fiber.elementType;\n    const nextType = element.type;\n\n    // If we got here, we know types aren't === equal.\n    let needsCompareFamilies = false;\n\n    const $$typeofNextType =\n      typeof nextType === 'object' && nextType !== null\n        ? nextType.$$typeof\n        : null;\n\n    switch (fiber.tag) {\n      case ClassComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case FunctionComponent: {\n        if (typeof nextType === 'function') {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          // We don't know the inner type yet.\n          // We're going to assume that the lazy inner type is stable,\n          // and so it is sufficient to avoid reconciling it away.\n          // We're not going to unwrap or actually use the new lazy type.\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case ForwardRef: {\n        if ($$typeofNextType === REACT_FORWARD_REF_TYPE) {\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      case MemoComponent:\n      case SimpleMemoComponent: {\n        if ($$typeofNextType === REACT_MEMO_TYPE) {\n          // TODO: if it was but can no longer be simple,\n          // we shouldn't set this.\n          needsCompareFamilies = true;\n        } else if ($$typeofNextType === REACT_LAZY_TYPE) {\n          needsCompareFamilies = true;\n        }\n        break;\n      }\n      default:\n        return false;\n    }\n\n    // Check if both types have a family and it's the same one.\n    if (needsCompareFamilies) {\n      // Note: memo() and forwardRef() we'll compare outer rather than inner type.\n      // This means both of them need to be registered to preserve state.\n      // If we unwrapped and compared the inner types for wrappers instead,\n      // then we would risk falsely saying two separate memo(Foo)\n      // calls are equivalent because they wrap the same Foo function.\n      const prevFamily = resolveFamily(prevType);\n      if (prevFamily !== undefined && prevFamily === resolveFamily(nextType)) {\n        return true;\n      }\n    }\n    return false;\n  } else {\n    return false;\n  }\n}\n\nexport function markFailedErrorBoundaryForHotReloading(fiber: Fiber) {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    if (typeof WeakSet !== 'function') {\n      return;\n    }\n    if (failedBoundaries === null) {\n      failedBoundaries = new WeakSet();\n    }\n    failedBoundaries.add(fiber);\n  }\n}\n\nexport const scheduleRefresh: ScheduleRefresh = (\n  root: FiberRoot,\n  update: RefreshUpdate,\n): void => {\n  if (__DEV__) {\n    if (resolveFamily === null) {\n      // Hot reloading is disabled.\n      return;\n    }\n    const {staleFamilies, updatedFamilies} = update;\n    flushPassiveEffects();\n    flushSync(() => {\n      scheduleFibersWithFamiliesRecursively(\n        root.current,\n        updatedFamilies,\n        staleFamilies,\n      );\n    });\n  }\n};\n\nexport const scheduleRoot: ScheduleRoot = (\n  root: FiberRoot,\n  element: ReactNodeList,\n): void => {\n  if (__DEV__) {\n    if (root.context !== emptyContextObject) {\n      // Super edge case: root has a legacy _renderSubtree context\n      // but we don't know the parentComponent so we can't pass it.\n      // Just ignore. We'll delete this with _renderSubtree code path later.\n      return;\n    }\n    flushPassiveEffects();\n    flushSync(() => {\n      updateContainer(element, root, null, null);\n    });\n  }\n};\n\nfunction scheduleFibersWithFamiliesRecursively(\n  fiber: Fiber,\n  updatedFamilies: Set<Family>,\n  staleFamilies: Set<Family>,\n) {\n  if (__DEV__) {\n    const {alternate, child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    if (resolveFamily === null) {\n      throw new Error('Expected resolveFamily to be set during hot reload.');\n    }\n\n    let needsRender = false;\n    let needsRemount = false;\n    if (candidateType !== null) {\n      const family = resolveFamily(candidateType);\n      if (family !== undefined) {\n        if (staleFamilies.has(family)) {\n          needsRemount = true;\n        } else if (updatedFamilies.has(family)) {\n          if (tag === ClassComponent) {\n            needsRemount = true;\n          } else {\n            needsRender = true;\n          }\n        }\n      }\n    }\n    if (failedBoundaries !== null) {\n      if (\n        failedBoundaries.has(fiber) ||\n        (alternate !== null && failedBoundaries.has(alternate))\n      ) {\n        needsRemount = true;\n      }\n    }\n\n    if (needsRemount) {\n      fiber._debugNeedsRemount = true;\n    }\n    if (needsRemount || needsRender) {\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n    if (child !== null && !needsRemount) {\n      scheduleFibersWithFamiliesRecursively(\n        child,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n    if (sibling !== null) {\n      scheduleFibersWithFamiliesRecursively(\n        sibling,\n        updatedFamilies,\n        staleFamilies,\n      );\n    }\n  }\n}\n\nexport const findHostInstancesForRefresh: FindHostInstancesForRefresh = (\n  root: FiberRoot,\n  families: Array<Family>,\n): Set<Instance> => {\n  if (__DEV__) {\n    const hostInstances = new Set();\n    const types = new Set(families.map(family => family.current));\n    findHostInstancesForMatchingFibersRecursively(\n      root.current,\n      types,\n      hostInstances,\n    );\n    return hostInstances;\n  } else {\n    throw new Error(\n      'Did not expect findHostInstancesForRefresh to be called in production.',\n    );\n  }\n};\n\nfunction findHostInstancesForMatchingFibersRecursively(\n  fiber: Fiber,\n  types: Set<any>,\n  hostInstances: Set<Instance>,\n) {\n  if (__DEV__) {\n    const {child, sibling, tag, type} = fiber;\n\n    let candidateType = null;\n    switch (tag) {\n      case FunctionComponent:\n      case SimpleMemoComponent:\n      case ClassComponent:\n        candidateType = type;\n        break;\n      case ForwardRef:\n        candidateType = type.render;\n        break;\n      default:\n        break;\n    }\n\n    let didMatch = false;\n    if (candidateType !== null) {\n      if (types.has(candidateType)) {\n        didMatch = true;\n      }\n    }\n\n    if (didMatch) {\n      // We have a match. This only drills down to the closest host components.\n      // There's no need to search deeper because for the purpose of giving\n      // visual feedback, \"flashing\" outermost parent rectangles is sufficient.\n      findHostInstancesForFiberShallowly(fiber, hostInstances);\n    } else {\n      // If there's no match, maybe there will be one further down in the child tree.\n      if (child !== null) {\n        findHostInstancesForMatchingFibersRecursively(\n          child,\n          types,\n          hostInstances,\n        );\n      }\n    }\n\n    if (sibling !== null) {\n      findHostInstancesForMatchingFibersRecursively(\n        sibling,\n        types,\n        hostInstances,\n      );\n    }\n  }\n}\n\nfunction findHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): void {\n  if (__DEV__) {\n    const foundHostInstances = findChildHostInstancesForFiberShallowly(\n      fiber,\n      hostInstances,\n    );\n    if (foundHostInstances) {\n      return;\n    }\n    // If we didn't find any host children, fallback to closest host parent.\n    let node = fiber;\n    while (true) {\n      switch (node.tag) {\n        case HostComponent:\n          hostInstances.add(node.stateNode);\n          return;\n        case HostPortal:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n        case HostRoot:\n          hostInstances.add(node.stateNode.containerInfo);\n          return;\n      }\n      if (node.return === null) {\n        throw new Error('Expected to reach root first.');\n      }\n      node = node.return;\n    }\n  }\n}\n\nfunction findChildHostInstancesForFiberShallowly(\n  fiber: Fiber,\n  hostInstances: Set<Instance>,\n): boolean {\n  if (__DEV__) {\n    let node: Fiber = fiber;\n    let foundHostInstances = false;\n    while (true) {\n      if (node.tag === HostComponent) {\n        // We got a match.\n        foundHostInstances = true;\n        hostInstances.add(node.stateNode);\n        // There may still be more, so keep searching.\n      } else if (node.child !== null) {\n        node.child.return = node;\n        node = node.child;\n        continue;\n      }\n      if (node === fiber) {\n        return foundHostInstances;\n      }\n      while (node.sibling === null) {\n        if (node.return === null || node.return === fiber) {\n          return foundHostInstances;\n        }\n        node = node.return;\n      }\n      node.sibling.return = node.return;\n      node = node.sibling;\n    }\n  }\n  return false;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {ReactElement} from 'shared/ReactElementType';\nimport type {ReactFragment, ReactPortal, ReactScope} from 'shared/ReactTypes';\nimport type {Fiber} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {WorkTag} from './ReactWorkTags';\nimport type {TypeOfMode} from './ReactTypeOfMode';\nimport type {Lanes} from './ReactFiberLane.old';\nimport type {SuspenseInstance, Props} from './ReactFiberHostConfig';\nimport type {OffscreenProps} from './ReactFiberOffscreenComponent';\n\nimport invariant from 'shared/invariant';\nimport {\n  createRootStrictEffectsByDefault,\n  enableCache,\n  enableStrictEffects,\n  enableProfilerTimer,\n  enableScopeAPI,\n  enableSyncDefaultUpdates,\n  allowConcurrentByDefault,\n} from 'shared/ReactFeatureFlags';\nimport {\n  supportsPersistence,\n  getOffscreenContainerType,\n} from './ReactFiberHostConfig';\nimport {NoFlags, Placement, StaticMask} from './ReactFiberFlags';\nimport {ConcurrentRoot} from './ReactRootTags';\nimport {\n  IndeterminateComponent,\n  ClassComponent,\n  HostRoot,\n  HostComponent,\n  HostText,\n  HostPortal,\n  ForwardRef,\n  Fragment,\n  Mode,\n  ContextProvider,\n  ContextConsumer,\n  Profiler,\n  SuspenseComponent,\n  SuspenseListComponent,\n  DehydratedFragment,\n  FunctionComponent,\n  MemoComponent,\n  SimpleMemoComponent,\n  LazyComponent,\n  ScopeComponent,\n  OffscreenComponent,\n  LegacyHiddenComponent,\n  CacheComponent,\n} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\n\nimport {isDevToolsPresent} from './ReactFiberDevToolsHook.old';\nimport {\n  resolveClassForHotReloading,\n  resolveFunctionForHotReloading,\n  resolveForwardRefForHotReloading,\n} from './ReactFiberHotReloading.old';\nimport {NoLanes} from './ReactFiberLane.old';\nimport {\n  NoMode,\n  ConcurrentMode,\n  DebugTracingMode,\n  ProfileMode,\n  StrictLegacyMode,\n  StrictEffectsMode,\n  ConcurrentUpdatesByDefaultMode,\n} from './ReactTypeOfMode';\nimport {\n  REACT_FORWARD_REF_TYPE,\n  REACT_FRAGMENT_TYPE,\n  REACT_DEBUG_TRACING_MODE_TYPE,\n  REACT_STRICT_MODE_TYPE,\n  REACT_PROFILER_TYPE,\n  REACT_PROVIDER_TYPE,\n  REACT_CONTEXT_TYPE,\n  REACT_SUSPENSE_TYPE,\n  REACT_SUSPENSE_LIST_TYPE,\n  REACT_MEMO_TYPE,\n  REACT_LAZY_TYPE,\n  REACT_SCOPE_TYPE,\n  REACT_OFFSCREEN_TYPE,\n  REACT_LEGACY_HIDDEN_TYPE,\n  REACT_CACHE_TYPE,\n} from 'shared/ReactSymbols';\n\nexport type {Fiber};\n\nlet hasBadMapPolyfill;\n\nif (__DEV__) {\n  hasBadMapPolyfill = false;\n  try {\n    const nonExtensibleObject = Object.preventExtensions({});\n    /* eslint-disable no-new */\n    new Map([[nonExtensibleObject, null]]);\n    new Set([nonExtensibleObject]);\n    /* eslint-enable no-new */\n  } catch (e) {\n    // TODO: Consider warning about bad polyfills\n    hasBadMapPolyfill = true;\n  }\n}\n\nfunction FiberNode(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n) {\n  // Instance\n  this.tag = tag;\n  this.key = key;\n  this.elementType = null;\n  this.type = null;\n  this.stateNode = null;\n\n  // Fiber\n  this.return = null;\n  this.child = null;\n  this.sibling = null;\n  this.index = 0;\n\n  this.ref = null;\n\n  this.pendingProps = pendingProps;\n  this.memoizedProps = null;\n  this.updateQueue = null;\n  this.memoizedState = null;\n  this.dependencies = null;\n\n  this.mode = mode;\n\n  // Effects\n  this.flags = NoFlags;\n  this.subtreeFlags = NoFlags;\n  this.deletions = null;\n\n  this.lanes = NoLanes;\n  this.childLanes = NoLanes;\n\n  this.alternate = null;\n\n  if (enableProfilerTimer) {\n    // Note: The following is done to avoid a v8 performance cliff.\n    //\n    // Initializing the fields below to smis and later updating them with\n    // double values will cause Fibers to end up having separate shapes.\n    // This behavior/bug has something to do with Object.preventExtension().\n    // Fortunately this only impacts DEV builds.\n    // Unfortunately it makes React unusably slow for some applications.\n    // To work around this, initialize the fields below with doubles.\n    //\n    // Learn more about this here:\n    // https://github.com/facebook/react/issues/14365\n    // https://bugs.chromium.org/p/v8/issues/detail?id=8538\n    this.actualDuration = Number.NaN;\n    this.actualStartTime = Number.NaN;\n    this.selfBaseDuration = Number.NaN;\n    this.treeBaseDuration = Number.NaN;\n\n    // It's okay to replace the initial doubles with smis after initialization.\n    // This won't trigger the performance cliff mentioned above,\n    // and it simplifies other profiler code (including DevTools).\n    this.actualDuration = 0;\n    this.actualStartTime = -1;\n    this.selfBaseDuration = 0;\n    this.treeBaseDuration = 0;\n  }\n\n  if (__DEV__) {\n    // This isn't directly used but is handy for debugging internals:\n\n    this._debugSource = null;\n    this._debugOwner = null;\n    this._debugNeedsRemount = false;\n    this._debugHookTypes = null;\n    if (!hasBadMapPolyfill && typeof Object.preventExtensions === 'function') {\n      Object.preventExtensions(this);\n    }\n  }\n}\n\n// This is a constructor function, rather than a POJO constructor, still\n// please ensure we do the following:\n// 1) Nobody should add any instance methods on this. Instance methods can be\n//    more difficult to predict when they get optimized and they are almost\n//    never inlined properly in static compilers.\n// 2) Nobody should rely on `instanceof Fiber` for type testing. We should\n//    always know when it is a fiber.\n// 3) We might want to experiment with using numeric keys since they are easier\n//    to optimize in a non-JIT environment.\n// 4) We can easily go from a constructor to a createFiber object literal if that\n//    is faster.\n// 5) It should be easy to port this to a C struct and keep a C implementation\n//    compatible.\nconst createFiber = function(\n  tag: WorkTag,\n  pendingProps: mixed,\n  key: null | string,\n  mode: TypeOfMode,\n): Fiber {\n  // $FlowFixMe: the shapes are exact here but Flow doesn't like constructors\n  return new FiberNode(tag, pendingProps, key, mode);\n};\n\nfunction shouldConstruct(Component: Function) {\n  const prototype = Component.prototype;\n  return !!(prototype && prototype.isReactComponent);\n}\n\nexport function isSimpleFunctionComponent(type: any) {\n  return (\n    typeof type === 'function' &&\n    !shouldConstruct(type) &&\n    type.defaultProps === undefined\n  );\n}\n\nexport function resolveLazyComponentTag(Component: Function): WorkTag {\n  if (typeof Component === 'function') {\n    return shouldConstruct(Component) ? ClassComponent : FunctionComponent;\n  } else if (Component !== undefined && Component !== null) {\n    const $$typeof = Component.$$typeof;\n    if ($$typeof === REACT_FORWARD_REF_TYPE) {\n      return ForwardRef;\n    }\n    if ($$typeof === REACT_MEMO_TYPE) {\n      return MemoComponent;\n    }\n  }\n  return IndeterminateComponent;\n}\n\n// This is used to create an alternate fiber to do work on.\nexport function createWorkInProgress(current: Fiber, pendingProps: any): Fiber {\n  let workInProgress = current.alternate;\n  if (workInProgress === null) {\n    // We use a double buffering pooling technique because we know that we'll\n    // only ever need at most two versions of a tree. We pool the \"other\" unused\n    // node that we're free to reuse. This is lazily created to avoid allocating\n    // extra objects for things that are never updated. It also allow us to\n    // reclaim the extra memory if needed.\n    workInProgress = createFiber(\n      current.tag,\n      pendingProps,\n      current.key,\n      current.mode,\n    );\n    workInProgress.elementType = current.elementType;\n    workInProgress.type = current.type;\n    workInProgress.stateNode = current.stateNode;\n\n    if (__DEV__) {\n      // DEV-only fields\n\n      workInProgress._debugSource = current._debugSource;\n      workInProgress._debugOwner = current._debugOwner;\n      workInProgress._debugHookTypes = current._debugHookTypes;\n    }\n\n    workInProgress.alternate = current;\n    current.alternate = workInProgress;\n  } else {\n    workInProgress.pendingProps = pendingProps;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // We already have an alternate.\n    // Reset the effect tag.\n    workInProgress.flags = NoFlags;\n\n    // The effects are no longer valid.\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n\n    if (enableProfilerTimer) {\n      // We intentionally reset, rather than copy, actualDuration & actualStartTime.\n      // This prevents time from endlessly accumulating in new commits.\n      // This has the downside of resetting values for different priority renders,\n      // But works for yielding (the common case) and should support resuming.\n      workInProgress.actualDuration = 0;\n      workInProgress.actualStartTime = -1;\n    }\n  }\n\n  // Reset all effects except static ones.\n  // Static effects are not specific to a render.\n  workInProgress.flags = current.flags & StaticMask;\n  workInProgress.childLanes = current.childLanes;\n  workInProgress.lanes = current.lanes;\n\n  workInProgress.child = current.child;\n  workInProgress.memoizedProps = current.memoizedProps;\n  workInProgress.memoizedState = current.memoizedState;\n  workInProgress.updateQueue = current.updateQueue;\n\n  // Clone the dependencies object. This is mutated during the render phase, so\n  // it cannot be shared with the current fiber.\n  const currentDependencies = current.dependencies;\n  workInProgress.dependencies =\n    currentDependencies === null\n      ? null\n      : {\n          lanes: currentDependencies.lanes,\n          firstContext: currentDependencies.firstContext,\n        };\n\n  // These will be overridden during the parent's reconciliation\n  workInProgress.sibling = current.sibling;\n  workInProgress.index = current.index;\n  workInProgress.ref = current.ref;\n\n  if (enableProfilerTimer) {\n    workInProgress.selfBaseDuration = current.selfBaseDuration;\n    workInProgress.treeBaseDuration = current.treeBaseDuration;\n  }\n\n  if (__DEV__) {\n    workInProgress._debugNeedsRemount = current._debugNeedsRemount;\n    switch (workInProgress.tag) {\n      case IndeterminateComponent:\n      case FunctionComponent:\n      case SimpleMemoComponent:\n        workInProgress.type = resolveFunctionForHotReloading(current.type);\n        break;\n      case ClassComponent:\n        workInProgress.type = resolveClassForHotReloading(current.type);\n        break;\n      case ForwardRef:\n        workInProgress.type = resolveForwardRefForHotReloading(current.type);\n        break;\n      default:\n        break;\n    }\n  }\n\n  return workInProgress;\n}\n\n// Used to reuse a Fiber for a second pass.\nexport function resetWorkInProgress(workInProgress: Fiber, renderLanes: Lanes) {\n  // This resets the Fiber to what createFiber or createWorkInProgress would\n  // have set the values to before during the first pass. Ideally this wouldn't\n  // be necessary but unfortunately many code paths reads from the workInProgress\n  // when they should be reading from current and writing to workInProgress.\n\n  // We assume pendingProps, index, key, ref, return are still untouched to\n  // avoid doing another reconciliation.\n\n  // Reset the effect flags but keep any Placement tags, since that's something\n  // that child fiber is setting, not the reconciliation.\n  workInProgress.flags &= StaticMask | Placement;\n\n  // The effects are no longer valid.\n\n  const current = workInProgress.alternate;\n  if (current === null) {\n    // Reset to createFiber's initial values.\n    workInProgress.childLanes = NoLanes;\n    workInProgress.lanes = renderLanes;\n\n    workInProgress.child = null;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.memoizedProps = null;\n    workInProgress.memoizedState = null;\n    workInProgress.updateQueue = null;\n\n    workInProgress.dependencies = null;\n\n    workInProgress.stateNode = null;\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = 0;\n      workInProgress.treeBaseDuration = 0;\n    }\n  } else {\n    // Reset to the cloned values that createWorkInProgress would've.\n    workInProgress.childLanes = current.childLanes;\n    workInProgress.lanes = current.lanes;\n\n    workInProgress.child = current.child;\n    workInProgress.subtreeFlags = NoFlags;\n    workInProgress.deletions = null;\n    workInProgress.memoizedProps = current.memoizedProps;\n    workInProgress.memoizedState = current.memoizedState;\n    workInProgress.updateQueue = current.updateQueue;\n    // Needed because Blocks store data on type.\n    workInProgress.type = current.type;\n\n    // Clone the dependencies object. This is mutated during the render phase, so\n    // it cannot be shared with the current fiber.\n    const currentDependencies = current.dependencies;\n    workInProgress.dependencies =\n      currentDependencies === null\n        ? null\n        : {\n            lanes: currentDependencies.lanes,\n            firstContext: currentDependencies.firstContext,\n          };\n\n    if (enableProfilerTimer) {\n      // Note: We don't reset the actualTime counts. It's useful to accumulate\n      // actual time across multiple render passes.\n      workInProgress.selfBaseDuration = current.selfBaseDuration;\n      workInProgress.treeBaseDuration = current.treeBaseDuration;\n    }\n  }\n\n  return workInProgress;\n}\n\nexport function createHostRootFiber(\n  tag: RootTag,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n): Fiber {\n  let mode;\n  if (tag === ConcurrentRoot) {\n    mode = ConcurrentMode;\n    if (isStrictMode === true) {\n      mode |= StrictLegacyMode;\n\n      if (enableStrictEffects) {\n        mode |= StrictEffectsMode;\n      }\n    } else if (enableStrictEffects && createRootStrictEffectsByDefault) {\n      mode |= StrictLegacyMode | StrictEffectsMode;\n    }\n    if (\n      // We only use this flag for our repo tests to check both behaviors.\n      // TODO: Flip this flag and rename it something like \"forceConcurrentByDefaultForTesting\"\n      !enableSyncDefaultUpdates ||\n      // Only for internal experiments.\n      (allowConcurrentByDefault && concurrentUpdatesByDefaultOverride)\n    ) {\n      mode |= ConcurrentUpdatesByDefaultMode;\n    }\n  } else {\n    mode = NoMode;\n  }\n\n  if (enableProfilerTimer && isDevToolsPresent) {\n    // Always collect profile timings when DevTools are present.\n    // This enables DevTools to start capturing timing at any point–\n    // Without some nodes in the tree having empty base times.\n    mode |= ProfileMode;\n  }\n\n  return createFiber(HostRoot, null, null, mode);\n}\n\nexport function createFiberFromTypeAndProps(\n  type: any, // React$ElementType\n  key: null | string,\n  pendingProps: any,\n  owner: null | Fiber,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let fiberTag = IndeterminateComponent;\n  // The resolved type is set if we know what the final type will be. I.e. it's not lazy.\n  let resolvedType = type;\n  if (typeof type === 'function') {\n    if (shouldConstruct(type)) {\n      fiberTag = ClassComponent;\n      if (__DEV__) {\n        resolvedType = resolveClassForHotReloading(resolvedType);\n      }\n    } else {\n      if (__DEV__) {\n        resolvedType = resolveFunctionForHotReloading(resolvedType);\n      }\n    }\n  } else if (typeof type === 'string') {\n    fiberTag = HostComponent;\n  } else {\n    getTag: switch (type) {\n      case REACT_FRAGMENT_TYPE:\n        return createFiberFromFragment(pendingProps.children, mode, lanes, key);\n      case REACT_DEBUG_TRACING_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= DebugTracingMode;\n        break;\n      case REACT_STRICT_MODE_TYPE:\n        fiberTag = Mode;\n        mode |= StrictLegacyMode;\n        if (enableStrictEffects && (mode & ConcurrentMode) !== NoMode) {\n          // Strict effects should never run on legacy roots\n          mode |= StrictEffectsMode;\n        }\n        break;\n      case REACT_PROFILER_TYPE:\n        return createFiberFromProfiler(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_TYPE:\n        return createFiberFromSuspense(pendingProps, mode, lanes, key);\n      case REACT_SUSPENSE_LIST_TYPE:\n        return createFiberFromSuspenseList(pendingProps, mode, lanes, key);\n      case REACT_OFFSCREEN_TYPE:\n        return createFiberFromOffscreen(pendingProps, mode, lanes, key);\n      case REACT_LEGACY_HIDDEN_TYPE:\n        return createFiberFromLegacyHidden(pendingProps, mode, lanes, key);\n      case REACT_SCOPE_TYPE:\n        if (enableScopeAPI) {\n          return createFiberFromScope(type, pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      case REACT_CACHE_TYPE:\n        if (enableCache) {\n          return createFiberFromCache(pendingProps, mode, lanes, key);\n        }\n      // eslint-disable-next-line no-fallthrough\n      default: {\n        if (typeof type === 'object' && type !== null) {\n          switch (type.$$typeof) {\n            case REACT_PROVIDER_TYPE:\n              fiberTag = ContextProvider;\n              break getTag;\n            case REACT_CONTEXT_TYPE:\n              // This is a consumer\n              fiberTag = ContextConsumer;\n              break getTag;\n            case REACT_FORWARD_REF_TYPE:\n              fiberTag = ForwardRef;\n              if (__DEV__) {\n                resolvedType = resolveForwardRefForHotReloading(resolvedType);\n              }\n              break getTag;\n            case REACT_MEMO_TYPE:\n              fiberTag = MemoComponent;\n              break getTag;\n            case REACT_LAZY_TYPE:\n              fiberTag = LazyComponent;\n              resolvedType = null;\n              break getTag;\n          }\n        }\n        let info = '';\n        if (__DEV__) {\n          if (\n            type === undefined ||\n            (typeof type === 'object' &&\n              type !== null &&\n              Object.keys(type).length === 0)\n          ) {\n            info +=\n              ' You likely forgot to export your component from the file ' +\n              \"it's defined in, or you might have mixed up default and \" +\n              'named imports.';\n          }\n          const ownerName = owner ? getComponentNameFromFiber(owner) : null;\n          if (ownerName) {\n            info += '\\n\\nCheck the render method of `' + ownerName + '`.';\n          }\n        }\n        invariant(\n          false,\n          'Element type is invalid: expected a string (for built-in ' +\n            'components) or a class/function (for composite components) ' +\n            'but got: %s.%s',\n          type == null ? type : typeof type,\n          info,\n        );\n      }\n    }\n  }\n\n  const fiber = createFiber(fiberTag, pendingProps, key, mode);\n  fiber.elementType = type;\n  fiber.type = resolvedType;\n  fiber.lanes = lanes;\n\n  if (__DEV__) {\n    fiber._debugOwner = owner;\n  }\n\n  return fiber;\n}\n\nexport function createOffscreenHostContainerFiber(\n  props: Props,\n  fiberMode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (supportsPersistence) {\n    const type = getOffscreenContainerType();\n    const fiber = createFiber(HostComponent, props, key, fiberMode);\n    fiber.elementType = type;\n    fiber.type = type;\n    fiber.lanes = lanes;\n    return fiber;\n  } else {\n    // Only implemented in persistent mode\n    invariant(false, 'Not implemented.');\n  }\n}\n\nexport function createFiberFromElement(\n  element: ReactElement,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  let owner = null;\n  if (__DEV__) {\n    owner = element._owner;\n  }\n  const type = element.type;\n  const key = element.key;\n  const pendingProps = element.props;\n  const fiber = createFiberFromTypeAndProps(\n    type,\n    key,\n    pendingProps,\n    owner,\n    mode,\n    lanes,\n  );\n  if (__DEV__) {\n    fiber._debugSource = element._source;\n    fiber._debugOwner = element._owner;\n  }\n  return fiber;\n}\n\nexport function createFiberFromFragment(\n  elements: ReactFragment,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  const fiber = createFiber(Fragment, elements, key, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromScope(\n  scope: ReactScope,\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(ScopeComponent, pendingProps, key, mode);\n  fiber.type = scope;\n  fiber.elementType = scope;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nfunction createFiberFromProfiler(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n): Fiber {\n  if (__DEV__) {\n    if (typeof pendingProps.id !== 'string') {\n      console.error(\n        'Profiler must specify an \"id\" of type `string` as a prop. Received the type `%s` instead.',\n        typeof pendingProps.id,\n      );\n    }\n  }\n\n  const fiber = createFiber(Profiler, pendingProps, key, mode | ProfileMode);\n  fiber.elementType = REACT_PROFILER_TYPE;\n  fiber.lanes = lanes;\n\n  if (enableProfilerTimer) {\n    fiber.stateNode = {\n      effectDuration: 0,\n      passiveEffectDuration: 0,\n    };\n  }\n\n  return fiber;\n}\n\nexport function createFiberFromSuspense(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromSuspenseList(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(SuspenseListComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_SUSPENSE_LIST_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromOffscreen(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(OffscreenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_OFFSCREEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromLegacyHidden(\n  pendingProps: OffscreenProps,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(LegacyHiddenComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_LEGACY_HIDDEN_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromCache(\n  pendingProps: any,\n  mode: TypeOfMode,\n  lanes: Lanes,\n  key: null | string,\n) {\n  const fiber = createFiber(CacheComponent, pendingProps, key, mode);\n  fiber.elementType = REACT_CACHE_TYPE;\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromText(\n  content: string,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const fiber = createFiber(HostText, content, null, mode);\n  fiber.lanes = lanes;\n  return fiber;\n}\n\nexport function createFiberFromHostInstanceForDeletion(): Fiber {\n  const fiber = createFiber(HostComponent, null, null, NoMode);\n  fiber.elementType = 'DELETED';\n  return fiber;\n}\n\nexport function createFiberFromDehydratedFragment(\n  dehydratedNode: SuspenseInstance,\n): Fiber {\n  const fiber = createFiber(DehydratedFragment, null, null, NoMode);\n  fiber.stateNode = dehydratedNode;\n  return fiber;\n}\n\nexport function createFiberFromPortal(\n  portal: ReactPortal,\n  mode: TypeOfMode,\n  lanes: Lanes,\n): Fiber {\n  const pendingProps = portal.children !== null ? portal.children : [];\n  const fiber = createFiber(HostPortal, pendingProps, portal.key, mode);\n  fiber.lanes = lanes;\n  fiber.stateNode = {\n    containerInfo: portal.containerInfo,\n    pendingChildren: null, // Used by persistent updates\n    implementation: portal.implementation,\n  };\n  return fiber;\n}\n\n// Used for stashing WIP properties to replay failed work in DEV.\nexport function assignFiberPropertiesInDEV(\n  target: Fiber | null,\n  source: Fiber,\n): Fiber {\n  if (target === null) {\n    // This Fiber's initial properties will always be overwritten.\n    // We only use a Fiber to ensure the same hidden class so DEV isn't slow.\n    target = createFiber(IndeterminateComponent, null, null, NoMode);\n  }\n\n  // This is intentionally written as a list of all properties.\n  // We tried to use Object.assign() instead but this is called in\n  // the hottest path, and Object.assign() was too slow:\n  // https://github.com/facebook/react/issues/12502\n  // This code is DEV-only so size is not a concern.\n\n  target.tag = source.tag;\n  target.key = source.key;\n  target.elementType = source.elementType;\n  target.type = source.type;\n  target.stateNode = source.stateNode;\n  target.return = source.return;\n  target.child = source.child;\n  target.sibling = source.sibling;\n  target.index = source.index;\n  target.ref = source.ref;\n  target.pendingProps = source.pendingProps;\n  target.memoizedProps = source.memoizedProps;\n  target.updateQueue = source.updateQueue;\n  target.memoizedState = source.memoizedState;\n  target.dependencies = source.dependencies;\n  target.mode = source.mode;\n  target.flags = source.flags;\n  target.subtreeFlags = source.subtreeFlags;\n  target.deletions = source.deletions;\n  target.lanes = source.lanes;\n  target.childLanes = source.childLanes;\n  target.alternate = source.alternate;\n  if (enableProfilerTimer) {\n    target.actualDuration = source.actualDuration;\n    target.actualStartTime = source.actualStartTime;\n    target.selfBaseDuration = source.selfBaseDuration;\n    target.treeBaseDuration = source.treeBaseDuration;\n  }\n\n  target._debugSource = source._debugSource;\n  target._debugOwner = source._debugOwner;\n  target._debugNeedsRemount = source._debugNeedsRemount;\n  target._debugHookTypes = source._debugHookTypes;\n  return target;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {FiberRoot, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\n\nimport {noTimeout, supportsHydration} from './ReactFiberHostConfig';\nimport {createHostRootFiber} from './ReactFiber.old';\nimport {\n  NoLane,\n  NoLanes,\n  NoTimestamp,\n  TotalLanes,\n  createLaneMap,\n} from './ReactFiberLane.old';\nimport {\n  enableSuspenseCallback,\n  enableCache,\n  enableProfilerCommitHooks,\n  enableProfilerTimer,\n  enableUpdaterTracking,\n} from 'shared/ReactFeatureFlags';\nimport {initializeUpdateQueue} from './ReactUpdateQueue.old';\nimport {LegacyRoot, ConcurrentRoot} from './ReactRootTags';\n\nfunction FiberRootNode(containerInfo, tag, hydrate) {\n  this.tag = tag;\n  this.containerInfo = containerInfo;\n  this.pendingChildren = null;\n  this.current = null;\n  this.pingCache = null;\n  this.finishedWork = null;\n  this.timeoutHandle = noTimeout;\n  this.context = null;\n  this.pendingContext = null;\n  this.hydrate = hydrate;\n  this.callbackNode = null;\n  this.callbackPriority = NoLane;\n  this.eventTimes = createLaneMap(NoLanes);\n  this.expirationTimes = createLaneMap(NoTimestamp);\n\n  this.pendingLanes = NoLanes;\n  this.suspendedLanes = NoLanes;\n  this.pingedLanes = NoLanes;\n  this.expiredLanes = NoLanes;\n  this.mutableReadLanes = NoLanes;\n  this.finishedLanes = NoLanes;\n\n  this.entangledLanes = NoLanes;\n  this.entanglements = createLaneMap(NoLanes);\n\n  if (enableCache) {\n    this.pooledCache = null;\n    this.pooledCacheLanes = NoLanes;\n  }\n\n  if (supportsHydration) {\n    this.mutableSourceEagerHydrationData = null;\n  }\n\n  if (enableSuspenseCallback) {\n    this.hydrationCallbacks = null;\n  }\n\n  if (enableProfilerTimer && enableProfilerCommitHooks) {\n    this.effectDuration = 0;\n    this.passiveEffectDuration = 0;\n  }\n\n  if (enableUpdaterTracking) {\n    this.memoizedUpdaters = new Set();\n    const pendingUpdatersLaneMap = (this.pendingUpdatersLaneMap = []);\n    for (let i = 0; i < TotalLanes; i++) {\n      pendingUpdatersLaneMap.push(new Set());\n    }\n  }\n\n  if (__DEV__) {\n    switch (tag) {\n      case ConcurrentRoot:\n        this._debugRootType = 'createRoot()';\n        break;\n      case LegacyRoot:\n        this._debugRootType = 'createLegacyRoot()';\n        break;\n    }\n  }\n}\n\nexport function createFiberRoot(\n  containerInfo: any,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n): FiberRoot {\n  const root: FiberRoot = (new FiberRootNode(containerInfo, tag, hydrate): any);\n  if (enableSuspenseCallback) {\n    root.hydrationCallbacks = hydrationCallbacks;\n  }\n\n  // Cyclic construction. This cheats the type system right now because\n  // stateNode is any.\n  const uninitializedFiber = createHostRootFiber(\n    tag,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n  );\n  root.current = uninitializedFiber;\n  uninitializedFiber.stateNode = root;\n\n  if (enableCache) {\n    const initialCache = new Map();\n    root.pooledCache = initialCache;\n    const initialState = {\n      element: null,\n      cache: initialCache,\n    };\n    uninitializedFiber.memoizedState = initialState;\n  } else {\n    const initialState = {\n      element: null,\n    };\n    uninitializedFiber.memoizedState = initialState;\n  }\n\n  initializeUpdateQueue(uninitializedFiber);\n\n  return root;\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport {REACT_PORTAL_TYPE} from 'shared/ReactSymbols';\n\nimport type {ReactNodeList, ReactPortal} from 'shared/ReactTypes';\n\nexport function createPortal(\n  children: ReactNodeList,\n  containerInfo: any,\n  // TODO: figure out the API for cross-renderer implementation.\n  implementation: any,\n  key: ?string = null,\n): ReactPortal {\n  return {\n    // This tag allow us to uniquely identify this as a React Portal\n    $$typeof: REACT_PORTAL_TYPE,\n    key: key == null ? null : '' + key,\n    children,\n    containerInfo,\n    implementation,\n  };\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber, SuspenseHydrationCallbacks} from './ReactInternalTypes';\nimport type {FiberRoot} from './ReactInternalTypes';\nimport type {RootTag} from './ReactRootTags';\nimport type {\n  Instance,\n  TextInstance,\n  Container,\n  PublicInstance,\n} from './ReactFiberHostConfig';\nimport type {RendererInspectionConfig} from './ReactFiberHostConfig';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {Lane} from './ReactFiberLane.old';\nimport type {SuspenseState} from './ReactFiberSuspenseComponent.old';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentHostFiberWithNoPortals,\n} from './ReactFiberTreeReflection';\nimport {get as getInstance} from 'shared/ReactInstanceMap';\nimport {\n  HostComponent,\n  ClassComponent,\n  HostRoot,\n  SuspenseComponent,\n} from './ReactWorkTags';\nimport getComponentNameFromFiber from 'react-reconciler/src/getComponentNameFromFiber';\nimport invariant from 'shared/invariant';\nimport isArray from 'shared/isArray';\nimport {\n  enableSchedulingProfiler,\n  consoleManagedByDevToolsDuringStrictMode,\n} from 'shared/ReactFeatureFlags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport {getPublicInstance} from './ReactFiberHostConfig';\nimport {\n  findCurrentUnmaskedContext,\n  processChildContext,\n  emptyContextObject,\n  isContextProvider as isLegacyContextProvider,\n} from './ReactFiberContext.old';\nimport {createFiberRoot} from './ReactFiberRoot.old';\nimport {injectInternals, onScheduleRoot} from './ReactFiberDevToolsHook.old';\nimport {\n  requestEventTime,\n  requestUpdateLane,\n  scheduleUpdateOnFiber,\n  flushRoot,\n  batchedUpdates,\n  flushSync,\n  flushControlled,\n  deferredUpdates,\n  discreteUpdates,\n  flushSyncWithoutWarningIfAlreadyRendering,\n  flushPassiveEffects,\n} from './ReactFiberWorkLoop.old';\nimport {\n  createUpdate,\n  enqueueUpdate,\n  entangleTransitions,\n} from './ReactUpdateQueue.old';\nimport {\n  isRendering as ReactCurrentFiberIsRendering,\n  current as ReactCurrentFiberCurrent,\n  resetCurrentFiber as resetCurrentDebugFiberInDEV,\n  setCurrentFiber as setCurrentDebugFiberInDEV,\n} from './ReactCurrentFiber';\nimport {StrictLegacyMode} from './ReactTypeOfMode';\nimport {\n  SyncLane,\n  SelectiveHydrationLane,\n  NoTimestamp,\n  getHighestPriorityPendingLanes,\n  higherPriorityLane,\n} from './ReactFiberLane.old';\nimport {\n  getCurrentUpdatePriority,\n  runWithPriority,\n} from './ReactEventPriorities.old';\nimport {\n  scheduleRefresh,\n  scheduleRoot,\n  setRefreshHandler,\n  findHostInstancesForRefresh,\n} from './ReactFiberHotReloading.old';\nimport {markRenderScheduled} from './SchedulingProfiler';\nimport ReactVersion from 'shared/ReactVersion';\nexport {registerMutableSourceForHydration} from './ReactMutableSource.old';\nexport {createPortal} from './ReactPortal';\nexport {\n  createComponentSelector,\n  createHasPseudoClassSelector,\n  createRoleSelector,\n  createTestNameSelector,\n  createTextSelector,\n  getFindAllNodesFailureDescription,\n  findAllNodes,\n  findBoundingRects,\n  focusWithin,\n  observeVisibleRects,\n} from './ReactTestSelectors';\n\nimport * as Scheduler from './Scheduler';\nimport {setSuppressWarning} from 'shared/consoleWithStackDev';\nimport {disableLogs, reenableLogs} from 'shared/ConsolePatchingDev';\n\ntype OpaqueRoot = FiberRoot;\n\n// 0 is PROD, 1 is DEV.\n// Might add PROFILE later.\ntype BundleType = 0 | 1;\n\ntype DevToolsConfig = {|\n  bundleType: BundleType,\n  version: string,\n  rendererPackageName: string,\n  // Note: this actually *does* depend on Fiber internal fields.\n  // Used by \"inspect clicked DOM element\" in React DevTools.\n  findFiberByHostInstance?: (instance: Instance | TextInstance) => Fiber | null,\n  rendererConfig?: RendererInspectionConfig,\n|};\n\nlet didWarnAboutNestedUpdates;\nlet didWarnAboutFindNodeInStrictMode;\n\nif (__DEV__) {\n  didWarnAboutNestedUpdates = false;\n  didWarnAboutFindNodeInStrictMode = {};\n}\n\nfunction getContextForSubtree(\n  parentComponent: ?React$Component<any, any>,\n): Object {\n  if (!parentComponent) {\n    return emptyContextObject;\n  }\n\n  const fiber = getInstance(parentComponent);\n  const parentContext = findCurrentUnmaskedContext(fiber);\n\n  if (fiber.tag === ClassComponent) {\n    const Component = fiber.type;\n    if (isLegacyContextProvider(Component)) {\n      return processChildContext(fiber, Component, parentContext);\n    }\n  }\n\n  return parentContext;\n}\n\nfunction findHostInstance(component: Object): PublicInstance | null {\n  const fiber = getInstance(component);\n  if (fiber === undefined) {\n    if (typeof component.render === 'function') {\n      invariant(false, 'Unable to find node on an unmounted component.');\n    } else {\n      invariant(\n        false,\n        'Argument appears to not be a ReactComponent. Keys: %s',\n        Object.keys(component),\n      );\n    }\n  }\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction findHostInstanceWithWarning(\n  component: Object,\n  methodName: string,\n): PublicInstance | null {\n  if (__DEV__) {\n    const fiber = getInstance(component);\n    if (fiber === undefined) {\n      if (typeof component.render === 'function') {\n        invariant(false, 'Unable to find node on an unmounted component.');\n      } else {\n        invariant(\n          false,\n          'Argument appears to not be a ReactComponent. Keys: %s',\n          Object.keys(component),\n        );\n      }\n    }\n    const hostFiber = findCurrentHostFiber(fiber);\n    if (hostFiber === null) {\n      return null;\n    }\n    if (hostFiber.mode & StrictLegacyMode) {\n      const componentName = getComponentNameFromFiber(fiber) || 'Component';\n      if (!didWarnAboutFindNodeInStrictMode[componentName]) {\n        didWarnAboutFindNodeInStrictMode[componentName] = true;\n\n        const previousFiber = ReactCurrentFiberCurrent;\n        try {\n          setCurrentDebugFiberInDEV(hostFiber);\n          if (fiber.mode & StrictLegacyMode) {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which is inside StrictMode. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          } else {\n            console.error(\n              '%s is deprecated in StrictMode. ' +\n                '%s was passed an instance of %s which renders StrictMode children. ' +\n                'Instead, add a ref directly to the element you want to reference. ' +\n                'Learn more about using refs safely here: ' +\n                'https://reactjs.org/link/strict-mode-find-node',\n              methodName,\n              methodName,\n              componentName,\n            );\n          }\n        } finally {\n          // Ideally this should reset to previous but this shouldn't be called in\n          // render and there's another warning for that anyway.\n          if (previousFiber) {\n            setCurrentDebugFiberInDEV(previousFiber);\n          } else {\n            resetCurrentDebugFiberInDEV();\n          }\n        }\n      }\n    }\n    return hostFiber.stateNode;\n  }\n  return findHostInstance(component);\n}\n\nexport function createContainer(\n  containerInfo: Container,\n  tag: RootTag,\n  hydrate: boolean,\n  hydrationCallbacks: null | SuspenseHydrationCallbacks,\n  isStrictMode: boolean,\n  concurrentUpdatesByDefaultOverride: null | boolean,\n): OpaqueRoot {\n  return createFiberRoot(\n    containerInfo,\n    tag,\n    hydrate,\n    hydrationCallbacks,\n    isStrictMode,\n    concurrentUpdatesByDefaultOverride,\n  );\n}\n\nexport function updateContainer(\n  element: ReactNodeList,\n  container: OpaqueRoot,\n  parentComponent: ?React$Component<any, any>,\n  callback: ?Function,\n): Lane {\n  if (__DEV__) {\n    onScheduleRoot(container, element);\n  }\n  const current = container.current;\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(current);\n\n  if (enableSchedulingProfiler) {\n    markRenderScheduled(lane);\n  }\n\n  const context = getContextForSubtree(parentComponent);\n  if (container.context === null) {\n    container.context = context;\n  } else {\n    container.pendingContext = context;\n  }\n\n  if (__DEV__) {\n    if (\n      ReactCurrentFiberIsRendering &&\n      ReactCurrentFiberCurrent !== null &&\n      !didWarnAboutNestedUpdates\n    ) {\n      didWarnAboutNestedUpdates = true;\n      console.error(\n        'Render methods should be a pure function of props and state; ' +\n          'triggering nested component updates from render is not allowed. ' +\n          'If necessary, trigger nested updates in componentDidUpdate.\\n\\n' +\n          'Check the render method of %s.',\n        getComponentNameFromFiber(ReactCurrentFiberCurrent) || 'Unknown',\n      );\n    }\n  }\n\n  const update = createUpdate(eventTime, lane);\n  // Caution: React DevTools currently depends on this property\n  // being called \"element\".\n  update.payload = {element};\n\n  callback = callback === undefined ? null : callback;\n  if (callback !== null) {\n    if (__DEV__) {\n      if (typeof callback !== 'function') {\n        console.error(\n          'render(...): Expected the last optional `callback` argument to be a ' +\n            'function. Instead received: %s.',\n          callback,\n        );\n      }\n    }\n    update.callback = callback;\n  }\n\n  enqueueUpdate(current, update, lane);\n  const root = scheduleUpdateOnFiber(current, lane, eventTime);\n  if (root !== null) {\n    entangleTransitions(root, current, lane);\n  }\n\n  return lane;\n}\n\nexport {\n  batchedUpdates,\n  deferredUpdates,\n  discreteUpdates,\n  flushControlled,\n  flushSync,\n  flushSyncWithoutWarningIfAlreadyRendering,\n  flushPassiveEffects,\n};\n\nexport function getPublicRootInstance(\n  container: OpaqueRoot,\n): React$Component<any, any> | PublicInstance | null {\n  const containerFiber = container.current;\n  if (!containerFiber.child) {\n    return null;\n  }\n  switch (containerFiber.child.tag) {\n    case HostComponent:\n      return getPublicInstance(containerFiber.child.stateNode);\n    default:\n      return containerFiber.child.stateNode;\n  }\n}\n\nexport function attemptSynchronousHydration(fiber: Fiber): void {\n  switch (fiber.tag) {\n    case HostRoot:\n      const root: FiberRoot = fiber.stateNode;\n      if (root.hydrate) {\n        // Flush the first scheduled \"update\".\n        const lanes = getHighestPriorityPendingLanes(root);\n        flushRoot(root, lanes);\n      }\n      break;\n    case SuspenseComponent:\n      const eventTime = requestEventTime();\n      flushSync(() => scheduleUpdateOnFiber(fiber, SyncLane, eventTime));\n      // If we're still blocked after this, we need to increase\n      // the priority of any promises resolving within this\n      // boundary so that they next attempt also has higher pri.\n      const retryLane = SyncLane;\n      markRetryLaneIfNotHydrated(fiber, retryLane);\n      break;\n  }\n}\n\nfunction markRetryLaneImpl(fiber: Fiber, retryLane: Lane) {\n  const suspenseState: null | SuspenseState = fiber.memoizedState;\n  if (suspenseState !== null && suspenseState.dehydrated !== null) {\n    suspenseState.retryLane = higherPriorityLane(\n      suspenseState.retryLane,\n      retryLane,\n    );\n  }\n}\n\n// Increases the priority of thenables when they resolve within this boundary.\nfunction markRetryLaneIfNotHydrated(fiber: Fiber, retryLane: Lane) {\n  markRetryLaneImpl(fiber, retryLane);\n  const alternate = fiber.alternate;\n  if (alternate) {\n    markRetryLaneImpl(alternate, retryLane);\n  }\n}\n\nexport function attemptDiscreteHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = SyncLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptContinuousHydration(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority and they should not suspend on I/O,\n    // since you have to wrap anything that might suspend in\n    // Suspense.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = SelectiveHydrationLane;\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport function attemptHydrationAtCurrentPriority(fiber: Fiber): void {\n  if (fiber.tag !== SuspenseComponent) {\n    // We ignore HostRoots here because we can't increase\n    // their priority other than synchronously flush it.\n    return;\n  }\n  const eventTime = requestEventTime();\n  const lane = requestUpdateLane(fiber);\n  scheduleUpdateOnFiber(fiber, lane, eventTime);\n  markRetryLaneIfNotHydrated(fiber, lane);\n}\n\nexport {getCurrentUpdatePriority, runWithPriority};\n\nexport {findHostInstance};\n\nexport {findHostInstanceWithWarning};\n\nexport function findHostInstanceWithNoPortals(\n  fiber: Fiber,\n): PublicInstance | null {\n  const hostFiber = findCurrentHostFiberWithNoPortals(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nlet shouldErrorImpl = fiber => null;\n\nexport function shouldError(fiber: Fiber): ?boolean {\n  return shouldErrorImpl(fiber);\n}\n\nlet shouldSuspendImpl = fiber => false;\n\nexport function shouldSuspend(fiber: Fiber): boolean {\n  return shouldSuspendImpl(fiber);\n}\n\nlet isStrictMode = false;\n\nlet overrideHookState = null;\nlet overrideHookStateDeletePath = null;\nlet overrideHookStateRenamePath = null;\nlet overrideProps = null;\nlet overridePropsDeletePath = null;\nlet overridePropsRenamePath = null;\nlet scheduleUpdate = null;\nlet setErrorHandler = null;\nlet setSuspenseHandler = null;\n\nif (__DEV__) {\n  const copyWithDeleteImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n  ) => {\n    const key = path[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === path.length) {\n      if (isArray(updated)) {\n        updated.splice(((key: any): number), 1);\n      } else {\n        delete updated[key];\n      }\n      return updated;\n    }\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithDeleteImpl(obj[key], path, index + 1);\n    return updated;\n  };\n\n  const copyWithDelete = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n  ): Object | Array<any> => {\n    return copyWithDeleteImpl(obj, path, 0);\n  };\n\n  const copyWithRenameImpl = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n    index: number,\n  ) => {\n    const oldKey = oldPath[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    if (index + 1 === oldPath.length) {\n      const newKey = newPath[index];\n      // $FlowFixMe number or string is fine here\n      updated[newKey] = updated[oldKey];\n      if (isArray(updated)) {\n        updated.splice(((oldKey: any): number), 1);\n      } else {\n        delete updated[oldKey];\n      }\n    } else {\n      // $FlowFixMe number or string is fine here\n      updated[oldKey] = copyWithRenameImpl(\n        // $FlowFixMe number or string is fine here\n        obj[oldKey],\n        oldPath,\n        newPath,\n        index + 1,\n      );\n    }\n    return updated;\n  };\n\n  const copyWithRename = (\n    obj: Object | Array<any>,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ): Object | Array<any> => {\n    if (oldPath.length !== newPath.length) {\n      console.warn('copyWithRename() expects paths of the same length');\n      return;\n    } else {\n      for (let i = 0; i < newPath.length - 1; i++) {\n        if (oldPath[i] !== newPath[i]) {\n          console.warn(\n            'copyWithRename() expects paths to be the same except for the deepest key',\n          );\n          return;\n        }\n      }\n    }\n    return copyWithRenameImpl(obj, oldPath, newPath, 0);\n  };\n\n  const copyWithSetImpl = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    index: number,\n    value: any,\n  ) => {\n    if (index >= path.length) {\n      return value;\n    }\n    const key = path[index];\n    const updated = isArray(obj) ? obj.slice() : {...obj};\n    // $FlowFixMe number or string is fine here\n    updated[key] = copyWithSetImpl(obj[key], path, index + 1, value);\n    return updated;\n  };\n\n  const copyWithSet = (\n    obj: Object | Array<any>,\n    path: Array<string | number>,\n    value: any,\n  ): Object | Array<any> => {\n    return copyWithSetImpl(obj, path, 0, value);\n  };\n\n  const findHook = (fiber: Fiber, id: number) => {\n    // For now, the \"id\" of stateful hooks is just the stateful hook index.\n    // This may change in the future with e.g. nested hooks.\n    let currentHook = fiber.memoizedState;\n    while (currentHook !== null && id > 0) {\n      currentHook = currentHook.next;\n      id--;\n    }\n    return currentHook;\n  };\n\n  // Support DevTools editable values for useState and useReducer.\n  overrideHookState = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n    value: any,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithSet(hook.memoizedState, path, value);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateDeletePath = (\n    fiber: Fiber,\n    id: number,\n    path: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithDelete(hook.memoizedState, path);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n  overrideHookStateRenamePath = (\n    fiber: Fiber,\n    id: number,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    const hook = findHook(fiber, id);\n    if (hook !== null) {\n      const newState = copyWithRename(hook.memoizedState, oldPath, newPath);\n      hook.memoizedState = newState;\n      hook.baseState = newState;\n\n      // We aren't actually adding an update to the queue,\n      // because there is no update we can add for useReducer hooks that won't trigger an error.\n      // (There's no appropriate action type for DevTools overrides.)\n      // As a result though, React will see the scheduled update as a noop and bailout.\n      // Shallow cloning props works as a workaround for now to bypass the bailout check.\n      fiber.memoizedProps = {...fiber.memoizedProps};\n\n      scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n    }\n  };\n\n  // Support DevTools props for function components, forwardRef, memo, host components, etc.\n  overrideProps = (fiber: Fiber, path: Array<string | number>, value: any) => {\n    fiber.pendingProps = copyWithSet(fiber.memoizedProps, path, value);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsDeletePath = (fiber: Fiber, path: Array<string | number>) => {\n    fiber.pendingProps = copyWithDelete(fiber.memoizedProps, path);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n  overridePropsRenamePath = (\n    fiber: Fiber,\n    oldPath: Array<string | number>,\n    newPath: Array<string | number>,\n  ) => {\n    fiber.pendingProps = copyWithRename(fiber.memoizedProps, oldPath, newPath);\n    if (fiber.alternate) {\n      fiber.alternate.pendingProps = fiber.pendingProps;\n    }\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  scheduleUpdate = (fiber: Fiber) => {\n    scheduleUpdateOnFiber(fiber, SyncLane, NoTimestamp);\n  };\n\n  setErrorHandler = (newShouldErrorImpl: Fiber => ?boolean) => {\n    shouldErrorImpl = newShouldErrorImpl;\n  };\n\n  setSuspenseHandler = (newShouldSuspendImpl: Fiber => boolean) => {\n    shouldSuspendImpl = newShouldSuspendImpl;\n  };\n}\n\nfunction findHostInstanceByFiber(fiber: Fiber): Instance | TextInstance | null {\n  const hostFiber = findCurrentHostFiber(fiber);\n  if (hostFiber === null) {\n    return null;\n  }\n  return hostFiber.stateNode;\n}\n\nfunction emptyFindFiberByHostInstance(\n  instance: Instance | TextInstance,\n): Fiber | null {\n  return null;\n}\n\nfunction getCurrentFiberForDevTools() {\n  return ReactCurrentFiberCurrent;\n}\n\nexport function getIsStrictModeForDevtools() {\n  return isStrictMode;\n}\n\nexport function setIsStrictModeForDevtools(newIsStrictMode: boolean) {\n  isStrictMode = newIsStrictMode;\n\n  if (consoleManagedByDevToolsDuringStrictMode) {\n    // We're in a test because Scheduler.unstable_yieldValue only exists\n    // in SchedulerMock. To reduce the noise in strict mode tests,\n    // suppress warnings and disable scheduler yielding during the double render\n    if (typeof Scheduler.unstable_yieldValue === 'function') {\n      Scheduler.unstable_setDisableYieldValue(newIsStrictMode);\n      setSuppressWarning(newIsStrictMode);\n    }\n  } else {\n    if (newIsStrictMode) {\n      disableLogs();\n    } else {\n      reenableLogs();\n    }\n  }\n}\n\nexport function injectIntoDevTools(devToolsConfig: DevToolsConfig): boolean {\n  const {findFiberByHostInstance} = devToolsConfig;\n  const {ReactCurrentDispatcher} = ReactSharedInternals;\n\n  return injectInternals({\n    bundleType: devToolsConfig.bundleType,\n    version: devToolsConfig.version,\n    rendererPackageName: devToolsConfig.rendererPackageName,\n    rendererConfig: devToolsConfig.rendererConfig,\n    overrideHookState,\n    overrideHookStateDeletePath,\n    overrideHookStateRenamePath,\n    overrideProps,\n    overridePropsDeletePath,\n    overridePropsRenamePath,\n    setErrorHandler,\n    setSuspenseHandler,\n    scheduleUpdate,\n    currentDispatcherRef: ReactCurrentDispatcher,\n    findHostInstanceByFiber,\n    findFiberByHostInstance:\n      findFiberByHostInstance || emptyFindFiberByHostInstance,\n    // React Refresh\n    findHostInstancesForRefresh: __DEV__ ? findHostInstancesForRefresh : null,\n    scheduleRefresh: __DEV__ ? scheduleRefresh : null,\n    scheduleRoot: __DEV__ ? scheduleRoot : null,\n    setRefreshHandler: __DEV__ ? setRefreshHandler : null,\n    // Enables DevTools to append owner stacks to error messages in DEV mode.\n    getCurrentFiber: __DEV__ ? getCurrentFiberForDevTools : null,\n    getIsStrictMode: __DEV__ ? getIsStrictModeForDevtools : null,\n    // Enables DevTools to detect reconciler version rather than renderer version\n    // which may not match for third party renderers.\n    reconcilerVersion: ReactVersion,\n  });\n}\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {Fiber} from 'react-reconciler/src/ReactInternalTypes';\nimport type {TouchedViewDataAtPoint, InspectorData} from './ReactNativeTypes';\n\nimport {\n  findCurrentHostFiber,\n  findCurrentFiberUsingSlowPath,\n} from 'react-reconciler/src/ReactFiberTreeReflection';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\nimport {HostComponent} from 'react-reconciler/src/ReactWorkTags';\nimport invariant from 'shared/invariant';\n// Module provided by RN:\nimport {UIManager} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport {enableGetInspectorDataForInstanceInProduction} from 'shared/ReactFeatureFlags';\nimport {getClosestInstanceFromNode} from './ReactNativeComponentTree';\n\nconst emptyObject = {};\nif (__DEV__) {\n  Object.freeze(emptyObject);\n}\n\nlet createHierarchy;\nlet getHostNode;\nlet getHostProps;\nlet lastNonHostInstance;\nlet getInspectorDataForInstance;\nlet getOwnerHierarchy;\nlet traverseOwnerTreeUp;\n\nif (__DEV__ || enableGetInspectorDataForInstanceInProduction) {\n  createHierarchy = function(fiberHierarchy) {\n    return fiberHierarchy.map(fiber => ({\n      name: getComponentNameFromType(fiber.type),\n      getInspectorData: findNodeHandle => {\n        return {\n          props: getHostProps(fiber),\n          source: fiber._debugSource,\n          measure: callback => {\n            // If this is Fabric, we'll find a ShadowNode and use that to measure.\n            const hostFiber = findCurrentHostFiber(fiber);\n            const shadowNode =\n              hostFiber != null &&\n              hostFiber.stateNode !== null &&\n              hostFiber.stateNode.node;\n\n            if (shadowNode) {\n              nativeFabricUIManager.measure(shadowNode, callback);\n            } else {\n              return UIManager.measure(\n                getHostNode(fiber, findNodeHandle),\n                callback,\n              );\n            }\n          },\n        };\n      },\n    }));\n  };\n\n  getHostNode = function(fiber: Fiber | null, findNodeHandle) {\n    let hostNode;\n    // look for children first for the hostNode\n    // as composite fibers do not have a hostNode\n    while (fiber) {\n      if (fiber.stateNode !== null && fiber.tag === HostComponent) {\n        hostNode = findNodeHandle(fiber.stateNode);\n      }\n      if (hostNode) {\n        return hostNode;\n      }\n      fiber = fiber.child;\n    }\n    return null;\n  };\n\n  getHostProps = function(fiber) {\n    const host = findCurrentHostFiber(fiber);\n    if (host) {\n      return host.memoizedProps || emptyObject;\n    }\n    return emptyObject;\n  };\n\n  getInspectorDataForInstance = function(\n    closestInstance: Fiber | null,\n  ): InspectorData {\n    // Handle case where user clicks outside of ReactNative\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject,\n        selectedIndex: null,\n        source: null,\n      };\n    }\n\n    const fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    const fiberHierarchy = getOwnerHierarchy(fiber);\n    const instance = lastNonHostInstance(fiberHierarchy);\n    const hierarchy = createHierarchy(fiberHierarchy);\n    const props = getHostProps(instance);\n    const source = instance._debugSource;\n    const selectedIndex = fiberHierarchy.indexOf(instance);\n\n    return {\n      hierarchy,\n      props,\n      selectedIndex,\n      source,\n    };\n  };\n\n  getOwnerHierarchy = function(instance: any) {\n    const hierarchy = [];\n    traverseOwnerTreeUp(hierarchy, instance);\n    return hierarchy;\n  };\n\n  lastNonHostInstance = function(hierarchy) {\n    for (let i = hierarchy.length - 1; i > 1; i--) {\n      const instance = hierarchy[i];\n\n      if (instance.tag !== HostComponent) {\n        return instance;\n      }\n    }\n    return hierarchy[0];\n  };\n\n  traverseOwnerTreeUp = function(hierarchy, instance: any) {\n    if (instance) {\n      hierarchy.unshift(instance);\n      traverseOwnerTreeUp(hierarchy, instance._debugOwner);\n    }\n  };\n}\n\nlet getInspectorDataForViewTag;\nlet getInspectorDataForViewAtPoint;\n\nif (__DEV__) {\n  getInspectorDataForViewTag = function(viewTag: number): Object {\n    const closestInstance = getClosestInstanceFromNode(viewTag);\n\n    // Handle case where user clicks outside of ReactNative\n    if (!closestInstance) {\n      return {\n        hierarchy: [],\n        props: emptyObject,\n        selectedIndex: null,\n        source: null,\n      };\n    }\n\n    const fiber = findCurrentFiberUsingSlowPath(closestInstance);\n    const fiberHierarchy = getOwnerHierarchy(fiber);\n    const instance = lastNonHostInstance(fiberHierarchy);\n    const hierarchy = createHierarchy(fiberHierarchy);\n    const props = getHostProps(instance);\n    const source = instance._debugSource;\n    const selectedIndex = fiberHierarchy.indexOf(instance);\n\n    return {\n      hierarchy,\n      props,\n      selectedIndex,\n      source,\n    };\n  };\n\n  getInspectorDataForViewAtPoint = function(\n    findNodeHandle: (componentOrHandle: any) => ?number,\n    inspectedView: Object,\n    locationX: number,\n    locationY: number,\n    callback: (viewData: TouchedViewDataAtPoint) => mixed,\n  ): void {\n    let closestInstance = null;\n\n    if (inspectedView._internalInstanceHandle != null) {\n      // For Fabric we can look up the instance handle directly and measure it.\n      nativeFabricUIManager.findNodeAtPoint(\n        inspectedView._internalInstanceHandle.stateNode.node,\n        locationX,\n        locationY,\n        internalInstanceHandle => {\n          if (internalInstanceHandle == null) {\n            callback({\n              pointerY: locationY,\n              frame: {left: 0, top: 0, width: 0, height: 0},\n              ...getInspectorDataForInstance(closestInstance),\n            });\n          }\n\n          closestInstance =\n            internalInstanceHandle.stateNode.canonical._internalInstanceHandle;\n\n          // Note: this is deprecated and we want to remove it ASAP. Keeping it here for React DevTools compatibility for now.\n          const nativeViewTag =\n            internalInstanceHandle.stateNode.canonical._nativeTag;\n\n          nativeFabricUIManager.measure(\n            internalInstanceHandle.stateNode.node,\n            (x, y, width, height, pageX, pageY) => {\n              const inspectorData = getInspectorDataForInstance(\n                closestInstance,\n              );\n              callback({\n                ...inspectorData,\n                pointerY: locationY,\n                frame: {left: pageX, top: pageY, width, height},\n                touchedViewTag: nativeViewTag,\n              });\n            },\n          );\n        },\n      );\n    } else if (inspectedView._internalFiberInstanceHandleDEV != null) {\n      // For Paper we fall back to the old strategy using the React tag.\n      UIManager.findSubviewIn(\n        findNodeHandle(inspectedView),\n        [locationX, locationY],\n        (nativeViewTag, left, top, width, height) => {\n          const inspectorData = getInspectorDataForInstance(\n            getClosestInstanceFromNode(nativeViewTag),\n          );\n          callback({\n            ...inspectorData,\n            pointerY: locationY,\n            frame: {left, top, width, height},\n            touchedViewTag: nativeViewTag,\n          });\n        },\n      );\n    } else {\n      console.error(\n        'getInspectorDataForViewAtPoint expects to receive a host component',\n      );\n\n      return;\n    }\n  };\n} else {\n  getInspectorDataForViewTag = () => {\n    invariant(\n      false,\n      'getInspectorDataForViewTag() is not available in production',\n    );\n  };\n\n  getInspectorDataForViewAtPoint = (\n    findNodeHandle: (componentOrHandle: any) => ?number,\n    inspectedView: Object,\n    locationX: number,\n    locationY: number,\n    callback: (viewData: TouchedViewDataAtPoint) => mixed,\n  ): void => {\n    invariant(\n      false,\n      'getInspectorDataForViewAtPoint() is not available in production.',\n    );\n  };\n}\n\nexport {\n  getInspectorDataForInstance,\n  getInspectorDataForViewAtPoint,\n  getInspectorDataForViewTag,\n};\n","/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @flow\n */\n\nimport type {HostComponent} from './ReactNativeTypes';\nimport type {ReactNodeList} from 'shared/ReactTypes';\nimport type {ElementRef, Element, ElementType} from 'react';\n\nimport './ReactNativeInjection';\n\nimport {\n  findHostInstance,\n  findHostInstanceWithWarning,\n  batchedUpdates as batchedUpdatesImpl,\n  discreteUpdates,\n  createContainer,\n  updateContainer,\n  injectIntoDevTools,\n  getPublicRootInstance,\n} from 'react-reconciler/src/ReactFiberReconciler';\n// TODO: direct imports like some-package/src/* are bad. Fix me.\nimport {getStackByFiberInDevAndProd} from 'react-reconciler/src/ReactFiberComponentStack';\nimport {createPortal as createPortalImpl} from 'react-reconciler/src/ReactPortal';\nimport {\n  setBatchingImplementation,\n  batchedUpdates,\n} from './legacy-events/ReactGenericBatching';\nimport ReactVersion from 'shared/ReactVersion';\n// Modules provided by RN:\nimport {\n  UIManager,\n  legacySendAccessibilityEvent,\n} from 'react-native/Libraries/ReactPrivate/ReactNativePrivateInterface';\nimport {getInspectorDataForInstance} from './ReactNativeFiberInspector';\n\nimport {getClosestInstanceFromNode} from './ReactNativeComponentTree';\nimport {\n  getInspectorDataForViewTag,\n  getInspectorDataForViewAtPoint,\n} from './ReactNativeFiberInspector';\nimport {LegacyRoot} from 'react-reconciler/src/ReactRootTags';\nimport ReactSharedInternals from 'shared/ReactSharedInternals';\nimport getComponentNameFromType from 'shared/getComponentNameFromType';\n\nconst ReactCurrentOwner = ReactSharedInternals.ReactCurrentOwner;\n\nfunction findHostInstance_DEPRECATED(\n  componentOrHandle: any,\n): ?React$ElementRef<HostComponent<mixed>> {\n  if (__DEV__) {\n    const owner = ReactCurrentOwner.current;\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing findNodeHandle inside its render(). ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentNameFromType(owner.type) || 'A component',\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrHandle == null) {\n    return null;\n  }\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle;\n  }\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical;\n  }\n  let hostInstance;\n  if (__DEV__) {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      'findHostInstance_DEPRECATED',\n    );\n  } else {\n    hostInstance = findHostInstance(componentOrHandle);\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n  if ((hostInstance: any).canonical) {\n    // Fabric\n    return (hostInstance: any).canonical;\n  }\n  // $FlowFixMe[incompatible-return]\n  return hostInstance;\n}\n\nfunction findNodeHandle(componentOrHandle: any): ?number {\n  if (__DEV__) {\n    const owner = ReactCurrentOwner.current;\n    if (owner !== null && owner.stateNode !== null) {\n      if (!owner.stateNode._warnedAboutRefsInRender) {\n        console.error(\n          '%s is accessing findNodeHandle inside its render(). ' +\n            'render() should be a pure function of props and state. It should ' +\n            'never access something that requires stale data from the previous ' +\n            'render, such as refs. Move this logic to componentDidMount and ' +\n            'componentDidUpdate instead.',\n          getComponentNameFromType(owner.type) || 'A component',\n        );\n      }\n\n      owner.stateNode._warnedAboutRefsInRender = true;\n    }\n  }\n  if (componentOrHandle == null) {\n    return null;\n  }\n  if (typeof componentOrHandle === 'number') {\n    // Already a node handle\n    return componentOrHandle;\n  }\n  if (componentOrHandle._nativeTag) {\n    return componentOrHandle._nativeTag;\n  }\n  if (componentOrHandle.canonical && componentOrHandle.canonical._nativeTag) {\n    return componentOrHandle.canonical._nativeTag;\n  }\n  let hostInstance;\n  if (__DEV__) {\n    hostInstance = findHostInstanceWithWarning(\n      componentOrHandle,\n      'findNodeHandle',\n    );\n  } else {\n    hostInstance = findHostInstance(componentOrHandle);\n  }\n\n  if (hostInstance == null) {\n    return hostInstance;\n  }\n  if ((hostInstance: any).canonical) {\n    // Fabric\n    return (hostInstance: any).canonical._nativeTag;\n  }\n  return hostInstance._nativeTag;\n}\n\nfunction dispatchCommand(handle: any, command: string, args: Array<any>) {\n  if (handle._nativeTag == null) {\n    if (__DEV__) {\n      console.error(\n        \"dispatchCommand was called with a ref that isn't a \" +\n          'native component. Use React.forwardRef to get access to the underlying native component',\n      );\n    }\n    return;\n  }\n\n  if (handle._internalInstanceHandle != null) {\n    const {stateNode} = handle._internalInstanceHandle;\n    if (stateNode != null) {\n      nativeFabricUIManager.dispatchCommand(stateNode.node, command, args);\n    }\n  } else {\n    UIManager.dispatchViewManagerCommand(handle._nativeTag, command, args);\n  }\n}\n\nfunction sendAccessibilityEvent(handle: any, eventType: string) {\n  if (handle._nativeTag == null) {\n    if (__DEV__) {\n      console.error(\n        \"sendAccessibilityEvent was called with a ref that isn't a \" +\n          'native component. Use React.forwardRef to get access to the underlying native component',\n      );\n    }\n    return;\n  }\n\n  if (handle._internalInstanceHandle != null) {\n    const {stateNode} = handle._internalInstanceHandle;\n    if (stateNode != null) {\n      nativeFabricUIManager.sendAccessibilityEvent(stateNode.node, eventType);\n    }\n  } else {\n    legacySendAccessibilityEvent(handle._nativeTag, eventType);\n  }\n}\n\nfunction render(\n  element: Element<ElementType>,\n  containerTag: number,\n  callback: ?() => void,\n): ?ElementRef<ElementType> {\n  let root = roots.get(containerTag);\n\n  if (!root) {\n    // TODO (bvaughn): If we decide to keep the wrapper component,\n    // We could create a wrapper for containerTag as well to reduce special casing.\n    root = createContainer(containerTag, LegacyRoot, false, null, false, null);\n    roots.set(containerTag, root);\n  }\n  updateContainer(element, root, null, callback);\n\n  // $FlowIssue Flow has hardcoded values for React DOM that don't work with RN\n  return getPublicRootInstance(root);\n}\n\nfunction unmountComponentAtNode(containerTag: number) {\n  const root = roots.get(containerTag);\n  if (root) {\n    // TODO: Is it safe to reset this now or should I wait since this unmount could be deferred?\n    updateContainer(null, root, null, () => {\n      roots.delete(containerTag);\n    });\n  }\n}\n\nfunction unmountComponentAtNodeAndRemoveContainer(containerTag: number) {\n  unmountComponentAtNode(containerTag);\n\n  // Call back into native to remove all of the subviews from this container\n  UIManager.removeRootView(containerTag);\n}\n\nfunction createPortal(\n  children: ReactNodeList,\n  containerTag: number,\n  key: ?string = null,\n) {\n  return createPortalImpl(children, containerTag, null, key);\n}\n\nsetBatchingImplementation(batchedUpdatesImpl, discreteUpdates);\n\nfunction computeComponentStackForErrorReporting(reactTag: number): string {\n  const fiber = getClosestInstanceFromNode(reactTag);\n  if (!fiber) {\n    return '';\n  }\n  return getStackByFiberInDevAndProd(fiber);\n}\n\nconst roots = new Map();\n\nconst Internals = {\n  computeComponentStackForErrorReporting,\n};\n\nexport {\n  // This is needed for implementation details of TouchableNativeFeedback\n  // Remove this once TouchableNativeFeedback doesn't use cloneElement\n  findHostInstance_DEPRECATED,\n  findNodeHandle,\n  dispatchCommand,\n  sendAccessibilityEvent,\n  render,\n  unmountComponentAtNode,\n  unmountComponentAtNodeAndRemoveContainer,\n  createPortal,\n  batchedUpdates as unstable_batchedUpdates,\n  Internals as __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,\n  // This export is typically undefined in production builds.\n  // See the \"enableGetInspectorDataForInstanceInProduction\" flag.\n  getInspectorDataForInstance,\n};\n\ninjectIntoDevTools({\n  findFiberByHostInstance: getClosestInstanceFromNode,\n  bundleType: __DEV__ ? 1 : 0,\n  version: ReactVersion,\n  rendererPackageName: 'react-native-renderer',\n  rendererConfig: {\n    getInspectorDataForViewTag: getInspectorDataForViewTag,\n    getInspectorDataForViewAtPoint: getInspectorDataForViewAtPoint.bind(\n      null,\n      findNodeHandle,\n    ),\n  },\n});\n"],"names":["ReactSharedInternals","React","warn","format","args","printWarning","error","level","ReactDebugCurrentFrame","stack","getStackAddendum","concat","argsWithFormat","map","item","unshift","Function","prototype","apply","call","console","invokeGuardedCallbackProd","name","func","context","a","b","c","d","e","f","funcArgs","Array","slice","arguments","onError","invokeGuardedCallbackImpl","window","dispatchEvent","document","createEvent","fakeNode","createElement","invokeGuardedCallbackDev","evt","didCall","didError","windowEvent","event","windowEventDescriptor","Object","getOwnPropertyDescriptor","restoreAfterDispatch","removeEventListener","evtType","callCallback","hasOwnProperty","didSetError","isCrossOriginError","handleWindowError","colno","lineno","defaultPrevented","_suppressLogging","inner","addEventListener","initEvent","defineProperty","Error","hasError","caughtError","hasRethrowError","rethrowError","reporter","invokeGuardedCallback","invokeGuardedCallbackAndCatchFirstError","clearCaughtError","rethrowCaughtError","hasCaughtError","isArrayImpl","isArray","getFiberCurrentPropsFromNode","getInstanceFromNode","getNodeFromInstance","setComponentTree","getFiberCurrentPropsFromNodeImpl","getInstanceFromNodeImpl","getNodeFromInstanceImpl","validateEventDispatches","dispatchListeners","_dispatchListeners","dispatchInstances","_dispatchInstances","listenersIsArr","listenersLen","length","instancesIsArr","instancesLen","executeDispatch","listener","inst","type","currentTarget","undefined","executeDispatchesInOrder","i","isPropagationStopped","executeDispatchesInOrderStopAtTrueImpl","executeDispatchesInOrderStopAtTrue","ret","executeDirectDispatch","dispatchListener","dispatchInstance","res","hasDispatches","EVENT_POOL_SIZE","EventInterface","target","eventPhase","bubbles","cancelable","timeStamp","Date","now","isTrusted","functionThatReturnsTrue","functionThatReturnsFalse","SyntheticEvent","dispatchConfig","targetInst","nativeEvent","nativeEventTarget","preventDefault","stopPropagation","isDefaultPrevented","_targetInst","Interface","constructor","propName","normalize","returnValue","assign","cancelBubble","persist","isPersistent","destructor","getPooledWarningPropertyDefinition","extend","Super","E","Class","addEventPoolingTo","getVal","set","val","action","isFunction","get","result","configurable","createOrGetPooledEvent","nativeInst","EventConstructor","eventPool","instance","pop","releasePooledEvent","push","getPooled","release","ResponderSyntheticEvent","touchHistory","TOP_TOUCH_START","TOP_TOUCH_MOVE","TOP_TOUCH_END","TOP_TOUCH_CANCEL","TOP_SCROLL","TOP_SELECTION_CHANGE","isStartish","topLevelType","isMoveish","isEndish","startDependencies","moveDependencies","endDependencies","MAX_TOUCH_BANK","touchBank","numberActiveTouches","indexOfSingleActiveTouch","mostRecentTimeStamp","timestampForTouch","touch","timestamp","createTouchRecord","touchActive","startPageX","pageX","startPageY","pageY","startTimeStamp","currentPageX","currentPageY","currentTimeStamp","previousPageX","previousPageY","previousTimeStamp","resetTouchRecord","touchRecord","getTouchIdentifier","identifier","recordTouchStart","recordTouchMove","printTouch","printTouchBank","recordTouchEnd","JSON","stringify","printed","instrumentationCallback","ResponderTouchHistoryStore","instrument","callback","recordTouchTrack","changedTouches","forEach","touches","touchTrackToCheck","activeRecord","accumulate","current","next","accumulateInto","forEachAccumulated","arr","cb","scope","FunctionComponent","ClassComponent","IndeterminateComponent","HostRoot","HostPortal","HostComponent","HostText","Fragment","Mode","ContextConsumer","ContextProvider","ForwardRef","Profiler","SuspenseComponent","MemoComponent","SimpleMemoComponent","LazyComponent","IncompleteClassComponent","DehydratedFragment","SuspenseListComponent","ScopeComponent","OffscreenComponent","LegacyHiddenComponent","CacheComponent","responderInst","trackedTouchCount","changeResponder","nextResponderInst","blockHostResponder","oldResponderInst","ResponderEventPlugin","GlobalResponderHandler","onChange","eventTypes","startShouldSetResponder","phasedRegistrationNames","bubbled","captured","dependencies","scrollShouldSetResponder","selectionChangeShouldSetResponder","moveShouldSetResponder","responderStart","registrationName","responderMove","responderEnd","responderRelease","responderTerminationRequest","responderGrant","responderReject","responderTerminate","getParent","return","tag","getLowestCommonAncestor","instA","instB","depthA","tempA","depthB","tempB","depth","alternate","isAncestor","traverseTwoPhase","fn","arg","path","getListener","stateNode","props","listenerAtPhase","propagationPhase","accumulateDirectionalDispatches","phase","accumulateDispatches","ignoredDirection","accumulateDirectDispatchesSingle","accumulateDirectDispatches","events","accumulateTwoPhaseDispatchesSingleSkipTarget","parentInst","accumulateTwoPhaseDispatchesSkipTarget","accumulateTwoPhaseDispatchesSingle","accumulateTwoPhaseDispatches","setResponderAndExtractTransfer","shouldSetEventType","bubbleShouldSetFrom","skipOverBubbleShouldSetFrom","shouldSetEvent","wantsResponderInst","extracted","grantEvent","terminationRequestEvent","shouldSwitch","terminateEvent","rejectEvent","canTriggerTransfer","topLevelInst","responderIgnoreScroll","noResponderTouches","activeTouch","_getResponder","extractEvents","eventSystemFlags","isResponderTouchStart","isResponderTouchMove","isResponderTouchEnd","incrementalTouch","gesture","isResponderTerminate","isResponderRelease","finalTouch","finalEvent","injection","injectGlobalResponderHandler","eventPluginOrder","namesToPlugins","recomputePluginOrdering","pluginName","pluginModule","pluginIndex","indexOf","plugins","publishedEvents","eventName","publishEventForPlugin","eventNameDispatchConfigs","phaseName","phasedRegistrationName","publishRegistrationName","registrationNameModules","registrationNameDependencies","lowerCasedName","toLowerCase","possibleRegistrationNames","injectEventPluginOrder","injectedEventPluginOrder","injectEventPluginsByName","injectedNamesToPlugins","isOrderingDirty","customBubblingEventTypes","ReactNativeViewConfigRegistry","customDirectEventTypes","ReactNativeBridgeEventPlugin","bubbleDispatchConfig","directDispatchConfig","ReactNativeEventPluginOrder","instanceCache","Map","instanceProps","precacheFiberNode","hostInst","uncacheFiberNode","delete","getInstanceFromTag","getTagFromInstance","nativeInstance","_nativeTag","canonical","updateFiberProps","batchedUpdatesImpl","bookkeeping","isInsideEventHandler","batchedUpdates","setBatchingImplementation","_batchedUpdatesImpl","_discreteUpdatesImpl","discreteUpdatesImpl","eventQueue","executeDispatchesAndRelease","executeDispatchesAndReleaseTopLevel","runEventsInBatch","processingEventQueue","EMPTY_NATIVE_EVENT","touchSubsequence","indices","removeTouchesAtIndices","rippedOut","temp","index","fillAt","j","cur","_receiveRootNodeIDEvent","rootNodeID","nativeEventParam","runExtractedPluginEventsInBatch","extractPluginEvents","legacyPlugins","possiblePlugin","extractedEvents","receiveEvent","receiveTouches","eventTopLevelType","changedIndices","jj","ReactNativeGlobalResponderHandler","from","to","blockNativeResponder","UIManager","setJSResponder","clearJSResponder","RCTEventEmitter","register","key","_reactInternals","value","REACT_ELEMENT_TYPE","REACT_PORTAL_TYPE","REACT_FRAGMENT_TYPE","REACT_STRICT_MODE_TYPE","REACT_PROFILER_TYPE","REACT_PROVIDER_TYPE","REACT_CONTEXT_TYPE","REACT_FORWARD_REF_TYPE","REACT_SUSPENSE_TYPE","REACT_SUSPENSE_LIST_TYPE","REACT_MEMO_TYPE","REACT_LAZY_TYPE","REACT_SCOPE_TYPE","REACT_OPAQUE_ID_TYPE","REACT_DEBUG_TRACING_MODE_TYPE","REACT_OFFSCREEN_TYPE","REACT_LEGACY_HIDDEN_TYPE","REACT_CACHE_TYPE","Symbol","for","symbolFor","MAYBE_ITERATOR_SYMBOL","iterator","FAUX_ITERATOR_SYMBOL","getIteratorFn","maybeIterable","maybeIterator","getWrappedName","outerType","innerType","wrapperName","displayName","functionName","getContextName","getComponentNameFromType","$$typeof","provider","_context","render","outerName","lazyComponent","payload","_payload","init","_init","x","getComponentNameFromFiber","fiber","enableProfilerTimer","__PROFILE__","enableProfilerCommitHooks","enableLazyElements","warnAboutStringRefs","warnOnSubscriptionInsideStartTransition","enableNewReconciler","enableLazyContextPropagation","NoFlags","PerformedWork","Placement","Update","PlacementAndUpdate","ChildDeletion","ContentReset","Callback","DidCapture","Ref","Snapshot","Passive","Hydrating","HydratingAndUpdate","Visibility","LifecycleEffectMask","HostEffectMask","Incomplete","ShouldCapture","ForceUpdateForLegacySuspense","RefStatic","LayoutStatic","PassiveStatic","BeforeMutationMask","enableCreateEventHandleAPI","MutationMask","LayoutMask","PassiveMask","StaticMask","ReactCurrentOwner","getNearestMountedFiber","node","nearestMounted","nextNode","flags","isFiberMounted","isMounted","component","owner","ownerFiber","_warnedAboutRefsInRender","getInstance","assertIsMounted","findCurrentFiberUsingSlowPath","parentA","parentB","nextParent","child","sibling","didFindChild","findCurrentHostFiber","parent","currentParent","findCurrentHostFiberImpl","match","emptyObject","removedKeys","removedKeyCount","deepDifferOptions","unsafelyIgnoreFunctions","defaultDiffer","prevProp","nextProp","deepDiffer","restoreDeletedValuesInNestedArray","updatePayload","validAttributes","obj","propKey","attributeConfig","diff","process","nextValue","diffNestedArrayProperty","prevArray","nextArray","minLength","diffNestedProperty","clearNestedProperty","addNestedProperty","diffProperties","flattenStyle","addProperties","clearProperties","prevProps","nextProps","shouldUpdate","create","mountSafeCallback_NOT_REALLY_SAFE","__isMounted","warnForStyleProps","style","ReactNativeFiberHostComponent","viewConfig","internalInstanceHandleDEV","_children","_internalFiberInstanceHandleDEV","blur","TextInputState","blurTextInput","focus","focusTextInput","measure","measureInWindow","measureLayout","relativeToNativeNode","onSuccess","onFail","relativeNode","nativeNode","setNativeProps","nativeProps","updateView","uiViewClassName","scheduleCallback","Scheduler","cancelCallback","shouldYield","requestPaint","ImmediatePriority","UserBlockingPriority","NormalPriority","IdlePriority","rendererID","injectedHook","hasLoggedError","isDevToolsPresent","__REACT_DEVTOOLS_GLOBAL_HOOK__","injectInternals","internals","hook","isDisabled","supportsFiber","inject","err","checkDCE","onScheduleRoot","root","children","onScheduleFiberRoot","__DEV__","onCommitRoot","eventPriority","onCommitFiberRoot","schedulerPriority","DiscreteEventPriority","ImmediateSchedulerPriority","ContinuousEventPriority","UserBlockingSchedulerPriority","DefaultEventPriority","NormalSchedulerPriority","IdleEventPriority","IdleSchedulerPriority","onPostCommitRoot","onPostCommitFiberRoot","onCommitUnmount","onCommitFiberUnmount","NoMode","ConcurrentMode","ProfileMode","DebugTracingMode","StrictLegacyMode","TotalLanes","NoLanes","NoLane","SyncLane","InputContinuousHydrationLane","InputContinuousLane","DefaultHydrationLane","DefaultLane","TransitionHydrationLane","TransitionLanes","TransitionLane1","TransitionLane2","TransitionLane3","TransitionLane4","TransitionLane5","TransitionLane6","TransitionLane7","TransitionLane8","TransitionLane9","TransitionLane10","TransitionLane11","TransitionLane12","TransitionLane13","TransitionLane14","TransitionLane15","TransitionLane16","RetryLanes","RetryLane1","RetryLane2","RetryLane3","RetryLane4","RetryLane5","SomeRetryLane","SelectiveHydrationLane","NonIdleLanes","IdleHydrationLane","IdleLane","OffscreenLane","NoTimestamp","nextTransitionLane","nextRetryLane","getHighestPriorityLanes","lanes","getHighestPriorityLane","getNextLanes","wipLanes","pendingLanes","nextLanes","suspendedLanes","pingedLanes","nonIdlePendingLanes","nonIdleUnblockedLanes","nonIdlePingedLanes","unblockedLanes","nextLane","wipLane","entangledLanes","entanglements","pickArbitraryLaneIndex","lane","getMostRecentEventTime","eventTimes","mostRecentEventTime","eventTime","computeExpirationTime","currentTime","markStarvedLanesAsExpired","expirationTimes","expirationTime","expiredLanes","getLanesToRetrySynchronouslyOnError","everythingButOffscreen","includesNonIdleWork","includesOnlyRetries","includesOnlyTransitions","shouldTimeSlice","SyncDefaultLanes","isTransitionLane","claimNextTransitionLane","claimNextRetryLane","pickArbitraryLane","clz32","laneToIndex","includesSomeLane","isSubsetOfLanes","subset","mergeLanes","removeLanes","intersectLanes","laneToLanes","createLaneMap","initial","laneMap","markRootUpdated","updateLane","markRootSuspended","markRootPinged","markRootMutableRead","mutableReadLanes","markRootFinished","remainingLanes","noLongerPendingLanes","markRootEntangled","rootEntangledLanes","addFiberToLanesMap","pendingUpdatersLaneMap","updaters","add","movePendingFibersToMemoized","memoizedUpdaters","size","has","clear","Math","clz32Fallback","log","LN2","currentUpdatePriority","getCurrentUpdatePriority","setCurrentUpdatePriority","newPriority","higherEventPriority","lowerEventPriority","isHigherEventPriority","lanesToEventPriority","shim","isSuspenseInstancePending","isSuspenseInstanceFallback","hydrateTextInstance","errorHydratingContainer","getViewConfigForType","UPDATE_SIGNAL","freeze","nextReactTag","allocateTag","recursivelyUncacheFiberNode","appendInitialChild","parentInstance","createInstance","rootContainerInstance","hostContext","internalInstanceHandle","deepFreezeAndThrowOnMutationInDev","createView","createTextInstance","text","isInAParentText","finalizeInitialChildren","nativeTags","setChildren","getRootHostContext","getChildHostContext","parentHostContext","prevIsInAParentText","getPublicInstance","prepareForCommit","containerInfo","prepareUpdate","oldProps","newProps","resetAfterCommit","scheduleTimeout","setTimeout","cancelTimeout","clearTimeout","noTimeout","shouldSetTextContent","getCurrentEventPriority","appendChild","childTag","splice","manageChildren","appendChildToContainer","commitTextUpdate","textInstance","oldText","newText","commitUpdate","updatePayloadTODO","insertBefore","beforeChild","beforeChildIndex","insertInContainerBefore","removeChild","removeChildFromContainer","resetTextContent","hideInstance","display","hideTextInstance","unhideInstance","clearContainer","container","unhideTextInstance","makeClientIdInDEV","warnOnAccessInDEV","preparePortalMount","portalInstance","ReactCurrentDispatcher","describeBuiltInComponentFrame","source","ownerFn","ownerName","describeComponentFrame","componentFrameCache","PossiblyWeakMap","WeakMap","BEFORE_SLASH_RE","sourceInfo","fileName","replace","test","pathBeforeSlash","folderName","lineNumber","describeClassComponentFrame","ctor","describeFunctionComponentFrame","describeUnknownElementTypeFrameInDEV","loggedTypeFailures","setCurrentlyValidatingElement","element","_owner","_source","setExtraStackFrame","checkPropTypes","typeSpecs","values","location","componentName","bind","typeSpecName","ex","message","valueStack","fiberStack","createCursor","defaultValue","cursor","warnedAboutMissingGetChildContext","emptyContextObject","contextStackCursor","didPerformWorkStackCursor","previousContext","getUnmaskedContext","workInProgress","Component","didPushOwnContextIfProvider","isContextProvider","cacheContext","unmaskedContext","maskedContext","__reactInternalMemoizedUnmaskedChildContext","__reactInternalMemoizedMaskedChildContext","getMaskedContext","contextTypes","hasContextChanged","childContextTypes","popContext","popTopLevelContextObject","pushTopLevelContextObject","didChange","processChildContext","parentContext","getChildContext","childContext","contextKey","pushContextProvider","memoizedMergedChildContext","__reactInternalMemoizedMergedChildContext","invalidateContextProvider","mergedContext","findCurrentUnmaskedContext","LegacyRoot","ConcurrentRoot","syncQueue","includesLegacySyncCallbacks","isFlushingSyncQueue","scheduleSyncCallback","scheduleLegacySyncCallback","flushSyncCallbacksOnlyInLegacyMode","flushSyncCallbacks","previousUpdatePriority","isSync","queue","ReactCurrentBatchConfig","NoTransition","requestCurrentTransition","transition","is","y","objectIs","shallowEqual","objA","objB","keysA","keys","keysB","describeFiber","_debugOwner","_debugSource","getStackByFiberInDevAndProd","info","isRendering","getCurrentFiberOwnerNameInDevOrNull","getCurrentFiberStackInDev","resetCurrentFiber","getCurrentStack","setCurrentFiber","setIsRendering","rendering","getIsRendering","ReactStrictModeWarnings","recordUnsafeLifecycleWarnings","flushPendingUnsafeLifecycleWarnings","recordLegacyContextWarning","flushLegacyContextWarning","discardPendingWarnings","findStrictRoot","maybeStrictRoot","mode","setToSortedString","array","sort","join","pendingComponentWillMountWarnings","pendingUNSAFE_ComponentWillMountWarnings","pendingComponentWillReceivePropsWarnings","pendingUNSAFE_ComponentWillReceivePropsWarnings","pendingComponentWillUpdateWarnings","pendingUNSAFE_ComponentWillUpdateWarnings","didWarnAboutUnsafeLifecycles","Set","componentWillMount","__suppressDeprecationWarning","UNSAFE_componentWillMount","componentWillReceiveProps","UNSAFE_componentWillReceiveProps","componentWillUpdate","UNSAFE_componentWillUpdate","componentWillMountUniqueNames","UNSAFE_componentWillMountUniqueNames","componentWillReceivePropsUniqueNames","UNSAFE_componentWillReceivePropsUniqueNames","componentWillUpdateUniqueNames","UNSAFE_componentWillUpdateUniqueNames","sortedNames","pendingLegacyContextWarning","didWarnAboutLegacyContext","strictRoot","warningsForRoot","fiberArray","firstFiber","uniqueNames","setCurrentDebugFiberInDEV","resetCurrentDebugFiberInDEV","resolveDefaultProps","baseProps","defaultProps","valueCursor","rendererSigil","currentlyRenderingFiber","lastContextDependency","lastFullyObservedContext","isDisallowedContextReadInDEV","resetContextDependencies","enterDisallowedContextReadInDEV","exitDisallowedContextReadInDEV","pushProvider","providerFiber","_currentValue","_currentRenderer","popProvider","currentValue","scheduleWorkOnParentPath","renderLanes","childLanes","propagateContextChange","propagateContextChange_eager","nextFiber","list","dependency","firstContext","update","createUpdate","ForceUpdate","updateQueue","sharedQueue","shared","pending","prepareToReadContext","markWorkInProgressReceivedUpdate","readContext","isPrimaryRenderer","contextItem","memoizedValue","interleavedQueues","pushInterleavedQueue","enqueueInterleavedUpdates","lastInterleavedUpdate","interleaved","firstInterleavedUpdate","lastPendingUpdate","firstPendingUpdate","UpdateState","ReplaceState","CaptureUpdate","hasForceUpdate","didWarnUpdateInsideUpdate","currentlyProcessingQueue","initializeUpdateQueue","baseState","memoizedState","firstBaseUpdate","lastBaseUpdate","effects","cloneUpdateQueue","currentQueue","clone","enqueueUpdate","isInterleavedUpdate","entangleTransitions","queueLanes","newQueueLanes","enqueueCapturedUpdate","capturedUpdate","newFirst","newLast","getStateFromUpdate","prevState","nextState","partialState","processUpdateQueue","pendingQueue","currentLastBaseUpdate","newState","newLanes","newBaseState","newFirstBaseUpdate","newLastBaseUpdate","updateEventTime","lastInterleaved","markSkippedUpdateLanes","resetHasForceUpdateBeforeProcessing","checkHasForceUpdateAfterProcessing","commitUpdateQueue","finishedWork","finishedQueue","effect","fakeInternalInstance","emptyRefsObject","refs","didWarnAboutStateAssignmentForComponent","didWarnAboutUninitializedState","didWarnAboutGetSnapshotBeforeUpdateWithoutDidUpdate","didWarnAboutLegacyLifecyclesAndDerivedState","didWarnAboutUndefinedDerivedState","warnOnUndefinedDerivedState","warnOnInvalidCallback","didWarnAboutDirectlyAssigningPropsToState","didWarnAboutContextTypeAndContextTypes","didWarnAboutInvalidateContextType","didWarnOnInvalidCallback","callerName","enumerable","applyDerivedStateFromProps","getDerivedStateFromProps","classComponentUpdater","enqueueSetState","requestEventTime","requestUpdateLane","scheduleUpdateOnFiber","enqueueReplaceState","enqueueForceUpdate","checkShouldComponentUpdate","oldState","nextContext","shouldComponentUpdate","isPureReactComponent","checkClassInstance","renderPresent","getInitialState","isReactClassApproved","state","getDefaultProps","propTypes","contextType","componentShouldUpdate","componentDidUnmount","componentDidReceiveProps","componentWillRecieveProps","UNSAFE_componentWillRecieveProps","hasMutatedProps","getSnapshotBeforeUpdate","componentDidUpdate","getDerivedStateFromError","adoptClassInstance","updater","setInstance","_reactInternalInstance","constructClassInstance","isLegacyContextConsumer","isValid","addendum","foundWillMountName","foundWillReceivePropsName","foundWillUpdateName","newApiName","callComponentWillMount","callComponentWillReceiveProps","mountClassInstance","componentDidMount","fiberFlags","resumeMountClassInstance","memoizedProps","oldContext","nextLegacyUnmaskedContext","hasNewLifecycles","updateClassInstance","unresolvedOldProps","elementType","unresolvedNewProps","pendingProps","nextUnmaskedContext","didWarnAboutMaps","didWarnAboutGenerators","didWarnAboutStringRefs","ownerHasKeyUseWarning","ownerHasFunctionTypeWarning","warnForMissingKey","returnFiber","_store","validated","coerceRef","mixedRef","ref","_self","stringRef","_stringRef","throwOnInvalidObjectType","newChild","childString","toString","warnOnFunctionType","ChildReconciler","shouldTrackSideEffects","deleteChild","childToDelete","deletions","deleteRemainingChildren","currentFirstChild","mapRemainingChildren","existingChildren","existingChild","useFiber","createWorkInProgress","placeChild","newFiber","lastPlacedIndex","newIndex","oldIndex","placeSingleChild","updateTextNode","textContent","created","createFiberFromText","existing","updateElement","updateFragment","isCompatibleFamilyForHotReloading","createFiberFromElement","updatePortal","portal","implementation","createFiberFromPortal","fragment","createFiberFromFragment","createChild","updateSlot","oldFiber","updateFromMap","newIdx","matchedFiber","warnOnInvalidKey","knownKeys","reconcileChildrenArray","newChildren","resultingFirstChild","previousNewFiber","nextOldFiber","reconcileChildrenIterator","newChildrenIterable","iteratorFn","toStringTag","entries","step","done","reconcileSingleTextNode","reconcileSingleElement","reconcileSinglePortal","reconcileChildFibers","isUnkeyedTopLevelFragment","mountChildFibers","cloneChildFibers","currentChild","resetChildFibers","resetWorkInProgress","NO_CONTEXT","contextFiberStackCursor","rootInstanceStackCursor","requiredContext","getRootHostContainer","rootInstance","pushHostContainer","nextRootInstance","nextRootContext","popHostContainer","getHostContext","pushHostContext","popHostContext","DefaultSuspenseContext","SubtreeSuspenseContextMask","InvisibleParentSuspenseContext","ForceSuspenseFallback","suspenseStackCursor","hasSuspenseContext","flag","setDefaultShallowSuspenseContext","setShallowSuspenseContext","shallowContext","addSubtreeSuspenseContext","subtreeContext","pushSuspenseContext","newContext","popSuspenseContext","shouldCaptureSuspense","hasInvisibleParent","dehydrated","unstable_avoidThisFallback","findFirstSuspended","row","revealOrder","didSuspend","HasEffect","Layout","isHydrating","enterHydrationState","prepareToHydrateHostInstance","prepareToHydrateHostTextInstance","popHydrationState","getIsHydrating","workInProgressSources","markSourceAsDirty","mutableSource","resetWorkInProgressVersions","_workInProgressVersionPrimary","getWorkInProgressVersion","setWorkInProgressVersion","version","warnAboutMultipleRenderersDEV","_currentPrimaryRenderer","getSuspendedCachePool","didWarnAboutMismatchedHooksForComponent","didWarnAboutUseOpaqueIdentifier","didWarnUncachedGetSnapshot","currentHook","workInProgressHook","didScheduleRenderPhaseUpdate","didScheduleRenderPhaseUpdateDuringThisPass","RE_RENDER_LIMIT","currentHookNameInDev","hookTypesDev","hookTypesUpdateIndexDev","ignorePreviousDependencies","mountHookTypesDev","hookName","updateHookTypesDev","warnOnHookMismatchInDev","checkDepsAreArrayDev","deps","currentHookName","table","secondColumnStart","oldHookName","newHookName","throwInvalidHookError","areHookInputsEqual","nextDeps","prevDeps","renderWithHooks","secondArg","nextRenderLanes","_debugHookTypes","HooksDispatcherOnUpdateInDEV","HooksDispatcherOnMountWithHookTypesInDEV","HooksDispatcherOnMountInDEV","numberOfReRenders","HooksDispatcherOnRerenderInDEV","ContextOnlyDispatcher","didRenderTooFewHooks","StaticMaskEffect","bailoutHooks","PassiveEffect","UpdateEffect","resetHooksAfterThrow","isUpdatingOpaqueValueInRenderPhase","mountWorkInProgressHook","baseQueue","updateWorkInProgressHook","nextCurrentHook","nextWorkInProgressHook","newHook","createFunctionComponentUpdateQueue","lastEffect","basicStateReducer","mountReducer","reducer","initialArg","initialState","dispatch","lastRenderedReducer","lastRenderedState","dispatchAction","updateReducer","baseFirst","pendingFirst","first","newBaseQueueFirst","newBaseQueueLast","eagerReducer","eagerState","interleavedLane","rerenderReducer","lastRenderPhaseUpdate","firstRenderPhaseUpdate","readFromUnsubscribedMutableSource","getSnapshot","getVersion","_getVersion","isSafeToReadFromSource","currentRenderVersion","snapshot","useMutableSource","subscribe","getWorkInProgressRoot","dispatcher","useState","currentSnapshot","setSnapshot","stateHook","prevGetSnapshot","prevSource","prevSubscribe","useEffect","maybeNewVersion","maybeNewSnapshot","handleChange","latestGetSnapshot","latestSetSnapshot","unsubscribe","newQueue","mountMutableSource","updateMutableSource","mountSyncExternalStore","nextSnapshot","useSyncExternalStore","updateSyncExternalStore","prevSnapshot","useLayoutEffect","checkIfSnapshotChanged","forceStoreRerender","handleStoreChange","prevValue","mountState","updateState","rerenderState","pushEffect","destroy","componentUpdateQueue","firstEffect","mountRef","initialValue","updateRef","mountEffectImpl","hookFlags","HookHasEffect","updateEffectImpl","prevEffect","mountEffect","jest","warnIfNotCurrentlyActingEffectsInDEV","PassiveStaticEffect","HookPassive","updateEffect","mountLayoutEffect","HookLayout","updateLayoutEffect","imperativeHandleEffect","refCallback","refObject","mountImperativeHandle","effectDeps","updateImperativeHandle","mountDebugValue","formatterFn","updateDebugValue","mountCallback","updateCallback","mountMemo","nextCreate","updateMemo","mountDeferredValue","setValue","prevTransition","updateDeferredValue","rerenderDeferredValue","startTransition","setPending","previousPriority","_updatedFibers","updatedFibersCount","mountTransition","isPending","start","updateTransition","rerenderTransition","getIsUpdatingOpaqueValueInRenderPhaseInDEV","warnOnOpaqueIdentifierAccessInDEV","mountOpaqueIdentifier","makeId","id","updateOpaqueIdentifier","rerenderOpaqueIdentifier","prevDispatcher","InvalidNestedHooksDispatcherOnUpdateInDEV","currentState","warnIfNotCurrentlyActingUpdatesInDev","useCallback","useContext","useImperativeHandle","useMemo","useReducer","useRef","useDebugValue","useDeferredValue","useTransition","useOpaqueIdentifier","unstable_isNewReconciler","InvalidNestedHooksDispatcherOnMountInDEV","InvalidNestedHooksDispatcherOnRerenderInDEV","warnInvalidContextAccess","warnInvalidHookAccess","commitTime","layoutEffectStartTime","profilerStartTime","passiveEffectStartTime","currentUpdateIsNested","nestedUpdateScheduled","isCurrentUpdateNested","markNestedUpdateScheduled","resetNestedUpdateFlag","syncNestedUpdateFlag","getCommitTime","recordCommitTime","startProfilerTimer","actualStartTime","stopProfilerTimerIfRunning","stopProfilerTimerIfRunningAndRecordDelta","overrideBaseTime","elapsedTime","actualDuration","selfBaseDuration","recordLayoutEffectDuration","parentFiber","effectDuration","parentStateNode","recordPassiveEffectDuration","passiveEffectDuration","startLayoutEffectTimer","startPassiveEffectTimer","transferActualDuration","createCapturedValue","RNImpl","showErrorDialog","boundary","errorInfo","capturedError","componentStack","errorBoundary","logCapturedError","logError","componentNameMessage","errorBoundaryMessage","errorBoundaryName","combinedMessage","createRootErrorUpdate","onUncaughtError","createClassErrorUpdate","markFailedErrorBoundaryForHotReloading","componentDidCatch","markLegacyErrorBoundaryAsFailed","attachPingListener","wakeable","pingCache","threadIDs","ping","pingSuspendedRoot","restorePendingUpdaters","then","throwException","sourceFiber","rootRenderLanes","currentSource","hasInvisibleParentBoundary","wakeables","currentSourceFiber","renderDidError","isAlreadyFailedLegacyErrorBoundary","markUpdate","markRef","appendAllChildren","updateHostContainer","updateHostComponent","updateHostText","needsVisibilityToggle","isHidden","currentHostContext","cutOffTailIfNeeded","renderState","hasRenderedATailFallback","tailMode","tailNode","tail","lastTailNode","bubbleProperties","completedWork","didBailout","newChildLanes","subtreeFlags","treeBaseDuration","completeWork","isLegacyContextProvider","popLegacyContext","fiberRoot","popTopLevelLegacyContextObject","resetMutableSourceWorkInProgressVersions","pendingContext","wasHydrated","hydrate","nextDidTimeout","prevDidTimeout","offscreenFiber","hasInvisibleChildContext","renderDidSuspend","renderDidSuspendDelayIfPossible","primaryChildFragment","didSuspendAlready","renderedTail","cannotBeSuspended","renderHasNotSuspendedYet","suspended","newThenables","getRenderTargetTime","renderingStartTime","isBackwards","previousSibling","last","suspenseContext","popRenderLanes","nextIsHidden","prevIsHidden","subtreeRenderLanes","didReceiveUpdate","didWarnAboutBadClass","didWarnAboutModulePatternComponent","didWarnAboutContextTypeOnFunctionComponent","didWarnAboutGetDerivedStateOnFunctionComponent","didWarnAboutFunctionRefs","didWarnAboutReassigningProps","didWarnAboutRevealOrder","didWarnAboutTailOptions","didWarnAboutDefaultPropsOnFunctionComponent","reconcileChildren","nextChildren","forceUnmountCurrentAndReconcile","updateForwardRef","innerPropTypes","bailoutOnAlreadyFinishedWork","updateMemoComponent","isSimpleFunctionComponent","compare","resolvedType","resolveFunctionForHotReloading","validateFunctionComponentInDev","updateSimpleMemoComponent","createFiberFromTypeAndProps","hasScheduledUpdateOrContext","checkScheduledUpdateOrContext","outerMemoType","outerPropTypes","updateFunctionComponent","updateOffscreenComponent","spawnedCachePool","baseLanes","cachePool","pushRenderLanes","nextBaseLanes","prevBaseLanes","updateLegacyHiddenComponent","updateMode","updateProfiler","updateClassComponent","shouldError","tempInstance","hasContext","pushLegacyContextProvider","nextUnitOfWork","finishClassComponent","didCaptureError","pushHostRootContext","updateHostRoot","prevChildren","resetHydrationState","mountLazyComponent","_current","resolvedTag","resolveLazyComponentTag","resolvedProps","resolveClassForHotReloading","resolveForwardRefForHotReloading","hint","mountIncompleteClassComponent","mountIndeterminateComponent","warningKey","debugSource","SUSPENDED_MARKER","retryLane","mountSuspenseOffscreenState","updateSuspenseOffscreenState","prevOffscreenState","shouldRemainOnFallback","suspenseState","getRemainingWorkInPrimaryTree","updateSuspenseComponent","shouldSuspend","showFallback","nextPrimaryChildren","nextFallbackChildren","fallback","fallbackFragment","mountSuspenseFallbackChildren","unstable_expectedLoadTime","mountSuspensePrimaryChildren","fallbackChildFragment","updateSuspenseFallbackChildren","updateSuspensePrimaryChildren","primaryChildren","primaryChildProps","mountWorkInProgressOffscreenFiber","fallbackChildren","progressedPrimaryFragment","offscreenProps","createFiberFromOffscreen","updateWorkInProgressOffscreenFiber","currentPrimaryChildFragment","currentFallbackChildFragment","scheduleWorkOnFiber","propagateSuspenseContextChange","firstChild","findLastContentRow","lastContentRow","currentRow","validateRevealOrder","validateTailOptions","validateSuspenseListNestedChild","childSlot","isAnArray","isIterable","validateSuspenseListChildren","childrenIterator","initSuspenseListRenderState","updateSuspenseListComponent","shouldForceFallback","didSuspendBefore","nextRow","updatePortalComponent","hasWarnedAboutUsingNoValuePropOnContextProvider","updateContextProvider","providerType","newValue","providerPropTypes","oldValue","hasLegacyContextChanged","hasWarnedAboutUsingContextAsConsumer","updateContextConsumer","Consumer","remountFiber","oldWorkInProgress","newWorkInProgress","prevSibling","updateLanes","attemptEarlyBailoutIfNoScheduledUpdate","hasChildWork","primaryChildLanes","beginWork","_debugNeedsRemount","unresolvedProps","unwindWork","unwindInterruptedWork","interruptedWork","didWarnAboutUndefinedSnapshotBeforeUpdate","PossiblyWeakSet","WeakSet","nextEffect","inProgressLanes","inProgressRoot","reportUncaughtErrorInDEV","callComponentWillUnmountWithTimer","componentWillUnmount","safelyCallComponentWillUnmount","nearestMountedAncestor","captureCommitPhaseError","safelyDetachRef","safelyCallDestroy","focusedInstanceHandle","shouldFireAfterActiveInstanceBlur","commitBeforeMutationEffects","commitBeforeMutationEffects_begin","shouldFire","ensureCorrectReturnPointer","commitBeforeMutationEffects_complete","commitBeforeMutationEffectsOnFiber","didWarnSet","__reactInternalSnapshotBeforeUpdate","commitHookEffectListUnmount","commitHookEffectListMount","commitPassiveEffectDurations","finishedRoot","onPostCommit","outer","commitLayoutEffectOnFiber","committedLanes","commitMount","onCommit","onRender","enqueuePendingPassiveProfilerEffect","commitSuspenseHydrationCallbacks","commitAttachRef","hideOrUnhideAllChildren","hostSubtreeRoot","instanceToUse","commitDetachRef","currentRef","commitUnmount","NoHookEffect","unmountHostComponents","commitNestedUnmounts","detachFiberMutation","detachFiberAfterEffects","hostInstance","getHostParentFiber","isHostParent","getHostSibling","siblings","commitPlacement","isContainer","before","insertOrAppendPlacementNodeIntoContainer","insertOrAppendPlacementNode","isHost","currentParentIsValid","currentParentIsContainer","findParent","commitDeletion","commitWork","commitSuspenseCallback","attachSuspenseRetryListeners","retryCache","retry","resolveRetryWakeable","commitResetTextContent","commitMutationEffects","commitMutationEffects_begin","commitMutationEffects_complete","commitMutationEffectsOnFiber","wasHidden","markCommitTimeOfFallback","offscreenBoundary","primaryFlags","commitLayoutEffects","commitLayoutEffects_begin","subtreeRoot","isModernRoot","commitLayoutMountEffects_complete","commitPassiveMountEffects","commitPassiveMountEffects_begin","commitPassiveMountEffects_complete","commitPassiveMountOnFiber","commitPassiveUnmountEffects","commitPassiveUnmountEffects_begin","fiberToDelete","commitPassiveUnmountEffectsInsideOfDeletedTree_begin","previousFiber","detachedChild","detachedSibling","commitPassiveUnmountEffects_complete","commitPassiveUnmountOnFiber","deletedSubtreeRoot","commitPassiveUnmountInsideDeletedTreeOnFiber","commitPassiveUnmountEffectsInsideOfDeletedTree_complete","didWarnWrongReturnPointer","expectedReturnFiber","COMPONENT_TYPE","HAS_PSEUDO_CLASS_TYPE","ROLE_TYPE","TEST_NAME_TYPE","TEXT_TYPE","ceil","ReactCurrentActQueue","NoContext","BatchedContext","RenderContext","CommitContext","RetryAfterError","RootIncomplete","RootFatalErrored","RootErrored","RootSuspended","RootSuspendedWithDelay","RootCompleted","executionContext","workInProgressRoot","workInProgressRootRenderLanes","subtreeRenderLanesCursor","workInProgressRootExitStatus","workInProgressRootFatalError","workInProgressRootIncludedLanes","workInProgressRootSkippedLanes","workInProgressRootUpdatedLanes","workInProgressRootPingedLanes","globalMostRecentFallbackTime","FALLBACK_THROTTLE_MS","workInProgressRootRenderTargetTime","Infinity","RENDER_TIMEOUT_MS","resetRenderTimer","hasUncaughtError","firstUncaughtError","legacyErrorBoundariesThatAlreadyFailed","rootDoesHavePassiveEffects","rootWithPendingPassiveEffects","pendingPassiveEffectsLanes","pendingPassiveProfilerEffects","NESTED_UPDATE_LIMIT","nestedUpdateCount","rootWithNestedUpdates","NESTED_PASSIVE_UPDATE_LIMIT","nestedPassiveUpdateCount","currentEventTime","currentEventTransitionLane","isTransition","eventLane","requestRetryLane","checkForNestedUpdates","warnAboutRenderPhaseUpdatesInDEV","markUpdateLaneFromFiberToRoot","deferRenderPhaseUpdateToNextBatch","ensureRootIsScheduled","isBatchingLegacy","warnAboutUpdateOnNotYetMountedFiberInDEV","existingCallbackNode","callbackNode","callbackPriority","newCallbackPriority","existingCallbackPriority","fakeActCallbackNode","newCallbackNode","didScheduleLegacyUpdate","performSyncWorkOnRoot","schedulerPriorityLevel","performConcurrentWorkOnRoot","didTimeout","originalCallbackNode","didFlushPassiveEffects","flushPassiveEffects","exitStatus","disableSchedulerTimeoutInWorkLoop","renderRootConcurrent","renderRootSync","prevExecutionContext","errorRetryLanes","fatalError","prepareFreshStack","finishedLanes","finishConcurrentRender","commitRoot","shouldForceFlushFallbacksInDEV","msUntilTimeout","timeoutHandle","eventTimeMs","timeElapsedMs","jnd","markRootSuspended_dontCallThisOneDirectly","flushSyncWithoutWarningIfAlreadyRendering","flushSync","pushToStack","popFromStack","handleError","thrownValue","erroredWork","completeUnitOfWork","yetAnotherThrownValue","pushDispatcher","popDispatcher","workLoopSync","performUnitOfWork","workLoopConcurrent","unitOfWork","siblingFiber","previousUpdateLanePriority","commitRootImpl","renderPriorityLevel","flushRenderPhaseStrictModeWarningsInDEV","subtreeHasEffects","rootHasEffect","onCommitRootDevTools","renderPriority","priority","flushPassiveEffectsImpl","profilerEffects","onPostCommitRootDevTools","prepareToThrowUncaughtError","captureCommitPhaseErrorOnRoot","rootFiber","retryTimedOutBoundary","boundaryFiber","timeElapsed","didWarnStateUpdateForNotYetMountedComponent","ReactCurrentFiberCurrent","dummyFiber","originalWorkInProgressCopy","assignFiberPropertiesInDEV","originalBeginWork","originalError","replayError","didWarnAboutUpdateInRender","didWarnAboutUpdateInRenderForAnotherComponent","ReactCurrentDebugFiberIsRenderingInDEV","renderingComponentName","dedupeKey","setStateComponentName","schedulingFiber","priorityLevel","actQueue","Scheduler_scheduleCallback","Scheduler_cancelCallback","warnsIfNotActing","disableActWarning","warnIfNotCurrentlyActingUpdatesInDEV","resolveFamily","failedBoundaries","setRefreshHandler","handler","family","currentRender","syntheticType","prevType","nextType","needsCompareFamilies","$$typeofNextType","prevFamily","scheduleRefresh","staleFamilies","updatedFamilies","scheduleFibersWithFamiliesRecursively","scheduleRoot","updateContainer","candidateType","needsRender","needsRemount","findHostInstancesForRefresh","families","hostInstances","types","findHostInstancesForMatchingFibersRecursively","didMatch","findHostInstancesForFiberShallowly","foundHostInstances","findChildHostInstancesForFiberShallowly","hasBadMapPolyfill","nonExtensibleObject","preventExtensions","FiberNode","Number","NaN","createFiber","shouldConstruct","isReactComponent","currentDependencies","createHostRootFiber","isStrictMode","concurrentUpdatesByDefaultOverride","fiberTag","getTag","createFiberFromProfiler","createFiberFromSuspense","createFiberFromSuspenseList","createFiberFromLegacyHidden","elements","content","pendingChildren","FiberRootNode","_debugRootType","createFiberRoot","hydrationCallbacks","uninitializedFiber","createPortal","didWarnAboutNestedUpdates","didWarnAboutFindNodeInStrictMode","getContextForSubtree","parentComponent","findHostInstanceWithWarning","methodName","hostFiber","createContainer","ReactCurrentFiberIsRendering","getPublicRootInstance","containerFiber","shouldErrorImpl","shouldSuspendImpl","overrideHookState","overrideHookStateDeletePath","overrideHookStateRenamePath","overrideProps","overridePropsDeletePath","overridePropsRenamePath","scheduleUpdate","setErrorHandler","setSuspenseHandler","copyWithDeleteImpl","updated","copyWithDelete","copyWithRenameImpl","oldPath","newPath","oldKey","newKey","copyWithRename","copyWithSetImpl","copyWithSet","findHook","newShouldErrorImpl","newShouldSuspendImpl","findHostInstanceByFiber","emptyFindFiberByHostInstance","getCurrentFiberForDevTools","getIsStrictModeForDevtools","injectIntoDevTools","devToolsConfig","findFiberByHostInstance","bundleType","rendererPackageName","rendererConfig","currentDispatcherRef","getCurrentFiber","getIsStrictMode","reconcilerVersion","ReactVersion","createHierarchy","getHostNode","getHostProps","lastNonHostInstance","getOwnerHierarchy","traverseOwnerTreeUp","fiberHierarchy","getInspectorData","findNodeHandle","shadowNode","nativeFabricUIManager","hostNode","host","getInspectorDataForInstance","closestInstance","hierarchy","selectedIndex","getInspectorDataForViewTag","getInspectorDataForViewAtPoint","viewTag","getClosestInstanceFromNode","inspectedView","locationX","locationY","_internalInstanceHandle","findNodeAtPoint","pointerY","frame","left","top","width","height","nativeViewTag","inspectorData","touchedViewTag","findSubviewIn","findHostInstance_DEPRECATED","componentOrHandle","dispatchCommand","handle","command","dispatchViewManagerCommand","sendAccessibilityEvent","eventType","legacySendAccessibilityEvent","containerTag","roots","unmountComponentAtNode","unmountComponentAtNodeAndRemoveContainer","removeRootView","createPortalImpl","computeComponentStackForErrorReporting","reactTag","Internals"],"mappings":"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"}